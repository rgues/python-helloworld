{"version":3,"sources":["./src/app/auth/register-phone/register-phone.page.html","./src/app/auth/register-phone/register-phone.page.scss","./src/app/auth/register-phone/register-phone.module.ts","./src/app/auth/register-phone/register-phone.page.ts"],"names":[],"mappings":"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","file":"register-phone-register-phone-module.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar class=\\\"with-logo\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/auth\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n        <ion-img class=\\\"logo\\\" [src]=\\\"'assets/logo-toupesu.svg'\\\"></ion-img>\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding register-phone\\\">\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refreSher($event)\\\">\\r\\n    <ion-refresher-content\\r\\n      pullingIcon=\\\"reload-outline\\\"\\r\\n      refreshingSpinner=\\\"circles\\\"\\r\\n      refreshingText=\\\"{{ 'M_REFRESHING_TEXT' | translate }}\\\">\\r\\n    </ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  <div class=\\\"ion-text-center\\\"  *ngIf=\\\"isLoadingShow\\\">\\r\\n    <p> <ion-spinner name=\\\"circles\\\"></ion-spinner></p>\\r\\n    <p>{{'M_COUNTRY_LOADING' | translate}}</p> \\r\\n  </div>\\r\\n \\r\\n  <form [formGroup]=\\\"phoneRegisterForm\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"12\\\">\\r\\n          <p>{{'REGISTER_MMSG1' | translate}} <br /> {{'M_PIN_MSG' | translate}}\\r\\n          </p>        \\r\\n        </ion-col>\\r\\n      </ion-row>  \\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"12\\\">\\r\\n          <ion-item (click)=\\\"showCountries()\\\">\\r\\n            <ion-label>{{'REGISTER_MTEXT1' | translate}} : </ion-label>\\r\\n            <p><strong> {{ getCountryName(phoneRegisterForm.value) }} </strong> </p>          \\r\\n            <ion-icon name=\\\"chevron-down-outline\\\" slot=\\\"end\\\"></ion-icon>\\r\\n          </ion-item>  \\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.country_id\\\">\\r\\n              <div class=\\\"error-message\\\" *ngIf=\\\"country.hasError(validation.type) && (country.dirty || country.touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>     \\r\\n        </ion-col>\\r\\n      </ion-row> \\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"4\\\">\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">+</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"phoneid\\\"></ion-input>\\r\\n          </ion-item>        \\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"8\\\">\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">{{ 'REGISTER_MPHONE' | translate }}</ion-label>\\r\\n            <ion-input type=\\\"tel\\\" (ionChange)=\\\"removeSpace()\\\" formControlName=\\\"phone_number\\\" (keyup.enter)=\\\"confirmPhone()\\\"></ion-input>\\r\\n          </ion-item>        \\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"12\\\">\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.phoneid\\\">\\r\\n              <div class=\\\"error-message\\\" *ngIf=\\\"phoneid.hasError(validation.type) && (phoneid.dirty || phoneid.touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.phone\\\">\\r\\n              <div class=\\\"error-message\\\" *ngIf=\\\"phone.hasError(validation.type) && (phone.dirty || phone.touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>    \\r\\n        </ion-col>\\r\\n      </ion-row> \\r\\n    </ion-grid>\\r\\n  </form>  \\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"ion-padding ion-text-center\\\">\\r\\n  <ion-button expand=\\\"full\\\"  [disabled]=\\\"phoneRegisterForm.invalid\\\"\\r\\n        color=\\\"warning\\\" \\r\\n        class=\\\"ion-text-uppercase\\\"\\r\\n        shape=\\\"round\\\" (click)=\\\"confirmPhone()\\\">\\r\\n        {{'NEXT_TEXT' | translate}}\\r\\n  </ion-button>\\r\\n</ion-footer>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3Rlci1waG9uZS5wYWdlLnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPhonePage } from './register-phone.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPhonePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    SharedModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [\n    RegisterPhonePage\n  ]\n})\nexport class RegisterPhonePageModule {}\n","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { LocationService } from 'src/app/shared/service/location.service';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AlertController, LoadingController, ModalController } from '@ionic/angular';\r\nimport { CountriesComponent } from '../../shared/countries/countries.component';\r\nimport { FormUtilsService } from 'src/app/shared/service/form-utils.service';\r\nimport { PluginService } from 'src/app/shared/service/plugin.service';\r\nimport { UserService } from 'src/app/dashboard/user/service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-register-phone',\r\n  templateUrl: './register-phone.page.html',\r\n  styleUrls: ['./register-phone.page.scss'],\r\n})\r\nexport class RegisterPhonePage implements OnInit {\r\n\r\n  phoneRegisterForm: FormGroup;\r\n  states: any[] = [];\r\n  spinner: any;\r\n  isLoadingShow: boolean;\r\n  hasFocus: boolean;\r\n  validationMessages: any;\r\n  defaultState: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private translate: TranslateService,\r\n    private plugin: PluginService,\r\n    private form: FormUtilsService,\r\n    private alertController: AlertController,\r\n    public loadingController: LoadingController,\r\n    private location: LocationService,\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private modatCtrl: ModalController\r\n  ) {\r\n    this.isLoadingShow = false;\r\n    this.hasFocus = false;\r\n    this.initMessage();\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initFormRegistration(null);\r\n    this.isLoadingShow = true;\r\n    this.getWordCountries(false);\r\n    this.getUserUUID();\r\n  }\r\n\r\n  // Form getters\r\n  get country() {\r\n    return this.phoneRegisterForm.get('country_id');\r\n  }\r\n\r\n  get phoneid() {\r\n    return this.phoneRegisterForm.get('phoneid');\r\n  }\r\n\r\n  get phone() {\r\n    return this.phoneRegisterForm.get('phone_number');\r\n  }\r\n\r\n  // Initialize the form\r\n  initFormRegistration(data) {\r\n    this.phoneRegisterForm = this.fb.group({\r\n      countryName: [data ? data.countryName : ''],\r\n      phone_prefix: [data ? data.phone_prefix : ''],\r\n      code_country: [data ? data.code_country : '', Validators.required],\r\n      country_id: [data ? data.country_id : '', Validators.required],\r\n      prefix_country_with_plus: [data && data.prefix_country_with_plus ? data.prefix_country_with_plus : ''],\r\n      country_key: [data ? data.country_key : '', Validators.required],\r\n      phoneid: [data ? data.phoneid : '', Validators.compose([\r\n        Validators.required,\r\n        Validators.maxLength(5)\r\n      ])],\r\n      phone_number: ['', Validators.compose([Validators.required, Validators.pattern('^[0-9]{6,13}$')])\r\n      ]\r\n    });\r\n  }\r\n\r\n  // Init the form message\r\n  initMessage() {\r\n    this.translate.get([\r\n      'REGISTER_COUNTRY_TEXT',\r\n      'REGISTER_COUNTRY_PREFIX',\r\n      'REGISTER_COUNTRY_PREFIX_LENGTH',\r\n      'REGISTER_PHONE_REQUIRED',\r\n      'REGISTER_PHONE_INVALID'\r\n    ]).subscribe(value => {\r\n\r\n      this.validationMessages = {\r\n        country_id: [\r\n          { type: 'required', message: value.REGISTER_COUNTRY_TEXT }\r\n        ],\r\n        phoneid: [\r\n          { type: 'required', message: value.REGISTER_COUNTRY_PREFIX },\r\n          { type: 'maxlength', message: value.REGISTER_COUNTRY_PREFIX_LENGTH }\r\n        ],\r\n        phone: [\r\n          { type: 'required', message: value.REGISTER_PHONE_REQUIRED },\r\n          { type: 'pattern', message: value.REGISTER_PHONE_INVALID }\r\n        ]\r\n      };\r\n    });\r\n  }\r\n\r\n  // set focus\r\n  setFocusOnInput() {\r\n    this.hasFocus = true;\r\n  }\r\n\r\n  // Refresh the list\r\n  refreSher(event) {\r\n    this.getWordCountries(true);\r\n    setTimeout(() => {\r\n      event.target.complete();\r\n    }, 2000);\r\n  }\r\n\r\n  // Get the user Id\r\n  getUserUUID() {\r\n    this.plugin.getIds().subscribe(id => {\r\n      if (id) {\r\n        this.userService.setUserDevice(id);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Get all the word countries\r\n  getWordCountries(refresh) {\r\n    this.location.getWordCountries(refresh).then((countries: any) => {\r\n      this.isLoadingShow = false;\r\n      if (countries && countries.length > 0) {\r\n        this.states = countries;\r\n        this.getCurrentCountry(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  // get the country name\r\n  getCountryName(formData: any) {\r\n    return formData.countryName && formData.countryName.length < 10 ? formData.countryName : formData.countryName ? formData.countryName.substring(0, 9) + '...' : ''\r\n  }\r\n\r\n  // Set the default country\r\n  getCurrentCountry(refresher: boolean) {\r\n    this.location.getCurrentWordCountryInfo(refresher).then((country: any) => {\r\n      if (country) {\r\n        const formData = {\r\n          countryName: country.country_label,\r\n          code_country: country.code_country,\r\n          country_id: country.country_id,\r\n          country_key: country.country_key,\r\n          phoneid: country.country_prefixe,\r\n          phone_prefix: country.country_prefixe,\r\n          prefix_country_with_plus: country.code_country !== 'CM' && country.code_country !== 'ZA' ? `+${country.country_prefixe}` : ''\r\n        }\r\n        this.initFormRegistration(formData);\r\n      }\r\n    }).catch(error => {\r\n    });\r\n  }\r\n\r\n  // open the countries modal\r\n  showCountries() {\r\n    this.modatCtrl\r\n      .create({\r\n        component: CountriesComponent\r\n      })\r\n      .then(modalEl => {\r\n        modalEl.present();\r\n        modalEl.onDidDismiss().then((ans) => {\r\n          if (ans && ans.role === 'select') {\r\n            this.phoneRegisterForm.get('code_country').setValue(ans.data);\r\n            this.updateCountry();\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  // Update the country\r\n  updateCountry() {\r\n    if (this.states && this.states.length > 0) {\r\n      const currentCountry = this.phoneRegisterForm.value.code_country;\r\n      this.states.forEach(state => {\r\n        if (state.code_country === currentCountry) {\r\n          this.phoneRegisterForm.get('countryName').setValue(state.country_label);\r\n          this.phoneRegisterForm.get('country_id').setValue(state.country_id);\r\n          this.phoneRegisterForm.get('phoneid').setValue(state.country_prefixe);\r\n          this.phoneRegisterForm.get('phone_prefix').setValue(state.country_prefixe);\r\n          this.phoneRegisterForm.get('country_key').setValue(state.country_key);\r\n          state.code_country !== 'CM' && state.code_country !== 'ZA' ? this.phoneRegisterForm.get('prefix_country_with_plus').setValue(`+${state.country_prefixe}`) :\r\n            this.phoneRegisterForm.get('prefix_country_with_plus').setValue('');\r\n        }\r\n      });\r\n    } else {\r\n      this.getWordCountries(false);\r\n    }\r\n  }\r\n\r\n  // Remove space\r\n  removeSpace() {\r\n    this.phoneRegisterForm.get('phone_number').setValue(this.form.removeSpace(this.phoneRegisterForm.value.phone_number));\r\n  }\r\n\r\n  // Show the confirm phone number message\r\n  async confirmPhoneMessage(translation: string[]) {\r\n    const alert = await this.alertController.create({\r\n      header: `${translation[0]}`,\r\n      message: `${translation[1]}`,\r\n      buttons: [\r\n        {\r\n          text: `${translation[2]}`,\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n            this.setFocusOnInput();\r\n          }\r\n        }, {\r\n          text: `${translation[3]}`,\r\n          handler: () => {\r\n            this.gotoNextStep();\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // Check the confirm phone\r\n  confirmPhone() {\r\n    const messages = [];\r\n    this.translate.get(['M_CONFIRM_PHONE_TITLE', 'M_CONFIRM_PHONE_MESSAGE', 'EDIT_TEXT', 'YES_TEXT'])\r\n      .subscribe(trans => {\r\n        messages.push(trans.M_CONFIRM_PHONE_TITLE);\r\n        messages.push(`${trans.M_CONFIRM_PHONE_MESSAGE}  <strong>+${this.phoneRegisterForm.value.phone_prefix} ${this.formatPhoneNumber(this.phoneRegisterForm.value.phone_number, this.phoneRegisterForm.value.phone_prefix)} </strong>`);\r\n        messages.push(trans.EDIT_TEXT);\r\n        messages.push(trans.YES_TEXT);\r\n        this.confirmPhoneMessage(messages);\r\n      });\r\n  }\r\n\r\n  // Go to the next Step\r\n  gotoNextStep() {\r\n    this.userService.setRegistrationData(this.phoneRegisterForm.value);\r\n    this.router.navigate(['/auth/verify-phone']);\r\n  }\r\n\r\n  // Format phone number\r\n  formatPhoneNumber(phoneNumberString: any, prefix: string) {\r\n    return this.form.formatPhoneNumber(phoneNumberString, prefix);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}