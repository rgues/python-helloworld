{"version":3,"sources":["./src/app/dashboard/my-tontines/tontine-detail/history/history.page.html","./src/app/dashboard/my-tontines/tontine-detail/history/history.page.ts","./src/app/dashboard/my-tontines/tontine-detail/history/history.page.scss","./src/app/dashboard/my-tontines/tontine-detail/history/history.module.ts"],"names":[],"mappings":"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","file":"history-history-module.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button color=\\\"primary\\\" defaultHref=\\\"/dashboard/my-tontines/tontinId\\\" slot=\\\"text-only\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-avatar slot=\\\"start\\\">\\r\\n        <ion-img [src]=\\\"'assets/join-icon.svg'\\\" class=\\\"thumb-img\\\"></ion-img>\\r\\n    </ion-avatar>\\r\\n    <ion-title class=\\\"ion-padding\\\">\\r\\n      {{ 'TRANSACTIONS_HISTORY' | translate }} ({{ tontinesHistory.length}})\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar>\\r\\n    <form [formGroup]=\\\"periodForm\\\">\\r\\n      <ion-grid class=\\\"header-search-bg\\\">\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"5\\\">\\r\\n            <ion-item>\\r\\n              <ion-label>{{'DATE_START' | translate }}</ion-label>\\r\\n              <ion-datetime formControlName=\\\"dateStart\\\" displayFormat=\\\"D MMM, YYYY\\\" [min]=\\\"currentDate.getFullYear()\\\"  pickerFormat=\\\"DD MMMM YYYY\\\"></ion-datetime>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"5\\\">\\r\\n            <ion-item>\\r\\n              <ion-label>{{'DATE_END' | translate }}</ion-label>\\r\\n              <ion-datetime [disabled]=\\\"startOn.invalid\\\" formControlName=\\\"dateEnd\\\" displayFormat=\\\"D MMM, YYYY\\\" [min]=\\\"currentDate.getFullYear()\\\" pickerFormat=\\\"DD MMMM YYYY\\\"></ion-datetime>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"2\\\">\\r\\n            <ion-buttons class=\\\"edit-btn\\\">\\r\\n              <ion-button [disabled]=\\\"periodForm.invalid\\\" (click)=\\\"filterByDate(periodForm.value)\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"search\\\" color=\\\"warning\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n            </ion-buttons>            \\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    </form>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content  id=\\\"history\\\">\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refreSher($event)\\\">\\r\\n    <ion-refresher-content\\r\\n      pullingIcon=\\\"reload-outline\\\"\\r\\n      refreshingSpinner=\\\"circles\\\"\\r\\n      refreshingText=\\\"{{ 'M_REFRESHING_TEXT' | translate }}\\\">\\r\\n    </ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  <p class=\\\"ion-text-center\\\"  *ngIf=\\\"loading\\\">\\r\\n    <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n  </p>\\r\\n  <ion-grid  *ngIf=\\\"!loading\\\">\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <span *ngIf=\\\"!loading\\\">{{'TOTAL_TRANS_TEXT' | translate }}: {{tontinesHistory && tontinesHistory.length > 0 ? allData.length : tontinesHistory.length }}</span>\\r\\n        <ion-list>\\r\\n          <ion-item *ngFor=\\\"let transaction of tontinesHistory\\\">                          \\r\\n            <ion-label>\\r\\n              <ion-text color=\\\"primary\\\"><h2><small>{{'TONTINE_USERS_TEXT5' | translate }}: </small><b>{{transaction.firstname ? transaction.firstname : ''}} {{transaction.lastname ? transaction.lastname : ''}}</b>\\r\\n                <span> \\r\\n                  <ion-icon [color]=\\\"transaction.status === 'entrant' ? 'success' :  'danger'\\\" [name]=\\\"transaction.status === 'entrant' ? 'arrow-back' :  'arrow-forward'\\\" ></ion-icon>\\r\\n                 </span>\\r\\n              </h2></ion-text>\\r\\n              <p><small>Ref.:</small>  {{transaction.reference_transaction ? transaction.reference_transaction : ''}}</p>              \\r\\n              <p><small>{{'DATE_TEXT' | translate }}: </small> {{transaction.updated_at ? transaction.updated_at : ''}} </p>                \\r\\n              <p>\\r\\n                <ion-text color=\\\"dark\\\">\\r\\n                  <span class=\\\"ion-float-left\\\"><small>{{'TYPE_TEXT' | translate }}: </small>{{transaction.status ? getTransactionFlux(transaction.status) : ''}}</span> \\r\\n                  <span class=\\\"ion-float-right\\\"><small>{{ 'REASON_TEXT' | translate}}: </small>{{transaction.motif ? getTransactionType(transaction.motif) : ''}}</span>\\r\\n                </ion-text>\\r\\n              </p>              \\r\\n              <h2><ion-text color=\\\"warning\\\"><small>{{'AMOUNT_TEXT' | translate}}: </small><b>{{transaction.somme ? (transaction.somme | commadumper) : ''}} {{transaction.device_name ? transaction.device_name : ''}}</b></ion-text></h2>\\r\\n            </ion-label>\\r\\n          </ion-item>\\r\\n        </ion-list>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n  <div  *ngIf=\\\"tontinesHistory && tontinesHistory.length === 0 && !loading\\\">\\r\\n    <p  class=\\\"ion-text-center\\\"> {{ 'HISTORY_TEXT3' | translate }}</p>\\r\\n  </div>\\r\\n\\r\\n  <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"infinteScrollData($event)\\\">\\r\\n    <ion-infinite-scroll-content\\r\\n      loadingSpinner=\\\"bubbles\\\"\\r\\n      loadingText=\\\"{{ 'M_LOADING_MORE_DATA' | translate }}\\\">\\r\\n    </ion-infinite-scroll-content>\\r\\n  </ion-infinite-scroll>\\r\\n</ion-content>\\r\\n\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { TontineService } from '../../services/tontine.service';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { ContributionService } from '../../services/contribution.service';\r\nimport { IonInfiniteScroll } from '@ionic/angular';\r\nimport { ConstantService } from 'src/app/shared/service/constant.service';\r\nimport { UtilService } from 'src/app/shared/service/util.service';\r\nimport { UserService } from 'src/app/dashboard/user/service/user.service';\r\nimport { StorageData } from 'src/app/shared/service/storage.service';\r\nimport { DateserviceService } from 'src/app/shared/service/dateservice.service';\r\nimport { EventService } from 'src/app/shared/service/events.service';\r\n\r\n@Component({\r\n  selector: 'app-history',\r\n  templateUrl: './history.page.html',\r\n  styleUrls: ['./history.page.scss'],\r\n})\r\nexport class HistoryPage implements OnInit {\r\n\r\n  periodForm: FormGroup;\r\n  currentTontine: any;\r\n  typesTontines: any;\r\n  tontineId: any;\r\n  user: any;\r\n  tontineCountryName: string;\r\n  tontineFrequencyName: string;\r\n  tontineTypeName: string;\r\n  loading: boolean;\r\n  tontinesHistory: any;\r\n  transactionType: string;\r\n  transactionFlux: string;\r\n  transactionsTemp: any;\r\n  currentDate: Date;\r\n  allData: any;\r\n  backService: any;\r\n  nbItems: number;\r\n  tontinId: any;\r\n  @ViewChild(IonInfiniteScroll, { static: false }) infiniteScroll: IonInfiniteScroll;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private tontine: TontineService,\r\n    private util: UtilService,\r\n    private dateService: DateserviceService,\r\n    private events: EventService,\r\n    private storage: StorageData,\r\n    private error: ErrorService,\r\n    private userService: UserService,\r\n    private contribution: ContributionService,\r\n    private constant: ConstantService\r\n  ) {\r\n    this.transactionType = '';\r\n    this.transactionFlux = '';\r\n    this.loading = false;\r\n    this.tontinesHistory = [];\r\n    this.typesTontines = [];\r\n    this.transactionsTemp = [];\r\n    this.tontineCountryName = '';\r\n    this.tontineFrequencyName = '';\r\n    this.tontineTypeName = '';\r\n    this.tontinId = this.currentTontine ? this.currentTontine.tontine.tontine_id : '';\r\n    this.currentDate = new Date();\r\n    this.allData = [];\r\n    this.nbItems = 10;\r\n    this.backService = null;\r\n    this.events.subscribe('new-tontine', () => {\r\n      this.loading = true;\r\n      this.refreSher(null);\r\n    });\r\n    this.user = this.userService.getUserData();\r\n    this.currentTontine = this.tontine.getCurrentTontineData();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initPeriodForm();\r\n    this.loading = true;\r\n    this.getDataFormStorage(null);\r\n  }\r\n\r\n  // Init form\r\n  initPeriodForm() {\r\n    this.periodForm = this.fb.group({\r\n      dateStart: ['', Validators.required],\r\n      dateEnd: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  get startOn() {\r\n    return this.periodForm.get('dateStart');\r\n  }\r\n\r\n  get endOn() {\r\n    return this.periodForm.get('dateEnd');\r\n  }\r\n\r\n  // Get the reason of transaction\r\n  getTransactionType(reason: string) {\r\n    return this.constant.getTransactionReason(reason);\r\n  }\r\n\r\n  // Get the transaction type\r\n  getTransactionFlux(type: string) {\r\n    return this.constant.getTransactionType(type);\r\n  }\r\n\r\n  // Filter the history by date\r\n  filterByDate(formData: any) {\r\n    this.infiniteScroll.disabled = false;\r\n    this.loading = true;\r\n    const filterResult = [];\r\n    const begin = this.dateService.formatDateTiret(formData.dateStart);\r\n    const end = this.dateService.formatDateTiret(formData.dateEnd);\r\n    const DateBegin = new Date(begin);\r\n    const DateEnd = new Date(end);\r\n    this.transactionsTemp.forEach(trans => {\r\n      if (trans.updated_at) {\r\n        const dateTrans = new Date(this.dateService.formatDateTiret(trans.updated_at));\r\n        if (trans && DateBegin <= dateTrans && dateTrans <= DateEnd) {\r\n          filterResult.push(trans);\r\n        }\r\n      }\r\n\r\n    });\r\n    setTimeout(() => {\r\n      this.loading = false;\r\n    }, 5000);\r\n\r\n    this.allData = filterResult;\r\n    if (this.allData.length > this.nbItems) {\r\n      this.tontinesHistory = [];\r\n      for (let i = 0; i < this.nbItems; i++) {\r\n        this.tontinesHistory.push(this.allData[this.tontinesHistory.length]);\r\n      }\r\n    } else {\r\n      this.tontinesHistory = this.allData;\r\n    }\r\n  }\r\n\r\n  // Get the list history tontines\r\n  getHistoryTontines(event) {\r\n    const tontineData = this.tontine.getCurrentTontineData();\r\n    this.contribution.historiqueTransactionTontine(tontineData.tontine.tontine_id).subscribe((reponse: any) => {\r\n\r\n      if (reponse && reponse.trace) {\r\n        if (reponse && reponse.trace) {\r\n          this.allData = this.util.oderByNotificationDate(reponse.trace);\r\n          this.transactionsTemp = reponse.trace;\r\n          // Save to local storage\r\n          // this.setToStorage(this.allData);\r\n          if (this.allData.length > this.nbItems) {\r\n            this.tontinesHistory = [];\r\n            for (let i = 0; i < this.nbItems; i++) {\r\n              this.tontinesHistory.push(this.allData[this.tontinesHistory.length]);\r\n            }\r\n          } else {\r\n            this.tontinesHistory = this.allData;\r\n          }\r\n        }\r\n      }\r\n      this.loading = false;\r\n      if (event) {\r\n        setTimeout(() => {\r\n          event.target.complete();\r\n        }, 2000);\r\n      }\r\n    }, error => {\r\n      this.loading = false;\r\n      if (event) {\r\n        event.target.complete();\r\n      }\r\n      if (error && error.error && error.error.user_not_found) {\r\n        this.loading = true;\r\n        this.error.renewSession().then((data: any) => {\r\n          if (data && data.result === 'OK') {\r\n            this.getHistoryTontines(event);\r\n          } else {\r\n            this.loading = false;\r\n          }\r\n        });\r\n      } else {\r\n        this.error.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // set to local Stoirage\r\n  setToStorage(data: any) {\r\n    this.storage.set('app-tontine-trans', data);\r\n  }\r\n\r\n  getFromStorage(): Promise<any> {\r\n    return this.storage.get('app-tontine-trans');\r\n  }\r\n\r\n  // Refresh the list\r\n  refreSher(event) {\r\n    this.infiniteScroll.disabled = false;\r\n    this.getHistoryTontines(event);\r\n  }\r\n\r\n  // Get the data from session\r\n  getDataFormStorage(event) {\r\n    this.getFromStorage().then(data => {\r\n      if (data && data.length > 0) {\r\n        this.allData = data;\r\n        if (this.allData.length > this.nbItems) {\r\n          this.tontinesHistory = [];\r\n          for (let i = 0; i < this.nbItems; i++) {\r\n            this.tontinesHistory.push(this.allData[this.tontinesHistory.length]);\r\n          }\r\n        } else {\r\n          this.tontinesHistory = this.allData;\r\n        }\r\n        this.loading = false;\r\n        this.getHistoryTontines(event);\r\n      } else {\r\n        this.getHistoryTontines(event);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Launch the backgroud service\r\n  ionicViewDidEnter() {\r\n    this.backgroundService();\r\n  }\r\n\r\n  // Backgroung service\r\n  backgroundService() {\r\n    this.backService = setInterval(() => {\r\n      this.getHistoryTontines(null);\r\n    }, 300000 + (Math.ceil(Math.random() * 10) + 1) * 1000);\r\n  }\r\n\r\n  // Launch the backgroud service\r\n  ionicViewWillLeave() {\r\n    clearInterval(this.backService);\r\n  }\r\n\r\n  // Infinite scroll data\r\n  infinteScrollData(event) {\r\n    setTimeout(() => {\r\n      for (let i = 0; i < this.nbItems; i++) {\r\n        if (this.tontinesHistory.length < this.allData.length) {\r\n          this.tontinesHistory.push(this.allData[this.tontinesHistory.length]);\r\n        } else if (this.tontinesHistory.length === this.allData.length) {\r\n          event.target.disabled = true;\r\n        }\r\n      }\r\n      event.target.complete();\r\n    }, 500);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJoaXN0b3J5LnBhZ2Uuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HistoryPage } from './history.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CommonModule } from '@angular/common';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HistoryPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [HistoryPage]\n})\nexport class HistoryPageModule {}\n"],"sourceRoot":"webpack:///"}