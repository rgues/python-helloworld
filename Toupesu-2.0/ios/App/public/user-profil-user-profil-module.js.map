{"version":3,"sources":["./src/app/dashboard/user/user-profil/user-profil.module.ts","./src/app/dashboard/user/user-profil/user-profil.page.scss","./src/app/dashboard/user/user-profil/user-profil.page.ts","./src/app/dashboard/user/user-profil/user-profil.page.html","./src/app/shared/service/dateservice.service.ts"],"names":[],"mappings":"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","file":"user-profil-user-profil-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserProfilPage } from './user-profil.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserProfilPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    SharedModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [\n    UserProfilPage\n  ]\n})\nexport class UserProfilPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c2VyLXByb2ZpbC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { States } from 'src/app/shared/models/countries';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LocationService } from 'src/app/shared/service/location.service';\r\nimport { DateserviceService } from 'src/app/shared/service/dateservice.service';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { Router } from '@angular/router';\r\nimport { CountriesComponent } from 'src/app/shared/countries/countries.component';\r\nimport { ModalController, NavController } from '@ionic/angular';\r\nimport { FormUtilsService } from 'src/app/shared/service/form-utils.service';\r\nimport { UserService } from '../service/user.service';\r\nimport { UiService } from 'src/app/shared/service/ui.service';\r\nimport { AuthService } from 'src/app/auth/service/auth.service';\r\nimport { PluginService } from 'src/app/shared/service/plugin.service';\r\nimport { UserErrorService } from '../service/user-error.service';\r\nimport { LocalStorageService } from 'src/app/shared/service/local-storage.service';\r\nimport { EventService } from 'src/app/shared/service/events.service';\r\n\r\n@Component({\r\n  selector: 'app-user-profil',\r\n  templateUrl: './user-profil.page.html',\r\n  styleUrls: ['./user-profil.page.scss'],\r\n})\r\nexport class UserProfilPage implements OnInit {\r\n\r\n  states: States[];\r\n  validationMessages: any;\r\n  userDetailForm: FormGroup;\r\n  user: any;\r\n  loginTypeList: string[] = ['email', 'phone'];\r\n  languageTranslation: any;\r\n  errorPhone: boolean;\r\n  errorEmail: boolean;\r\n  errorUser: boolean;\r\n  errorUsername: boolean;\r\n  loading: boolean;\r\n  typeMimeError: boolean;\r\n  userPicture: string;\r\n  canShowBackButton: boolean;\r\n  counrtryApi: boolean;\r\n  dateBirthday: any;\r\n  currentDate: string;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private location: TranslateService,\r\n    private navController: NavController,\r\n    private event: EventService,\r\n    private modatCtrl: ModalController,\r\n    private formUtil: FormUtilsService,\r\n    private router: Router,\r\n    private locate: LocationService,\r\n    private userService: UserService,\r\n    private authService: AuthService,\r\n    private dateService: DateserviceService,\r\n    private errorService: ErrorService,\r\n    private userError: UserErrorService,\r\n    private plugin: PluginService,\r\n    private localStorage: LocalStorageService,\r\n    private ui: UiService\r\n  ) {\r\n    this.ui.hardwareBackButton();\r\n    this.states = [];\r\n    this.errorPhone = false;\r\n    this.errorEmail = false;\r\n    this.errorUser = false;\r\n    this.typeMimeError = false;\r\n    this.userPicture = null;\r\n    this.canShowBackButton = true;\r\n    this.counrtryApi = false;\r\n    this.currentDate = this.dateService.formatDateTiret(new Date());\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getWordCountries(false);\r\n    this.initUserForm();\r\n    this.validationMessage();\r\n    this.showBackbutton();\r\n  }\r\n\r\n  // Form getters\r\n  get userName() {\r\n    return this.userDetailForm.get('username');\r\n  }\r\n\r\n  get firstName() {\r\n    return this.userDetailForm.get('firstName');\r\n  }\r\n\r\n  get lastName() {\r\n    return this.userDetailForm.get('lastName');\r\n  }\r\n\r\n  get loginType() {\r\n    return this.userDetailForm.get('loginType');\r\n  }\r\n\r\n  get phoneError() {\r\n    return this.userDetailForm.get('phone');\r\n  }\r\n\r\n  get country() {\r\n    return this.userDetailForm.get('paysValue');\r\n  }\r\n\r\n  get city() {\r\n    return this.userDetailForm.get('ville');\r\n  }\r\n\r\n  get occupation() {\r\n    return this.userDetailForm.get('profession');\r\n  }\r\n\r\n  get emailError() {\r\n    return this.userDetailForm.get('email');\r\n  }\r\n\r\n  get gender() {\r\n    return this.userDetailForm.get('sexe');\r\n  }\r\n\r\n  get address() {\r\n    return this.userDetailForm.get('address');\r\n  }\r\n\r\n  get birthdayError() {\r\n    return this.userDetailForm.get('birthdayvalue');\r\n  }\r\n\r\n  // Validation message\r\n  validationMessage() {\r\n    this.location.get(['TONTINE_NEW_TEXT12', 'TONTINE_NEW_TEXT13', 'TONTINE_NEW_TEXT14',\r\n      'TONTINE_NEW_TEXT18', 'TONTINE_EDIT_TEXT6', 'USER_DETAIL_TEXT6', 'USER_DETAIL_TEXT12',\r\n      'USER_DETAIL_TEXT13', 'USER_DETAIL_TEXT8', 'USER_DETAIL_TEXT4', 'USER_DETAIL_TEXT7']).subscribe(trans => {\r\n        this.validationMessages = {\r\n          firstname: [\r\n            { type: 'required', message: trans.TONTINE_NEW_TEXT12 }\r\n          ],\r\n          lastName: [\r\n            { type: 'required', message: trans.TONTINE_NEW_TEXT13 }\r\n          ],\r\n          userName: [\r\n            { type: 'required', message: trans.USER_DETAIL_TEXT4 }\r\n          ],\r\n          address: [\r\n            { type: 'required', message: trans.USER_DETAIL_TEXT7 }\r\n          ],\r\n          birthday: [\r\n            { type: 'required', message: trans.TONTINE_NEW_TEXT14 }\r\n          ],\r\n          phone: [\r\n            { type: 'required', message: trans.TONTINE_NEW_TEXT18 }\r\n          ],\r\n          country: [\r\n            { type: 'required', message: trans.TONTINE_EDIT_TEXT6 }\r\n          ],\r\n          city: [\r\n            { type: 'required', message: trans.USER_DETAIL_TEXT6 }\r\n          ],\r\n          occupation: [\r\n            { type: 'required', message: trans.USER_DETAIL_TEXT8 }\r\n          ],\r\n          email: [\r\n            { type: 'required', message: trans.USER_DETAIL_TEXT12 },\r\n            { type: 'invalid', message: trans.USER_DETAIL_TEXT13 }\r\n          ]\r\n        };\r\n      });\r\n\r\n  }\r\n\r\n  // cna show the back button\r\n  showBackbutton() {\r\n    const data = this.userService.getUserData();\r\n    if (data && (!data.firstname || !data.lastname)) {\r\n      this.canShowBackButton = false;\r\n    }\r\n  }\r\n\r\n  // set The use default user country\r\n  setUserCountry(countries: any[]) {\r\n    const credentials = this.userService.getUserSecret();\r\n    if (credentials && credentials.phone_prefix) {\r\n      countries.forEach(state => {\r\n        if (state && state.country_prefixe === credentials.phone_prefix) {\r\n          this.userDetailForm.get('paysValue').setValue(state.country_name);\r\n          this.userDetailForm.get('countryName').setValue(state.country_label);\r\n          this.counrtryApi = true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Get all the word countries\r\n  getWordCountries(refresh) {\r\n    this.locate.getWordCountries(refresh).then((countries: any) => {\r\n      if (countries && countries.length > 0) {\r\n        this.states = countries;\r\n        // Set the user country with the phone prefix\r\n        this.setUserCountry(countries);\r\n      }\r\n    });\r\n  }\r\n\r\n  // check the phone\r\n  checkPhone(phone: string) {\r\n    this.errorPhone = this.formUtil.validatePhone(phone);\r\n    if (!this.errorPhone) {\r\n      this.phoneError.setErrors({ invalid: true });\r\n    }\r\n  }\r\n\r\n  // check the email\r\n  checkEmail(email: string) {\r\n    this.errorEmail = this.formUtil.validateEmail(email);\r\n    if (!this.errorEmail) {\r\n      this.emailError.setErrors({ invalid: true });\r\n    }\r\n  }\r\n\r\n  // cancel the profile update\r\n  cancel() {\r\n    this.initUserForm();\r\n  }\r\n\r\n  // Log out de app\r\n  logout() {\r\n    this.authService.removeUserSession();\r\n    this.authService.removeAppLastSession();\r\n    this.navController.setDirection('root');\r\n    this.router.navigate(['/auth']);\r\n  }\r\n\r\n  // Get the user picture\r\n  getPicture() {\r\n    this.plugin.getPicture().subscribe((picture: any) => {\r\n      if (picture) {\r\n        setTimeout(() => {\r\n          this.userDetailForm.get('avatar').setValue(picture);\r\n          this.userDetailForm.get('picture').setValue(picture);\r\n          this.userPicture = picture;\r\n        }, 300);\r\n      } else {\r\n        this.userPicture = this.user && this.user.picture ? `${this.user.picture}` : null;\r\n      }\r\n    });\r\n  }\r\n\r\n  // init the user form with his data\r\n  initUserForm() {\r\n    this.user = this.userService.getUserData();\r\n\r\n    let userEmail = '';\r\n    if (this.localStorage.getItem('first-email')) {\r\n      const registerData = this.localStorage.getItem('first-email');\r\n      userEmail = registerData ? registerData : '';\r\n    }\r\n    if (this.user.birthday) {\r\n      const date = this.user.birthday.split('/');\r\n      const month = (parseInt(date[1]) - 1);\r\n      this.dateBirthday = new Date(date[2], month, date[0]);\r\n    }\r\n\r\n    let prefix: string = this.user && this.user.phone_with_prefix ? this.user.phone_with_prefix : '';\r\n    prefix = prefix ? prefix.replace(this.user.phone, \"\") : '';\r\n\r\n    this.userPicture = this.user && this.user.picture ? `${this.user.picture}` : null;\r\n    this.userDetailForm = this.fb.group({\r\n      username: [this.user.username || ''],\r\n      sexe: [this.user.sexe || 'male', Validators.required],\r\n      countryName: [this.user.pays || ''],\r\n      firstName: [this.user.firstname || '', Validators.required],\r\n      lastName: [this.user.lastname || '', Validators.required],\r\n      loginType: [this.user.email ? 1 : 0],\r\n      birthdayvalue: [this.user.birthday ? this.dateService.formatDateTiret(this.dateBirthday) : ''],\r\n      birthday: [''],\r\n      profession: [this.user.profession || ''],\r\n      address: [this.user.address || ''],\r\n      pays: [this.user.pays || ''],\r\n      paysValue: [{ value: this.user.pays || '', disabled: this.user.pays ? true : false }],\r\n      ville: [this.user.ville || ''],\r\n      phone: [{ value: this.user.phone || '', disabled: this.user.phone ? true : false }],\r\n      email: [{ value: this.user.email || userEmail, disabled: this.user.email ? true : false }],\r\n      avatar: [this.user && this.user.picture ? `${this.user.picture}` : ''],\r\n      picture: [this.user && this.user.picture ? `${this.user.picture}` : ''],\r\n      phoneValue: [''],\r\n      phoneId: [''],\r\n      phone_prefix: [prefix ? prefix.trim() : ''],\r\n      country_id: [''],\r\n      emailValue: [this.user.email || '']\r\n    });\r\n  }\r\n\r\n  // open the countries modal\r\n  showCountries() {\r\n    this.modatCtrl\r\n      .create({\r\n        component: CountriesComponent\r\n      })\r\n      .then(modalEl => {\r\n        modalEl.present();\r\n        modalEl.onDidDismiss().then((ans) => {\r\n          if (ans && ans.role === 'select') {\r\n            this.states.forEach(state => {\r\n              if (state.code_country === ans.data) {\r\n                this.userDetailForm.get('paysValue').setValue(state.country_name);\r\n                this.userDetailForm.get('countryName').setValue(state.country_label);\r\n                this.counrtryApi = false;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  // check if it user first login\r\n  isUserFisrtLogin() {\r\n    if (this.localStorage.getItem('fisrt-login') === 'yes') {\r\n      this,localStorage.removeItem('user-registration-data');\r\n      this.router.navigateByUrl('/dashboard/user/security');\r\n    }\r\n  }\r\n\r\n  // show login Message\r\n  showMessage() {\r\n    if (this.localStorage.getItem('fisrt-login') !== 'yes') {\r\n      this.location.get('USER_DETAIL_MSG1').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    } else {\r\n      this.location.get('PROFILE_SETUP').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n  }\r\n\r\n  // get the user profil\r\n  getUserProfil() {\r\n    this.loading = true;\r\n    this.userService.getProfileUser().subscribe((user: any) => {\r\n      this.loading = false;\r\n      this.showMessage();\r\n      this.userService.setUserToken(user.token);\r\n      this.userService.setUserRole(user.role);\r\n      this.userService.setUserData(user.user);\r\n      this.userService.setUserBadge(user.badge_name);\r\n      this.event.publish('user-data', user.user);\r\n      this.canShowBackButton = true;\r\n      if (user.modePayment) {\r\n        this.userService.setUserPaymentMethod(user.modePayment);\r\n      }\r\n      this.isUserFisrtLogin();\r\n\r\n    }, error => {\r\n      this.loading = false;\r\n      if (error.error.user_not_found) {\r\n        this.loading = true;\r\n        this.errorService.renewSession().then((data: any) => {\r\n          if (data && data.result === \"OK\") {\r\n            this.getUserProfil();\r\n          } else {\r\n            this.loading = false;\r\n          }\r\n        });\r\n      } else {\r\n        this.errorService.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Create account and tontine\r\n  updateAccount() {\r\n    this.loading = true;\r\n\r\n    if (this.userDetailForm.value.birthdayvalue) {\r\n      this.userDetailForm.get('birthday').setValue(this.dateService.formatDateSplash(this.userDetailForm.value.birthdayvalue));\r\n    }\r\n\r\n    if (this.userDetailForm.value.paysValue) {\r\n      this.userDetailForm.get('pays').setValue(this.userDetailForm.value.paysValue);\r\n    }\r\n\r\n    if (this.userDetailForm.value.emailValue) {\r\n      this.userDetailForm.get('emailValue').setValue('');\r\n    } else {\r\n      this.userDetailForm.get('emailValue').setValue(this.userDetailForm.value.email);\r\n    }\r\n\r\n    this.userService.updateProfileUser(this.userDetailForm.value).subscribe(\r\n      (reponse: any) => {\r\n        if (reponse && reponse.token) {\r\n          this.getUserProfil();\r\n        }\r\n      }, error => {\r\n\r\n        if (error && error.error) {\r\n          if (error && error.error && error.error.user_not_found) {\r\n            this.errorService.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.updateAccount();\r\n              } else {\r\n                this.loading = false;\r\n              }\r\n            });\r\n          } else {\r\n            this.loading = false;\r\n            this.userError.manageUserError(error);\r\n          }\r\n        } else {\r\n          this.loading = false;\r\n          this.errorService.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons  slot=\\\"start\\\">\\r\\n      <ion-back-button  *ngIf=\\\"canShowBackButton\\\"  color=\\\"primary\\\" defaultHref=\\\"/dashboard/user\\\" slot=\\\"text-only\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-avatar slot=\\\"start\\\">\\r\\n      <img src=\\\"{{userPicture ? userPicture : 'assets/post-img.svg'}}\\\" class=\\\"thumb-img\\\">\\r\\n    </ion-avatar>\\r\\n    <ion-title class=\\\"no-padding ion-margin-start\\\">\\r\\n      {{ 'TONTINE_NEW_TEXT9' | translate }} <span>\\r\\n        <ion-icon color=\\\"warning\\\" name=\\\"create\\\" slot=\\\"icon-only\\\"></ion-icon>\\r\\n      </span>\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"user-profil\\\">\\r\\n  <form [formGroup]=\\\"userDetailForm\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row *ngIf=\\\"!canShowBackButton\\\">\\r\\n        <ion-col class=\\\"ion-margin-top\\\">\\r\\n          <ion-label color=\\\"danger\\\">\\r\\n            <ion-icon color=\\\"danger\\\" name=\\\"information-circle-outline\\\" slot=\\\"icon-only\\\"> </ion-icon>\\r\\n            <span [innerHTML]=\\\"'COMPLETE_ACCOUNT_MESSAGE' | translate\\\"></span>\\r\\n          </ion-label>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">{{ 'FIRSTNAME_TEXT' | translate }}*</ion-label>\\r\\n            <ion-input autofocus='true' type=\\\"text\\\" formControlName=\\\"firstName\\\" required></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.firstname\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"firstName.hasError(validation.type) && (firstName.dirty || firstName.touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n                <span [innerHTML]=\\\"validation.message\\\"></span>\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">{{'LASTNAME_TEXT' | translate }}*</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"lastName\\\" required></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.lastName\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"lastName.hasError(validation.type) && (lastName.dirty || lastName.touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n                <span [innerHTML]=\\\"validation.message\\\"></span>\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">{{ 'USERNAME_TEXT' | translate }}</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"username\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.userName\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"userName.hasError(validation.type) && (userName.dirty || userName.touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n                <span [innerHTML]=\\\"validation.message\\\"></span>\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label>{{ 'M_GENDER' | translate }}*</ion-label>\\r\\n            <ion-select formControlName=\\\"sexe\\\">\\r\\n              <ion-select-option value=\\\"male\\\">{{ 'MALE_TEXT' | translate }}</ion-select-option>\\r\\n              <ion-select-option value=\\\"female\\\">{{ 'FEMALE_TEXT' | translate }}</ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label>{{ 'BIRTHDAY_TEXT' | translate }}</ion-label>\\r\\n            <ion-datetime formControlName=\\\"birthdayvalue\\\" [max]=\\\"currentDate\\\" displayFormat=\\\"DDDD D MMM, YYYY\\\" pickerFormat=\\\"DD MMMM YYYY\\\">\\r\\n            </ion-datetime>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.birthday\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"birthdayError.hasError(validation.type) && (birthdayError.dirty || birthdayError.touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n                <span [innerHTML]=\\\"validation.message\\\"></span>\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item [disabled]=\\\"userDetailForm.value.paysValue && !counrtryApi ? true: false\\\" (click)=\\\"showCountries()\\\">\\r\\n            <ion-label>{{'COUNTRY_TEXT' | translate}} : </ion-label>\\r\\n            <p><strong> {{ userDetailForm.value.countryName }} </strong> </p>          \\r\\n            <ion-icon name=\\\"chevron-down-outline\\\" slot=\\\"end\\\"></ion-icon>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.country\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"country.hasError(validation.type) && (country.dirty || country.touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n                <span [innerHTML]=\\\"validation.message\\\"></span>\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\">{{ 'ADDRESS_TEXT' | translate }}</ion-label>\\r\\n                <ion-input type=\\\"text\\\" formControlName=\\\"address\\\"></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n              <ng-container *ngFor=\\\"let validation of validationMessages.address\\\">\\r\\n                <div class=\\\"error-message\\\"\\r\\n                  *ngIf=\\\"address.hasError(validation.type) && (address.dirty || address.touched)\\\">\\r\\n                  <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n                  <span [innerHTML]=\\\"validation.message\\\"></span>\\r\\n                </div>\\r\\n              </ng-container>\\r\\n            </div>\\r\\n          </ion-row>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">{{ 'CITY_TEXT' | translate }}</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"ville\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.city\\\">\\r\\n              <div class=\\\"error-message\\\" *ngIf=\\\"city.hasError(validation.type) && (city.dirty || city.touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n                <span [innerHTML]=\\\"validation.message\\\"></span>\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">{{ 'OCCUPATION_TEXT' | translate }}</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"profession\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.occupation\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"occupation.hasError(validation.type) && (occupation.dirty || occupation.touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n                <span [innerHTML]=\\\"validation.message\\\"></span>\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-input (ionChange)=\\\"checkEmail(userDetailForm.value.email)\\\" type=\\\"email\\\"\\r\\n              placeholder=\\\"{{ 'M_EMAIL_MSG' | translate }}\\\" formControlName=\\\"email\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.email\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"emailError.hasError(validation.type) && (emailError.dirty || emailError.touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n                <span [innerHTML]=\\\"validation.message\\\"></span>\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-input type=\\\"text\\\" (ionChange)=\\\"checkPhone(userDetailForm.value.phone)\\\"\\r\\n              placeholder=\\\"{{ 'M_PHONE_MSG' | translate }}\\\" formControlName=\\\"phone\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.phone\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"phoneError.hasError(validation.type) && (phoneError.dirty || phoneError.touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n                <span [innerHTML]=\\\"validation.message\\\"></span>\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    <!--   <ion-row *ngIf=\\\"canShowBackButton\\\">\\r\\n        <ion-col class=\\\"ion-margin-top\\\">\\r\\n          <ion-label color=\\\"danger\\\">\\r\\n            <ion-icon color=\\\"danger\\\" name=\\\"information-circle-outline\\\" slot=\\\"icon-only\\\"> </ion-icon>\\r\\n            <span [innerHTML]=\\\"'IMAGE_MESSAGE' | translate\\\"></span>\\r\\n          </ion-label>\\r\\n        </ion-col>\\r\\n      </ion-row> -->\\r\\n<!--       <ion-row   *ngIf=\\\"canShowBackButton\\\">\\r\\n        <ion-col class=\\\"ion-text-end\\\">\\r\\n          <ion-button color=\\\"primary\\\" size=\\\"medium\\\" class=\\\"ion-text-capitalize\\\" (click)=\\\"getPicture()\\\">\\r\\n            {{ 'USER_DETAIL_UPLOAD' | translate }}\\r\\n            <ion-icon name=\\\"camera\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row> -->\\r\\n    </ion-grid>\\r\\n\\r\\n  </form>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n\\r\\n<ion-footer class=\\\"ion-padding ion-text-center\\\">\\r\\n  <ion-button expand=\\\"full\\\" [disabled]=\\\"loading || userDetailForm.invalid\\\" (click)=\\\"updateAccount()\\\" color=\\\"warning\\\"\\r\\n    class=\\\"ion-text-uppercase\\\" shape=\\\"round\\\">\\r\\n    {{'SAVE_TEXT' | translate}}\\r\\n  </ion-button>\\r\\n  <ion-spinner *ngIf=\\\"loading\\\" name=\\\"circles\\\"></ion-spinner>\\r\\n</ion-footer>\";","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DateserviceService {\r\n\r\n  constructor() { }\r\n  \r\n  getDateTimeUniversal(date: string, time: string, from: string) {\r\n\r\n    const myDates = this.decodeDate(date);\r\n    const myTimes = this.decodeTime(time);\r\n    const objectMyDate = new Date(Number(myDates.year), Number(myDates.month - 1), Number(myDates.day), Number(myTimes.heure),\r\n     Number(myTimes.minutes), 0, 0);\r\n    let objectMyDateUniversal = {};\r\n\r\n    if (from === 'l') {\r\n      objectMyDateUniversal = new Date(objectMyDate.valueOf() + objectMyDate.getTimezoneOffset() * 60000);\r\n    } else {\r\n      objectMyDateUniversal = new Date(objectMyDate.valueOf() - objectMyDate.getTimezoneOffset() * 60000);\r\n    }\r\n\r\n    const dateFormater = this.formatterDate(objectMyDateUniversal);\r\n    return dateFormater;\r\n\r\n  }\r\n\r\n  encodeTime(hour: string, minute: string) {\r\n    const mTime = hour + ':' + minute;\r\n    return mTime;\r\n  }\r\n\r\n\r\n  addDays(theDate, days) {\r\n    return new Date(theDate.getTime() + days*24*60*60*1000);\r\n  }\r\n\r\n    // get the remain time\r\n    getRemainTime(data: any) {\r\n      let timeRemainHour = 0;\r\n      const currentDate = new Date ();\r\n      const created = new Date(data.updated_at ? data.updated_at : data.created_at);\r\n      const expiredDate = this.addDays(created,3);\r\n      const remainTime = expiredDate.getTime() - currentDate.getTime();\r\n      if (remainTime > 0) {\r\n       timeRemainHour = Math.floor(remainTime/3600000);\r\n      }\r\n\r\n      return timeRemainHour;\r\n    }\r\n\r\n  decodeTime(time: string) {\r\n\r\n    const times = time.split(':');\r\n    const myTime = {\r\n      heure: times[0],\r\n      minutes: times[1],\r\n      secondes: times[2],\r\n    };\r\n\r\n    return myTime;\r\n  }\r\n\r\n\r\n  decodeDate(myDate) {\r\n\r\n    const mDates = myDate.split('-');\r\n    const mDate = {\r\n      year: mDates[0],\r\n      month: mDates[1],\r\n      day: mDates[2]\r\n\r\n    };\r\n    return mDate;\r\n  }\r\n\r\n\r\n\r\n  encodeDate(day: string, month: string, year: string) {\r\n    const mDate = year + '-' + month + '-' + day;\r\n    return mDate;\r\n  }\r\n\r\n\r\n  formatterDate(date: any) {\r\n\r\n    const year = String(date.getFullYear());\r\n    const month = String(('0' + (date.getMonth() + 1)).slice(-2));\r\n    const day = String(('0' + date.getDate()).slice(-2));\r\n    const hour = String(('0' + date.getHours()).slice(-2));\r\n    const minute = String(('0' + date.getMinutes()).slice(-2));\r\n    const myFormatDate = {\r\n      date: year + '-' + month + '-' + day,\r\n      time: hour + ':' + minute,\r\n    };\r\n    return myFormatDate;\r\n  }\r\n\r\n  formatDateSplash(date: any) {\r\n    const dateFormat = new Date(date);\r\n    const month = (dateFormat.getMonth() + 1 < 10) ? '0' + (dateFormat.getMonth() + 1) : (dateFormat.getMonth() + 1);\r\n    const day = dateFormat.getDate() < 10 ? '0' + dateFormat.getDate() : dateFormat.getDate();\r\n    const formatDate = day + '/' + month + '/' +  dateFormat.getFullYear();\r\n    return formatDate;\r\n  }\r\n\r\n  formatDateSplashReverse(date: any) {\r\n    const dateFormat = new Date(date);\r\n    const month = (dateFormat.getMonth() + 1 < 10) ? '0' + (dateFormat.getMonth() + 1) : (dateFormat.getMonth() + 1);\r\n    const day = dateFormat.getDate() < 10 ? '0' + dateFormat.getDate() : dateFormat.getDate();\r\n    const formatDate =   dateFormat.getFullYear() + '/' + month + '/' +  day;\r\n    return formatDate;\r\n  }\r\n\r\n  formatDateTiret(date: any) {\r\n    const dateFormat = new Date(date);\r\n    const month = (dateFormat.getMonth() + 1 < 10) ? '0' + (dateFormat.getMonth() + 1) : (dateFormat.getMonth() + 1);\r\n    const day = dateFormat.getDate() < 10 ? '0' + dateFormat.getDate() : dateFormat.getDate();\r\n    const formatDate = dateFormat.getFullYear() + '-' + month + '-' + day;\r\n    return formatDate;\r\n  }\r\n\r\n\r\n\r\n  \r\n  formatDate(date: any) {\r\n    const dateFormat = new Date(date);\r\n    const month = (dateFormat.getMonth() < 10) ? '0' + (dateFormat.getMonth()) : (dateFormat.getMonth());\r\n    const day = dateFormat.getDate() < 10 ? '0' + dateFormat.getDate() : dateFormat.getDate();\r\n    const formatDate = dateFormat.getFullYear() + '-' + month + '-' + day;\r\n    return formatDate;\r\n  }\r\n\r\n   // Filter the date\r\n   filterDate(date: string) {\r\n    return new Date(date);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}