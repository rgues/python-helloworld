{"version":3,"sources":["./src/app/dashboard/notifications/service/notifications.service.ts","./src/app/dashboard/notifications/notifications.module.ts","./src/app/dashboard/notifications/notifications.page.html","./src/app/dashboard/notifications/notifications.page.ts","./src/app/dashboard/notifications/notifications.page.scss"],"names":[],"mappings":"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","file":"notifications-notifications-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { EventService } from 'src/app/shared/service/events.service';\r\nimport { ApiService } from '../../../shared/service/api.service';\r\nimport { UserService } from '../../user/service/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationsService {\r\n\r\n  token: string;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    public api: ApiService,\r\n    private event: EventService\r\n  ) {\r\n    this.token = this.userService.getUserToken();\r\n    this.event.subscribe('new-token', token => {\r\n      this.token = token;\r\n    });\r\n  }\r\n\r\n  // Get all user notifications with token\r\n  getUserTokenNotifications() {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('notification/v1/getAllNotificationWithToken/' + this.token);\r\n  }\r\n\r\n  // Get all user notifications with token\r\n  getUserIdNotifications(userId: number) {\r\n    return this.api.get('notification/v1/getAllNotificationWithUserId/' + userId);\r\n  }\r\n\r\n  // Update the field read notification\r\n  readNotifications(notification: any) {\r\n    return this.api.post('notification/v1/updatedFieldLu', notification);\r\n  }\r\n\r\n  // Delete the field read notification\r\n  deleteNotifications(notification: any) {\r\n      return this.api.post('notification/v1/delete', notification);\r\n  }\r\n\r\n  // Get the tontine notifications\r\n  getTontinesNotifications(tontineId: number) {\r\n      return this.api.get('notification/v1/getAllNotificationTontine/' + tontineId);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotificationsPage } from './notifications.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [NotificationsPage]\n})\nexport class NotificationsPageModule {}\n","export default \"<ion-header>\\r\\n  <ion-toolbar class=\\\"with-logo2\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button color=\\\"primary\\\" defaultHref=\\\"/dashboard/my-tontines\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title class=\\\"ion-text-center title-md-right\\\">\\r\\n        <ion-img class=\\\"logo\\\" [src]=\\\"'assets/logo-toupesu.svg'\\\"></ion-img>\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar class=\\\"ion-text-center subtitle ion-padding\\\">\\r\\n    <ion-title>{{ 'NOTIFICATION_TEXT' | translate }}</ion-title>\\r\\n    <ion-row *ngIf=\\\"tontines && tontines.length > 0 && filterData && filterData.length > 0\\\">\\r\\n      <ion-col>\\r\\n        <ion-item (click)=\\\"showTontines()\\\">\\r\\n          <ion-label>{{ 'M_TONTINE_TEXT' | translate }} : </ion-label>\\r\\n          <p><strong> {{ troncateName(tontineName,12)}}</strong> </p>          \\r\\n          <ion-icon name=\\\"chevron-down-outline\\\" slot=\\\"end\\\"></ion-icon>\\r\\n        </ion-item>  \\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"notifications\\\">\\r\\n  <p class=\\\"ion-text-center\\\"  *ngIf=\\\"loading\\\">\\r\\n    <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n  </p>\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refreSher($event)\\\">\\r\\n    <ion-refresher-content\\r\\n      pullingIcon=\\\"reload-outline\\\"\\r\\n      refreshingSpinner=\\\"circles\\\"\\r\\n      refreshingText=\\\"{{ 'M_REFRESHING_TEXT' | translate }}\\\">\\r\\n    </ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n\\r\\n  <ion-grid>\\r\\n    <ion-row class=\\\"notification\\\" *ngFor=\\\"let notif of notifications\\\">\\r\\n      <ion-col>\\r\\n        <ion-card class=\\\"ion-no-margin\\\">\\r\\n          <ion-item lines=\\\"none\\\">\\r\\n            <ion-icon color=\\\"primary\\\" name=\\\"text\\\" slot=\\\"start\\\"></ion-icon>\\r\\n            <ion-label> {{notif.titre | translate }}</ion-label>\\r\\n            <span slot=\\\"end\\\"><small>{{notif.created_at ? notif.created_at.split(' ')[0] : '' }}</small></span>\\r\\n          </ion-item>        \\r\\n          <ion-card-content>\\r\\n            {{ notif.description | translate }}\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n  \\r\\n  <div  *ngIf=\\\"notifications && notifications.length === 0 && !loading\\\">\\r\\n    <p  class=\\\"ion-text-center\\\"> {{ 'NOTIFICATIONS_MESSAGE' | translate }}</p>\\r\\n  </div>\\r\\n\\r\\n  <ion-infinite-scroll threshold=\\\"250px\\\" (ionInfinite)=\\\"infinteScrollData($event)\\\">\\r\\n    <ion-infinite-scroll-content\\r\\n      loadingSpinner=\\\"bubbles\\\"\\r\\n      loadingText=\\\"{{ 'M_LOADING_MORE_DATA' | translate }}\\\">\\r\\n    </ion-infinite-scroll-content>\\r\\n  </ion-infinite-scroll>\\r\\n\\r\\n</ion-content>\\r\\n\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { NotificationsService } from 'src/app/dashboard/notifications/service/notifications.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TontineService } from '../my-tontines/services/tontine.service';\r\nimport { IonInfiniteScroll, ModalController } from '@ionic/angular';\r\nimport { SelectDataComponent } from 'src/app/shared/select-data/select-data.component';\r\nimport { StorageData } from 'src/app/shared/service/storage.service';\r\nimport { EventService } from 'src/app/shared/service/events.service';\r\nimport { UtilService } from 'src/app/shared/service/util.service';\r\nimport { FormUtilsService } from 'src/app/shared/service/form-utils.service';\r\n\r\n@Component({\r\n  selector: 'app-notifications',\r\n  templateUrl: './notifications.page.html',\r\n  styleUrls: ['./notifications.page.scss'],\r\n})\r\nexport class NotificationsPage implements OnInit {\r\n  loading: boolean;\r\n  notifications: any;\r\n  sessionKey: string;\r\n  backService: any;\r\n  nbItems: number;\r\n  allData: any;\r\n  currentDate: Date;\r\n  tontines: any;\r\n  tontineIndex: any;\r\n  filterData: any;\r\n  tontineName: string;\r\n  @ViewChild(IonInfiniteScroll, { static: false }) infiniteScroll: IonInfiniteScroll;\r\n\r\n  constructor(\r\n    private notification: NotificationsService,\r\n    private tontine: TontineService,\r\n    private modatCtrl: ModalController,\r\n    private events: EventService,\r\n    private storage: StorageData,\r\n    private translate: TranslateService,\r\n    private formUtils: FormUtilsService,\r\n    private util: UtilService,\r\n    private error: ErrorService\r\n  ) {\r\n    this.notifications = [];\r\n    this.nbItems = 10;\r\n    this.allData = [];\r\n    this.backService = null;\r\n    this.currentDate = new Date();\r\n    this.tontines = [];\r\n    this.filterData = [];\r\n    this.tontineIndex = -1;\r\n    this.translate.get('ALL_TONTINE').subscribe(trans => {\r\n      this.tontineName = trans\r\n    });\r\n    this.events.subscribe('new-tontine', () => {\r\n      this.refreSher(null);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loading = true;\r\n    this.getDataFormStorage(null);\r\n    this.getListOftontines();\r\n  }\r\n\r\n\r\n  // Get the troncate name\r\n  troncateName(value: string, nbDigit: number) {\r\n    return this.formUtils.troncateName(value,nbDigit);\r\n  }\r\n\r\n  // Get the list of tontines\r\n  getListOftontines() {\r\n    this.tontine.getMyTontine().subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'success') {\r\n\r\n        if (reponse.liste_tontine && reponse.liste_tontine.length > 0) {\r\n          let activeTontine = reponse.liste_tontine.filter(data => {\r\n            return data.tontine.active === 1\r\n          });\r\n          activeTontine = this.util.oderByTontineDate(activeTontine);\r\n          let inactiveTontine = reponse.liste_tontine.filter(data => {\r\n            return data.tontine.active === 0\r\n          });\r\n          inactiveTontine = this.util.oderByTontineDate(inactiveTontine);\r\n          this.tontines = []\r\n          this.tontines = this.tontines.concat(activeTontine);\r\n          this.tontines = this.tontines.concat(inactiveTontine);\r\n        }\r\n      }\r\n    }, error => {\r\n      if (error && error.error && error.error.user_not_found) {\r\n        this.error.renewSession().then((data: any) => {\r\n          if (data && data.result === 'OK') {\r\n            this.getListOftontines();\r\n          }\r\n        });\r\n      } else {\r\n        this.error.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // show the tontine modal\r\n  showTontines() {\r\n    this.modatCtrl\r\n      .create({\r\n        component: SelectDataComponent,\r\n        componentProps: {\r\n          tontine: this.tontines,\r\n          type: 'notification'\r\n        }\r\n      })\r\n      .then(modalEl => {\r\n        modalEl.present();\r\n        modalEl.onDidDismiss().then((ans) => {\r\n          if (ans && ans.role === 'select') {\r\n            this.tontineName = ans.data.name;\r\n            this.filterNotifications(ans.data.id);\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  // filter by tontine\r\n  filterNotifications(index) {\r\n    if (this.tontines[index] && index !== -1) {\r\n      const notifications = [];\r\n      this.filterData.forEach(tontine => {\r\n        if (tontine.tontine_id === this.tontines[index].tontine.tontine_id) {\r\n          notifications.push(tontine);\r\n        }\r\n      });\r\n      this.allData = notifications;\r\n    } else {\r\n      this.allData = this.filterData;\r\n    }\r\n\r\n    if (this.allData.length > this.nbItems) {\r\n      this.notifications = [];\r\n      for (let i = 0; i < this.nbItems; i++) {\r\n        this.notifications.push(this.allData[this.notifications.length]);\r\n      }\r\n    } else {\r\n      this.notifications = this.allData;\r\n    }\r\n  }\r\n\r\n  // Get the list history tontines from server\r\n  getUserNotifications(event) {\r\n    this.notification.getUserTokenNotifications().subscribe((reponse: any) => {\r\n\r\n      if (reponse && reponse.notifications) {\r\n\r\n        reponse.notifications.forEach(item => {\r\n          if (item.description.toString().startsWith('Cher utilisateur, vous venez de payer la pénalité à la tontine')) {\r\n            this.translate.get(['TONTINE_NOTIF_DESC1'])\r\n              .subscribe(data => {\r\n                item.description = data.TONTINE_NOTIF_DESC1 + ' ' + item.name_tontine;\r\n              });\r\n          }\r\n          if (item.description.toString().startsWith('Cher utilisateur, vous venez de contribuer à la tontine')) {\r\n            this.translate.get(['TONTINE_NOTIF_DESC2'])\r\n              .subscribe(data => {\r\n                item.description = data.TONTINE_NOTIF_DESC2 + ' ' + item.name_tontine;\r\n              });\r\n          }\r\n          if (item.description.toString().startsWith('Vous avez reçu')) {\r\n            var removeString = item.description.toString().replace(/Vous avez reçu/g, '');\r\n            let removeStringFinal = removeString.toString().replace(/dans votre portemonnaie comme partage de la caisse pénalité./g, '');\r\n            this.translate.get(['TONTINE_NOTIF_DESC3', 'TONTINE_NOTIF_DESC4'])\r\n              .subscribe(data => {\r\n                item.description = data.TONTINE_NOTIF_DESC3 + removeStringFinal + data.TONTINE_NOTIF_DESC4;\r\n              });\r\n          }\r\n        });\r\n        this.allData = reponse.notifications;\r\n        this.filterData = this.allData;\r\n        // Save to local storage\r\n        // this.setToStorage(this.allData);\r\n        if (this.allData.length > this.nbItems) {\r\n          this.notifications = [];\r\n          for (let i = 0; i < this.nbItems; i++) {\r\n            this.notifications.push(this.allData[this.notifications.length]);\r\n          }\r\n        } else {\r\n          this.notifications = this.allData;\r\n        }\r\n      }\r\n\r\n      this.loading = false;\r\n\r\n      if (event) {\r\n        setTimeout(() => {\r\n          event.target.complete();\r\n        }, 2000);\r\n      }\r\n    }, error => {\r\n      this.loading = false;\r\n      if (error && error.error && error.error.user_not_found) {\r\n        this.loading = true;\r\n        this.error.renewSession().then((data: any) => {\r\n          if (data && data.result === 'OK') {\r\n            this.getUserNotifications(event);\r\n          } else {\r\n            this.loading = false;\r\n          }\r\n        });\r\n      } else {\r\n        this.error.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // set to local Stoirage\r\n  setToStorage(data: any) {\r\n    this.storage.set('app-notif', data);\r\n  }\r\n\r\n  getFromStorage(): Promise<any> {\r\n    return this.storage.get('app-notif');\r\n  }\r\n\r\n  // Refresh the list\r\n  refreSher(event) {\r\n    this.infiniteScroll.disabled = false;\r\n    this.getUserNotifications(event);\r\n  }\r\n\r\n\r\n  // Get the data from session\r\n  getDataFormStorage(event) {\r\n    this.getFromStorage().then(data => {\r\n      if (data && data.length > 0) {\r\n        this.allData = data;\r\n        this.filterData = this.allData;\r\n        if (this.allData.length > this.nbItems) {\r\n          this.notifications = [];\r\n          for (let i = 0; i < this.nbItems; i++) {\r\n            this.notifications.push(this.allData[this.notifications.length]);\r\n          }\r\n        } else {\r\n          this.notifications = this.allData;\r\n        }\r\n        this.loading = false;\r\n        this.getUserNotifications(event);\r\n      } else {\r\n        this.getUserNotifications(event);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  // Launch the backgroud service\r\n  ionicViewDidEnter() {\r\n    this.backgroundService();\r\n  }\r\n\r\n  // Backgroung service\r\n  backgroundService() {\r\n    this.backService = setInterval(() => {\r\n      this.getUserNotifications(null);\r\n    }, 300000 + (Math.ceil(Math.random() * 10) + 1) * 1000);\r\n  }\r\n\r\n  // Launch the backgroud service\r\n  ionicViewWillLeave() {\r\n    clearInterval(this.backService);\r\n  }\r\n\r\n  // Infinite scroll data\r\n  infinteScrollData(event) {\r\n    setTimeout(() => {\r\n      for (let i = 0; i < this.nbItems; i++) {\r\n        if (this.notifications.length < this.allData.length) {\r\n          this.notifications.push(this.allData[this.notifications.length]);\r\n\r\n        } else if (this.notifications.length === this.allData.length) {\r\n          event.target.disabled = true;\r\n        }\r\n      }\r\n      event.target.complete();\r\n    }, 500);\r\n\r\n  }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJub3RpZmljYXRpb25zLnBhZ2Uuc2NzcyJ9 */\";"],"sourceRoot":"webpack:///"}