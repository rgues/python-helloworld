{"version":3,"sources":["./src/app/dashboard/pesuswap/swap-menu/swap-menu.component.scss","./src/app/dashboard/pesuswap/swap-menu-option/swap-menu-option.component.html","./src/app/dashboard/pesuswap/pesuswap.module.ts","./src/app/dashboard/pesuswap/services/swap-global-data.service.ts","./src/app/dashboard/pesuswap/swap-not-paid/swap-not-paid.page.scss","./src/app/dashboard/pesuswap/swap-edit/swap-edit.component.scss","./src/app/dashboard/pesuswap/send-swap-request/send-swap-request.component.ts","./src/app/dashboard/pesuswap/swap/swap.component.scss","./src/app/dashboard/pesuswap/swap-notifications/swap-notifications.page.scss","./src/app/dashboard/pesuswap/delete/delete.component.ts","./src/app/dashboard/pesuswap/directives/scroll-vanish.directive.ts","./src/app/dashboard/pesuswap/swap-notifications/swap-notifications.page.html","./src/app/dashboard/pesuswap/archive/archive.component.scss","./src/app/dashboard/pesuswap/send-swap-request/send-swap-request.component.html","./src/app/dashboard/pesuswap/archive-swap/archive-swap.component.scss","./src/app/dashboard/pesuswap/delete/delete.component.html","./src/app/dashboard/pesuswap/swap-menu/swap-menu.component.ts","./src/app/dashboard/pesuswap/paid-modal/paid-modal.component.ts","./src/app/dashboard/pesuswap/swap-menu-option/swap-menu-option.component.scss","./src/app/dashboard/pesuswap/archive/archive.component.ts","./src/app/dashboard/pesuswap/send-swap-request/send-swap-request.component.scss","./src/app/dashboard/pesuswap/swap/swap.component.html","./src/app/dashboard/pesuswap/swap/swap.component.ts","./src/app/dashboard/pesuswap/swap-not-paid/swap-not-paid.page.html","./src/app/dashboard/pesuswap/swap-notifications/swap-notifications.page.ts","./src/app/dashboard/pesuswap/swap-not-paid/swap-not-paid.page.ts","./src/app/dashboard/pesuswap/archive-swap/archive-swap.component.ts","./src/app/dashboard/pesuswap/pesuswap.page.html","./src/app/dashboard/pesuswap/delete/delete.component.scss","./src/app/dashboard/pesuswap/swap-edit/swap-edit.component.ts","./src/app/dashboard/pesuswap/pesuswap.page.ts","./src/app/dashboard/pesuswap/archive/archive.component.html","./src/app/dashboard/pesuswap/swap-menu-option/swap-menu-option.component.ts","./src/app/dashboard/pesuswap/swap-edit/swap-edit.component.html","./src/app/dashboard/pesuswap/paid-modal/paid-modal.component.scss","./src/app/dashboard/pesuswap/archive-swap/archive-swap.component.html","./src/app/dashboard/pesuswap/swap-menu/swap-menu.component.html","./src/app/dashboard/pesuswap/pesuswap.page.scss","./src/app/dashboard/pesuswap/paid-modal/paid-modal.component.html"],"names":[],"mappings":"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","file":"pesuswap-pesuswap-module.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzd2FwLW1lbnUuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<ion-list class=\\\"swap-menu-popover\\\">\\r\\n  <ion-item lines=\\\"none\\\">\\r\\n    <ion-label (click)=\\\"gotoSwapNotPaid()\\\">\\r\\n      {{'PENDING_PESU_SWAP_TEXT' | translate}}\\r\\n    </ion-label>\\r\\n  </ion-item>\\r\\n  <ion-item lines=\\\"none\\\">\\r\\n    <ion-label (click)=\\\"gotoSwapNotifications()\\\">\\r\\n      {{'NOTIFICATION_TEXT' | translate}}\\r\\n    </ion-label>\\r\\n  </ion-item>\\r\\n  <ion-item  *ngIf=\\\"requests.length > 0\\\" lines=\\\"none\\\" (click)=\\\"archiveSwap()\\\" >\\r\\n    <ion-label>\\r\\n      {{ 'MENU_ARCHIVE_TEXT' | translate }}\\r\\n    </ion-label>\\r\\n  </ion-item>\\r\\n</ion-list>\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PesuswapPage } from './pesuswap.page';\r\nimport { ScrollVanishDirective } from './directives/scroll-vanish.directive';\r\nimport { SwapMenuComponent } from './swap-menu/swap-menu.component';\r\nimport { SendSwapRequestComponent } from './send-swap-request/send-swap-request.component';\r\nimport { SwapComponent } from './swap/swap.component';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { DeleteComponent } from './delete/delete.component';\r\nimport { SwapEditComponent } from './swap-edit/swap-edit.component';\r\nimport { SwapNotPaidPage } from './swap-not-paid/swap-not-paid.page';\r\nimport { PaidModalComponent } from './paid-modal/paid-modal.component';\r\nimport { SwapMenuOptionComponent } from './swap-menu-option/swap-menu-option.component';\r\nimport { SwapNotificationsPage } from './swap-notifications/swap-notifications.page';\r\nimport { ArchiveComponent } from './archive/archive.component';\r\nimport { ArchiveSwapComponent } from './archive-swap/archive-swap.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PesuswapPage\r\n  },\r\n  {\r\n    path: 'swap-not-paid',\r\n    component: SwapNotPaidPage\r\n  },\r\n  {\r\n    path: 'notifs',\r\n    component: SwapNotificationsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [\r\n    PesuswapPage,\r\n    ScrollVanishDirective,\r\n    SwapMenuComponent,\r\n    SwapMenuOptionComponent,\r\n    ArchiveSwapComponent,\r\n    SendSwapRequestComponent,\r\n    SwapNotificationsPage,\r\n    SwapComponent,\r\n    DeleteComponent,\r\n    ArchiveComponent,\r\n    SwapNotPaidPage,\r\n    SwapEditComponent,\r\n    PaidModalComponent\r\n  ],\r\n  entryComponents: [\r\n    SwapMenuComponent,\r\n    SwapMenuOptionComponent,\r\n    SendSwapRequestComponent,\r\n    ArchiveSwapComponent,\r\n    SwapComponent,\r\n    DeleteComponent,\r\n    ArchiveComponent,\r\n    SwapEditComponent,\r\n    PaidModalComponent\r\n  ]\r\n})\r\nexport class PesuswapPageModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { CurrencyService } from 'src/app/shared/service/currency.service';\r\nimport { UtilService } from 'src/app/shared/service/util.service';\r\nimport { UserService } from '../../user/service/user.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SwapGlobalDataService {\r\n\r\n  currentUserData: any;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private util: UtilService,\r\n    private currency: CurrencyService\r\n  ) {\r\n    this.currentUserData = this.userService.getUserData();\r\n  }\r\n\r\n\r\n  hasCurrency(wallet: any[], currency: string) {\r\n    const currencyData = wallet.filter(data => { return data.device_name === currency });\r\n    return currencyData && currencyData.length > 0 ? true : false;\r\n  }\r\n\r\n  // check if the user can make instant request\r\n  checkRequestCanInstantRequest(currency: any, wallet: any, amount: any, fees: any) {\r\n    let canMakeRequest = true;\r\n    let requestAmount = parseFloat(amount) + parseFloat(fees);\r\n    if (wallet && wallet.length > 0 && this.hasCurrency(wallet, currency)) {\r\n      wallet.forEach(data => {\r\n        if ((parseFloat(data.solde_device) < requestAmount) && (data.device_name === currency)) {\r\n          canMakeRequest = false;\r\n        }\r\n      });\r\n    } else {\r\n      canMakeRequest = false;\r\n    }\r\n\r\n    return canMakeRequest;\r\n  }\r\n\r\n  // get the currencies rates \r\n  getCurrencyRateExchange(swapRates: any, currencyFrom: string, currencyTo: string) {\r\n    let rate = null;\r\n    return new Promise((resolve, reject) => {\r\n      if (swapRates && swapRates.length > 0) {\r\n        swapRates.forEach((currencyData: any) => {\r\n          if (currencyData.currency_from === currencyFrom && currencyData.currency_to === currencyTo) {\r\n            rate = currencyData;\r\n          }\r\n        });\r\n      }\r\n      resolve(rate);\r\n    });\r\n  }\r\n\r\n  // Get exchange fees\r\n  getExchangeFees(swapRates: any, currencyFrom: string, currencyTo: string, amount: number) {\r\n    return new Promise((resolve, reject) => {\r\n      let exchangeFees = 0;\r\n      this.getCurrencyRateExchange(swapRates, currencyFrom, currencyTo).then((rate: any) => {\r\n        if (rate) {\r\n          if (rate.type === \"pourcentage\") {\r\n            exchangeFees = parseFloat(Number(((parseFloat(rate.rate_value) / 100) * amount)).toFixed(2));\r\n          } else {\r\n            exchangeFees = parseFloat(rate.rate_value);\r\n          }\r\n        }\r\n        resolve(exchangeFees);\r\n      });\r\n    });\r\n  }\r\n\r\n  // Get conversion value \r\n  getConversionValue(currencyFrom: string, currencyTo: string, amount: number) {\r\n    return new Promise((resolve, reject) => {\r\n      if (currencyFrom !== currencyTo && amount > 0) {\r\n        this.currency.conversionRateValue(currencyFrom, currencyTo)\r\n          .then((amountConvert: any) => {\r\n            resolve(Number(amountConvert * amount).toFixed(2));\r\n          });\r\n      } else {\r\n        amount ? resolve(amount) : resolve(0);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Get the percentage of succes\r\n  getSuccessPercentage(percent: any) {\r\n    const percentValue = Math.ceil(percent / 20);\r\n    const iteration = [];\r\n    for (let i = 1; i <= percentValue; i++) {\r\n      iteration.push(i);\r\n    }\r\n    return iteration;\r\n  }\r\n\r\n  // get percentage of loss\r\n  getLossPercentage(percent) {\r\n    const percentValue = 5 - Math.ceil(percent / 20);\r\n    const iteration = [];\r\n    for (let i = 1; i <= percentValue; i++) {\r\n      iteration.push(i);\r\n    }\r\n    return iteration;\r\n  }\r\n\r\n  // can delete swap \r\n  canDeleteSwap(request: any) {\r\n    let ican = true;\r\n    if ((request.infos_status_request && (request.infos_status_request.description === 'completed' || request.infos_status_request.description === 'pending'))) {\r\n      ican = false;\r\n    }\r\n    return ican;\r\n  }\r\n\r\n\r\n  // can delete swap \r\n  canEditSwap(request: any) {\r\n    let ican = true;\r\n    if (request.infos_status_request && (request.infos_status_request.description === 'completed' || request.infos_status_request.description === 'pending')) {\r\n      ican = false;\r\n    }\r\n    return ican;\r\n  }\r\n\r\n  //\r\n  canArchiveSwap(request: any) {\r\n    let ican = false;\r\n    if ((request.infos_status_request && (request.infos_status_request.description === 'completed' || request.infos_status_request.description === 'expired'))) {\r\n      ican = true;\r\n    }\r\n    return ican;\r\n  }\r\n\r\n  // can show all requests\r\n  canShowAllRequests(request: any) {\r\n    return (request && request.infos_status_request && request.infos_status_request.description === 'initiated' && parseInt(request.user_id_from) !== parseInt(this.currentUserData.id));\r\n  }\r\n\r\n  // calculate the mathcing exchange fees\r\n  matchingExchageFees(swapRates: any, currencyTo: string, currencyForm: string, requestData: any) {\r\n    return new Promise((resole, reject) => {\r\n      this.getCurrencyRateExchange(swapRates, currencyTo, currencyForm).then((rate: any) => {\r\n        let exchangeFees = 0;\r\n        let i = 0;\r\n        const requestCopy = requestData;\r\n        requestData.forEach(request => {\r\n          if (rate) {\r\n            if (rate.type === \"pourcentage\") {\r\n              exchangeFees = parseFloat(Number(((parseFloat(rate.rate_value) / 100) * parseFloat(request.amount))).toFixed(2));\r\n              requestCopy[i].fees = exchangeFees;\r\n            } else {\r\n              exchangeFees = parseFloat(rate.rate_value);\r\n              requestCopy[i].fees = exchangeFees;\r\n            }\r\n          }\r\n          i++;\r\n        });\r\n        resole(requestCopy);\r\n      });\r\n    });\r\n  }\r\n\r\n  // checf if a request has expired\r\n  hasExpired(request: any) {\r\n    let expired = false;\r\n    if (request && request.temps_restant) {\r\n      if (request.temps_restant[0].heures === 0 && request.temps_restant[0].minutes === 0 && request.temps_restant[0].secondes === 0) {\r\n        expired = true;\r\n      }\r\n    }\r\n    return expired;\r\n  }\r\n\r\n  // Check if a currency is in the user currencies list\r\n  IsCurrencyIn(currencies: any, currency: any) {\r\n    let isIn = false;\r\n    const matchCurrencies = currencies.filter(curr => { return curr.device_name === currency });\r\n    if (matchCurrencies && matchCurrencies.length > 0) {\r\n      isIn = true;\r\n    }\r\n    return isIn;\r\n  }\r\n\r\n  // Get request that match the user Currencies\r\n  filterByUserCurrency(requests: any, currencies: any) {\r\n    const requestMatching = [];\r\n    if (currencies && currencies.length > 0) {\r\n      if (requests && requests.length > 0) {\r\n        requests.forEach(data => {\r\n          if (this.IsCurrencyIn(currencies, data.infos_currency_to.name)) {\r\n            requestMatching.push(data);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    return requestMatching;\r\n  }\r\n\r\n  \r\n  filterALLRequestData(requests: any) {\r\n    let requestsList = this.util.orderByKeyUp(requests, 'updated_at');\r\n    requestsList = requestsList && requestsList.length > 0 ? this.util.orderByKeyUpTime(requestsList, 'temps_restant') : [];\r\n    let formatData = [];\r\n    requestsList.forEach(request => {\r\n      if (this.canShowAllRequests(request)) {\r\n        formatData.push({ select: false, canSelect: true, data: request });\r\n      }\r\n    });\r\n    return formatData;\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzd2FwLW5vdC1wYWlkLnBhZ2Uuc2NzcyJ9 */\";","export default \".swapAmount ion-input {\\n  --padding-top: 20px;\\n  --padding-bottom: 0px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcc3dhcC1lZGl0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlJO0VBQ0ksbUJBQUE7RUFDQSxxQkFBQTtBQUhSIiwiZmlsZSI6InN3YXAtZWRpdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuXHJcbi5zd2FwQW1vdW50IHtcclxuICAgIGlvbi1pbnB1dCB7XHJcbiAgICAgICAgLS1wYWRkaW5nLXRvcDogMjBweDtcclxuICAgICAgICAtLXBhZGRpbmctYm90dG9tOiAwcHg7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG4iXX0= */\";","import { Component, NgZone, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ModalController, NavParams } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ConstantService } from 'src/app/shared/service/constant.service';\r\nimport { CurrencyService } from 'src/app/shared/service/currency.service';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { SwapErrorService } from 'src/app/dashboard/pesuswap/services/swap-error.service';\r\nimport { SwapGlobalDataService } from '../services/swap-global-data.service';\r\nimport { SwapService } from '../services/swap.service';\r\nimport { UiService } from 'src/app/shared/service/ui.service';\r\n\r\n@Component({\r\n  selector: 'app-send-swap-request',\r\n  templateUrl: './send-swap-request.component.html',\r\n  styleUrls: ['./send-swap-request.component.scss'],\r\n})\r\nexport class SendSwapRequestComponent implements OnInit {\r\n\r\n  swapType: any;\r\n  swapTypes: any;\r\n  requestData: any;\r\n  maxAmount: any;\r\n  amountSwap: any;\r\n  swapRequestForm: any;\r\n  currentBalance: any;\r\n  wallet: any;\r\n  canMakeRequest: any;\r\n\r\n  constructor(\r\n    private modatCtrl: ModalController,\r\n    private translate: TranslateService,\r\n    private zone: NgZone,\r\n    private constant: ConstantService,\r\n    private swapData: SwapGlobalDataService,\r\n    private currency: CurrencyService,\r\n    private ui: UiService,\r\n    private navParams: NavParams,\r\n    private swapService: SwapService,\r\n    private error: ErrorService,\r\n    private swapError: SwapErrorService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    this.swapTypes = [];\r\n    this.canMakeRequest = true;\r\n    this.requestData = this.navParams.get('data');\r\n    this.wallet = this.navParams.get('wallet');\r\n    this.maxAmount = this.navParams.get('maxAmount');\r\n    this.amountSwap = this.navParams.get('amountSwap');\r\n    this.initSwapRequestForm(this.requestData);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getSwapTypes();\r\n  }\r\n\r\n  get currencyHave() {\r\n    return this.swapRequestForm.get('currency_from');\r\n  }\r\n\r\n  get currencyWant() {\r\n    return this.swapRequestForm.get('currency_to');\r\n  }\r\n\r\n  get amountHave() {\r\n    return this.swapRequestForm.get('amount_from');\r\n  }\r\n\r\n  get amountWant() {\r\n    return this.swapRequestForm.get('amount_to');\r\n  }\r\n\r\n  get exchangeRate() {\r\n    return this.swapRequestForm.get('exchange_rate');\r\n  }\r\n\r\n  get fees() {\r\n    return this.swapRequestForm.get('fees');\r\n  }\r\n  \r\n  get type_swapId() {\r\n    return this.swapRequestForm.get('type_swap_id');\r\n  }\r\n\r\n  // Init the swap request form\r\n  initSwapRequestForm(data: any) {\r\n    this.swapRequestForm = this.fb.group({\r\n      currency_from: [data.currency_from, Validators.required],\r\n      currency_to: [data.currency_to, Validators.required],\r\n      amount_from: [data.amount_from, Validators.required],\r\n      amount_to: [data.amount_to, Validators.required],\r\n      exchange_from: [{ value: `${1} ${data.currency_from} : `, disabled: true }],\r\n      exchange_rate: [data.exchange_rate, Validators.required],\r\n      fees: [data.fees, Validators.required],\r\n      type_swap_id: [data.type_swap_id, Validators.required],\r\n    });\r\n    this.checkRequestCanInstantRequest(this.swapRequestForm.value.currency_from);\r\n  }\r\n\r\n  // check if the user can make instant request\r\n  checkRequestCanInstantRequest(currency: any) {\r\n    this.canMakeRequest = this.swapData.checkRequestCanInstantRequest(currency,this.wallet,this.swapRequestForm.value.amount_from,this.swapRequestForm.value.fees);\r\n  }\r\n\r\n  // Update the exchange rate\r\n  updateExchangeRate(rate: any) {\r\n    if (rate > 0) {\r\n      let amountTo = 0;\r\n      amountTo = parseFloat(rate) * parseFloat(this.swapRequestForm.value.amount_from);\r\n      this.swapRequestForm.get('amount_to').setValue(Number(amountTo).toFixed(2));\r\n    } else {\r\n      this.swapRequestForm.get('amount_to').setValue(Number(0).toFixed(2));\r\n    }\r\n  }\r\n\r\n  // close modal\r\n  closeAddMember(ans?: any) {\r\n    this.modatCtrl.dismiss(ans, 'cancel');\r\n  }\r\n\r\n  // Get the swap type\r\n  getType(type: string) {\r\n    return this.constant.getTypeSwap(type);\r\n  }\r\n\r\n  // Get the list of type of swap\r\n  getSwapTypes() {\r\n    this.swapService.getAllSwapType()\r\n      .subscribe((reponse: any) => {\r\n        if (reponse && reponse.type_swap) {\r\n          this.zone.run(() => {\r\n            this.swapTypes = reponse.type_swap;\r\n          });\r\n          setTimeout(() => {\r\n            this.swapType = this.canMakeRequest ? 1 : 2;\r\n          }, 500);\r\n        }\r\n      }, error => {\r\n        if (error && error.error && error.error.message === \"error\") {\r\n          if (error && error.error && error.error.user_not_found) {\r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === 'OK') {\r\n                this.getSwapTypes();\r\n              }\r\n            });\r\n          } else {\r\n            this.swapError.manageWalletError(error);\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  // response with max amount\r\n  reponseWithMaxAmount() {\r\n    this.swapService.getSwapRate().subscribe((data: any) => {\r\n      if (data && data.swap_rate && data.swap_rate.length > 0 && this.maxAmount > 0) {\r\n        let exchangeFees = 0;\r\n        data.swap_rate.forEach((currencyData: any) => {\r\n          if (currencyData.currency_from === this.swapRequestForm.value.currency_from && currencyData.currency_to === this.swapRequestForm.value.currency_to) {\r\n            const rate = currencyData;\r\n            if (rate) {\r\n              if (rate.type === \"pourcentage\") {\r\n                exchangeFees = (parseFloat(rate.rate_value) / 100) * parseFloat(this.maxAmount);\r\n              } else {\r\n                exchangeFees = parseFloat(rate.rate_value);\r\n              }\r\n            }\r\n          }\r\n        });\r\n        this.translate.get(['SOLDE_WALLET_IS_NOT_SUFFICIENT', 'MAX_SWAP_AMOUNT_MSG']).subscribe(trans => {\r\n          this.ui.presentToast(`${trans.SOLDE_WALLET_IS_NOT_SUFFICIENT}. ${trans.MAX_SWAP_AMOUNT_MSG}  ${Number(parseFloat(this.maxAmount) - exchangeFees).toFixed(2)}`);\r\n        });\r\n        const param = this.swapRequestForm.value;\r\n        param.fees = Number(exchangeFees).toFixed(2);\r\n        param.amount_from = Number(parseFloat(this.maxAmount) - exchangeFees).toFixed(2);\r\n\r\n        this.currency.conversionRateValue(param.currency_from, param.currency_to).then((rate: any) => {\r\n          // set the conversion rate value\r\n          param.exchange_rate = rate;\r\n          param.amount_to = Number(parseFloat(param.amount_from) * parseFloat(rate)).toFixed(2);\r\n          param.message = 'retry-request';\r\n          this.modatCtrl.dismiss(param, 'cancel');\r\n        });\r\n\r\n      } else {\r\n        this.translate.get(['SOLDE_WALLET_IS_NOT_SUFFICIENT', 'MAX_SWAP_AMOUNT_MSG']).subscribe(trans => {\r\n          this.ui.presentToast(`${trans.SOLDE_WALLET_IS_NOT_SUFFICIENT}. ${trans.MAX_SWAP_AMOUNT_MSG}  ${this.maxAmount}`);\r\n          this.modatCtrl.dismiss('make-request', 'cancel');\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // Make a swap request\r\n  makeSwapRequest() {\r\n    const swapData = this.swapRequestForm.value;\r\n    swapData.type_swap_id = this.swapType;\r\n    this.translate.get('MAKE_SWAP_REQUEST_TEXT').subscribe(trans => {\r\n      this.ui.presentLoading(trans);\r\n    });\r\n    this.swapService.makeSwapRequest(swapData)\r\n      .subscribe((reponse: any) => {\r\n        this.ui.dismissLoading();\r\n        if (reponse && reponse.message === \"success\") {\r\n          this.translate.get('MAKE_SWAP_SUCCESS_TEXT').subscribe(trans => {\r\n            this.ui.presentToast(trans);\r\n          });\r\n          this.closeAddMember('make-request');\r\n        }\r\n      }, error => {\r\n     \r\n        if (error && error.error && error.error.message === \"error\") {\r\n\r\n          if (error && error.error && error.error.solde_wallet_is_not_sufficient) {\r\n            this.ui.dismissLoading();\r\n            this.reponseWithMaxAmount();\r\n          } else if (error && error.error && error.error.user_not_found) {\r\n            this.error.renewSession().then((data: any) => {\r\n              this.ui.dismissLoading();\r\n              if (data && data.result === \"OK\") {\r\n                this.makeSwapRequest();\r\n              }\r\n            });\r\n          } else {\r\n            this.ui.dismissLoading();\r\n            this.swapError.manageWalletError(error);\r\n          }\r\n        } else {\r\n          this.ui.dismissLoading();\r\n          this.error.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzd2FwLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzd2FwLW5vdGlmaWNhdGlvbnMucGFnZS5zY3NzIn0= */\";","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NavParams, PopoverController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { SwapErrorService } from 'src/app/dashboard/pesuswap/services/swap-error.service';\r\nimport { SwapService } from '../services/swap.service';\r\nimport { UiService } from 'src/app/shared/service/ui.service';\r\n\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.scss'],\r\n})\r\nexport class DeleteComponent implements OnInit {\r\n\r\n  @Input() requestData: any;\r\n\r\n  constructor(\r\n    public popoverController: PopoverController,\r\n    private swapService: SwapService,\r\n    private translate: TranslateService,\r\n    private ui: UiService,\r\n    private swapError: SwapErrorService,\r\n    private errorService: ErrorService,\r\n    private navParams: NavParams\r\n  ) { \r\n      this.requestData = this.navParams.get('data');\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  close(ans ?: any) {\r\n    this.popoverController.dismiss(ans, null);\r\n  }\r\n\r\n  // Delete the swap request\r\n  deleteSwap() {\r\n    const swapData = { swap_request_id : this.requestData.swap_request_id};\r\n    this.translate.get('M_DELETE_LOADING').subscribe(trans => {\r\n      this.ui.presentLoading(trans);\r\n    });\r\n    this.swapService.deleteSwapRequest(swapData)\r\n      .subscribe((reponse: any) => {\r\n        this.ui.dismissLoading();\r\n        if (reponse && reponse.message ===\"success\") {\r\n            this.close('deleted');\r\n            this.translate.get('SWAP_REQUEST_DELETE_TEXT').subscribe(trans => {\r\n              this.ui.presentToast(trans);\r\n            });\r\n        }\r\n      }, error => {\r\n       \r\n        if (error && error.error && error.error.message === \"error\") {\r\n          if (error && error.error && error.error.user_not_found) {\r\n              this.errorService.renewSession().then((data: any) => {\r\n                    this.ui.dismissLoading();\r\n                    if (data && data.result === \"OK\") {\r\n                        this.deleteSwap();\r\n                    } else {\r\n                      this.close();\r\n                    }\r\n              });\r\n          } else {\r\n            this.close();\r\n            this.ui.dismissLoading();\r\n            this.swapError.manageWalletError(error);\r\n          }\r\n        } else {\r\n          this.close();\r\n          this.ui.dismissLoading();\r\n            this.errorService.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","import { Directive, Input, ElementRef, Renderer2, OnInit } from \"@angular/core\";\r\nimport { DomController } from \"@ionic/angular\";\r\n\r\n@Directive({\r\n  selector: \"[myScrollVanish]\"\r\n})\r\nexport class ScrollVanishDirective implements OnInit {\r\n  @Input(\"myScrollVanish\") scrollArea;\r\n\r\n  private hidden: boolean = false;\r\n  private triggerDistance: number = 20;\r\n\r\n  constructor(\r\n    private element: ElementRef,\r\n    private renderer: Renderer2,\r\n    private domCtrl: DomController\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.initStyles();\r\n\r\n    this.scrollArea.ionScroll.subscribe(scrollEvent => {\r\n      let delta = scrollEvent.detail.deltaY;\r\n\r\n    /*   if (scrollEvent.detail.currentY === 0 && this.hidden) {\r\n        this.show();\r\n      } else */\r\n       if (!this.hidden && delta > this.triggerDistance) {\r\n        this.hide();\r\n      } else if (this.hidden && delta < -this.triggerDistance) {\r\n        this.show();\r\n      }\r\n    });\r\n  }\r\n\r\n  initStyles() {\r\n    this.domCtrl.write(() => {\r\n      this.renderer.setStyle(\r\n        this.element.nativeElement,\r\n        \"transition\",\r\n        \"0.2s linear\"\r\n      );\r\n      this.renderer.setStyle(this.element.nativeElement, \"height\", \"60px\");\r\n    });\r\n  }\r\n\r\n  hide() {\r\n    this.domCtrl.write(() => {\r\n      this.renderer.setStyle(this.element.nativeElement, \"min-height\", \"0px\");\r\n      this.renderer.setStyle(this.element.nativeElement, \"height\", \"0px\");\r\n      this.renderer.setStyle(this.element.nativeElement, \"opacity\", \"0\");\r\n      this.renderer.setStyle(this.element.nativeElement, \"padding\", \"0\");\r\n    });\r\n\r\n    this.hidden = true;\r\n  }\r\n\r\n  show() {\r\n    this.domCtrl.write(() => {\r\n      this.renderer.setStyle(this.element.nativeElement, \"height\", \"60px\");\r\n      this.renderer.removeStyle(this.element.nativeElement, \"opacity\");\r\n      this.renderer.removeStyle(this.element.nativeElement, \"min-height\");\r\n      this.renderer.removeStyle(this.element.nativeElement, \"padding\");\r\n    });\r\n\r\n    this.hidden = false;\r\n  }\r\n}","export default \"<ion-header>\\r\\n  <ion-toolbar class=\\\"with-logo2\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button color=\\\"primary\\\" defaultHref=\\\"/dashboard/pesuswap\\\"></ion-back-button>\\r\\n    </ion-buttons> \\r\\n    <ion-title class=\\\"ion-text-center title-md-right\\\">\\r\\n        <ion-img class=\\\"logo\\\" [src]=\\\"'assets/logo-toupesu.svg'\\\"></ion-img>\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar class=\\\"ion-text-center subtitle ion-padding\\\">\\r\\n    <ion-title>{{ 'NOTIFICATION_TEXT' | translate }}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"notifications\\\">\\r\\n  <p class=\\\"ion-text-center\\\"  *ngIf=\\\"loading\\\">\\r\\n    <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n  </p>\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refreSher($event)\\\">\\r\\n    <ion-refresher-content\\r\\n      pullingIcon=\\\"reload-outline\\\"\\r\\n      refreshingSpinner=\\\"circles\\\"\\r\\n      refreshingText=\\\"{{ 'M_REFRESHING_TEXT' | translate }}\\\">\\r\\n    </ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n\\r\\n  <ion-grid>\\r\\n\\r\\n    <ion-row class=\\\"notification\\\" *ngFor=\\\"let notif of notifications\\\">\\r\\n      <ion-col>\\r\\n        <ion-card class=\\\"ion-no-margin\\\">\\r\\n          <ion-item lines=\\\"none\\\">\\r\\n            <ion-icon color=\\\"primary\\\" name=\\\"text\\\" slot=\\\"start\\\"></ion-icon>\\r\\n            <ion-label> {{notif.titre  }}</ion-label>\\r\\n            <span slot=\\\"end\\\"><small>{{notif.created_at ? notif.created_at.split(' ')[0] : '' }}</small></span>\\r\\n          </ion-item>        \\r\\n          <ion-card-content>\\r\\n            {{ notif.description  }}\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n  <div  *ngIf=\\\"notifications && notifications.length === 0 && !loading\\\">\\r\\n    <p  class=\\\"ion-text-center\\\"> {{ 'NOTIFICATIONS_MESSAGE' | translate }}</p>\\r\\n  </div>\\r\\n\\r\\n  <ion-infinite-scroll threshold=\\\"250px\\\" (ionInfinite)=\\\"infinteScrollData($event)\\\">\\r\\n    <ion-infinite-scroll-content\\r\\n      loadingSpinner=\\\"bubbles\\\"\\r\\n      loadingText=\\\"{{ 'M_LOADING_MORE_DATA' | translate }}\\\">\\r\\n    </ion-infinite-scroll-content>\\r\\n  </ion-infinite-scroll>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcmNoaXZlLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title class=\\\"ion-text-center ion-text-wrap\\\">{{ 'SEND_SWAP_REQUEST' | translate }}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding send-swap-request\\\">\\r\\n  <p>\\r\\n    {{ 'REQUEST_TEXT_1' | translate}} {{ swapRequestForm.value.currency_from }}\\r\\n    {{ 'TO_TEXT' | translate }} {{ swapRequestForm.value.currency_to }} {{ 'REQUEST_TEXT_2' | translate }} :\\r\\n  </p>\\r\\n  <p>\\r\\n    <b>\\r\\n      <ion-text color=\\\"warning\\\">{{ swapRequestForm.value.amount_from }}\\r\\n        {{ swapRequestForm.value.currency_from }}\\r\\n      </ion-text>\\r\\n      <ion-icon name=\\\"arrow-forward\\\"></ion-icon>\\r\\n      <ion-text color=\\\"primary\\\">{{ swapRequestForm.value.amount_to }}\\r\\n        {{swapRequestForm.value.currency_to }}\\r\\n      </ion-text>\\r\\n    </b>\\r\\n  </p>\\r\\n\\r\\n  <form [formGroup]=\\\"swapRequestForm\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <p> {{'EXCHANGE_RATE' | translate }} :</p>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row class=\\\"swapform\\\">\\r\\n        <ion-col size=\\\"4\\\" class=\\\"ion-align-items-stretch\\\">\\r\\n          <ion-item lines=\\\"none\\\" class=\\\"swapamount\\\">\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"exchange_from\\\"></ion-input>\\r\\n          </ion-item>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"5\\\" class=\\\"ion-align-items-stretch\\\">\\r\\n          <ion-item class=\\\"swapamount\\\">\\r\\n            <ion-input (ionChange)=\\\"updateExchangeRate(swapRequestForm.value.exchange_rate)\\\" type=\\\"number\\\" formControlName=\\\"exchange_rate\\\" required>\\r\\n            </ion-input>\\r\\n          </ion-item>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"3\\\" class=\\\"ion-align-items-stretch\\\">\\r\\n          <ion-item lines=\\\"none\\\" class=\\\"swapamount\\\">\\r\\n            {{swapRequestForm.value.currency_to}}\\r\\n          </ion-item>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </form>\\r\\n\\r\\n  <p>\\r\\n    {{'MATCHING_FEES_TEXT' | translate }}: {{swapRequestForm.value.fees}} {{swapRequestForm.value.currency_from}} <br />\\r\\n   <!--  {{ 'SWAP_TOTAL_AMOUNT' | translate }} : {{ amountSwap }} {{swapRequestForm.value.currency_from}} -->\\r\\n  </p>\\r\\n  <ion-item>\\r\\n    <ion-label>{{ 'SWAP_TYPE_TEXT' | translate }}</ion-label>\\r\\n    <ion-select [(ngModel)]=\\\"swapType\\\" ngModelOptions=\\\"{standalone: true}\\\">\\r\\n      <ion-select-option [value]=\\\"type.id\\\" *ngFor=\\\"let type of swapTypes\\\">{{ getType(type.description) }}\\r\\n      </ion-select-option>\\r\\n    </ion-select>\\r\\n  </ion-item>\\r\\n  <p class=\\\"ion-padding-vertical\\\" *ngIf=\\\"swapType === 1 && canMakeRequest\\\" [innerHTML]=\\\"'INSTANT_SWAP_DESCRIPTION' | translate\\\">\\r\\n  </p>\\r\\n\\r\\n  <p class=\\\"ion-padding-vertical\\\" *ngIf=\\\"swapType === 1 && !canMakeRequest\\\">\\r\\n    {{ 'CANT_MAKE_INSTANT_SWAP_DESCRIPTION' | translate : {balance : (amountSwap + ' ' + swapRequestForm.value.currency_from) } }}\\r\\n  </p>\\r\\n\\r\\n  <p class=\\\"ion-padding-vertical\\\" *ngIf=\\\"swapType === 2\\\" [innerHTML]=\\\"'DELAYED_SWAP_DESCRIPTION' | translate\\\">\\r\\n  </p>\\r\\n  <p class=\\\"ion-padding-vertical\\\"><strong>{{ 'EXPIRED_REQUEST_TEXT' | translate }}</strong></p>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"ion-padding ion-text-center\\\">\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"6\\\">\\r\\n        <ion-button expand=\\\"full\\\" color=\\\"warning\\\" class=\\\"ion-text-uppercase\\\" shape=\\\"round\\\" (click)=\\\"makeSwapRequest()\\\"\\r\\n          [disabled]=\\\"!swapType || swapRequestForm.invalid || (swapType === 1 && !canMakeRequest)\\\">\\r\\n          {{ 'SEND_TEXT' | translate }}\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"6\\\">\\r\\n        <ion-button expand=\\\"full\\\" fill=\\\"outline\\\" color=\\\"warning\\\" class=\\\"ion-text-uppercase\\\" shape=\\\"round\\\"\\r\\n          (click)=\\\"closeAddMember()\\\">\\r\\n          {{ 'CANCEL_TEXT' | translate }}\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-footer>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcmNoaXZlLXN3YXAuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<ion-grid>     \\r\\n  <ion-row>\\r\\n    <ion-col>\\r\\n      <h4>{{ 'DELETE_SWAP_TEXT' | translate }}</h4> \\r\\n      <p> {{ 'DELETE_SWAP_MESSAGE' | translate }} <br/>\\r\\n        <b>\\r\\n        <ion-text color=\\\"warning\\\">{{requestData.amount_from}} {{requestData.infos_currency_from.name}}</ion-text> \\r\\n        <ion-icon name=\\\"arrow-forward\\\"></ion-icon> \\r\\n        <ion-text color=\\\"primary\\\">{{requestData.amount_to}} {{requestData.infos_currency_to.name}}</ion-text>\\r\\n      </b>\\r\\n      </p>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  <ion-row>\\r\\n    <ion-col class=\\\"ion-text-center\\\">\\r\\n      <ion-button color=\\\"warning\\\" fill=\\\"outline\\\" (click)=\\\"close()\\\">{{ 'NO_TEXT' | translate }}</ion-button>\\r\\n    </ion-col>\\r\\n    <ion-col class=\\\"ion-text-center\\\">\\r\\n      <ion-button color=\\\"warning\\\" (click)=\\\"deleteSwap()\\\">{{'YES_TEXT' | translate }}</ion-button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-grid>\";","import { Component, OnInit } from '@angular/core';\r\nimport {  ModalController, NavParams, PopoverController } from '@ionic/angular';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { SwapErrorService } from 'src/app/dashboard/pesuswap/services/swap-error.service';\r\nimport { ArchiveComponent } from '../archive/archive.component';\r\nimport { DeleteComponent } from '../delete/delete.component';\r\nimport { SwapGlobalDataService } from '../services/swap-global-data.service';\r\nimport { SwapService } from '../services/swap.service';\r\nimport { SwapEditComponent } from '../swap-edit/swap-edit.component';\r\nimport { EventService } from 'src/app/shared/service/events.service';\r\n\r\n@Component({\r\n  selector: 'app-swap-menu',\r\n  templateUrl: './swap-menu.component.html',\r\n  styleUrls: ['./swap-menu.component.scss'],\r\n})\r\nexport class SwapMenuComponent implements OnInit {\r\n\r\n  curentParams: any;\r\n  wallet: any;\r\n\r\n  constructor(\r\n    public popoverController: PopoverController,\r\n    private swapService: SwapService,\r\n    private swapError: SwapErrorService,\r\n    private swapData: SwapGlobalDataService,\r\n    private event: EventService,\r\n    public modatCtrl: ModalController,\r\n    private navParams: NavParams,\r\n    private errorService: ErrorService\r\n  ) {\r\n    this.curentParams = this.navParams.get('data');\r\n    this.wallet = this.navParams.get('wallet');\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n\r\n  // Close popover\r\n  close() {\r\n    this.popoverController.dismiss();\r\n  }\r\n\r\n  // Delete the swap request\r\n  async onDeletePopover() {\r\n    this.close();\r\n    const popover = await this.popoverController.create({\r\n      component: DeleteComponent,\r\n      cssClass: 'delete-popover',\r\n      componentProps: {\r\n        data: this.curentParams\r\n      }\r\n    });\r\n\r\n    popover.onDidDismiss().then((ans) => {\r\n      if (ans && ans.data === \"deleted\") {\r\n        this.event.publish('update-request');\r\n       }\r\n    });\r\n    return await popover.present();\r\n  }\r\n\r\n    // can delete swap \r\n    canDeleteSwap(request: any) {\r\n      return this.swapData.canDeleteSwap(request);\r\n    }\r\n  \r\n    // can delete swap \r\n    canEditSwap(request: any) {\r\n      return this.swapData.canEditSwap(request);\r\n    }\r\n\r\n    // can archive the swap\r\n    canArchiveSwap(request: any) {\r\n      return this.swapData.canArchiveSwap(request);\r\n    }\r\n\r\n  // disable swap edition\r\n  disableSwapEdition() {\r\n    this.swapService.disableSwapEdition(this.curentParams.swap_request_id, 1).subscribe(reponse => {\r\n    }, error => {\r\n      if (error && error.error && error.error.message === 'error') {\r\n        if (error.error.user_not_found) {\r\n          this.errorService.renewSession().then((data: any) => {\r\n            if (data && data.result === \"OK\") {\r\n              this.disableSwapEdition();\r\n            }\r\n          });\r\n        } else {\r\n          this.swapError.manageWalletError(error);\r\n        }\r\n      } else {\r\n        this.errorService.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Edit swap modal\r\n  onEditSwapModal() {\r\n    this.disableSwapEdition();\r\n    this.close();\r\n    this.modatCtrl\r\n      .create({\r\n        component: SwapEditComponent,\r\n        componentProps: {\r\n          data: this.curentParams,\r\n          wallet: this.wallet \r\n        }\r\n      })\r\n      .then(modalEl => {\r\n        modalEl.present();\r\n        modalEl.onDidDismiss().then((ans: any) => {\r\n          // update change\r\n          if (ans && ans.data === \"updated\") {\r\n              this.event.publish('update-request');\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  // Archive the swap\r\n  async onArchivePopover() {\r\n    this.close();\r\n    const popover = await this.popoverController.create({\r\n      component: ArchiveComponent,\r\n      cssClass: 'delete-popover',\r\n      componentProps: {\r\n        data: this.curentParams\r\n      }\r\n    });\r\n\r\n    popover.onDidDismiss().then((ans) => {\r\n      if (ans && ans.data === \"archived\") {\r\n        this.event.publish('update-request');\r\n       }\r\n    });\r\n    return await popover.present();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ModalController, NavParams } from '@ionic/angular';\r\nimport { EventService } from 'src/app/shared/service/events.service';\r\n\r\n@Component({\r\n  selector: 'app-paid-modal',\r\n  templateUrl: './paid-modal.component.html',\r\n  styleUrls: ['./paid-modal.component.scss'],\r\n})\r\nexport class PaidModalComponent implements OnInit {\r\n\r\n  \r\n  @Input() exchange: string;\r\n  @Input() amount: number;\r\n  swapData: any;\r\n\r\n  constructor(\r\n    private modatCtrl: ModalController,\r\n    private event: EventService,\r\n    private params: NavParams\r\n  ) {\r\n      this.swapData = this.params.get('data');\r\n      this.event.subscribe('modal-close', () => {\r\n          this.closeContribute();\r\n      });\r\n   }\r\n\r\n  ngOnInit() {}\r\n\r\n  closeContribute() {\r\n    this.modatCtrl.dismiss(null, 'cancel');\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzd2FwLW1lbnUtb3B0aW9uLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NavParams, PopoverController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { SwapErrorService } from 'src/app/dashboard/pesuswap/services/swap-error.service';\r\nimport { SwapService } from '../services/swap.service';\r\nimport { UiService } from 'src/app/shared/service/ui.service';\r\n\r\n@Component({\r\n  selector: 'app-archive',\r\n  templateUrl: './archive.component.html',\r\n  styleUrls: ['./archive.component.scss'],\r\n})\r\nexport class ArchiveComponent implements OnInit {\r\n\r\n  @Input() requestData: any;\r\n\r\n  constructor(\r\n    public popoverController: PopoverController,\r\n    private swapService: SwapService,\r\n    private translate: TranslateService,\r\n    private ui: UiService,\r\n    private swapError: SwapErrorService,\r\n    private errorService: ErrorService,\r\n    private navParams: NavParams\r\n  ) { \r\n      this.requestData = this.navParams.get('data');\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  // close popover\r\n  close(ans ?: any) {\r\n    this.popoverController.dismiss(ans, null);\r\n  }\r\n\r\n  // Archive the swap request\r\n  archiveSwap() {\r\n    const swapData = {list_swap_request_id : [{ swap_request_id : this.requestData.swap_request_id}]};\r\n    this.translate.get('ARCHIVE_PROCESSING').subscribe(trans => {\r\n      this.ui.presentLoading(trans);\r\n    });\r\n    this.swapService.archiveSwapData(swapData)\r\n      .subscribe((reponse: any) => {\r\n        this.ui.dismissLoading();\r\n        if (reponse && reponse.message ===\"success\") {\r\n            this.close('archived');\r\n            this.translate.get('SWAP_REQUEST_ARCHIVE_TEXT').subscribe(trans => {\r\n              this.ui.presentToast(trans);\r\n            });\r\n        }\r\n      }, error => {\r\n       \r\n        if (error && error.error && error.error.message === \"error\") {\r\n          if (error && error.error && error.error.user_not_found) {\r\n              this.errorService.renewSession().then((data: any) => {\r\n                    this.ui.dismissLoading();\r\n                    if (data && data.result === \"OK\") {\r\n                        this.archiveSwap();\r\n                    } else {\r\n                      this.close();\r\n                    }\r\n              });\r\n          } else {\r\n            this.close();\r\n            this.ui.dismissLoading();\r\n            this.swapError.manageWalletError(error);\r\n          }\r\n        } else {\r\n          this.close();\r\n          this.ui.dismissLoading();\r\n            this.errorService.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZW5kLXN3YXAtcmVxdWVzdC5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title class=\\\"ion-text-center ion-text-wrap\\\">{{ 'SWAP_VALIDATION' | translate }}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding swap-validation\\\">\\r\\n  <p>\\r\\n    {{ 'SWAP_TEXT_CONFIRMATION_1' | translate }}  {{requestData.request[0].from}} {{ 'SWAP_TEXT_CONFIRMATION_2' | translate }}  {{requestData.request[0].to}} {{ 'SWAP_TEXT_CONFIRMATION_3' | translate }}\\r\\n  </p>\\r\\n  <p>\\r\\n    <b>\\r\\n    <ion-text color=\\\"warning\\\">{{requestData.amountFrom}}</ion-text> \\r\\n    <ion-icon name=\\\"arrow-forward\\\"></ion-icon> \\r\\n    <ion-text color=\\\"primary\\\">{{requestData.amountTo}}</ion-text>\\r\\n    </b>\\r\\n  </p>\\r\\n  <p>\\r\\n   {{ 'EXCHANGE_RATE' | translate }}: 1 {{requestData.request[0].from}} = {{swaprate}} {{requestData.request[0].to}}<br/>\\r\\n   <span *ngIf=\\\"requestData.exchange_rate\\\">{{ 'USER_RATE' | translate }}: 1 {{requestData.request[0].from}} = {{requestData.exchange_rate}} {{requestData.request[0].to}}<br/></span> \\r\\n    {{ 'MATCHING_FEES_TEXT' | translate }}: {{requestData.fees}} {{requestData.request[0].to}} <br/>\\r\\n    {{ 'SWAP_TOTAL_AMOUNT' | translate }} : {{ requestData.amountSwap}} {{requestData.request[0].to}}\\r\\n  </p>\\r\\n  <p>\\r\\n    {{ 'SWAP_TYPE_TEXT' | translate }}: {{ requestData.type === 1 ?  ('INSTANT_TEXT' | translate) : ('DELAYED_TEXT' | translate) }} \\r\\n  </p> \\r\\n\\r\\n  <p *ngIf=\\\"requestData.type === 1 && canMakeRequest\\\" class=\\\"ion-padding-vertical\\\"><strong>\\r\\n    <ion-text color=\\\"danger\\\">\\r\\n    {{ 'INSTANT_SWAP_MESSAGE' | translate}}\\r\\n    </ion-text>    \\r\\n  </strong></p>\\r\\n\\r\\n  <p *ngIf=\\\"!canMakeRequest\\\" class=\\\"ion-no-margin\\\">\\r\\n    <ion-text color=\\\"danger\\\">\\r\\n    {{ 'CANT_MATCH_SWAP_DESCRIPTION' | translate : { balance : (requestData.amountSwap + ' ' + requestData.request[0].to) } }}\\r\\n  </ion-text>\\r\\n  </p>\\r\\n\\r\\n  <p *ngIf=\\\"requestData.type === 2 && canMakeRequest\\\" class=\\\"ion-padding-vertical\\\"><strong>\\r\\n    <ion-text color=\\\"danger\\\">\\r\\n    {{ 'DELAYED_SWAP_MESSAGE' | translate}}\\r\\n    </ion-text>    \\r\\n  </strong></p>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"ion-padding ion-text-center\\\">\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"6\\\">\\r\\n          <ion-button expand=\\\"full\\\" \\r\\n                color=\\\"warning\\\" \\r\\n                [disabled]=\\\"!canMakeRequest\\\"\\r\\n                class=\\\"ion-text-uppercase\\\"\\r\\n                shape=\\\"round\\\" (click)=\\\"matchedSwapRequest()\\\">\\r\\n            {{ 'VALIDATE_TEXT' | translate }}\\r\\n          </ion-button>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"6\\\">\\r\\n          <ion-button expand=\\\"full\\\" \\r\\n                fill=\\\"outline\\\"\\r\\n                color=\\\"warning\\\" \\r\\n                class=\\\"ion-text-uppercase\\\"\\r\\n                shape=\\\"round\\\" (click)=\\\"closeSwap()\\\">\\r\\n            {{ 'CANCEL_TEXT' | translate }}\\r\\n          </ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-footer>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { ModalController, NavParams } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CurrencyService } from 'src/app/shared/service/currency.service';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { SwapErrorService } from 'src/app/dashboard/pesuswap/services/swap-error.service';\r\nimport { SwapGlobalDataService } from '../services/swap-global-data.service';\r\nimport { SwapService } from '../services/swap.service';\r\nimport { UiService } from 'src/app/shared/service/ui.service';\r\n\r\n@Component({\r\n  selector: 'app-swap',\r\n  templateUrl: './swap.component.html',\r\n  styleUrls: ['./swap.component.scss'],\r\n})\r\nexport class SwapComponent implements OnInit {\r\n\r\n  requestData: any;\r\n  swaprate: any;\r\n  wallet: any;\r\n  canMakeRequest: boolean;\r\n\r\n  constructor(\r\n    private modatCtrl: ModalController,\r\n    private translate: TranslateService,\r\n    private currency: CurrencyService,\r\n    private errorService: ErrorService,\r\n    private ui: UiService,\r\n    private swapService: SwapService,\r\n    private swapData: SwapGlobalDataService,\r\n    private navParams: NavParams,\r\n    private swapError: SwapErrorService\r\n  ) {\r\n    this.wallet = this.navParams.get('wallet');\r\n    this.requestData = this.navParams.get('data');\r\n    this.canMakeRequest = true;\r\n    this.checkRequestCanInstantRequest(this.requestData.request[0].to);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getSwapRate();\r\n  }\r\n\r\n  closeSwap(ans?: any) {\r\n    this.modatCtrl.dismiss(ans, 'cancel');\r\n  }\r\n\r\n  // get the swap rate\r\n  getSwapRate() {\r\n    this.currency.conversionRateValue(this.requestData.request[0].from, this.requestData.request[0].to)\r\n      .then(data => {\r\n        this.swaprate = data;\r\n      });\r\n  }\r\n\r\n  // check if the user can make instant request\r\n  checkRequestCanInstantRequest(currency: any) {\r\n    this.canMakeRequest = this.swapData.checkRequestCanInstantRequest(currency,this.wallet,this.requestData.request[0].amount,this.requestData.fees);\r\n  }\r\n\r\n  // Matched swap request\r\n  matchedSwapRequest() {\r\n    const swapData = { list_swap_request_id: this.requestData.request };\r\n    this.translate.get('MAKE_SWAP_REQUEST_TEXT').subscribe(trans => {\r\n      this.ui.presentLoading(trans);\r\n    });\r\n    this.swapService.mathSwapRequest(swapData)\r\n      .subscribe((reponse: any) => {\r\n        this.ui.dismissLoading();\r\n        if (reponse && reponse.message === \"success\") {\r\n\r\n          if (reponse.completed_swap) {\r\n            this.translate.get('MAKE_SWAP_SUCCESS_TEXT').subscribe(trans => {\r\n              this.ui.presentToast(trans);\r\n            });\r\n          } else if (reponse.pending_swap) {\r\n            this.translate.get('PENDING_SUCCESS_TEXT').subscribe(trans => {\r\n              this.ui.presentToast(trans);\r\n            });\r\n          }\r\n\r\n          this.closeSwap('match-request');\r\n        }\r\n      }, error => {\r\n       \r\n        if (error && error.error && error.error.message === \"error\") {\r\n          if (error && error.error && error.error.user_not_found) {\r\n            this.errorService.renewSession().then((data: any) => {\r\n              this.ui.dismissLoading();\r\n              if (data && data.result === \"OK\") {\r\n                this.matchedSwapRequest();\r\n              }\r\n            });\r\n          } else {\r\n            this.ui.dismissLoading();\r\n            this.swapError.manageWalletError(error);\r\n          }\r\n        } else {\r\n          this.ui.dismissLoading();\r\n          this.errorService.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar class=\\\"with-logo2\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button color=\\\"primary\\\" defaultHref=\\\"/dashboard/pesuswap\\\"></ion-back-button>\\r\\n    </ion-buttons> \\r\\n    <ion-title class=\\\"ion-text-center title-md-right\\\">\\r\\n        <ion-img class=\\\"logo\\\" [src]=\\\"'assets/logo-toupesu.svg'\\\"></ion-img>\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar >\\r\\n    <ion-title  class=\\\"ion-text-center\\\">{{ 'PENDING_PESU_SWAP_TEXT' | translate }}</ion-title>      \\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"pesuswap\\\">\\r\\n\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refreSher($event)\\\">\\r\\n    <ion-refresher-content\\r\\n      pullingIcon=\\\"reload-outline\\\"\\r\\n      refreshingSpinner=\\\"circles\\\"\\r\\n      refreshingText=\\\"{{ 'M_REFRESHING_TEXT' | translate }}\\\">\\r\\n    </ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"12\\\">\\r\\n        <ion-list class=\\\"swapwrap\\\">\\r\\n     \\r\\n          <p class=\\\"ion-text-center\\\"  *ngIf=\\\"loading\\\">\\r\\n            <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n          </p>\\r\\n          <ion-item class=\\\"swapitem\\\" *ngFor=\\\"let request of allRequests; let i = index\\\">\\r\\n            <ion-checkbox *ngIf=\\\"request.canSelect\\\" (ionChange)=\\\"checkSelection(i)\\\" [(ngModel)]=\\\"allRequests[i].select\\\" ngModelOptions=\\\"{standalone: true}\\\" color=\\\"primary\\\" slot=\\\"start\\\"></ion-checkbox>\\r\\n            <ion-label>\\r\\n            \\r\\n              <p>                \\r\\n                <span class=\\\"ion-float-left swaprate\\\">\\r\\n                  <ion-text color=\\\"warning\\\">\\r\\n                    <ion-icon name=\\\"star\\\" *ngFor=\\\"let icon of getSuccessPercentage(request.data.pourcentage_reussite)\\\"></ion-icon>\\r\\n                    <ion-icon name=\\\"star-outline\\\" *ngFor=\\\"let icon of getLossPercentage(request.data.pourcentage_reussite)\\\"></ion-icon>\\r\\n                  </ion-text>\\r\\n                </span>\\r\\n                <span class=\\\"ion-float-right\\\"><small>{{ 'EXPIRED_IN_TEXT' | translate }} <b>{{ expiredTime(request.data)}}</b></small></span> \\r\\n              </p>   \\r\\n              <ion-text *ngIf=\\\"request.data && request.data.infos_user_from\\\" color=\\\"dark\\\">\\r\\n                <h2>\\r\\n                  <span> {{ 'INITIATOR_TEXT' | translate }} : </span> <b>{{ request.data.infos_user_from && request.data.infos_user_from.firstname ? request.data.infos_user_from.firstname   : request.data.infos_user_from.lastname ?  request.data.infos_user_from.lastname : ('ANONYM_USER_TEXT' | translate)}}</b>\\r\\n               </h2>\\r\\n             </ion-text>           \\r\\n              <h2>\\r\\n                <ion-text color=\\\"warning\\\">{{ request.data.user_id_from === currentUserData.id ? request.data.amount_from :  request.data.amount_to}} \\r\\n                  {{request.data.user_id_from === currentUserData.id ? request.data.infos_currency_from.name : request.data.infos_currency_to.name }}</ion-text> \\r\\n                <ion-icon [color]=\\\"request.data.user_id_from===currentUserData.id ? 'warning' : ''\\\" name=\\\"arrow-forward\\\"></ion-icon> \\r\\n                <ion-text color=\\\"primary\\\">{{ request.data.user_id_from === currentUserData.id ? request.data.amount_to : request.data.amount_from }}\\r\\n                   {{request.data.user_id_from === currentUserData.id ? request.data.infos_currency_to.name : request.data.infos_currency_from.name }}</ion-text>\\r\\n              </h2>\\r\\n              <p>                \\r\\n                <ion-text color=\\\"dark\\\"><span class=\\\"ion-float-left\\\"> {{request.data.type_swap_id === 1 ? ('INSTANT_TEXT' | translate) : ('DELAYED_TEXT' | translate)}}</span></ion-text>\\r\\n              </p>\\r\\n            </ion-label>\\r\\n          </ion-item>   \\r\\n\\r\\n        </ion-list>\\r\\n      </ion-col>      \\r\\n    </ion-row>        \\r\\n  </ion-grid>\\r\\n\\r\\n  <div  *ngIf=\\\"activeRequests && activeRequests.length === 0 && !loading && !refresh\\\">\\r\\n    <p  class=\\\"ion-padding ion-text-center\\\"> {{ 'PENDING_SWAP_REQUEST_EMPTY_LIST' | translate }}</p>\\r\\n  </div>\\r\\n\\r\\n  <ion-infinite-scroll threshold=\\\"250px\\\" (ionInfinite)=\\\"infinteScrollData($event)\\\">\\r\\n    <ion-infinite-scroll-content\\r\\n      loadingSpinner=\\\"bubbles\\\"\\r\\n      loadingText=\\\"{{ 'M_LOADING_MORE_DATA' | translate }}\\\">\\r\\n    </ion-infinite-scroll-content>\\r\\n  </ion-infinite-scroll>\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"ion-padding ion-text-left\\\" *ngIf=\\\"selectRequests.length > 0\\\">\\r\\n   <div >\\r\\n    <div class=\\\"swap-btn-sommary\\\">\\r\\n      <ion-text color=\\\"dark\\\"><strong>{{ 'GET_TEXT' | translate }}: {{getAmountText}}</strong></ion-text> <br /> {{ 'PAIDTEXT' | translate }}: {{paidAmountText}}\\r\\n    </div> \\r\\n    <ion-fab horizontal=\\\"end\\\" vertical=\\\"bottom\\\" slot=\\\"fixed\\\">\\r\\n      <ion-fab-button color=\\\"warning\\\" (click)=\\\"confirmPin()\\\">\\r\\n        <ion-icon name=\\\"cash\\\"></ion-icon>\\r\\n      </ion-fab-button>\\r\\n    </ion-fab>\\r\\n  </div> \\r\\n</ion-footer>\\r\\n\\r\\n\\r\\n\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { IonInfiniteScroll } from '@ionic/angular';\r\nimport { SwapService } from '../services/swap.service';\r\nimport { UserService } from '../../user/service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-swap-notifications',\r\n  templateUrl: './swap-notifications.page.html',\r\n  styleUrls: ['./swap-notifications.page.scss'],\r\n})\r\nexport class SwapNotificationsPage implements OnInit {\r\n  loading: boolean;\r\n  notifications: any;\r\n  backService: any;\r\n  nbItems: number;\r\n  allData: any;\r\n  currentUser: any;\r\n  filterData: any;\r\n  @ViewChild(IonInfiniteScroll,{static: false}) infiniteScroll: IonInfiniteScroll;\r\n\r\n  constructor(\r\n    private swapService: SwapService,\r\n    private userService: UserService,\r\n    private translate: TranslateService,\r\n    private error: ErrorService\r\n  ) {\r\n    this.notifications = [];\r\n    this.nbItems = 10;\r\n    this.filterData = [];\r\n    this.allData = [];\r\n    this.backService = null;\r\n    this.currentUser = this.userService.getUserData();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loading = true;\r\n    this.getSwapNotifications(null);\r\n  }\r\n\r\n  // format the notification data\r\n  formatNotificationData(notifications: any[]) {\r\n\r\n     notifications.forEach(item => {\r\n      if (item.titre.toString().startsWith('SWAP MATCH COMPLETED')) {\r\n        this.translate.get(['SWAP_MATCH_COMPLETED_TITLE','SWAP_MATCH_COMPLETED_DESC'])\r\n          .subscribe( trans => {\r\n            item.titre = trans.SWAP_MATCH_COMPLETED_TITLE;\r\n            item.description = trans.SWAP_MATCH_COMPLETED_DESC;\r\n          });\r\n      }\r\n\r\n      if (item.titre.toString().startsWith('EXPIRATION PESU SWAP')) {\r\n        this.translate.get(['EXPIRATION_PESU_SWAP_TITLE','EXPIRATION_PESU_SWAP_DESC'])\r\n          .subscribe( trans => {\r\n            item.titre = trans.EXPIRATION_PESU_SWAP_TITLE;\r\n            item.description = trans.EXPIRATION_PESU_SWAP_DESC;\r\n          });\r\n      }\r\n\r\n      if (item.titre.toString().startsWith('SWAP MATCH PENDING')) {\r\n        this.translate.get(['SWAP_MATCH_PENDING_TITLE','SWAP_MATCH_PENDING_DESC'])\r\n          .subscribe( trans => {\r\n            item.titre = trans.SWAP_MATCH_PENDING_TITLE;\r\n            item.description = trans.SWAP_MATCH_PENDING_DESC;\r\n          });\r\n      }\r\n\r\n      if (item.titre.toString().startsWith('REQUETE PESU SWAP')) {\r\n        this.translate.get(['REQUETE_PESU_SWAP_TITLE','REQUETE_PESU_SWAP_DESC'])\r\n          .subscribe( trans => {\r\n            item.titre = trans.REQUETE_PESU_SWAP_TITLE;\r\n            item.description = trans.REQUETE_PESU_SWAP_DESC;\r\n          });\r\n      }\r\n\r\n      if (item.titre.toString().startsWith('MODIFICATION PESU SWAP')) {\r\n        this.translate.get(['MODIFICATION_PESU_SWAP_TITLE','MODIFICATION_PESU_SWAP_DESC'])\r\n          .subscribe( trans => {\r\n            item.titre = trans.MODIFICATION_PESU_SWAP_TITLE;\r\n            item.description = trans.MODIFICATION_PESU_SWAP_DESC;\r\n          });\r\n      }\r\n\r\n      if (item.titre.toString().startsWith('SUPPRESSION PESU SWAP')) {\r\n        this.translate.get(['SUPPRESSION_PESU_SWAP_TITLE','SUPPRESSION_PESU_SWAP_DESC'])\r\n          .subscribe( trans => {\r\n            item.titre = trans.SUPPRESSION_PESU_SWAP_TITLE;\r\n            item.description = trans.SUPPRESSION_PESU_SWAP_DESC;\r\n          });\r\n      }\r\n    \r\n    });\r\n\r\n  }\r\n\r\n  // Get swap notifications\r\n  getSwapNotifications(event) {\r\n    this.swapService.getSwapNotificationsWithId(this.currentUser.id).subscribe((reponse: any) => {\r\n      if (reponse && reponse.notifications) {\r\n        this.formatNotificationData(reponse.notifications);\r\n        this.allData = reponse.notifications;\r\n        this.filterData = this.allData;\r\n        if (this.allData.length > this.nbItems) {\r\n          this.notifications = [];\r\n          for (let i = 0; i < this.nbItems; i++) {\r\n            this.notifications.push(this.allData[this.notifications.length]);\r\n          }\r\n        } else {\r\n          this.notifications = this.allData;\r\n        }\r\n      }\r\n      this.loading = false;\r\n      if (event) {\r\n        setTimeout(() => {\r\n          event.target.complete();\r\n        }, 2000);\r\n      }\r\n    }, error => {\r\n      this.loading = false;\r\n      this.error.manageError(error);\r\n    });\r\n  }\r\n\r\n  // Refresh the list\r\n  refreSher(event) {\r\n    this.infiniteScroll.disabled = false;\r\n    this.getSwapNotifications(event);\r\n  }\r\n\r\n  // Launch the backgroud service\r\n  ionicViewDidEnter() {\r\n    this.backgroundService();\r\n  }\r\n\r\n  // Backgroung service\r\n  backgroundService() {\r\n    this.backService = setInterval(() => {\r\n      this.getSwapNotifications(null);\r\n    }, 300000 + (Math.ceil(Math.random() * 10) + 1) * 1000);\r\n  }\r\n\r\n  // Launch the backgroud service\r\n  ionicViewWillLeave() {\r\n    clearInterval(this.backService);\r\n  }\r\n\r\n  // Infinite scroll data\r\n  infinteScrollData(event) {\r\n    setTimeout(() => {\r\n      for (let i = 0; i < this.nbItems; i++) {\r\n        if (this.notifications.length < this.allData.length) {\r\n          this.notifications.push(this.allData[this.notifications.length]);\r\n  \r\n        } else if (this.notifications.length === this.allData.length ) {\r\n          event.target.disabled = true;\r\n        }\r\n      }\r\n    event.target.complete();\r\n    }, 500);\r\n    \r\n    }\r\n}","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { SwapErrorService } from 'src/app/dashboard/pesuswap/services/swap-error.service';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { SwapService } from '../services/swap.service';\r\nimport { IonInfiniteScroll, ModalController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { PaidModalComponent } from '../paid-modal/paid-modal.component';\r\nimport { ConstantService } from 'src/app/shared/service/constant.service';\r\nimport { SwapGlobalDataService } from '../services/swap-global-data.service';\r\nimport { UiService } from 'src/app/shared/service/ui.service';\r\nimport { UserService } from '../../user/service/user.service';\r\nimport { UtilService } from 'src/app/shared/service/util.service';\r\n\r\n@Component({\r\n  selector: 'app-swap-not-paid',\r\n  templateUrl: './swap-not-paid.page.html',\r\n  styleUrls: ['./swap-not-paid.page.scss'],\r\n})\r\nexport class SwapNotPaidPage implements OnInit {\r\n\r\n  allRequests: any;\r\n  myRequests: any;\r\n  pendingRequests: any;\r\n  activeRequests: any;\r\n  getAmountText: any;\r\n  paidAmountText: any;\r\n  selectRequests: any;\r\n  currentUserData: any;\r\n  amount: any;\r\n  currency: any;\r\n  loading: boolean;\r\n  nbItems: number;\r\n  fees: any\r\n  refresh: boolean;\r\n\r\n  @ViewChild(IonInfiniteScroll, { static: false }) infiniteScroll: IonInfiniteScroll;\r\n\r\n  constructor(\r\n    private ui: UiService,\r\n    private util: UtilService,\r\n    private constant: ConstantService,\r\n    private error: ErrorService,\r\n    private modatCtrl: ModalController,\r\n    private swapService: SwapService,\r\n    private swapData: SwapGlobalDataService,\r\n    private swapError: SwapErrorService,\r\n    private userService: UserService,\r\n    private translate: TranslateService\r\n  ) {\r\n    this.allRequests = [];\r\n    this.myRequests = [];\r\n    this.pendingRequests = [];\r\n    this.nbItems = 10;\r\n    this.loading = true;\r\n    this.refresh = false;\r\n    this.activeRequests = [];\r\n    this.selectRequests = [];\r\n    this.currentUserData = this.userService.getUserData();\r\n    this.amount = 0;\r\n    this.fees = 0;\r\n    this.currency = '';\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAllPendingRequest();\r\n  }\r\n\r\n  // Refresh the list\r\n  refreSher(event) {\r\n    this.infiniteScroll.disabled = false;\r\n    this.getAllPendingRequest(event);\r\n  }\r\n\r\n  // Infinite scroll data\r\n  infinteScrollData(event) {\r\n    setTimeout(() => {\r\n      for (let i = 0; i < this.nbItems; i++) {\r\n        if (this.allRequests.length < this.activeRequests.length) {\r\n          this.allRequests.push(this.activeRequests[this.allRequests.length]);\r\n        } else if (this.allRequests.length === this.activeRequests.length) {\r\n          event.target.disabled = true;\r\n        }\r\n      }\r\n      event.target.complete();\r\n    }, 500);\r\n  }\r\n\r\n  // Get the percentage of succes\r\n  getSuccessPercentage(percent: any) {\r\n    return this.swapData.getSuccessPercentage(percent);\r\n  }\r\n\r\n  // get the expired time\r\n  expiredTime(request: any) {\r\n    return this.constant.expiredTime(request);\r\n  }\r\n\r\n  // get percentage of loss\r\n  getLossPercentage(percent) {\r\n    return this.swapData.getLossPercentage(percent);\r\n  }\r\n\r\n  // can pay request\r\n  canPayRequest(request: any) {\r\n    let ican = true;\r\n    // check if user has matched the request\r\n    if (request.user_id_to && (request.user_id_to === this.currentUserData.id || request.user_id_from === this.currentUserData.id)) { \r\n\r\n      if ((request.infos_status_request && request.infos_status_request.description === 'pending')) {\r\n        if (request && request.user_id_from === this.currentUserData.id) {\r\n          if (request.liste_user && request.liste_user.length > 0) {\r\n            request.liste_user.forEach(user => {\r\n              if (user.direction === 'from' && user.infos_user.user_id === this.currentUserData.id) {\r\n                ican = false\r\n              }\r\n            });\r\n          }\r\n        } else {\r\n          if (request.liste_user && request.liste_user.length > 0) {\r\n            request.liste_user.forEach(user => {\r\n              if (user.direction === 'to' && user.infos_user.user_id === this.currentUserData.id) {\r\n                ican = false\r\n              }\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n        ican = false\r\n      }\r\n    } else {\r\n      ican = false\r\n    }\r\n    return ican;\r\n  }\r\n\r\n  // format pending swap response\r\n  formatPendingSwapReponse(requests: any) {\r\n    this.pendingRequests = this.util.orderByKeyUp(requests, 'updated_at');\r\n    const formatData = [];\r\n    if (this.pendingRequests && this.pendingRequests.length > 0) {\r\n      this.pendingRequests.forEach(request => {\r\n        if (this.canPayRequest(request)) {\r\n          formatData.push({ select: false, canSelect: true, data: request });\r\n        }\r\n      });\r\n    }\r\n    this.activeRequests = formatData;\r\n    if (this.activeRequests.length > this.nbItems) {\r\n      this.allRequests = [];\r\n      for (let i = 0; i < this.nbItems; i++) {\r\n        this.allRequests.push(this.activeRequests[this.allRequests.length]);\r\n      }\r\n    } else {\r\n      this.allRequests = this.activeRequests;\r\n    }\r\n  }\r\n\r\n  //  Get all the pending request\r\n  getAllPendingRequest(event?: any) {\r\n    this.selectRequests = [];\r\n    this.refresh = true;\r\n    this.swapService.getSwapPendingRequest()\r\n      .subscribe((reponse: any) => {\r\n        this.refresh = false;\r\n        if (reponse && reponse.requests) {\r\n          this.formatPendingSwapReponse(reponse.requests);\r\n          this.loading = false;\r\n        }\r\n        if (event) {\r\n          setTimeout(() => {\r\n            event.target.complete();\r\n          }, 2000);\r\n        }\r\n      }, error => {\r\n\r\n        if (event) {\r\n          event.target.complete();\r\n        }\r\n        this.refresh = false;\r\n        this.loading = false;\r\n        if (error && error.error && error.error.message === \"error\") {\r\n          if (error && error.error && error.error.user_not_found) {\r\n            this.loading = true;\r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.getAllPendingRequest(event);\r\n              } else {\r\n                this.loading = false;\r\n              }\r\n            });\r\n          }\r\n        } else {\r\n          this.swapError.manageWalletError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n  // check selection\r\n  checkSelection(index: number) {\r\n    let requestData = [];\r\n    this.getAmountText = '';\r\n    this.paidAmountText = '';\r\n    let getAmount = 0;\r\n    let paidAmount = 0;\r\n    let direction = '';\r\n    let userId = '';\r\n    let currencyForm = '';\r\n    let currencyTo = '';\r\n    let type = 0;\r\n    let position = 0;\r\n    let fees = 0;\r\n\r\n    // Get the current devise and type of request\r\n    this.allRequests.forEach(request => {\r\n      if (position !== index && request.select) {\r\n        currencyForm = request.data.infos_currency_from.name;\r\n        currencyTo = request.data.infos_currency_to.name;\r\n        userId = request.data.user_id_from === this.currentUserData.id ? request.data.user_id_from : request.data.user_id_to;\r\n        type = request.data.type_swap_id;\r\n        direction = request.data.user_id_from === this.currentUserData.id ? 'user_id_from' : 'user_id_to';\r\n      }\r\n      position++;\r\n    });\r\n\r\n    this.allRequests.forEach(request => {\r\n      if (request.select) {\r\n        if (currencyForm === '' && currencyTo === '' && type === 0) {\r\n          currencyForm = request.data.infos_currency_from.name;\r\n          currencyTo = request.data.infos_currency_to.name;\r\n          type = request.data.type_swap_id;\r\n          userId = request.data.user_id_from === this.currentUserData.id ? request.data.user_id_from : request.data.user_id_to;\r\n          direction = request.data.user_id_from === this.currentUserData.id ? 'user_id_from' : 'user_id_to';\r\n        }\r\n\r\n        if ((currencyForm === request.data.infos_currency_from.name) && (currencyTo === request.data.infos_currency_to.name) && (type === request.data.type_swap_id) && (userId === request.data[direction])) {\r\n          requestData.push({ swap_request_id: request.data.swap_request_id, from: currencyForm, to: currencyTo, fees: request.data.fees });\r\n          paidAmount += parseFloat(request.data.amount_from);\r\n          getAmount += parseFloat(request.data.amount_to);\r\n          fees += parseFloat(request.data.fees);\r\n\r\n        } else {\r\n          this.allRequests[index] = { select: false, canSelect: this.allRequests[index].canSelect, data: this.allRequests[index].data };\r\n          this.translate.get(['INSTANT_TEXT', 'DELAYED_TEXT', 'MATCH_TEXT', 'INITIATE_TEXT']).subscribe(trans => {\r\n            this.translate.get('SELECTION_MESSAGE_SWAP_TEXT', {\r\n              from: currencyForm, to: currencyTo, direction: direction === 'user_id_to' ? `${trans.MATCH_TEXT}` : `${trans.INITIATE_TEXT}`,\r\n              type: type === 1 ? `${trans.INSTANT_TEXT}` : `${trans.DELAYED_TEXT}`\r\n            }).subscribe(trans => {\r\n              this.ui.presentToast(trans);\r\n            });\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    this.amount = direction === 'user_id_from' ? parseFloat((paidAmount).toFixed(2)) : parseFloat((getAmount).toFixed(2));\r\n    this.currency = direction === 'user_id_from' ? currencyForm : currencyTo;\r\n    this.fees = fees > 0 ? parseFloat(Number(fees).toFixed(2)) : 0;\r\n\r\n    this.selectRequests = requestData;\r\n    this.getAmountText = direction === 'user_id_from' ? `${Number(getAmount).toFixed(2)} ${currencyTo}` : `${Number(paidAmount).toFixed(2)} ${currencyForm}`;\r\n    this.paidAmountText = direction === 'user_id_from' ? `${Number(paidAmount).toFixed(2)} ${currencyForm}` : `${Number(getAmount).toFixed(2)} ${currencyTo}`;\r\n  }\r\n\r\n\r\n  // open the tontine contribution modal\r\n  selectPaymentMode(pin: any) {\r\n\r\n    const paymentData = {\r\n      title: `${this.paidAmountText} => ${this.getAmountText}`,\r\n      amount: Number(parseFloat(this.amount) + parseFloat(this.fees)).toFixed(2),\r\n      fees: this.fees,\r\n      currency: this.currency,\r\n      list_swap_request_id: this.selectRequests,\r\n      pin: pin\r\n    };\r\n    this.openContribute(paymentData);\r\n\r\n  }\r\n\r\n  // Open the modal\r\n  openContribute(param: any) {\r\n    this.swapService.setCurrentSwapData(param);\r\n    this.modatCtrl\r\n      .create({\r\n        component: PaidModalComponent,\r\n        componentProps: {\r\n          exchange: param.title,\r\n          amount: param.amount,\r\n          data: param\r\n        }\r\n      })\r\n      .then(modalEl => {\r\n        modalEl.present();\r\n        modalEl.onDidDismiss().then(\r\n          (ans) => {\r\n            this.loading = true;\r\n            this.allRequests = [];\r\n            this.getAllPendingRequest();\r\n          }\r\n        );\r\n      });\r\n  }\r\n\r\n  // show the pin confirmation dilaog\r\n  confirmPin() {\r\n    const userPin = this.userService.getUserSecret();\r\n    this.selectPaymentMode(userPin.password);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ModalController, IonInfiniteScroll, NavParams, AlertController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { SwapErrorService } from 'src/app/dashboard/pesuswap/services/swap-error.service';\r\nimport { SwapService } from '../services/swap.service';\r\nimport { UserService } from '../../user/service/user.service';\r\nimport { UiService } from 'src/app/shared/service/ui.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-archive-swap',\r\n  templateUrl: './archive-swap.component.html',\r\n  styleUrls: ['./archive-swap.component.scss'],\r\n})\r\nexport class ArchiveSwapComponent implements OnInit {\r\n\r\n  loading: boolean;\r\n  swapSelected: any;\r\n  filterData: any[];\r\n  listData: any[];\r\n  allData: any[];\r\n  nbItems: number;\r\n  option: boolean;\r\n  param: any;\r\n  currentUserData:any;\r\n  @ViewChild(IonInfiniteScroll, { static: false }) infiniteScroll: IonInfiniteScroll;\r\n\r\n  constructor(\r\n    private modal: ModalController,\r\n    private userService: UserService,\r\n    private alertController: AlertController,\r\n    private swapService: SwapService,\r\n    private translate: TranslateService,\r\n    private swapError: SwapErrorService,\r\n    private errorService: ErrorService,\r\n    private ui: UiService,\r\n    private navParams: NavParams\r\n  ) {\r\n    this.filterData = [];\r\n    this.listData = [];\r\n    this.loading = false;\r\n    this.option = false;\r\n    this.allData = [];\r\n    this.swapSelected = [];\r\n    this.nbItems = 15;\r\n    this.param = this.navParams.get('swaps');\r\n    this.currentUserData = this.userService.getUserData();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData(this.param);\r\n  }\r\n\r\n  // Get all data\r\n  getData(data: any) {\r\n    this.allData = [];\r\n    data.forEach(element => {\r\n      this.allData.push({ select: false, swap_request_id: element.swap_request_id, data: element, name : element.infos_user_from && (element.infos_user_from.firstname || element.infos_user_from.lastname) ? element.infos_user_from.firstname +' '+ element.infos_user_from.lastname  : '' });\r\n    });\r\n    this.filterData = this.allData;\r\n    if (this.allData.length > this.nbItems) {\r\n      for (let i = 0; i < this.nbItems; i++) {\r\n        this.listData.push(this.allData[this.listData.length]);\r\n      }\r\n    } else {\r\n      this.listData = this.allData;\r\n    }\r\n  }\r\n\r\n  // Filter the list of tontines\r\n  searchForInvitation(ev: any) {\r\n    this.infiniteScroll.disabled = false;\r\n    const val = ev.target.value;\r\n    if (val && val.trim() !== '') {\r\n      this.allData = this.filterData.filter((data) => {\r\n        if (data) {\r\n          return (data.name.toLowerCase().indexOf(val.toLowerCase()) > -1);\r\n        }\r\n\r\n      });\r\n      if (this.allData.length > this.nbItems) {\r\n        for (let i = 0; i < this.nbItems; i++) {\r\n          this.listData.push(this.allData[this.listData.length]);\r\n        }\r\n      } else {\r\n        this.listData = this.allData;\r\n      }\r\n    } else {\r\n      this.listData = this.filterData;\r\n    }\r\n  }\r\n\r\n  // select or deselect all tontinies\r\n  selectAll(option: boolean) {\r\n    this.loading = true;\r\n    this.allData.forEach((data, index, arr) => {\r\n      arr[index].select = option ? true : false;\r\n    });\r\n\r\n    this.filterData = this.allData;\r\n\r\n    if (this.allData.length > this.nbItems) {\r\n      for (let i = 0; i < this.nbItems; i++) {\r\n        this.listData.push(this.allData[this.listData.length]);\r\n      }\r\n    } else {\r\n      this.listData = this.allData;\r\n    }\r\n\r\n    // resole after changed pb\r\n    setTimeout(() => {\r\n      this.loading = false;\r\n    }, 200);\r\n  }\r\n\r\n\r\n\r\n  // Infinite scroll data\r\n  infinteScrollData(event) {\r\n    setTimeout(() => {\r\n      for (let i = 0; i < this.nbItems; i++) {\r\n        if (this.listData.length < this.allData.length) {\r\n          this.listData.push(this.allData[this.listData.length]);\r\n        } else if (this.listData.length === this.allData.length) {\r\n          event.target.disabled = true;\r\n        }\r\n      }\r\n      event.target.complete();\r\n    }, 2000);\r\n  }\r\n\r\n\r\n  // close modal\r\n  closeModal(ans?: string ) {\r\n    this.modal.dismiss(ans, 'cancel');\r\n  }\r\n\r\n  // confirm archivation\r\n  confirmArchiveMessage() {\r\n    const messages = [];\r\n    this.translate.get(['ARCHIVE_SWAP_TEXT', 'M_ALL_ARCHIVE_SWAP_MESSAGE', 'CANCEL_TEXT', 'YES_TEXT'])\r\n      .subscribe(trans => {\r\n        messages.push(trans.ARCHIVE_SWAP_TEXT);\r\n        messages.push(trans.M_ALL_ARCHIVE_SWAP_MESSAGE);\r\n        messages.push(trans.CANCEL_TEXT);\r\n        messages.push(trans.YES_TEXT);\r\n        this.archiveMessage(messages);\r\n      });\r\n  }\r\n\r\n  // archive message\r\n  async archiveMessage(translation: string[]) {\r\n\r\n    const alert = await this.alertController.create({\r\n      header: `${translation[0]}`,\r\n      message: `${translation[1]}`,\r\n      buttons: [\r\n        {\r\n          text: `${translation[2]}`,\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n\r\n          }\r\n        }, {\r\n          text: `${translation[3]}`,\r\n          handler: () => {\r\n            // send the archivation answer\r\n\r\n            this.archiveSwap();\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  // update the tontine selected\r\n  updateTontineSelected() {\r\n    this.swapSelected = this.listData.filter(data => { return data.select === true });\r\n  }\r\n\r\n // Archive the swap request\r\n archiveSwap() {\r\n  const swapData = {list_swap_request_id : this.swapSelected};\r\n \r\n  this.translate.get('ARCHIVE_PROCESSING').subscribe(trans => {\r\n    this.ui.presentLoading(trans);\r\n  });\r\n  this.loading = true;\r\n\r\n  this.swapService.archiveSwapData(swapData)\r\n    .subscribe((reponse: any) => {\r\n      this.ui.dismissLoading();\r\n      if (reponse && reponse.message ===\"success\") {\r\n          this.closeModal('archived');\r\n          this.translate.get('SWAP_REQUEST_ARCHIVE_TEXT').subscribe(trans => {\r\n            this.ui.presentToast(trans);\r\n          });\r\n      }\r\n      this.loading = false;\r\n    }, error => {\r\n      \r\n      this.loading = false;\r\n      if (error && error.error && error.error.message === \"error\") {\r\n        if (error && error.error && error.error.user_not_found) {\r\n            this.loading = true;\r\n            this.errorService.renewSession().then((data: any) => {\r\n                  this.ui.dismissLoading();\r\n                  if (data && data.result === \"OK\") {\r\n                      this.archiveSwap();\r\n                  } else {\r\n                    this.loading = false;\r\n                    this.closeModal();\r\n                  }\r\n            });\r\n        } else {\r\n          this.closeModal();\r\n          this.ui.dismissLoading();\r\n          this.swapError.manageWalletError(error);\r\n        }\r\n      } else {\r\n        this.closeModal();\r\n        this.ui.dismissLoading();\r\n          this.errorService.manageError(error);\r\n      }\r\n    }); \r\n}\r\n\r\n}\r\n","export default \"<!-- [myScrollVanish]=\\\"scrollArea\\\"-->\\r\\n<ion-header>\\r\\n  <ion-toolbar class=\\\"with-logo2\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button color=\\\"primary\\\" defaultHref=\\\"/dashboard\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title class=\\\"ion-text-center\\\">\\r\\n        <ion-img class=\\\"logo-arrow-no-right-slot\\\" [src]=\\\"'assets/logo-toupesu.svg'\\\"></ion-img>\\r\\n    </ion-title> \\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button (click)=\\\"gotoPendingRequest($event)\\\">\\r\\n        <ion-icon name=\\\"ellipsis-vertical\\\" color=\\\"primary\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar class=\\\"ion-text-center subtitle\\\">\\r\\n    <ion-title>{{ 'PESU_SWAP_TEXT' | translate }}</ion-title>      \\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar>\\r\\n    <ion-grid>\\r\\n      <p class=\\\"ion-text-center\\\"  *ngIf=\\\"loadingWallet\\\">\\r\\n        <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n      </p>\\r\\n      <ion-row class=\\\"bar-balance\\\" *ngIf=\\\"!loadingWallet\\\">\\r\\n        <ion-col size=\\\"5\\\">\\r\\n          <p class=\\\"bar-balance-title\\\"><small>{{ 'WALLET_BALANCE_TEXT' | translate }}</small></p>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"7\\\">\\r\\n          <p class=\\\"ion-text-right\\\" *ngFor=\\\"let balance of currentBalance\\\"><ion-text color=\\\"primary\\\"><b>{{ balance.solde_device }} {{ balance.device_name }}</b></ion-text></p>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"pesuswap\\\" #scrollArea scrollEvents=\\\"true\\\">\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refreSher($event)\\\">\\r\\n    <ion-refresher-content\\r\\n      pullingIcon=\\\"reload-outline\\\"\\r\\n      refreshingSpinner=\\\"circles\\\"\\r\\n      refreshingText=\\\"{{ 'M_REFRESHING_TEXT' | translate }}\\\">\\r\\n    </ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-label> \\r\\n          <p class=\\\"ion-no-margin\\\">         \\r\\n              {{ 'SWAP_DESCRIPTION_TEXT' | translate }}       \\r\\n          </p>\\r\\n        </ion-label> \\r\\n      </ion-col> \\r\\n    </ion-row>\\r\\n    <ion-row  >\\r\\n      <ion-col size=\\\"12\\\">\\r\\n        <ion-list class=\\\"swapwrap\\\">\\r\\n          <ion-item-divider class=\\\"swapform\\\" sticky=\\\"true\\\">\\r\\n            <form [formGroup]=\\\"swapRequestForm\\\">\\r\\n              <div>\\r\\n                <ion-row >\\r\\n                  <ion-col size=\\\"6\\\" class=\\\"ion-align-items-stretch\\\">\\r\\n                    <p class=\\\"i-have\\\"><b>{{ 'CURRENCY_I_HAVE_TEXT' | translate }}</b></p>\\r\\n                    <ion-select (ionChange)=\\\"updateAmountDestination(swapRequestForm.value.currency_from,swapRequestForm.value.currency_to,'from')\\\" formControlName=\\\"currency_from\\\">\\r\\n                      <ion-select-option  [value]=\\\"''\\\">{{ 'SELECT_CURRENCY_TEXT' | translate }}</ion-select-option>\\r\\n                      <ion-select-option *ngFor=\\\"let currency of userCurrencies | removecurrency : swapRequestForm.value.currency_to\\\" [value]=\\\"currency.currency_name\\\">{{ currency.currency_name }}</ion-select-option>         \\r\\n                    </ion-select>\\r\\n                  </ion-col>\\r\\n                  <ion-col size=\\\"6\\\" class=\\\"ion-align-items-stretch\\\">\\r\\n                    <p class=\\\"i-want\\\"><b>{{ 'CURRENCY_I_WANT_TEXT' | translate }}</b></p>\\r\\n                    <ion-select (ionChange)=\\\"updateAmountDestination(swapRequestForm.value.currency_from,swapRequestForm.value.currency_to,'from')\\\" formControlName=\\\"currency_to\\\">\\r\\n                      <ion-select-option  [value]=\\\"''\\\">{{ 'SELECT_CURRENCY_TEXT' | translate }}</ion-select-option>   \\r\\n                      <ion-select-option *ngFor=\\\"let currency of systemCurrencies | removecurrency : swapRequestForm.value.currency_from\\\" [value]=\\\"currency.currency_name\\\">{{ currency.currency_name }}</ion-select-option>        \\r\\n                    </ion-select>\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n                <ion-row>\\r\\n                  <ion-col size=\\\"6\\\" class=\\\"ion-align-items-stretch\\\">\\r\\n                    <ion-item class=\\\"swapamount\\\">\\r\\n                      <ion-input (ionChange)=\\\"updateAmountDestination(swapRequestForm.value.currency_from,swapRequestForm.value.currency_to,'from')\\\" type=\\\"number\\\" formControlName=\\\"amount_from\\\" required></ion-input>\\r\\n                    </ion-item>\\r\\n                    <div class=\\\"ion-text-wrap\\\">\\r\\n                      <ion-text color=\\\"dark\\\"><small>{{ 'AMOUNT_HAVE_TO_SWAP' | translate }}</small></ion-text>\\r\\n                    </div> \\r\\n                  </ion-col>\\r\\n                  <ion-col size=\\\"6\\\" class=\\\"ion-align-items-stretch\\\">\\r\\n                    <ion-item class=\\\"swapamount\\\">\\r\\n                      <ion-input  (ionChange)=\\\"updateAmountDestination(swapRequestForm.value.currency_from,swapRequestForm.value.currency_to,'to')\\\" type=\\\"number\\\" formControlName=\\\"amount_to\\\" required></ion-input>\\r\\n                    </ion-item>\\r\\n                    <div class=\\\"ion-text-wrap\\\">\\r\\n                      <ion-text color=\\\"dark\\\"><small>{{ 'AMOUNT_WANT_TO_SWAP' | translate }}</small></ion-text>\\r\\n                    </div> \\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n                \\r\\n                <ion-row *ngIf=\\\"canShowCurrencyErrorMsg()\\\">\\r\\n                  <ion-col>\\r\\n                    <div class=\\\"ion-text-wrap\\\">\\r\\n                      <ion-text  color=\\\"danger\\\"><small>{{ 'CURRENCY_MUST_BE_DIFFERENT_MSG' | translate }}</small></ion-text>\\r\\n                    </div>\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n              </div>\\r\\n        \\r\\n              <ion-row class=\\\"swapfilter\\\">\\r\\n                <ion-col size=\\\"12\\\">\\r\\n                  <ion-item lines=\\\"none\\\">                \\r\\n                    <ion-toggle formControlName=\\\"allRequest\\\" (ionChange)=\\\"filterRequest()\\\"  color=\\\"primary\\\"></ion-toggle>\\r\\n                    <ion-label>&nbsp; {{ swapRequestForm.value.allRequest ?  ('OTHERS_REQUEST_TEXT' | translate) : ('MY_REQUESTS_TEXT' | translate)  }} <span *ngIf=\\\"!loading\\\">{{'(' + activeRequests.length + ')' }}</span>  </ion-label>\\r\\n                  </ion-item>\\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n            </form>                   \\r\\n          </ion-item-divider>\\r\\n          <p class=\\\"ion-text-center\\\"  *ngIf=\\\"loading\\\">\\r\\n            <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n          </p>\\r\\n          <ion-item class=\\\"swapitem\\\" *ngFor=\\\"let request of requests; let i = index\\\">\\r\\n            <ion-checkbox *ngIf=\\\"request.canSelect\\\" (ionChange)=\\\"checkSelection(i)\\\" [(ngModel)]=\\\"requests[i].select\\\" ngModelOptions=\\\"{standalone: true}\\\" color=\\\"primary\\\" slot=\\\"start\\\"></ion-checkbox>\\r\\n           <ion-checkbox *ngIf=\\\"!swapRequestForm.value.allRequest && !request.canSelect\\\" [checked]=\\\"true\\\" [color]=\\\"getRequestColor(request.data.infos_status_request)\\\" slot=\\\"start\\\"></ion-checkbox> \\r\\n            <ion-label>\\r\\n         \\r\\n              <p>                \\r\\n                <span class=\\\"ion-float-left swaprate\\\">\\r\\n                  <ion-text color=\\\"warning\\\">\\r\\n                    <ion-icon name=\\\"star\\\" *ngFor=\\\"let icon of getSuccessPercentage(request.data.pourcentage_reussite)\\\"></ion-icon>\\r\\n                    <ion-icon name=\\\"star-outline\\\" *ngFor=\\\"let icon of getLossPercentage(request.data.pourcentage_reussite)\\\"></ion-icon>\\r\\n                  </ion-text>\\r\\n                </span>\\r\\n                <span *ngIf=\\\"canShowExpiredTime(request)\\\" class=\\\"ion-float-right\\\"><small>{{ 'EXPIRED_IN_TEXT' | translate }} <b>{{ expiredTime(request.data) }}</b></small></span> \\r\\n              </p>    \\r\\n              \\r\\n              <ion-text *ngIf=\\\"request.data && request.data.infos_user_from\\\" color=\\\"primary\\\">\\r\\n                <h2>\\r\\n                 <span> {{ 'INITIATOR_TEXT' | translate }} : </span> <b>{{ request.data.infos_user_from && request.data.infos_user_from.firstname ? request.data.infos_user_from.firstname   : request.data.infos_user_from.lastname ?  request.data.infos_user_from.lastname : ('ANONYM_USER_TEXT' | translate)}}</b>\\r\\n               </h2>\\r\\n             </ion-text>\\r\\n              <h2>\\r\\n                <ion-text color=\\\"warning\\\">{{ request.data.user_id_from === currentUserData.id ? request.data.amount_from : request.data.amount_to }} \\r\\n                  {{ request.data.user_id_from === currentUserData.id ? request.data.infos_currency_from.name : request.data.infos_currency_to.name}}\\r\\n                </ion-text> \\r\\n                <ion-icon name=\\\"arrow-forward\\\"></ion-icon> \\r\\n                <ion-text color=\\\"primary\\\">{{ request.data.user_id_from === currentUserData.id ? request.data.amount_to : request.data.amount_from }} \\r\\n                  {{ request.data.user_id_from === currentUserData.id ? request.data.infos_currency_to.name : request.data.infos_currency_from.name}}\\r\\n                </ion-text>\\r\\n              </h2>\\r\\n              <p>                \\r\\n                <ion-text color=\\\"dark\\\"><span class=\\\"ion-float-left\\\"> {{request.data.type_swap_id === 1 ? ('INSTANT_TEXT' | translate) : ('DELAYED_TEXT' | translate)}}</span></ion-text>\\r\\n                <span class=\\\"ion-float-right\\\" *ngIf=\\\"canShowMenu(request)\\\">\\r\\n                  <ion-buttons slot=\\\"end\\\" class=\\\"popover-menu\\\">\\r\\n                    <ion-button (click)=\\\"openContextMenu($event, request.data)\\\">\\r\\n                      <ion-icon name=\\\"ellipsis-vertical\\\" color=\\\"primary\\\"></ion-icon>\\r\\n                    </ion-button>\\r\\n                  </ion-buttons>\\r\\n                </span> \\r\\n                <span  *ngIf=\\\"isSwapCompleted(request)\\\">\\r\\n                 ({{ request.data.user_id_from === currentUserData.id  ? ('COMPLETED_TEXT_SWAP' | translate) : ('MATCHED_TEXT_SWAP' | translate)  }})\\r\\n                </span>\\r\\n              </p>\\r\\n            </ion-label>\\r\\n          </ion-item>   \\r\\n\\r\\n        </ion-list>\\r\\n      </ion-col>      \\r\\n    </ion-row>        \\r\\n  </ion-grid>\\r\\n\\r\\n  <div  *ngIf=\\\"activeRequests && activeRequests.length === 0 && !loading && !loadingWallet\\\">\\r\\n    <p  class=\\\"ion-padding ion-text-center\\\"> {{ 'SWAP_REQUEST_EMPTY_LIST' | translate }}</p>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div style=\\\"min-height: 50px;\\\"></div>\\r\\n\\r\\n  <ion-infinite-scroll threshold=\\\"250px\\\" (ionInfinite)=\\\"infinteScrollData($event)\\\">\\r\\n    <ion-infinite-scroll-content\\r\\n      loadingSpinner=\\\"bubbles\\\"\\r\\n      loadingText=\\\"{{ 'M_LOADING_MORE_DATA' | translate }}\\\">\\r\\n    </ion-infinite-scroll-content>\\r\\n  </ion-infinite-scroll>\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"ion-padding ion-text-left\\\">\\r\\n  <ion-button expand=\\\"full\\\" \\r\\n        color=\\\"warning\\\" \\r\\n        class=\\\"ion-text-uppercase\\\"\\r\\n        shape=\\\"round\\\"\\r\\n        (click)=\\\"openSendSwapRequest()\\\" *ngIf=\\\"canSendRequest()\\\">\\r\\n   {{ 'SEND_REQUEST_TEXT' | translate }}\\r\\n  </ion-button>\\r\\n   <div *ngIf=\\\"swapRequestForm.value.request !== 1 && selectRequests.length > 0\\\">\\r\\n    <div class=\\\"swap-btn-sommary\\\">\\r\\n      <ion-text color=\\\"dark\\\"><strong>{{ 'GET_TEXT' | translate }}: {{paidAmountText}}</strong></ion-text> <br /> {{ 'PAIDTEXT' | translate }}: {{getAmountText}}\\r\\n    </div> \\r\\n    <ion-fab horizontal=\\\"end\\\" vertical=\\\"bottom\\\" slot=\\\"fixed\\\">\\r\\n      <ion-fab-button color=\\\"warning\\\" (click)=\\\"openSwap()\\\">\\r\\n        <ion-icon name=\\\"repeat\\\"></ion-icon>\\r\\n      </ion-fab-button>\\r\\n    </ion-fab>\\r\\n  </div> \\r\\n</ion-footer>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkZWxldGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, NgZone, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ModalController, NavParams } from '@ionic/angular';\r\nimport { SwapErrorService } from 'src/app/dashboard/pesuswap/services/swap-error.service';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { CurrencyService } from 'src/app/shared/service/currency.service';\r\nimport { SwapService } from '../services/swap.service';\r\nimport { ConstantService } from 'src/app/shared/service/constant.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SwapGlobalDataService } from '../services/swap-global-data.service';\r\nimport { UserService } from '../../user/service/user.service';\r\nimport { UiService } from 'src/app/shared/service/ui.service';\r\n\r\n@Component({\r\n  selector: 'app-swap-edit',\r\n  templateUrl: './swap-edit.component.html',\r\n  styleUrls: ['./swap-edit.component.scss'],\r\n})\r\nexport class SwapEditComponent implements OnInit {\r\n\r\n  swapRequestForm: FormGroup;\r\n  currencies: any[] = [];\r\n  userCurrencies: any;\r\n  systemCurrencies: any;\r\n  swapRates: any;\r\n  matchRequests: any;\r\n  getAmountText: any;\r\n  paidAmountText: any;\r\n  currentUserData: any;\r\n  swapTypes: any;\r\n  requestData: any;\r\n  canUpdate: any;\r\n  hasUpdateExchange: any;\r\n  wallet: any;\r\n  canMakeRequest: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private constant: ConstantService,\r\n    private ui: UiService,\r\n    private modatCtrl: ModalController,\r\n    private translate: TranslateService,\r\n    private zone: NgZone,\r\n    private error: ErrorService,\r\n    private swapService: SwapService,\r\n    private swapData: SwapGlobalDataService,\r\n    private currency: CurrencyService,\r\n    private swapError: SwapErrorService,\r\n    private userService: UserService,\r\n    private navParams: NavParams\r\n  ) {\r\n    this.userCurrencies = [];\r\n    this.systemCurrencies = [];\r\n    this.swapRates = [];\r\n    this.currentUserData = this.userService.getUserData();\r\n    this.requestData = this.navParams.get('data');\r\n    this.canUpdate = true;\r\n    this.hasUpdateExchange = false;\r\n    this.wallet = this.navParams.get('wallet');\r\n    this.canMakeRequest = true;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.swapRequestForm = this.fb.group({\r\n      swap_request_id: [this.requestData.swap_request_id],\r\n      currency_from: [this.requestData.infos_currency_from.name, Validators.required],\r\n      currency_to: [this.requestData.infos_currency_to.name, Validators.required],\r\n      amount_from: [this.requestData.amount_from, Validators.required],\r\n      amount_to: [this.requestData.amount_to, Validators.required],\r\n      exchange_from: [{ value: `${1} ${this.requestData.infos_currency_from.name} : `, disabled: true }],\r\n      exchange_rate: [this.requestData.exchange_rate],\r\n      fees: [this.requestData.fees],\r\n      type_swap_id: ['']\r\n    });\r\n\r\n    this.checkRequestCanInstantRequest(this.requestData.infos_currency_from.name);\r\n    this.getSwapTypes();\r\n    this.getSwapRate();\r\n  }\r\n\r\n\r\n  get currencyHave() {\r\n    return this.swapRequestForm.get('currency_from');\r\n  }\r\n\r\n  get currencyWant() {\r\n    return this.swapRequestForm.get('currency_to');\r\n  }\r\n\r\n  get amountHave() {\r\n    return this.swapRequestForm.get('amount_from');\r\n  }\r\n\r\n  get amountWant() {\r\n    return this.swapRequestForm.get('amount_to');\r\n  }\r\n\r\n  // Enable swap edition\r\n  enableSwapEdition() {\r\n    this.swapService.disableSwapEdition(this.requestData.swap_request_id, 0).subscribe(reponse => {\r\n    }, error => {\r\n      if (error && error.error && error.error.message === 'error') {\r\n        if (error.error.user_not_found) {\r\n          this.error.renewSession().then((data: any) => {\r\n            if (data && data.result === \"OK\") {\r\n              this.enableSwapEdition();\r\n            }\r\n          });\r\n        } else {\r\n          this.swapError.manageWalletError(error);\r\n        }\r\n      } else {\r\n        this.error.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Close the modal\r\n  closeModal(ans: any) {\r\n    this.enableSwapEdition();\r\n    this.modatCtrl.dismiss(ans, null);\r\n  }\r\n\r\n  // disable swap edition\r\n  disableEdition() {\r\n    return this.swapRequestForm.invalid \r\n    || (this.swapRequestForm.value.type_swap_id === 1 && !this.canMakeRequest) ||  (this.swapRequestForm.value.amount_from < 0 || this.swapRequestForm.value.amount_to < 0 );\r\n  } \r\n\r\n  // Get the swap type\r\n  getType(type: string) {\r\n    return this.constant.getTypeSwap(type);\r\n  }\r\n\r\n  // Get the list of type of swap\r\n  getSwapTypes() {\r\n    this.swapService.getAllSwapType()\r\n      .subscribe((reponse: any) => {\r\n        if (reponse && reponse.type_swap) {\r\n          this.zone.run(() => {\r\n            this.swapTypes = reponse.type_swap;\r\n          });\r\n\r\n          setTimeout(() => {\r\n            if (this.swapTypes && this.swapTypes.length > 0) {\r\n              this.swapRequestForm.get('type_swap_id').setValue(this.requestData.type_swap_id);\r\n            }\r\n          }, 500);\r\n        }\r\n      }, error => {\r\n        if (error && error.error && error.error.message === \"error\") {\r\n          if (error && error.error && error.error.user_not_found) {\r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === 'OK') {\r\n                this.getSwapTypes();\r\n              }\r\n            });\r\n          } else {\r\n            this.swapError.manageWalletError(error);\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  // Get the users currencies\r\n  getUserCurrencies() {\r\n    this.swapService.getAllWalletCurrenies()\r\n      .subscribe((reponse: any) => {\r\n        if (reponse && reponse.currencies_user) {\r\n          this.userCurrencies = reponse.currencies_user;\r\n          setTimeout(() => {\r\n            if (this.userCurrencies && this.userCurrencies.length > 0) {\r\n              this.swapRequestForm.get('currency_from').setValue(this.requestData.infos_currency_from.name);\r\n            }\r\n          }, 500);\r\n        }\r\n      }, error => {\r\n        if (error && error.error && error.error.message === \"error\") {\r\n\r\n          if (error && error.error && error.error.user_not_exist) {\r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === 'OK') {\r\n                this.getUserCurrencies();\r\n              }\r\n            });\r\n          } else {\r\n            this.swapError.manageWalletError(error);\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  // Get the sytem currencies\r\n  getSystemCurrencies() {\r\n    this.swapService.getAllSystemCurrenies()\r\n      .subscribe((reponse: any) => {\r\n        if (reponse && reponse.currencies_system) {\r\n\r\n          this.zone.run(() => {\r\n            this.systemCurrencies = reponse.currencies_system;\r\n          });\r\n\r\n          setTimeout(() => {\r\n            if (this.systemCurrencies && this.systemCurrencies.length > 0) {\r\n              this.swapRequestForm.get('currency_to').setValue(this.requestData.infos_currency_to.name);\r\n            }\r\n          }, 500);\r\n        }\r\n      }, error => {\r\n        if (error && error.error && error.error.message === \"error\") {\r\n\r\n          if (error && error.error && error.error.user_not_found) {\r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === 'OK') {\r\n                this.getSystemCurrencies();\r\n              }\r\n            });\r\n          } else {\r\n            this.swapError.manageWalletError(error);\r\n          }\r\n\r\n        }\r\n      });\r\n  }\r\n\r\n  // Get all swap rate \r\n  getSwapRate() {\r\n    this.swapService.getSwapRate()\r\n      .subscribe((reponse: any) => {\r\n        if (reponse && reponse.swap_rate) {\r\n          this.swapRates = reponse.swap_rate;\r\n        }\r\n      }, error => {\r\n        if (error && error.error && error.error.message === \"error\") {\r\n          if (error && error.error && error.error.user_not_found) {\r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === 'OK') {\r\n                this.getSwapRate();\r\n              }\r\n            });\r\n          } else {\r\n            this.swapError.manageWalletError(error);\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  // check if the user can make instant request\r\n  checkRequestCanInstantRequest(currency: any) {\r\n    this.canMakeRequest =this.swapData.checkRequestCanInstantRequest(currency,this.wallet,this.swapRequestForm.value.amount_from,this.swapRequestForm.value.fees);\r\n  }\r\n\r\n  // Get exchange fees\r\n  getExchangeFees(currencyFrom: string, currencyTo: string, amount: number) {\r\n    this.swapData.getExchangeFees(this.swapRates,currencyFrom, currencyTo,amount).then(exchangeFees => {\r\n      this.swapRequestForm.get('fees').setValue(exchangeFees);\r\n    });\r\n  }\r\n\r\n  // Get the exchange rate\r\n  getExchangeRate(currencyFrom: string, currencyTo: string) {\r\n    this.currency.conversionRateValue(currencyFrom, currencyTo).then(rate => {\r\n      this.swapRequestForm.get('exchange_rate').setValue(rate);\r\n    });\r\n  }\r\n\r\n  // Update amount \r\n  updateAmount(currencyFrom: string, currencyTo: string, direction: string, rate: any, type: any) {\r\n    if (type === 'rate') {\r\n      this.updateExchangeRate(currencyFrom, currencyTo, rate);\r\n    } else if (type === 'exchange' && !this.hasUpdateExchange) {\r\n      this.updateAmountDestination(currencyFrom, currencyTo, direction);\r\n    } else {\r\n      this.updateExchangeRate(currencyFrom, currencyTo, rate);\r\n    }\r\n  }\r\n\r\n  // Update the exchange rate\r\n  updateExchangeRate(currencyFrom: string, currencyTo: string, rate: any) {\r\n    this.hasUpdateExchange = true;\r\n    if (rate >= 0 && this.canUpdate) {\r\n      let amountTo = 0;\r\n      amountTo = parseFloat(rate) * parseFloat(this.swapRequestForm.value.amount_from);\r\n      this.canUpdate = false;\r\n      this.swapRequestForm.get('amount_to').setValue(Number(amountTo).toFixed(2));\r\n      this.getExchangeFees(currencyFrom, currencyTo, this.swapRequestForm.value.amount_from);\r\n    } else {\r\n      if (rate < 0) {\r\n        this.canUpdate = false;\r\n        this.swapRequestForm.get('amount_to').setValue(0);\r\n      } else {\r\n        this.canUpdate = true;\r\n      }\r\n    }\r\n    this.checkRequestCanInstantRequest(currencyFrom);\r\n  }\r\n\r\n\r\n  // Update the amount  destination\r\n  updateAmountDestination(currencyFrom: string, currencyTo: string, direction: string) {\r\n    const amount = direction === 'from' ? this.swapRequestForm.value.amount_from : this.swapRequestForm.value.amount_to;\r\n    if (currencyFrom && currencyTo && amount >= 0 && this.canUpdate) {\r\n      this.getExchangeRate(currencyFrom, currencyTo);\r\n      const param1 = direction === 'from' ? currencyFrom : currencyTo\r\n      const param2 = direction === 'from' ? currencyTo : currencyFrom\r\n      this.swapData.getConversionValue(param1, param2, amount).then(data => {\r\n        this.canUpdate = false;\r\n        direction === 'from' ? this.swapRequestForm.get('amount_to').setValue(data) : this.swapRequestForm.get('amount_from').setValue(data);\r\n        this.getExchangeFees(currencyFrom, currencyTo, this.swapRequestForm.value.amount_from);\r\n      });\r\n    } else {\r\n      this.canUpdate = true;\r\n    }\r\n    this.checkRequestCanInstantRequest(currencyFrom);\r\n  }\r\n\r\n  // edit a swap request\r\n  editSwapRequest() {\r\n    const swapData = this.swapRequestForm.value;\r\n    this.translate.get('EDIT_SWAP_REQUEST_TEXT').subscribe(trans => {\r\n      this.ui.presentLoading(trans);\r\n    });\r\n    this.swapService.updateSwapRequest(swapData)\r\n      .subscribe((reponse: any) => {\r\n        this.ui.dismissLoading();\r\n        if (reponse && reponse.message === \"success\") {\r\n          this.translate.get('EDIT_SWAP_SUCCESS_TEXT').subscribe(trans => {\r\n            this.ui.presentToast(trans);\r\n          });\r\n          this.closeModal('updated');\r\n        }\r\n      }, error => {\r\n\r\n        if (error && error.error && error.error.message === \"error\") {\r\n\r\n          if (error.error.user_not_found) {\r\n            this.error.renewSession().then((data: any) => {\r\n              this.ui.dismissLoading();\r\n              if (data && data.result === \"OK\") {\r\n                this.editSwapRequest();\r\n              } else {\r\n                this.closeModal(null);\r\n              }\r\n            });\r\n          } else {\r\n            this.closeModal(null);\r\n            this.ui.dismissLoading();\r\n            this.swapError.manageWalletError(error);\r\n          }\r\n        } else {\r\n          this.closeModal(null);\r\n          this.ui.dismissLoading();\r\n          this.error.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","import { Component, NgZone, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { PopoverController, ModalController, IonInfiniteScroll } from '@ionic/angular';\r\nimport { SwapMenuComponent } from './swap-menu/swap-menu.component';\r\nimport { SendSwapRequestComponent } from './send-swap-request/send-swap-request.component';\r\nimport { SwapService } from './services/swap.service';\r\nimport { SwapErrorService } from 'src/app/dashboard/pesuswap/services/swap-error.service';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { SwapComponent } from './swap/swap.component';\r\nimport { ContributionService } from '../my-tontines/services/contribution.service';\r\nimport { CurrencyService } from 'src/app/shared/service/currency.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SwapMenuOptionComponent } from './swap-menu-option/swap-menu-option.component';\r\nimport { ConstantService } from 'src/app/shared/service/constant.service';\r\nimport { SwapGlobalDataService } from './services/swap-global-data.service';\r\nimport { EventService } from 'src/app/shared/service/events.service';\r\nimport { StorageData } from 'src/app/shared/service/storage.service';\r\nimport { UiService } from 'src/app/shared/service/ui.service';\r\nimport { UserService } from '../user/service/user.service';\r\nimport { UtilService } from 'src/app/shared/service/util.service';\r\n\r\n@Component({\r\n  selector: 'app-pesuswap',\r\n  templateUrl: './pesuswap.page.html',\r\n  styleUrls: ['./pesuswap.page.scss'],\r\n})\r\nexport class PesuswapPage implements OnInit {\r\n\r\n  swapRequestForm: FormGroup;\r\n  currencies: any[] = [];\r\n  userCurrencies: any;\r\n  systemCurrencies: any;\r\n  swapRates: any;\r\n  allRequests: any;\r\n  requests: any;\r\n  currentBalance: any;\r\n  activeRequests: any;\r\n  getAmountText: any;\r\n  paidAmountText: any;\r\n  selectRequests: any;\r\n  currentUserData: any;\r\n  loading: boolean;\r\n  loadingWallet: boolean;\r\n  type: any;\r\n  nbItems: number;\r\n  canUpdate: boolean;\r\n  amount: any;\r\n  filterRequests: any;\r\n  @ViewChild(IonInfiniteScroll, { static: false }) infiniteScroll: IonInfiniteScroll;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private ui: UiService,\r\n    private util: UtilService,\r\n    private popoverController: PopoverController,\r\n    private translate: TranslateService,\r\n    private modatCtrl: ModalController,\r\n    private zone: NgZone,\r\n    private error: ErrorService,\r\n    private swapService: SwapService,\r\n    private swapData: SwapGlobalDataService,\r\n    private currency: CurrencyService,\r\n    private contribution: ContributionService,\r\n    private event: EventService,\r\n    private storage: StorageData,\r\n    private constant: ConstantService,\r\n    private swapError: SwapErrorService,\r\n    private userService: UserService\r\n  ) {\r\n    this.userCurrencies = [];\r\n    this.filterRequests = [];\r\n    this.systemCurrencies = [];\r\n    this.swapRates = [];\r\n    this.allRequests = [];\r\n    this.requests = [];\r\n    this.currentBalance = [];\r\n    this.activeRequests = [];\r\n    this.selectRequests = [];\r\n    this.loading = false;\r\n    this.loadingWallet = true;\r\n    this.nbItems = 10;\r\n    this.type = 1;\r\n    this.canUpdate = true;\r\n    this.amount = 0;\r\n    this.currentUserData = this.userService.getUserData();\r\n    this.event.subscribe('update-request', () => {\r\n      this.upadteSwapDashBoard(null, 'my');\r\n    });\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.getSwapRate();\r\n    this.getSystemCurrencies();\r\n    this.upadteSwapDashBoard(null, 'all');\r\n  }\r\n\r\n  // Form getters\r\n  get currencyHave() {\r\n    return this.swapRequestForm.get('currency_from');\r\n  }\r\n\r\n  get currencyWant() {\r\n    return this.swapRequestForm.get('currency_to');\r\n  }\r\n\r\n  get amountHave() {\r\n    return this.swapRequestForm.get('amount_from');\r\n  }\r\n\r\n  get amountWant() {\r\n    return this.swapRequestForm.get('amount_to');\r\n  }\r\n\r\n\r\n  // Init the swap request form\r\n  initSwapRequestForm(type: string) {\r\n    this.swapRequestForm = this.fb.group({\r\n      currency_from: ['', Validators.required],\r\n      currency_to: ['', Validators.required],\r\n      amount_from: [0, Validators.required],\r\n      amount_to: [0, Validators.required],\r\n      exchange_rate: [''],\r\n      fees: [''],\r\n      type_swap_id: [1],\r\n      request: [1],\r\n      allRequest: [type === 'all' ? true : false]\r\n    });\r\n  }\r\n\r\n  // Init the request with data\r\n  initSwapRequestFormWithData(data: any) {\r\n    this.swapRequestForm.get('currency_from').setValue(data.currency_from);\r\n    this.canUpdate = false;\r\n    this.swapRequestForm.get('currency_to').setValue(data.currency_to);\r\n    this.canUpdate = true;\r\n    this.swapRequestForm.get('amount_from').setValue(data.amount_from);\r\n    this.swapRequestForm.get('exchange_rate').setValue(data.exchange_rate);\r\n    this.swapRequestForm.get('fees').setValue(data.fees);\r\n    this.swapRequestForm.get('type_swap_id').setValue(data.type_swap_id);\r\n    this.swapRequestForm.get('request').setValue(1);\r\n    this.swapRequestForm.get('allRequest').setValue(true);\r\n  }\r\n\r\n  // check max swap amount\r\n  checkMaxSwapAmount() {\r\n    let amount = 0;\r\n    if (this.currentBalance && this.currentBalance.length > 0) {\r\n      const currencyData = this.currentBalance.filter(data => { return data.device_name === this.swapRequestForm.value.currency_from });\r\n      if (currencyData && currencyData.length > 0) {\r\n        amount = (parseFloat(currencyData[0].solde_device) - (parseFloat(this.swapRequestForm.value.amount_from) + parseFloat(this.swapRequestForm.value.fees)));\r\n        amount = amount >= 0 ? (parseFloat(currencyData[0].solde_device) - parseFloat(this.swapRequestForm.value.fees)) : parseFloat(currencyData[0].solde_device);\r\n      }\r\n    }\r\n    return Number(amount).toFixed(2) + ' ' + this.swapRequestForm.value.currency_from;\r\n  }\r\n\r\n  // can send swap request\r\n  canSendRequest() {\r\n    return this.swapRequestForm.value.request === 1 \r\n    && this.swapRequestForm.valid && !this.loading \r\n    && (this.swapRequestForm.value.amount_from > 0 && this.swapRequestForm.value.amount_to > 0 ) \r\n    && (this.swapRequestForm.value.currency_from !== this.swapRequestForm.value.currency_to);\r\n  }\r\n\r\n  // check if swap is completed\r\n  isSwapCompleted(request: any) {\r\n    return request && request.data && request.data.infos_status_request \r\n    && request.data.infos_status_request.description && request.data.infos_status_request.description ==='completed' && !this.swapRequestForm.value.allRequest;\r\n  }\r\n\r\n  // can show swap menu\r\n  canShowMenu(request: any) {\r\n    return !this.swapRequestForm.value.allRequest\r\n    &&(request &&  request.data.user_id_from === this.currentUserData.id \r\n      &&(this.canDeleteSwap(request.data) || this.canEditSwap(request.data)) || this.canArchiveSwap(request.data));\r\n  }\r\n\r\n  // can show the expired time\r\n  canShowExpiredTime(request: any) {\r\n    return request && request.data && request.data.infos_status_request&& request.data.infos_status_request.description \r\n    && request.data.infos_status_request.description !=='completed'\r\n  }\r\n\r\n  // can show the currency error message\r\n  canShowCurrencyErrorMsg() {\r\n    return (this.currencyHave.dirty || this.currencyWant.dirty) \r\n    && (this.swapRequestForm.value.currency_from === this.swapRequestForm.value.currency_to) \r\n    && (this.swapRequestForm.value.currency_from !== '' && this.swapRequestForm.value.currency_to !== '');\r\n  }\r\n\r\n  // get the expired time\r\n  expiredTime(request: any) {\r\n    return this.constant.expiredTime(request);\r\n  }\r\n\r\n  // can delete swap \r\n  canDeleteSwap(request: any) {\r\n    return this.swapData.canDeleteSwap(request);\r\n  }\r\n\r\n  // can delete swap \r\n  canEditSwap(request: any) {\r\n    return this.swapData.canEditSwap(request);\r\n  }\r\n\r\n  // can archive the swap\r\n  canArchiveSwap(request: any) {\r\n    return this.swapData.canArchiveSwap(request);\r\n  }\r\n\r\n  // Update the swap DashBoard\r\n  upadteSwapDashBoard(event?: any, typeRequest?: string) {\r\n    this.initSwapRequestForm(typeRequest);\r\n    this.getCurrentBalance(event, typeRequest);\r\n  }\r\n\r\n  // Refresh the list\r\n  refreSher(event) {\r\n    this.infiniteScroll.disabled = false;\r\n    this.upadteSwapDashBoard(event, 'all');\r\n  }\r\n\r\n  // Infinite scroll data\r\n  infinteScrollData(event) {\r\n    setTimeout(() => {\r\n      for (let i = 0; i < this.nbItems; i++) {\r\n        if (this.requests.length < this.activeRequests.length) {\r\n          this.requests.push(this.activeRequests[this.requests.length]);\r\n        } else if (this.requests.length === this.activeRequests.length) {\r\n          event.target.disabled = true;\r\n        }\r\n      }\r\n      event.target.complete();\r\n    }, 500);\r\n  }\r\n\r\n  // Go to pending request\r\n  async gotoPendingRequest(ev: any) {\r\n    const popover = await this.popoverController.create({\r\n      component: SwapMenuOptionComponent,\r\n      event: ev\r\n    });\r\n    return await popover.present();\r\n  }\r\n\r\n  async openContextMenu(ev: any, request: any) {\r\n    const popover = await this.popoverController.create({\r\n      component: SwapMenuComponent,\r\n      componentProps: {\r\n        data: request,\r\n        wallet: this.currentBalance\r\n      },\r\n      event: ev\r\n    });\r\n    return await popover.present();\r\n  }\r\n\r\n  // Open the swap request modal\r\n  openSendSwapRequest() {\r\n    this.modatCtrl\r\n      .create({\r\n        component: SendSwapRequestComponent,\r\n        componentProps: {\r\n          data: this.swapRequestForm.value,\r\n          amountSwap: Number(parseFloat(this.swapRequestForm.value.amount_from) + parseFloat(this.swapRequestForm.value.fees)).toFixed(2),\r\n          maxAmount: this.checkMaxSwapAmount(),\r\n          wallet: this.currentBalance\r\n        }\r\n      })\r\n      .then(\r\n        modalEl => {\r\n          modalEl.present();\r\n          modalEl.onDidDismiss().then(ans => {\r\n            if (ans && ans.data === \"make-request\") {\r\n              this.upadteSwapDashBoard(null, 'my');\r\n            } else if (ans.data && ans.data.message === 'retry-request') {\r\n              this.canUpdate = false;\r\n              this.initSwapRequestFormWithData(ans.data);\r\n              this.getCurrentBalance(null, 'all');\r\n            }\r\n          });\r\n        });\r\n  }\r\n\r\n  // Open the swap matching modal\r\n  openSwap() {\r\n    this.modatCtrl\r\n      .create({\r\n        component: SwapComponent,\r\n        componentProps: {\r\n          data: {\r\n            request: this.selectRequests,\r\n            amountFrom: this.getAmountText,\r\n            amountSwap: Number(parseFloat(this.amount) + parseFloat(this.swapRequestForm.value.fees)).toFixed(2),\r\n            amountTo: this.paidAmountText,\r\n            type: this.type,\r\n            exchange_rate: this.swapRequestForm.value.exchange_rate,\r\n            fees: this.swapRequestForm.value.fees\r\n          },\r\n          wallet: this.currentBalance\r\n        }\r\n      })\r\n      .then(modalEl => {\r\n        modalEl.present();\r\n        modalEl.onDidDismiss().then(ans => {\r\n          if (ans && ans.data === \"match-request\") {\r\n            this.upadteSwapDashBoard(null, 'all');\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  getRequestColor(status: any) {\r\n\r\n      let color = 'light';\r\n    if (status && status.description) {\r\n      switch(status.description) {\r\n\r\n        case 'initiated':\r\n          color = 'primary';\r\n          break;\r\n\r\n        case 'pending':\r\n          color = 'warning';\r\n          break;  \r\n\r\n        case 'expired':\r\n          color = 'danger';\r\n          break;\r\n              \r\n        case 'completed':\r\n          color = 'success';\r\n          break;  \r\n\r\n        default:\r\n          break;     \r\n      }\r\n    }\r\n    return color;\r\n  }\r\n\r\n  // Get the percentage of succes\r\n  getSuccessPercentage(percent: any) {\r\n    return this.swapData.getSuccessPercentage(percent);\r\n  }\r\n\r\n  // get percentage of loss\r\n  getLossPercentage(percent) {\r\n    return this.swapData.getLossPercentage(percent);\r\n  }\r\n\r\n  // Get all swap rate \r\n  getSwapRate() {\r\n    this.swapService.getSwapRate()\r\n      .subscribe((reponse: any) => {\r\n        if (reponse && reponse.swap_rate) {\r\n          this.swapRates = reponse.swap_rate;\r\n        }\r\n      }, error => {\r\n        if (error && error.error && error.error.message === \"error\") {\r\n          if (error && error.error && error.error.user_not_found) {\r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === 'OK') {\r\n                this.getSwapRate();\r\n              }\r\n            });\r\n          } else {\r\n            this.swapError.manageWalletError(error);\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  // Get the sytem currencies\r\n  getSystemCurrencies() {\r\n    this.swapService.getAllSystemCurrenies()\r\n      .subscribe((reponse: any) => {\r\n        if (reponse && reponse.currencies_system) {\r\n          this.zone.run(() => {\r\n            this.systemCurrencies = reponse.currencies_system;\r\n            this.userCurrencies = reponse.currencies_system;\r\n          });\r\n        }\r\n      }, error => {\r\n        if (error && error.error && error.error.message === \"error\") {\r\n\r\n          if (error && error.error && error.error.user_not_found) {\r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === 'OK') {\r\n                this.getSystemCurrencies();\r\n              }\r\n            });\r\n          } else {\r\n            this.swapError.manageWalletError(error);\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  // Get the users currencies\r\n  getUserCurrencies(event?: any, typeRequest?: string) {\r\n    this.swapService.getAllWalletCurrenies()\r\n      .subscribe((reponse: any) => {\r\n        if (reponse && reponse.currencies_user) {\r\n          this.zone.run(() => {\r\n            this.userCurrencies = reponse.currencies_user;\r\n          });\r\n        }\r\n        this.loadingWallet = false;\r\n        // Get the user request without filter \r\n      }, error => {\r\n        this.loadingWallet = false;\r\n        if (event) {\r\n          event.target.complete();\r\n        }\r\n        if (error && error.error && error.error.message === \"error\") {\r\n\r\n          if (error && error.error && error.error.user_not_exist) {\r\n            this.loadingWallet = true;\r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === 'OK') {\r\n                this.getUserCurrencies(event, typeRequest);\r\n              } else {\r\n                this.loadingWallet = false;\r\n              }\r\n            });\r\n          } else {\r\n            this.swapError.manageWalletError(error);\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  // get the current balamce of the user\r\n  getCurrentBalance(event?: any, typeRequest?: string) {\r\n    this.contribution.getUserWallet().subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'success') {\r\n        this.storage.set('current-balance', reponse.PorteMonnaieUser);\r\n        this.zone.run(() => {\r\n          this.currentBalance = reponse.PorteMonnaieUser;\r\n        });\r\n        this.loadingWallet = false;\r\n        if (typeRequest === 'all') {\r\n          this.getAllRequestWithoutFilter(event);\r\n        } else {\r\n          this.getAllUserRequest(event);\r\n        }\r\n      }\r\n    }, error => {\r\n      this.loadingWallet = false;\r\n      if (event) {\r\n        event.target.complete();\r\n      }\r\n      if (error && error.error && error.error.user_not_found) {\r\n        this.loadingWallet = true;\r\n        this.error.renewSession().then((data: any) => {\r\n          if (data && data.result === 'OK') {\r\n            this.getCurrentBalance(event, typeRequest);\r\n          } else {\r\n            this.loadingWallet = false;\r\n            this.storage.get('current-balance').then(data => {\r\n              this.currentBalance = data ? data : [];\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        this.storage.get('current-balance').then(data => {\r\n          this.currentBalance = data ? data : [];\r\n        });\r\n        this.error.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // select request filter\r\n  filterRequest() {\r\n\r\n    console.log(this.swapRequestForm.value.allRequest);\r\n    if (this.swapRequestForm.value.allRequest) {\r\n      this.requests = [];\r\n      this.getAllRequestWithoutFilter();\r\n    } else {\r\n      this.requests = [];\r\n      this.getAllUserRequest();\r\n    }\r\n  }\r\n\r\n  // format user swap request response\r\n  formatUserSwapResponse(requests: any) {\r\n\r\n    let requestInitiated = [];\r\n    let requestPending = [];\r\n    let requestExpired = [];\r\n    let requestCompleted = [];\r\n    let Allrequest = [];\r\n \r\n\r\n    // List of  initiated requests\r\n    requestInitiated = requests.filter(data => { return (data.infos_status_request && data.infos_status_request.description && data.infos_status_request.description === 'initiated') });\r\n    requestInitiated = requestInitiated && requestInitiated.length > 0 ? this.util.orderByKeyUp(requestInitiated, 'updated_at') : [];\r\n    requestInitiated = requestInitiated && requestInitiated.length > 0 ? this.util.orderByKeyUpTime(requestInitiated, 'temps_restant') : [];\r\n\r\n    // List of  pending requests\r\n    requestPending = requests.filter(data => { return (data.infos_status_request && data.infos_status_request.description && data.infos_status_request.description === 'pending') });\r\n    requestPending = requestPending && requestPending.length > 0 ? this.util.orderByKeyUp(requestPending, 'updated_at') : [];\r\n    requestPending = requestPending && requestPending.length > 0 ? this.util.orderByKeyUpTime(requestPending, 'temps_restant') : [];\r\n\r\n    // List of  expired requests\r\n    requestExpired = requests.filter(data => { return (data.infos_status_request && data.infos_status_request.description && data.infos_status_request.description === 'expired') });\r\n    requestExpired = requestExpired && requestExpired.length > 0 ? this.util.orderByKeyUp(requestExpired, 'updated_at') : [];\r\n\r\n    // List of  complete requests\r\n    requestCompleted = requests.filter(data => { return (data.infos_status_request && data.infos_status_request.description && data.infos_status_request.description === 'completed') });\r\n    requestCompleted = requestCompleted && requestCompleted.length > 0 ? this.util.orderByKeyUp(requestCompleted, 'updated_at') : [];\r\n\r\n    // Concat all request\r\n    Allrequest = Allrequest.concat(requestInitiated);\r\n    Allrequest = Allrequest.concat(requestPending);\r\n    Allrequest = Allrequest.concat(requestExpired);\r\n    Allrequest = Allrequest.concat(requestCompleted);\r\n\r\n    const formatData = [];\r\n    if (Allrequest && Allrequest.length > 0) {\r\n      Allrequest.forEach(request => {\r\n        formatData.push({ select: false, data: request });\r\n      });\r\n    }\r\n\r\n    this.activeRequests = formatData;\r\n\r\n\r\n    if (this.activeRequests.length > this.nbItems) {\r\n      this.requests = [];\r\n      for (let i = 0; i < this.nbItems; i++) {\r\n        this.requests.push(this.activeRequests[this.requests.length]);\r\n      }\r\n    } else {\r\n      this.requests = this.activeRequests;\r\n    }\r\n  }\r\n\r\n  // format all swap requests data\r\n  formatAllSwapRequestData(requests: any) {\r\n\r\n    console.log(requests);\r\n    if (requests && requests.length > 0) {\r\n      this.allRequests = this.swapData.filterALLRequestData(requests);\r\n      this.activeRequests =  this.allRequests;\r\n      this.filterRequests = this.activeRequests;\r\n      if (this.activeRequests.length > this.nbItems) {\r\n        this.requests = [];\r\n        for (let i = 0; i < this.nbItems; i++) {\r\n          this.requests.push(this.activeRequests[this.requests.length]);\r\n        }\r\n      } else {\r\n        this.requests = this.activeRequests;\r\n      }\r\n    }\r\n  }\r\n\r\n  // format the match request\r\n  formatMatchRequests(requests: any) {\r\n    if (requests && requests.length > 0) {\r\n      this.allRequests = this.swapData.filterALLRequestData(requests);\r\n      this.activeRequests = this.allRequests;\r\n      this.filterRequests = this.activeRequests;\r\n      if (this.activeRequests.length > this.nbItems) {\r\n        this.requests = [];\r\n        for (let i = 0; i < this.nbItems; i++) {\r\n          this.requests.push(this.activeRequests[this.requests.length]);\r\n        }\r\n      } else if (this.activeRequests.length === 0) {\r\n        this.getAllRequestWithFilter(this.swapRequestForm.value.currency_from, this.swapRequestForm.value.currency_to);\r\n      } else {\r\n        this.requests = this.activeRequests;\r\n      }\r\n    }\r\n  }\r\n\r\n  //  Get all the user request\r\n  getAllUserRequest(event?: any) {\r\n    this.selectRequests = [];\r\n    this.activeRequests = [];\r\n    this.requests = [];\r\n    this.filterRequests = [];\r\n\r\n    this.loading = true;\r\n    this.swapService.getAllUserSwapRequestV2()\r\n      .subscribe((reponse: any) => {\r\n        this.loading = false;\r\n        if (reponse && reponse.requests) {\r\n          this.formatUserSwapResponse(reponse.requests);\r\n        }\r\n        if (event) {\r\n          setTimeout(() => {\r\n            event.target.complete();\r\n          }, 2000);\r\n        }\r\n      }, error => {\r\n        if (event) {\r\n          event.target.complete();\r\n        }\r\n        this.loading = false;\r\n        if (error && error.error && error.error.message === \"error\") {\r\n          if (error && error.error && error.error.user_not_found) {\r\n            this.loading = true;\r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.getAllUserRequest(event);\r\n              } else {\r\n                this.loading = false;\r\n              }\r\n            });\r\n          }\r\n        } else {\r\n          this.swapError.manageWalletError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n  //  Get all  request\r\n  getAllRequestWithFilter(currencyFrom: string, currencyTo: string) {\r\n    const data = {\r\n      currency_from: currencyFrom,\r\n      currency_to: currencyTo\r\n    };\r\n    this.selectRequests = [];\r\n    this.activeRequests = [];\r\n    this.requests = [];\r\n    this.filterRequests = [];\r\n    if (currencyFrom && currencyTo) {\r\n      this.loading = true;\r\n      this.swapService.getReverseRequestV2(data)\r\n        .subscribe((reponse: any) => {\r\n          this.loading = false;\r\n          if (reponse && reponse.requests) {\r\n            this.formatAllSwapRequestData(reponse.requests);\r\n          }\r\n        }, error => {\r\n          this.loading = false;\r\n          if (error && error.error && error.error.message === \"error\") {\r\n            if (error && error.error && error.error.user_not_found) {\r\n              this.loading = true;\r\n              this.error.renewSession().then((data: any) => {\r\n                if (data && data.result === \"OK\") {\r\n                  this.getAllRequestWithFilter(currencyFrom, currencyTo);\r\n                } else {\r\n                  this.loading = false;\r\n                }\r\n              });\r\n            }\r\n          } else {\r\n            this.swapError.manageWalletError(error);\r\n          }\r\n        });\r\n\r\n    } else {\r\n      this.getAllRequestWithoutFilter();\r\n    }\r\n  }\r\n\r\n  //  Get all  request\r\n  getAllRequestWithoutFilter(event?: any) {\r\n    this.loading = true;\r\n    this.activeRequests = [];\r\n    this.selectRequests = [];\r\n    this.requests = [];\r\n    this.filterRequests = [];\r\n    this.swapService.getRequestWithoutFilterV2()\r\n      .subscribe((reponse: any) => {\r\n        if (reponse && reponse.requests) {\r\n          this.formatAllSwapRequestData(reponse.requests);\r\n        }\r\n        this.loading = false;\r\n\r\n        if (event) {\r\n          setTimeout(() => {\r\n            event.target.complete();\r\n          }, 2000);\r\n        }\r\n      }, error => {\r\n        if (event) {\r\n          event.target.complete();\r\n        }\r\n        this.loading = false;\r\n        if (error && error.error && error.error.message === \"error\") {\r\n          if (error && error.error && error.error.user_not_found) {\r\n            this.loading = true;\r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.getAllRequestWithoutFilter(event);\r\n              } else {\r\n                this.loading = false;\r\n              }\r\n            });\r\n          }\r\n        } else {\r\n          this.swapError.manageWalletError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n  // Get the exchange that match user request\r\n  getMatchRequest(data: any) {\r\n    this.selectRequests = [];\r\n    this.activeRequests = [];\r\n    this.requests = [];\r\n    this.filterRequests = [];\r\n    if (data.exchange_rate !== '' && data.fees !== '' && data.currency_from && data.currency_to) {\r\n      this.loading = true;\r\n      this.swapService.getRequestMatchingCurrenciesV2(data).subscribe((reponse: any) => {\r\n        if (reponse && reponse.requests) {\r\n          this.formatMatchRequests(reponse.requests);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.loading = false;\r\n        if (error && error.error && error.error.message === \"error\") {\r\n          if (error && error.error && error.error.user_not_found) {\r\n            this.loading = true;\r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === 'OK') {\r\n                this.getMatchRequest(data);\r\n              } else {\r\n                this.loading = false;\r\n              }\r\n            });\r\n          } else {\r\n            this.swapError.manageWalletError(error);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // check selection\r\n  checkSelection(index: number) {\r\n    const requestData = [];\r\n    this.getAmountText = '';\r\n    this.paidAmountText = '';\r\n    let getAmount = 0;\r\n    let paidAmount = 0;\r\n    let currencyForm = '';\r\n    let currencyTo = '';\r\n    let type = 0;\r\n    let position = 0;\r\n    let rate = 0;\r\n    let fees = 0;\r\n\r\n    // find request which hqs been selected\r\n    this.allRequests.forEach(request => {\r\n      if (position !== index && request.select) {\r\n        currencyForm = request.data.infos_currency_from.name;\r\n        currencyTo = request.data.infos_currency_to.name;\r\n        type = request.data.type_swap_id;\r\n      }\r\n      position++;\r\n    });\r\n\r\n    this.swapRequestForm.get('request').setValue(0);\r\n    if (this.requests && this.requests.length > 0) {\r\n      this.requests.forEach(request => {\r\n        if (request.select) {\r\n          if (currencyForm === '' && currencyTo === '' && type === 0) {\r\n            currencyForm = request.data.infos_currency_from.name;\r\n            currencyTo = request.data.infos_currency_to.name;\r\n            type = request.data.type_swap_id;\r\n          }\r\n\r\n          if ((currencyForm === request.data.infos_currency_from.name) && (currencyTo === request.data.infos_currency_to.name) && (type === request.data.type_swap_id)) {\r\n            requestData.push({\r\n              swap_request_id: request.data.swap_request_id,\r\n              from: currencyForm,\r\n              to: currencyTo,\r\n              amount: request.data.amount_to,\r\n              fees: 0\r\n            });\r\n            paidAmount += request.data.amount_from;\r\n            getAmount += request.data.amount_to;\r\n            paidAmount = parseFloat(Number(paidAmount).toFixed(2));\r\n            getAmount = parseFloat(Number(getAmount).toFixed(2));\r\n\r\n            // Get the max rate\r\n            rate += parseFloat(request.data.exchange_rate);\r\n\r\n          } else {\r\n            this.requests[index] = { select: false, canSelect: this.requests[index].canSelect, data: this.requests[index].data };\r\n            this.translate.get(['INSTANT_TEXT', 'DELAYED_TEXT']).subscribe(trans => {\r\n              this.translate.get('SELECTION_MESSAGE_TEXT', { from: currencyForm, to: currencyTo, type: type === 1 ? `${trans.INSTANT_TEXT}` : `${trans.DELAYED_TEXT}` }).subscribe(trans => {\r\n                this.ui.presentToast(trans);\r\n              });\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n      this.type = type;\r\n      this.paidAmountText = `${paidAmount} ${currencyForm}`;\r\n      this.getAmountText = `${getAmount} ${currencyTo}`;\r\n      this.amount = getAmount;\r\n\r\n      // Get average rate off all requests\r\n      this.swapRequestForm.get('exchange_rate').setValue(requestData && requestData.length === 1 ? rate : 0);\r\n\r\n      // set the matching fees of each select request\r\n      this.swapData.matchingExchageFees(this.swapRates, currencyTo, currencyForm, requestData).then(data => {\r\n        this.selectRequests = data;\r\n        this.selectRequests.forEach(request => {\r\n          fees += parseFloat(request.fees);\r\n        });\r\n        this.swapRequestForm.get('fees').setValue(fees);\r\n      });\r\n    }\r\n  }\r\n\r\n  // filter the current list of swap request\r\n  filterRequestData(currencyFrom: string, currencyTo: string) {\r\n    let requests = [];\r\n    requests = this.filterRequests;\r\n    if (currencyFrom) {\r\n      requests = requests.filter(request => { return request.data.infos_currency_to.name === currencyFrom });\r\n    }\r\n    if (currencyTo) {\r\n      requests = requests.filter(request => { return request.data.infos_currency_from.name === currencyTo });\r\n    }\r\n    if (currencyFrom === '' && currencyTo === '') {\r\n      this.activeRequests = this.filterRequests;\r\n    }\r\n    this.activeRequests = requests;\r\n    if (this.activeRequests.length > this.nbItems) {\r\n      this.requests = [];\r\n      for (let i = 0; i < this.nbItems; i++) {\r\n        this.requests.push(this.activeRequests[this.requests.length]);\r\n      }\r\n    } else {\r\n      this.requests = this.activeRequests;\r\n    }\r\n  }\r\n\r\n  // Get exchange fees\r\n  getExchangeFees(currencyFrom: string, currencyTo: string, amount: number) {\r\n    if (currencyFrom !== '' && currencyTo !== '' && amount > 0) {\r\n      this.swapData.getExchangeFees(this.swapRates, currencyFrom, currencyTo, amount).then(exchangeFees => {\r\n        this.swapRequestForm.get('fees').setValue(exchangeFees);\r\n      });\r\n    } else {\r\n      this.swapRequestForm.get('fees').setValue(0);\r\n    }\r\n  }\r\n\r\n  // Get the exchange rate\r\n  getExchangeRate(currencyFrom: string, currencyTo: string) {\r\n    if (currencyFrom !== '' && currencyTo !== '' && currencyFrom !== currencyTo) {\r\n      this.currency.conversionRateValue(currencyFrom, currencyTo).then(rate => {\r\n        this.swapRequestForm.get('exchange_rate').setValue(rate);\r\n      });\r\n    } else {\r\n      this.swapRequestForm.get('exchange_rate').setValue(0);\r\n    }\r\n  }\r\n\r\n  // Update the amount  destination\r\n  updateAmountDestination(currencyFrom: string, currencyTo: string, direction: string) {\r\n    this.swapRequestForm.get('request').setValue(1);\r\n    this.filterRequestData(currencyFrom, currencyTo);\r\n    const amount = direction === 'from' ? this.swapRequestForm.value.amount_from : this.swapRequestForm.value.amount_to;\r\n    if (currencyFrom && currencyTo && amount >= 0 && this.canUpdate) {\r\n      this.getExchangeRate(currencyFrom, currencyTo);\r\n      const param1 = direction === 'from' ? currencyFrom : currencyTo\r\n      const param2 = direction === 'from' ? currencyTo : currencyFrom\r\n      this.swapData.getConversionValue(param1, param2, amount).then(data => {\r\n        this.canUpdate = false; // state value \r\n        direction === 'from' ? this.swapRequestForm.get('amount_to').setValue(data) : this.swapRequestForm.get('amount_from').setValue(data);\r\n        this.getExchangeFees(currencyFrom, currencyTo, this.swapRequestForm.value.amount_from);\r\n        // Get the exchange that match user request\r\n        this.getMatchRequest(this.swapRequestForm.value);\r\n      });\r\n    } else {\r\n      this.canUpdate = true;\r\n    }\r\n  }\r\n}\r\n","export default \"<ion-grid>     \\r\\n  <ion-row>\\r\\n    <ion-col>\\r\\n      <h4>{{ 'ARCHIVE_SWAP_TEXT' | translate }}</h4> \\r\\n      <p> {{ 'ARCHIVE_SWAP_MESSAGE' | translate }} <br/>\\r\\n        <b>\\r\\n        <ion-text color=\\\"warning\\\">{{requestData.amount_from}} {{requestData.infos_currency_from.name}}</ion-text> \\r\\n        <ion-icon name=\\\"arrow-forward\\\"></ion-icon> \\r\\n        <ion-text color=\\\"primary\\\">{{requestData.amount_to}} {{requestData.infos_currency_to.name}}</ion-text>\\r\\n      </b>\\r\\n      </p>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  <ion-row>\\r\\n    <ion-col class=\\\"ion-text-center\\\">\\r\\n      <ion-button color=\\\"warning\\\" fill=\\\"outline\\\" (click)=\\\"close()\\\">{{ 'NO_TEXT' | translate }}</ion-button>\\r\\n    </ion-col>\\r\\n    <ion-col class=\\\"ion-text-center\\\">\\r\\n      <ion-button color=\\\"warning\\\" (click)=\\\"archiveSwap()\\\">{{'YES_TEXT' | translate }}</ion-button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-grid>\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ModalController, PopoverController } from '@ionic/angular';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { SwapErrorService } from 'src/app/dashboard/pesuswap/services/swap-error.service';\r\nimport { ArchiveSwapComponent } from '../archive-swap/archive-swap.component';\r\nimport { SwapService } from '../services/swap.service';\r\nimport { EventService } from 'src/app/shared/service/events.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-swap-menu-option',\r\n  templateUrl: './swap-menu-option.component.html',\r\n  styleUrls: ['./swap-menu-option.component.scss'],\r\n})\r\nexport class SwapMenuOptionComponent implements OnInit {\r\n\r\n  curentParams: any;\r\n  requests: any;\r\n\r\n  constructor(\r\n    public popoverController: PopoverController,\r\n    private swapError: SwapErrorService,\r\n    private modatCtrl: ModalController,\r\n    private event: EventService,\r\n    private error: ErrorService,\r\n    private swapService: SwapService,\r\n    public router: Router\r\n  ) {\r\n    this.requests = [];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAllUserRequest();\r\n  }\r\n\r\n\r\n  // Close popover\r\n  close() {\r\n    this.popoverController.dismiss();\r\n  }\r\n\r\n  // Delete the swap request\r\n  gotoSwapNotPaid() {\r\n    this.close();\r\n    this.router.navigate(['/dashboard/pesuswap/swap-not-paid']);\r\n  }\r\n\r\n  // Go the swap notifications\r\n  gotoSwapNotifications() {\r\n    this.close();\r\n    this.router.navigate(['/dashboard/pesuswap/notifs']);\r\n  }\r\n\r\n\r\n  // can archive text\r\n  canArchiveSwap(request: any) {\r\n    let ican = false;\r\n    if ((request.infos_status_request && (request.infos_status_request.description === 'completed' || request.infos_status_request.description === 'expired'))) {\r\n      ican = true;\r\n    }\r\n    return ican;\r\n  }\r\n\r\n  archiveSwap() {\r\n    this.close();\r\n    this.modatCtrl\r\n      .create({\r\n        component: ArchiveSwapComponent,\r\n        componentProps: {\r\n          swaps: this.requests\r\n        }\r\n      })\r\n      .then(modalEl => {\r\n        modalEl.present();\r\n        modalEl.onDidDismiss().then((ans) => {\r\n          if (ans && ans.data === \"archived\") {\r\n            this.event.publish('update-request');\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  //  Get all the user request\r\n  getAllUserRequest() {\r\n    this.requests = [];\r\n    this.swapService.getAllUserSwapRequest()\r\n      .subscribe((reponse: any) => {\r\n        if (reponse && reponse.requests) {\r\n          this.requests = reponse.requests;\r\n          this.requests = this.requests.filter(data => { return this.canArchiveSwap(data) })\r\n        }\r\n      }, error => {\r\n        if (error && error.error && error.error.message === \"error\") {\r\n          if (error && error.error && error.error.user_not_found) {\r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.getAllUserRequest();\r\n              }\r\n            });\r\n          }\r\n        } else {\r\n          this.swapError.manageWalletError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar class=\\\"ion-text-center subtitle\\\">\\r\\n    <ion-title>{{ 'EDIT_SWAP_TEXT' | translate }}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"tontine-new\\\">\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-label>\\r\\n          <p class=\\\"ion-no-margin\\\">\\r\\n            {{ 'SWAP_DESCRIPTION_TEXT' | translate }}\\r\\n          </p>\\r\\n        </ion-label>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"12\\\">\\r\\n        <form [formGroup]=\\\"swapRequestForm\\\">\\r\\n          <ion-row class=\\\"ion-no-padding\\\">\\r\\n            <ion-col size=\\\"6\\\">\\r\\n              <ion-item class=\\\"swapAmount\\\">\\r\\n                <ion-input\\r\\n                  (ionChange)=\\\"updateAmount(swapRequestForm.value.currency_from,swapRequestForm.value.currency_to, 'from', swapRequestForm.value.exchange_rate,'exchange')\\\"\\r\\n                  type=\\\"number\\\"   formControlName=\\\"amount_from\\\" required></ion-input>\\r\\n                <span slot=\\\"end\\\"  class=\\\"slot-prefix ion-no-margin\\\">{{swapRequestForm.value.currency_from}}</span>\\r\\n              </ion-item>\\r\\n              <div class=\\\"ion-text-wrap\\\">\\r\\n                <ion-text color=\\\"dark\\\"><small>{{ 'AMOUNT_HAVE_TO_SWAP' | translate }}</small></ion-text>\\r\\n              </div>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"6\\\">\\r\\n              <ion-item class=\\\"swapAmount\\\">\\r\\n                <ion-input\\r\\n                  (ionChange)=\\\"updateAmount(swapRequestForm.value.currency_from,swapRequestForm.value.currency_to,'to', swapRequestForm.value.exchange_rate,'exchange')\\\"\\r\\n                  type=\\\"number\\\"  formControlName=\\\"amount_to\\\" required></ion-input>\\r\\n                <span slot=\\\"end\\\" class=\\\"slot-prefix ion-no-margin\\\">{{swapRequestForm.value.currency_to}}</span>\\r\\n              </ion-item>\\r\\n              <div class=\\\"ion-text-wrap\\\">\\r\\n                <ion-text color=\\\"dark\\\"><small>{{ 'AMOUNT_WANT_TO_SWAP' | translate }}</small></ion-text>\\r\\n              </div>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <p> {{'EXCHANGE_RATE' | translate }} :</p>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <ion-col size=\\\"4\\\" class=\\\"ion-align-items-stretch\\\">\\r\\n              <ion-item lines=\\\"none\\\" class=\\\"swapamount\\\">\\r\\n                <ion-input type=\\\"text\\\" formControlName=\\\"exchange_from\\\"></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"5\\\" class=\\\"ion-align-items-stretch\\\">\\r\\n              <ion-item class=\\\"swapamount\\\">\\r\\n                <ion-input\\r\\n                  (ionChange)=\\\"updateAmount(swapRequestForm.value.currency_from,swapRequestForm.value.currency_to,'to', swapRequestForm.value.exchange_rate,'rate')\\\"\\r\\n                  type=\\\"number\\\" formControlName=\\\"exchange_rate\\\" required>\\r\\n                </ion-input>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"3\\\" class=\\\"ion-align-items-stretch\\\">\\r\\n              <ion-item lines=\\\"none\\\" class=\\\"swapamount\\\">\\r\\n                {{swapRequestForm.value.currency_to}}\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row>\\r\\n            <ion-col size=\\\"12\\\">\\r\\n              <p>\\r\\n                {{'MATCHING_FEES_TEXT' | translate }}: {{swapRequestForm.value.fees}} {{swapRequestForm.value.currency_from}} \\r\\n              </p>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row>\\r\\n            <ion-col size=\\\"12\\\">\\r\\n              <ion-item class=\\\"no-background\\\">\\r\\n                <ion-label>{{ 'SWAP_TYPE_TEXT' | translate }}</ion-label>\\r\\n                <ion-select formControlName=\\\"type_swap_id\\\">\\r\\n                  <ion-select-option [value]=\\\"type.id\\\" *ngFor=\\\"let type of swapTypes\\\">{{ getType(type.description) }}\\r\\n                  </ion-select-option>\\r\\n                </ion-select>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </form>\\r\\n\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n    <ion-row  *ngIf=\\\"swapRequestForm.value.type_swap_id === 1 && !canMakeRequest\\\">\\r\\n      <ion-col>\\r\\n        <ion-label>\\r\\n          <p class=\\\"ion-no-margin\\\">\\r\\n            {{ 'CANT_MAKE_INSTANT_SWAP_DESCRIPTION' | translate : {balance : ((swapRequestForm.value.amount_from +\\r\\n            swapRequestForm.value.fees) + ' ' + swapRequestForm.value.currency_from) } }}\\r\\n          </p>\\r\\n        </ion-label>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n  </ion-grid>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"ion-padding ion-text-left\\\">\\r\\n  <ion-row>\\r\\n    <ion-col>\\r\\n      <ion-button expand=\\\"full\\\" color=\\\"warning\\\" class=\\\"ion-text-uppercase\\\" shape=\\\"round\\\" (click)=\\\"editSwapRequest()\\\"\\r\\n        [disabled]=\\\"disableEdition()\\\">\\r\\n        {{ 'EDIT_TEXT' | translate }}\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n    <ion-col>\\r\\n      <ion-button expand=\\\"full\\\" fill=\\\"outline\\\" color=\\\"warning\\\" class=\\\"ion-text-uppercase\\\" shape=\\\"round\\\"\\r\\n        (click)=\\\"closeModal('cancel')\\\">\\r\\n        {{ 'CANCEL_TEXT' | translate }}\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-footer>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYWlkLW1vZGFsLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button slot=\\\"icon-only\\\" (click)=\\\"closeModal()\\\">\\r\\n        <ion-icon color=\\\"warning\\\" name=\\\"close\\\" ></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title class=\\\"ion-text-center subtitle\\\">\\r\\n      {{ 'ARCHIVE_SWAP_TEXT' | translate }}\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar>\\r\\n      <ion-searchbar placeholder=\\\"{{ 'M_NAME_TEXT' | translate }}\\\" type=\\\"text\\\" debounce=\\\"500\\\" (ionChange)=\\\"searchForInvitation($event)\\\" type=\\\"text\\\"></ion-searchbar>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  \\r\\n  <ion-grid *ngIf=\\\"listData && listData.length > 0 \\\">\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"12\\\">\\r\\n        <ion-list>\\r\\n          <ion-item >\\r\\n            <ion-label>{{ 'ALL_SWAP_TEXT' | translate }}</ion-label>\\r\\n            <ion-checkbox slot=\\\"end\\\" (ionChange)=\\\"selectAll(option)\\\" [(ngModel)]=\\\"option\\\" [checked]=\\\"option\\\" [value]=\\\"option\\\"></ion-checkbox>\\r\\n          </ion-item>\\r\\n          <ion-item  *ngFor=\\\"let swap of listData; let i = index\\\">\\r\\n            <ion-label>\\r\\n              <ion-text *ngIf=\\\"swap.data && swap.data.infos_user_from\\\" color=\\\"primary\\\">\\r\\n                <h2>\\r\\n                 <span> {{ 'INITIATOR_TEXT' | translate }} : </span> <b>{{ swap.data.infos_user_from && swap.data.infos_user_from.firstname ? swap.data.infos_user_from.firstname   : swap.data.infos_user_from.lastname ?  swap.data.infos_user_from.lastname : ('ANONYM_USER_TEXT' | translate)}}</b>\\r\\n               </h2>\\r\\n             </ion-text>\\r\\n              <h2>\\r\\n                <ion-text color=\\\"warning\\\">{{ swap.data.user_id_from === currentUserData.id ? swap.data.amount_from : swap.data.amount_to }} \\r\\n                  {{ swap.data.user_id_from === currentUserData.id ? swap.data.infos_currency_from.name : swap.data.infos_currency_to.name}}\\r\\n                </ion-text> \\r\\n                <ion-icon name=\\\"arrow-forward\\\"></ion-icon> \\r\\n                <ion-text color=\\\"primary\\\">{{ swap.data.user_id_from === currentUserData.id ? swap.data.amount_to : swap.data.amount_from }} \\r\\n                  {{ swap.data.user_id_from === currentUserData.id ? swap.data.infos_currency_to.name : swap.data.infos_currency_from.name}}\\r\\n                </ion-text>\\r\\n              </h2>\\r\\n              <p>                \\r\\n                <ion-text color=\\\"dark\\\"><span class=\\\"ion-float-left\\\"> {{swap.data.type_swap_id === 1 ? ('INSTANT_TEXT' | translate) : ('DELAYED_TEXT' | translate)}}</span></ion-text>\\r\\n              </p>\\r\\n            </ion-label>\\r\\n            <ion-checkbox slot=\\\"end\\\" (ionChange)=\\\"updateTontineSelected()\\\" [(ngModel)]=\\\"listData[i].select\\\" [checked]=\\\"listData[i].select\\\" [value]=\\\"listData[i].select\\\"></ion-checkbox>\\r\\n          </ion-item>\\r\\n        </ion-list>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n  <ion-infinite-scroll threshold=\\\"250px\\\" (ionInfinite)=\\\"infinteScrollData($event)\\\">\\r\\n    <ion-infinite-scroll-content\\r\\n      loadingSpinner=\\\"bubbles\\\"\\r\\n      loadingText=\\\"{{ 'M_LOADING_MORE_DATA' | translate }}\\\">\\r\\n    </ion-infinite-scroll-content>\\r\\n  </ion-infinite-scroll>\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"ion-padding ion-text-center\\\">\\r\\n  <ion-button expand=\\\"full\\\" \\r\\n        color=\\\"warning\\\"  [disabled]=\\\"loading || swapSelected && swapSelected.length === 0\\\"\\r\\n        (click)=\\\"confirmArchiveMessage()\\\"\\r\\n        class=\\\"ion-text-uppercase\\\"\\r\\n        shape=\\\"round\\\">\\r\\n        {{ 'MENU_ARCHIVE_TEXT' | translate }}\\r\\n  </ion-button>\\r\\n</ion-footer>\";","export default \"<ion-list class=\\\"swap-menu-popover\\\">\\r\\n  <ion-item lines=\\\"none\\\" *ngIf=\\\"canEditSwap(curentParams)\\\"  (click)=\\\"onEditSwapModal()\\\">\\r\\n    <ion-label >\\r\\n      {{'EDIT_TEXT' | translate}}\\r\\n    </ion-label>\\r\\n  </ion-item>\\r\\n  <ion-item  *ngIf=\\\"canDeleteSwap(curentParams)\\\" lines=\\\"none\\\" (click)=\\\"onDeletePopover()\\\" >\\r\\n    <ion-label>\\r\\n      {{ 'REMOVE_TEXT' | translate }}\\r\\n    </ion-label>\\r\\n  </ion-item>\\r\\n\\r\\n  <ion-item  *ngIf=\\\"canArchiveSwap(curentParams)\\\" lines=\\\"none\\\" (click)=\\\"onArchivePopover()\\\" >\\r\\n    <ion-label>\\r\\n      {{ 'MENU_ARCHIVE_TEXT' | translate }}\\r\\n    </ion-label>\\r\\n  </ion-item>\\r\\n</ion-list>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwZXN1c3dhcC5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title class=\\\"ion-text-center\\\">{{ 'PAY_SWAP_TEXT' | translate }}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"tontine-contribute\\\">\\r\\n  <h4 class=\\\"ion-padding-horizontal\\\"><small>{{ 'PAY_SWAP_MSG' | translate : {swapAmount : swapData.amount + ' ' + swapData.currency  } }} : <b>{{ exchange }}</b></small></h4>\\r\\n  <app-paidmode-swap [amountPay]=\\\"amount\\\"  ></app-paidmode-swap>\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"ion-padding ion-text-center\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-button expand=\\\"full\\\" \\r\\n                fill=\\\"outline\\\"\\r\\n                color=\\\"warning\\\" \\r\\n                class=\\\"ion-text-uppercase\\\"\\r\\n                shape=\\\"round\\\" (click)=\\\"closeContribute()\\\">\\r\\n            {{ 'CANCEL_TEXT' | translate }}\\r\\n          </ion-button>\\r\\n      </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n</ion-footer>\\r\\n\";"],"sourceRoot":"webpack:///"}