{"version":3,"sources":["./src/app/dashboard/my-tontines/tontine-new/tontine-new.page.html","./src/app/dashboard/my-tontines/tontine-new/tontine-new.page.scss","./src/app/dashboard/my-tontines/tontine-new/tontine-new.page.ts","./src/app/dashboard/my-tontines/tontine-new/tontine-new.module.ts"],"names":[],"mappings":"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","file":"my-tontines-tontine-new-tontine-new-module.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar class=\\\"with-logo2\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button color=\\\"primary\\\" defaultHref=\\\"/dashboard/my-tontines\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title class=\\\"ion-text-center\\\">\\r\\n        <ion-img class=\\\"logo\\\" [src]=\\\"'assets/logo-toupesu.svg'\\\"></ion-img>\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar class=\\\"ion-text-center subtitle\\\">\\r\\n    <ion-title>{{'M_CREATE_TONTINE' | translate }}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"tontine-new\\\">\\r\\n  <form [formGroup]=\\\"createTontineForm\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">{{ 'TONTINE_EDIT_TEXT7' | translate }}</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"tontine_name\\\" required></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n              <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\r\\n                <div class=\\\"error-message\\\" *ngIf=\\\"tontineName.hasError(validation.type) && (tontineName.dirty || tontineName.touched)\\\">\\r\\n                  <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                  {{ validation.message }}\\r\\n                </div>\\r\\n              </ng-container>\\r\\n            </div> \\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">{{ 'DESCRIPTION_TEXT' | translate }}</ion-label>\\r\\n            <ion-textarea type=\\\"text\\\" formControlName=\\\"description\\\" required></ion-textarea>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n              <ng-container *ngFor=\\\"let validation of validationMessages.description\\\">\\r\\n                <div class=\\\"error-message\\\" *ngIf=\\\"tontineDesc.hasError(validation.type) && (tontineDesc.dirty || tontineDesc.touched)\\\">\\r\\n                  <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                  {{ validation.message }}\\r\\n                </div>\\r\\n              </ng-container>\\r\\n            </div> \\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label>{{ 'TONTINE_DETAIL_TEXT5' | translate }}</ion-label>\\r\\n            <ion-select (ionChange)=\\\"updateType()\\\" formControlName=\\\"type_tontine_id\\\">\\r\\n              <ion-select-option *ngFor=\\\"let type of typeOfTontine\\\" [value]=\\\"type.type.id\\\">{{ type.label }}</ion-select-option>          \\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n          <div class=\\\"ion-padding-horizontal\\\" *ngIf=\\\"!tontineType.dirty\\\">\\r\\n            <small  [innerHTML]=\\\"'TYPE_DESCRIPTION_MSG' | translate\\\"></small>\\r\\n          </div>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.type\\\">\\r\\n              <div class=\\\"error-message\\\" *ngIf=\\\"tontineType.hasError(validation.type) && (tontineType.dirty || tontineType.touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div> \\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label>{{ 'TONTINE_PAYMENT_TYPE' | translate }}</ion-label>\\r\\n            <ion-select (ionChange)=\\\"updatePaiement()\\\" formControlName=\\\"tontine_payment_type_id\\\">\\r\\n              <ion-select-option *ngFor=\\\"let payment of paymentTypes\\\" [value]=\\\"payment.value\\\">{{ payment.label }}</ion-select-option>          \\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n          <div class=\\\"ion-padding-horizontal\\\" *ngIf=\\\"!tontineTypePayment.dirty\\\">\\r\\n            <small  [innerHTML]=\\\"'TYPE_PAIEMENT_MSG' | translate\\\"></small>\\r\\n          </div>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.typepayment\\\">\\r\\n              <div class=\\\"error-message\\\" *ngIf=\\\"tontineTypePayment.hasError(validation.type) && (tontineTypePayment.dirty || tontineTypePayment.touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div> \\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label>{{ 'TONTINE_EDIT_TEXT5' | translate }}</ion-label>\\r\\n            <ion-select (ionChange)=\\\"updateCurrency(createTontineForm.value.country)\\\" formControlName=\\\"country\\\">\\r\\n              <ion-select-option *ngFor=\\\"let state of states\\\" [value]=\\\"state.country_name\\\">{{ state.country_label }}</ion-select-option>          \\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n          <div class=\\\"ion-padding-horizontal\\\" *ngIf=\\\"!tontineCountry.dirty\\\">\\r\\n            <small  [innerHTML]=\\\"'COUNTRY_MSG' | translate\\\"></small>\\r\\n          </div>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"createTontineForm.value.country && createTontineForm.value.active === 0\\\">\\r\\n              <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n              {{ 'NEWS_COUNTRY_NOT_ACTIVE' | translate }}\\r\\n            </div>\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.country\\\">\\r\\n              <div class=\\\"error-message\\\" *ngIf=\\\"tontineCountry.hasError(validation.type) && (tontineCountry.dirty || tontineCountry.touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div> \\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"12\\\">\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">{{ 'TONTINE_DETAIL_TEXT3' | translate }}</ion-label>\\r\\n            <ion-input type=\\\"number\\\" (ionChange)=\\\"updateAmount()\\\" formControlName=\\\"contribution_amount\\\" required></ion-input>\\r\\n            <span slot=\\\"end\\\" class=\\\"slot-prefix ion-no-margin\\\"> {{ createTontineForm.value.currency }} </span>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.amount\\\">\\r\\n              <div class=\\\"error-message\\\" *ngIf=\\\"tontineAmount.hasError(validation.type) && (tontineAmount.dirty || tontineAmount.touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div> \\r\\n        </ion-col>          \\r\\n      </ion-row>\\r\\n\\r\\n    \\r\\n\\r\\n\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label>{{ 'TONTINE_DETAIL_TEXT4' | translate }}</ion-label>\\r\\n            <ion-select (ionChange)=\\\"updatePeriodicity(createTontineForm.value.frequency);getCurrentDateInfo(createTontineForm.value.startDate,createTontineForm.value.frequency)\\\" formControlName=\\\"frequency\\\">\\r\\n              <ion-select-option *ngFor=\\\"let period of periodicities\\\" [value]=\\\"period.value\\\">{{ period.label }}</ion-select-option>          \\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.frequency\\\">\\r\\n              <div class=\\\"error-message\\\" *ngIf=\\\"tontineFrequency.hasError(validation.type) && (tontineFrequency.dirty || tontineFrequency.touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div> \\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label>{{ 'DATE_START' | translate }}</ion-label>\\r\\n            <!---->\\r\\n            <ion-datetime (ionChange)=\\\"getCurrentDateInfo(createTontineForm.value.startDate,createTontineForm.value.frequency)\\\"  [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" formControlName=\\\"startDate\\\" displayFormat=\\\"DDDD D MMM, YYYY\\\"   pickerFormat=\\\"DD MMMM YYYY\\\"></ion-datetime>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngIf=\\\"createTontineForm.value.startDate && !isDateValid\\\">\\r\\n              <div class=\\\"error-message\\\" >\\r\\n                <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                <span [innerHTML]=\\\"'MIN_DATE_ERROR_TEXT' | translate\\\"></span>\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row  *ngIf=\\\"MsgTontinePeriodicity && createTontineForm.value.startDate && createTontineForm.value.frequency\\\">\\r\\n        <ion-col size=\\\"12\\\">\\r\\n          <div class=\\\"ion-padding\\\" color=\\\"dark\\\" *ngIf=\\\"MsgTontinePeriodicity\\\" >\\r\\n            <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n            <span [innerHTML]=\\\"MsgTontinePeriodicity\\\"></span>\\r\\n           </div>\\r\\n        </ion-col>\\r\\n        <ion-col  *ngIf=\\\"ShowTontinePeriodicityMonthly\\\" >\\r\\n          <ion-list>\\r\\n            <ion-radio-group  formControlName=\\\"monthFrequencyOption\\\" (ionChange)=\\\"OptionChange(createTontineForm.value.monthFrequencyOption,createTontineForm.value.startDate)\\\">\\r\\n              <ion-item>\\r\\n                <ion-label>\\r\\n                  {{ 'MSG_TONTINE_MONTH2' | translate}}\\r\\n                </ion-label>\\r\\n                <ion-radio [value]=\\\"0\\\" [checked]=\\\"createTontineForm.value.monthFrequencyOption === 0  ? true: false\\\"></ion-radio>\\r\\n              </ion-item>  \\r\\n              <ion-item>\\r\\n                <ion-label>\\r\\n                  {{ MonthDayOccurencyLabel | translate  }}\\r\\n                </ion-label>\\r\\n                <ion-radio [value]=\\\"1\\\" [checked]=\\\"createTontineForm.value.monthFrequencyOption === 1 ? true: false\\\"></ion-radio>\\r\\n              </ion-item>\\r\\n            </ion-radio-group>\\r\\n          </ion-list>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"12\\\" *ngIf=\\\"MonthDayOccurencyMsg\\\">\\r\\n          <div class=\\\"ion-padding\\\" color=\\\"dark\\\" >\\r\\n            <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n            <span class=\\\"ml-4\\\" [innerHTML]=\\\"MonthDayOccurencyMsg\\\"></span>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"12\\\">\\r\\n        <ion-item lines=\\\"none\\\">                \\r\\n          <ion-toggle formControlName=\\\"with_caution\\\"  color=\\\"primary\\\"></ion-toggle>\\r\\n          <ion-label>\\r\\n            {{ 'WITH_CAUTION_TEXT' | translate  }}\\r\\n          </ion-label>\\r\\n        </ion-item>\\r\\n        <div class=\\\"ion-padding-horizontal\\\" *ngIf=\\\"!createTontineForm.value.with_caution\\\">\\r\\n          <small  [innerHTML]=\\\"'CAUTION_MSG' | translate\\\"></small>\\r\\n        </div>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n    \\r\\n    <ion-row >\\r\\n      <ion-col size=\\\"12\\\">\\r\\n        <ion-item [disabled]=\\\"!createTontineForm.value.with_caution\\\">\\r\\n          <ion-label position=\\\"floating\\\">{{ 'CAUTION_AMOUNT' | translate }}</ion-label>\\r\\n          <ion-input  type=\\\"number\\\"  formControlName=\\\"caution_amount\\\" required></ion-input>\\r\\n          <span slot=\\\"end\\\" class=\\\"slot-prefix ion-no-margin\\\"> {{ createTontineForm.value.currency }} </span>\\r\\n        </ion-item>\\r\\n        <div class=\\\"validation-errors\\\">\\r\\n          <ng-container *ngFor=\\\"let validation of validationMessages.cautionAmount\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"cautionAmount.invalid && (cautionAmount.dirty || cautionAmount.touched)\\\">\\r\\n              <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n             <span [innerHTML]=\\\"'MIN_ERROR_CAUTION_AMOUNT' | translate : {amount : 1, currency : createTontineForm.value.currency}\\\"></span>\\r\\n            </div>\\r\\n          </ng-container>\\r\\n        </div> \\r\\n      </ion-col>          \\r\\n    </ion-row>\\r\\n\\r\\n    <ion-row >\\r\\n      <ion-col>\\r\\n        <ion-item [disabled]=\\\"!createTontineForm.value.with_caution\\\">\\r\\n          <ion-label>{{ 'CAUTION_TYPE' | translate }}</ion-label>\\r\\n          <ion-select formControlName=\\\"type_caution\\\">\\r\\n            <ion-select-option *ngFor=\\\"let caution of typesCaution\\\" [value]=\\\"caution.value\\\">{{ caution.name }}</ion-select-option>          \\r\\n          </ion-select>\\r\\n        </ion-item>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    </ion-grid>\\r\\n  </form>\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"ion-padding ion-text-center\\\">\\r\\n  <ion-button expand=\\\"full\\\" [disabled]=\\\"canCreateTontine()\\\" (click)=\\\"createTontine()\\\"\\r\\n        color=\\\"warning\\\" \\r\\n        class=\\\"ion-text-uppercase\\\"\\r\\n        shape=\\\"round\\\">\\r\\n    {{ 'SAVE_TEXT' | translate }}\\r\\n  </ion-button>\\r\\n  <p class=\\\"ion-text-center\\\"  *ngIf=\\\"loading\\\">\\r\\n    <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n  </p>\\r\\n</ion-footer>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0b250aW5lLW5ldy5wYWdlLnNjc3MifQ== */\";","import { Component, NgZone, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { States } from 'src/app/shared/models/countries';\r\nimport { LocationService } from 'src/app/shared/service/location.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TontineService } from '../services/tontine.service';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { DateserviceService } from 'src/app/shared/service/dateservice.service';\r\nimport { AlertController, NavController } from '@ionic/angular';\r\nimport { Router } from '@angular/router';\r\nimport { FormUtilsService } from 'src/app/shared/service/form-utils.service';\r\nimport { TontineErrorService } from 'src/app/dashboard/my-tontines/services/tontine-error.service';\r\nimport { TontineGlobalDataService } from '../services/tontine-global-data.service';\r\nimport { PaymentGlobalDataService } from 'src/app/shared/service/payment-global-data.service';\r\nimport { ConstantService } from 'src/app/shared/service/constant.service';\r\nimport { EventService } from 'src/app/shared/service/events.service';\r\nimport { UserService } from '../../user/service/user.service';\r\nimport { UiService } from 'src/app/shared/service/ui.service';\r\nimport { AuthService } from 'src/app/auth/service/auth.service';\r\nimport { LocalStorageService } from 'src/app/shared/service/local-storage.service';\r\n\r\ninterface Periodicity {\r\n  value: string;\r\n  key: string;\r\n  label: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-tontine-new',\r\n  templateUrl: './tontine-new.page.html',\r\n  styleUrls: ['./tontine-new.page.scss'],\r\n})\r\nexport class TontineNewPage implements OnInit {\r\n\r\n  createTontineForm: FormGroup;\r\n  states: States[] = [];\r\n  typeOfTontine: any[] = [];\r\n  periodicities: Periodicity[] = [];\r\n  defaultState: any;\r\n  startDateSelect = new Date();\r\n  validationMessages: any;\r\n  minAmount: number;\r\n  minAmountMessage: string;\r\n  user: any;\r\n  isDateValid: boolean;\r\n  loading: boolean;\r\n  tontineCode: string;\r\n  errorTontine: boolean;\r\n  errorUser: boolean;\r\n  invitationMessage: string;\r\n  currentTontineData: any;\r\n  errorFields: boolean;\r\n  tontinename: string;\r\n  minDate: string;\r\n  paymentTypes: any[];\r\n\r\n  MsgTontinePeriodicity: any = \"\";\r\n  ShowTontinePeriodicityMonthly: boolean = false;\r\n  MonthDayOccurency: number = 1;\r\n  MonthDayOccurencyMsg: any = \"\";\r\n  MonthDayOccurencyLabel: any = \"\";\r\n  maxDate: any = (new Date()).getFullYear() + 5;\r\n  paymentTypesAll: any;\r\n  typesCaution: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private locate: LocationService,\r\n    private event: EventService,\r\n    private location: TranslateService,\r\n    private tontineData: TontineGlobalDataService,\r\n    private paymentData: PaymentGlobalDataService,\r\n    private userService: UserService,\r\n    private tontine: TontineService,\r\n    private errorService: ErrorService,\r\n    private dateService: DateserviceService,\r\n    private zone: NgZone,\r\n    private formUtil: FormUtilsService,\r\n    private router: Router,\r\n    private ui: UiService,\r\n    private alertController: AlertController,\r\n    private auth: AuthService,\r\n    private constant: ConstantService,\r\n    private navController: NavController,\r\n    private tontineError: TontineErrorService,\r\n    private localStorage: LocalStorageService\r\n  ) {\r\n    this.minAmount = 1;\r\n    this.isDateValid = true;\r\n    this.minAmountMessage = '';\r\n    this.user = this.userService.getUserData();\r\n \r\n    this.tontinename = '';\r\n    this.minDate = this.dateService.formatDateTiret(new Date ());\r\n    this.paymentTypes = [];\r\n    this.paymentTypesAll = [];\r\n    this.typesCaution  = [];\r\n    this.getPeriodicity();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initCreateTontineForm();\r\n    this.initValidateMessage();\r\n    this.getTypes();\r\n    this.getPaymentTypes();\r\n    this.getCountries(false);\r\n    this.getCurrentCountry(false);\r\n    this.getCautionList();\r\n  }\r\n\r\n  get tontineName() {\r\n    return this.createTontineForm.get('tontine_name');\r\n  }\r\n\r\n  get tontineDesc() {\r\n    return this.createTontineForm.get('description');\r\n  }\r\n\r\n  get tontineType() {\r\n    return this.createTontineForm.get('type_tontine_id');\r\n  }\r\n\r\n   get tontineTypePayment() {\r\n    return this.createTontineForm.get('tontine_payment_type_id');\r\n  }\r\n\r\n  get tontineCountry() {\r\n    return this.createTontineForm.get('country');\r\n  }\r\n\r\n  get tontineCurrenccy() {\r\n    return this.createTontineForm.get('currrency');\r\n  }\r\n\r\n  get tontineAmount() {\r\n    return this.createTontineForm.get('contribution_amount');\r\n  }\r\n\r\n  get tontineFrequency() {\r\n    return this.createTontineForm.get('frequency');\r\n  }\r\n\r\n  get tontineDate() {\r\n    return this.createTontineForm.get('startDate');\r\n  }\r\n\r\n  get cautionAmount() {\r\n    return this.createTontineForm.get('caution_amount');\r\n  }\r\n\r\n  // Init periodicity \r\n  getPeriodicity() {\r\n    this.location.get(['TONTINE_PERIODICITY_DAY', 'TONTINE_PERIODICITY_WEEK', 'TONTINE_PERIODICITY_MONTH'])\r\n    .subscribe(data => {\r\n      this.periodicities.push({ value: 'Day', key: 'TONTINE_PERIODICITY_DAY', label: data.TONTINE_PERIODICITY_DAY });\r\n      this.periodicities.push({ value: 'Week', key: 'TONTINE_PERIODICITY_WEEK', label: data.TONTINE_PERIODICITY_WEEK });\r\n      this.periodicities.push({ value: 'Month', key: 'TONTINE_PERIODICITY_MONTH', label: data.TONTINE_PERIODICITY_MONTH });\r\n    });\r\n  }\r\n\r\n  initValidateMessage() {\r\n    this.location.get(['M_NAME_REQUIRED', 'M_DESCRIPTION_REQUIRED', 'M_TYPE_REQUIRED'\r\n    ,'M_COUNTRY_REQUIRED','M_CURRENCY_REQUIRED','M_AMOUNT_REQUIRED','M_FREQUENCY_REQUIRED'\r\n    ,'M_PHONE_REQUIRED','M_STARTDATE_REQUIRED'],{amount: 1 }).subscribe(trans => {\r\n\r\n      this.validationMessages = {\r\n        name: [\r\n          { type: 'required', message: trans.M_NAME_REQUIRED }\r\n        ],\r\n        description: [\r\n          { type: 'required', message: trans.M_DESCRIPTION_REQUIRED }\r\n        ],\r\n        type: [\r\n          { type: 'required', message: trans.M_TYPE_REQUIRED }\r\n        ],\r\n        typepayment : [\r\n          { type: 'required', message: trans.M_TYPEPAYMENT_REQUIRED }\r\n        ],\r\n        country: [\r\n          { type: 'required', message: trans.M_COUNTRY_REQUIRED }\r\n        ],\r\n        currency: [\r\n          { type: 'required', message: trans.M_CURRENCY_REQUIRED }\r\n        ],\r\n        amount: [\r\n          { type: 'required', message: trans.M_AMOUNT_REQUIRED }\r\n        ],\r\n        frequency: [\r\n          { type: 'required', message: trans.M_FREQUENCY_REQUIRED }\r\n        ],\r\n        phone: [\r\n          { type: 'required', message: trans.M_PHONE_REQUIRED }\r\n        ],\r\n        startDate: [\r\n          { type: 'required', message: trans.M_STARTDATE_REQUIRED }\r\n        ]\r\n      };\r\n    });\r\n  }\r\n\r\n\r\n  // Get the type of tontines\r\n  getTypes() {\r\n    this.tontine.getTypeTontine().subscribe((typeTontines: any) => {\r\n      const listTontinesTypes = [];\r\n      this.zone.run( () => {\r\n      typeTontines.type.forEach(typeData => {\r\n        this.location.get(`TYPE_TONTINE_ID${typeData.id}`).subscribe(value => {\r\n          if (typeData.id === 1 || typeData.id === 2 || typeData.id === 3 || typeData.id === 5 || typeData.id === 6) {\r\n            listTontinesTypes.push({ type: typeData, key: `TYPE_TONTINE_ID${typeData.id}`, label: value });\r\n          }\r\n        });\r\n      });\r\n        this.typeOfTontine = listTontinesTypes;\r\n      });\r\n\r\n      setTimeout(() => {\r\n        this.createTontineForm.get('type_tontine_id').setValue(1);\r\n      }, 200);\r\n    }, error => {\r\n      this.errorService.manageError(error);\r\n    });\r\n  }\r\n\r\n  // Update the type\r\n  updateType() {\r\n    const currentType = this.createTontineForm.value.type_tontine_id;\r\n    this.typeOfTontine.forEach(data => {\r\n      if (data.type.id === currentType) {\r\n        this.createTontineForm.get('type_tontine_key').setValue(data.key);\r\n      }\r\n\r\n      // When it is loan type, fixed type to traditionnal banking\r\n      if (currentType === 6) {\r\n        this.createTontineForm.get('tontine_payment_type_id').setValue(1);\r\n      }\r\n    });\r\n    this.updatePaiement();\r\n  }\r\n\r\n  initCreateTontineForm() {\r\n    this.createTontineForm = this.fb.group({\r\n      frequency: ['Month', Validators.compose([Validators.required])],\r\n      user_id:[''],\r\n      type_tontine_id: [''],\r\n      monthFrequencyOption: [0],\r\n      is_week_day: ['0'],\r\n      active:[0],\r\n      type_tontine_key: ['TYPE_TONTINE_ID1'],\r\n      country_key: [''],\r\n      tontine_payment_type_id:[''],\r\n      frequency_key: ['TONTINE_PERIODICITY_MONTH'],\r\n      country: ['', Validators.compose([Validators.required])],\r\n      tontine_name: ['', Validators.compose([Validators.required])],\r\n      description: [''],\r\n      contribution_amount: ['', Validators.compose([Validators.required, Validators.min(this.minAmount), Validators.pattern('^[0-9]+$')])],\r\n      currency: ['', Validators.compose([Validators.required])],\r\n      tontine_date: [''],\r\n      startDate: [this.dateService.formatDateTiret(this.dateService.addDays(this.startDateSelect,1)), Validators.compose([Validators.required])],\r\n      with_caution: [false],\r\n      type_caution: ['member'], //value = part ou member  \r\n      caution_amount: [0, Validators.compose([Validators.min(0)])]\r\n    });\r\n    this.getCurrentDateInfo(this.createTontineForm.value.startDate, this.createTontineForm.value.frequency);\r\n    this.OptionChange(this.createTontineForm.value.monthFrequencyOption, this.createTontineForm.value.startDate);\r\n    this.checkDate(this.createTontineForm.value.startDate);\r\n  }\r\n\r\n  // Remove space\r\n  updateAmount() {\r\n      this.createTontineForm.get('contribution_amount').setValue(this.tontineData.removeSpace(this.createTontineForm.value.contribution_amount));\r\n  }\r\n\r\n  // Update the periodicity\r\n  updatePeriodicity(periode: string) {\r\n    this.periodicities.forEach(period => {\r\n      if (period.value === periode) {\r\n        this.createTontineForm.get('frequency_key').setValue(period.key);\r\n      }\r\n    });\r\n  }\r\n\r\n  checkDate(date: any) {\r\n    const currentDate = new Date();\r\n    const inputDate = new Date(date);\r\n    inputDate <= currentDate ? this.isDateValid = false : this.isDateValid = true;\r\n  }\r\n\r\n  /// choose your month frequency option\r\n  OptionChange(value, DateChosen) {\r\n    var t = 0;\r\n    if (value === 0) {\r\n      this.createTontineForm.get('is_week_day').setValue('0');\r\n      t = t + 1;\r\n      let currentDate = new Date(DateChosen);\r\n      var d = currentDate.getDate();\r\n      currentDate.setMonth(currentDate.getMonth() + t);\r\n      if (currentDate.getDate() != d) {\r\n        currentDate.setDate(0);\r\n      }\r\n      this.location.get(['MSG_TONTINE_MONTH4']).subscribe(data => {\r\n        this.MonthDayOccurencyMsg = data.MSG_TONTINE_MONTH4 + \"<b><u>\" + this.dateService.formatDateTiret(currentDate) + \" </u></b>.\";\r\n      });\r\n    }\r\n\r\n    if (value === 1) {\r\n      this.createTontineForm.get('is_week_day').setValue('1');\r\n      this.location.get(['MSG_TONTINE_MONTH5']).subscribe(data => {\r\n        this.MonthDayOccurencyMsg = data.MSG_TONTINE_MONTH5 + this.MonthDayOccurencyLabel + \".\";\r\n      });\r\n    }\r\n  }\r\n\r\n  getCurrentDateInfo(date: any, periodicity: any) {\r\n    this.checkDate(date);\r\n    const inputDate = new Date(date);\r\n    var currentMonth = inputDate.toLocaleString('en-us', { month: 'numeric' });\r\n    var currentYear = inputDate.toLocaleString('en-us', { year: 'numeric' });\r\n    var currentDayName = inputDate.toLocaleString('en-us', { weekday: 'long' });\r\n    this.MsgTontinePeriodicity = \"\";\r\n    this.MonthDayOccurencyMsg = \"\";\r\n    this.ShowTontinePeriodicityMonthly = false;\r\n    this.createTontineForm.get('is_week_day').setValue('0');\r\n\r\n    if (periodicity === \"Month\") {\r\n      let currentWeekList = this.tontineData.numDaysInMonth(currentMonth, currentYear, this.tontineData.getDayDif(currentDayName));\r\n      // remove days which starts at position 0 or negative positions\r\n      currentWeekList = currentWeekList.filter(function (x) { return x > 0 });\r\n      let currentDayChosen = new Date(date).getDate();\r\n      this.MonthDayOccurency = 1;\r\n      for (var i = 0; i < currentWeekList.length; i++) {\r\n        if (currentWeekList[i] === currentDayChosen) {\r\n          this.MonthDayOccurency += i;\r\n          break;\r\n        }\r\n      }\r\n      this.ShowTontinePeriodicityMonthly = true;\r\n      this.location.get(['MSG_TONTINE_WEEK1', 'MSG_TONTINE_MONTH1', 'MSG_TONTINE_MONTH3',\r\n        'MSG_TONTINE_MONTH3A', 'MSG_TONTINE_MONTH3B', 'MSG_TONTINE_MONTH3C', 'MSG_TONTINE_MONTH3D']).subscribe(data => {\r\n        \r\n          var OcurrencyPosition\r\n          switch (this.MonthDayOccurency) {\r\n            case 1:\r\n              OcurrencyPosition = data.MSG_TONTINE_MONTH3A;\r\n              break;\r\n            case 2:\r\n              OcurrencyPosition = data.MSG_TONTINE_MONTH3B;\r\n              break;\r\n            case 3:\r\n              OcurrencyPosition = data.MSG_TONTINE_MONTH3C;\r\n              break;\r\n            default:\r\n              OcurrencyPosition = data.MSG_TONTINE_MONTH3D;\r\n              break;\r\n          }\r\n\r\n          this.tontineData.getDayTranslation(currentDayName).subscribe(trans => {\r\n            this.MsgTontinePeriodicity = data.MSG_TONTINE_WEEK1 + this.dateService.formatDateTiret(date) + \".\";\r\n            this.MsgTontinePeriodicity += data.MSG_TONTINE_MONTH1 + \".\";\r\n            this.MonthDayOccurencyLabel = OcurrencyPosition + trans + data.MSG_TONTINE_MONTH3;\r\n          });\r\n      \r\n        });\r\n\r\n      // Check if Radio button for monthly option is checked - begin\r\n      let OptionMonthChoosen = this.createTontineForm.value.monthFrequencyOption;\r\n      var t = 0;\r\n\r\n      if (OptionMonthChoosen === 0) {\r\n        this.createTontineForm.get('is_week_day').setValue('0');\r\n        t = t + 1;\r\n        let currentDate = new Date(date);\r\n        var d = currentDate.getDate();\r\n        currentDate.setMonth(currentDate.getMonth() + t);\r\n        if (currentDate.getDate() != d) {\r\n          currentDate.setDate(0);\r\n        }\r\n        this.location.get(['MSG_TONTINE_MONTH4']).subscribe(data => {\r\n          this.MonthDayOccurencyMsg = \"\" + data.MSG_TONTINE_MONTH4 + \"<b><u>\" + this.dateService.formatDateTiret(currentDate) + \" </u></b>.\";\r\n        });\r\n\r\n      }\r\n\r\n      if (OptionMonthChoosen === 1) {\r\n        this.createTontineForm.get('is_week_day').setValue('1');\r\n        this.location.get(['MSG_TONTINE_MONTH5']).subscribe(data => {\r\n          this.MonthDayOccurencyMsg = \"\" + data.MSG_TONTINE_MONTH5 + this.MonthDayOccurencyLabel + \".\";\r\n        });\r\n      }\r\n\r\n      //// Check if Radio button for monthly option is checked - end\r\n    }\r\n    if (periodicity === \"Week\") {\r\n      this.ShowTontinePeriodicityMonthly = false;\r\n      this.MonthDayOccurencyMsg = \"\";\r\n      this.location.get(['MSG_TONTINE_WEEK1', 'MSG_TONTINE_WEEK2', 'MSG_TONTINE_WEEK3']).subscribe(data => {\r\n        this.tontineData.getDayTranslation(currentDayName).subscribe(trans => {\r\n          this.MsgTontinePeriodicity = data.MSG_TONTINE_WEEK1 + this.dateService.formatDateTiret(date) +\r\n            data.MSG_TONTINE_WEEK2 + trans + data.MSG_TONTINE_WEEK3;\r\n        });\r\n      });\r\n    }\r\n\r\n    if (periodicity === \"Day\") {\r\n      this.ShowTontinePeriodicityMonthly = false;\r\n      this.MonthDayOccurencyMsg = \"\";\r\n    }\r\n  }\r\n\r\n  // set to local Stoirage\r\n  setToStorage(data: any) {\r\n    this.localStorage.setItem('app-tontines', JSON.stringify(data));\r\n  }\r\n  \r\n  // Set the default active country \r\n  getCurrentCountry(refresher: boolean) {\r\n    this.locate.getCurrentCountryInfo(refresher).then((country: any) => {\r\n      if (country) {\r\n        this.defaultState = country.settings;\r\n        if (this.defaultState && this.defaultState.active === 1) {\r\n          this.createTontineForm.get('country').setValue(this.defaultState.country_name);\r\n          this.createTontineForm.get('active').setValue(this.defaultState.active);\r\n          this.createTontineForm.get('currency').setValue(this.defaultState.device_name);\r\n          const countryLabel = `COUNTRY_${this.defaultState.code_country}`;\r\n          this.createTontineForm.get('country_key').setValue(countryLabel);\r\n          this.createTontineForm.get('country_id').setValue(this.defaultState.country_id);\r\n          this.locate.setCurrentUserCountry(this.defaultState);\r\n          this.minAmountMessage = `${this.minAmount} ${this.defaultState.device_name}`;\r\n        } else {\r\n          this.createTontineForm.get('active').setValue(this.defaultState.active);\r\n        }\r\n      }\r\n    }).catch(error => {\r\n    });\r\n  }\r\n\r\n  // Get the types of payments\r\n  getPaymentTypes() {\r\n    this.tontine.getTypePayment().subscribe((reponse: any) => {\r\n      const listPaymentTypes = [];\r\n      reponse.type.forEach(payment => {\r\n          this.location.get(`TYPE_PAYMENT_ID${payment.id}`).subscribe(value => {\r\n            listPaymentTypes.push({value: payment.id, label: value });\r\n          });\r\n      });\r\n      this.zone.run(() => {\r\n        this.paymentTypes = listPaymentTypes;\r\n        this.paymentTypesAll = listPaymentTypes;\r\n      });\r\n      setTimeout(() => {\r\n        this.createTontineForm.get('tontine_payment_type_id').setValue(2);\r\n      }, 200);\r\n    }, error => {\r\n        this.errorService.manageError(error);\r\n    });\r\n  }\r\n\r\n  updatePaiement() {\r\n     if (this.createTontineForm.value.type_tontine_id === 6) {\r\n        const paiements = [];\r\n        this.paymentTypesAll.forEach(payment => {\r\n          if (payment && payment.value === 1) {\r\n            paiements.push(payment);\r\n            this.createTontineForm.get('tontine_payment_type_id').setValue(1);\r\n          }\r\n        });\r\n        this.paymentTypes = paiements;\r\n     } else {\r\n      this.paymentTypes = this.paymentTypesAll;\r\n     }\r\n  }\r\n\r\n  // Get the list of countries\r\n  getCountries(refresher: boolean) {\r\n    this.locate.getAllCountries(refresher).then((countries: any) => {\r\n      this.states =  this.paymentData.formatCountriesData(countries,true);\r\n    });\r\n  }\r\n\r\n    // show tontine message alert \r\n    async  showMessage(translations: string[], country: any) {\r\n      let currentLang = this.locate.getCurrentUserLanguage();\r\n      currentLang = currentLang && currentLang.code_langue ? currentLang.code_langue.toLocaleLowerCase() : 'en';\r\n      const alert = await this.alertController.create({\r\n        header: `${translations[0]}`,\r\n        subHeader: `${translations[1]}`,\r\n        inputs: [\r\n          {\r\n            name: 'email',\r\n            type: 'email',\r\n            placeholder: `${translations[2]}`,\r\n          }\r\n        ],\r\n        buttons: [\r\n          {\r\n            text: `${translations[3]}`,\r\n            role: 'cancel',\r\n            cssClass: 'secondary',\r\n            handler: () => {\r\n            }\r\n          }, {\r\n            text: `${translations[4]}`,\r\n            handler: (ans) => {\r\n              if (ans && this.formUtil.validateEmail(ans.email)) {\r\n                const params = {\r\n                  country_id:country.country_id,\r\n                 country_name:country.country_name,\r\n                 user_id:this.user.id,\r\n                 lang:currentLang,\r\n                 email:ans.email\r\n               };\r\n               this.userService.requestNews(params).subscribe((reponse: any) => {\r\n                 if (reponse && reponse.success) {\r\n                   this.location.get(['NEWS_TITLE', 'NEWS_MESSAGE']).subscribe(trans => {\r\n                     this.ui.presentAlert(trans.NEWS_TITLE, trans.NEWS_MESSAGE);\r\n                   });\r\n                 }\r\n               }, error => {\r\n                   if (error && error.error && error.error.message === 'error'){\r\n                     if (error.error.already_sent) {\r\n                       this.location.get('NEWS_ALREADY_SENT').subscribe(trans => {\r\n                         this.ui.presentToast(trans);\r\n                       });\r\n                     }\r\n                   } else {\r\n                       this.errorService.manageError(error);\r\n                   }\r\n               });\r\n              } else {\r\n                this.location.get('USER_DETAIL_TEXT13').subscribe(trans => {\r\n                  this.ui.presentToast(trans);\r\n                });\r\n              }\r\n          \r\n            }\r\n          }\r\n        ]\r\n      });\r\n  \r\n      await alert.present();\r\n    }\r\n\r\n  // Update the currency\r\n  updateCurrency(currentCountry) {\r\n    if (currentCountry) {\r\n      this.states.forEach(state => {\r\n        if (state.country_name === currentCountry) {\r\n          this.createTontineForm.get('active').setValue(state.active);\r\n          if (state.active === 1 ) {\r\n            this.createTontineForm.get('currency').setValue(state.device_name);\r\n            this.createTontineForm.get('country_key').setValue(state.country_key);\r\n            this.minAmountMessage = `${this.minAmount} ${state.device_name}`;\r\n          } else {\r\n            const translation = [];\r\n            this.location.get(['NEWS_TITLE', 'NEWSLETTER_TEXT1','NEWSLETTER_TEXT2', 'NEWS_EMAIL','CANCEL_TEXT', 'YES_TEXT']).subscribe(trans => {\r\n              translation.push(trans.NEWS_TITLE);\r\n              translation.push(`${trans.NEWSLETTER_TEXT1} ${state.country_name} ${trans.NEWSLETTER_TEXT2}`);\r\n              translation.push(trans.NEWS_EMAIL);\r\n              translation.push(trans.CANCEL_TEXT);\r\n              translation.push(trans.YES_TEXT);\r\n              this.showMessage(translation, state);\r\n            });\r\n          }\r\n        } \r\n      });\r\n    }\r\n  }\r\n\r\n  // Show the tontine invitation code and redirect\r\n  async showInvitationMessage(message, alerttMessage, OkText) {\r\n    const alert = await this.alertController.create({\r\n      header: alerttMessage,\r\n      message: message,\r\n      buttons: [\r\n       {\r\n          text: OkText,\r\n          handler: () => {\r\n            const currentDate = new Date();\r\n            this.auth.setAppLastSession(currentDate.getTime());\r\n            this.navController.setDirection('root');\r\n            this.router.navigate(['/dashboard/invitations'])\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n    // get the list of caution\r\n    getCautionList() {\r\n      this.constant.getCautionType().subscribe(cautions => {\r\n          this.typesCaution = cautions;\r\n      });\r\n    }\r\n  \r\n    // validate caution\r\n    isCautionValid(formData: any) {\r\n      return this.tontineData.isCautionValid(formData);\r\n    }\r\n\r\n    // can create a tontine\r\n    canCreateTontine() {\r\n      let ican = false;\r\n      if (this.loading \r\n        || !this.isDateValid \r\n        || this.createTontineForm.invalid \r\n        || this.createTontineForm.value.active === 0 \r\n        || (this.createTontineForm.value.frequency==='Month' \r\n        && (this.createTontineForm.value.monthFrequencyOption !== 0 \r\n        && this.createTontineForm.value.monthFrequencyOption !== 1))\r\n        || !this.isCautionValid(this.createTontineForm.value)\r\n      ) { \r\n        ican = true;\r\n      }\r\n      return ican;\r\n    }\r\n  \r\n  // Create the tontine\r\n  createTontine() {\r\n    // when the tontine is created, we get the code generee and display it\r\n    this.loading = true;\r\n    this.createTontineForm.get('tontine_date').setValue(this.dateService.formatDateTiret(this.createTontineForm.value.startDate));\r\n    const user = this.userService.getUserData();\r\n    this.createTontineForm.get('user_id').setValue(user.id);\r\n\r\n    const formData = this.tontineData.updateCaution(this.createTontineForm.value);\r\n\r\n    this.tontine.createTontine(formData).subscribe(\r\n      (reponse: any) => {\r\n        this.loading = false;\r\n        if (reponse && reponse.message === 'success') {\r\n          this.tontineCode = reponse.code_invitation;\r\n          this.location.get(['TONTINE_NEW_MSG1', 'TONTINE_NEW_MSG2', 'TONTINE_NEW_MSG3']).subscribe(value => {\r\n            this.invitationMessage = `${value.TONTINE_NEW_MSG1}  <strong>${this.tontineCode}\r\n              </strong>, ${value.TONTINE_NEW_MSG2} <b>72Hrs</b>. ${value.TONTINE_NEW_MSG3}`;\r\n          });\r\n          const tontineData = reponse.tontine;\r\n          this.location.get('TONTINE_CREATION_TEXT',  { tontineName: `<strong>${tontineData.name}</strong>` }).subscribe(value => {\r\n            this.tontinename = `${value}.`;\r\n          });\r\n          this.currentTontineData = reponse.info_tontine[0];\r\n          this.tontine.setCurrentTontineData(this.currentTontineData);\r\n          this.initCreateTontineForm();\r\n          this.event.publish('new-tontine');\r\n          this.location.get(['TONTINE_NEW_TEXT31','MENU_GO']).subscribe(trans => {\r\n              const message = `<p>${this.tontinename}</p> <p>${this.invitationMessage}</p>`;\r\n              this.showInvitationMessage(message, trans.TONTINE_NEW_TEXT31, trans.MENU_GO);\r\n          });\r\n        }\r\n      }, error => {\r\n        this.loading = false;\r\n        if (error && error.error && error.error.message === 'error') {\r\n            this.tontineError.manageTontineError(error);\r\n        } else {\r\n          this.errorService.manageError(error);\r\n        }\r\n      }); \r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TontineNewPage } from './tontine-new.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TontineNewPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    SharedModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [TontineNewPage]\n})\nexport class TontineNewPageModule {}\n"],"sourceRoot":"webpack:///"}