{"version":3,"sources":["./src/app/auth/verify-email/verify-email.page.html","./src/app/auth/verify-email/verify-email.page.ts","./src/app/auth/verify-email/verify-email.page.scss","./src/app/auth/verify-email/verify-email.module.ts"],"names":[],"mappings":"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","file":"verify-email-verify-email-module.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar class=\\\"with-logo\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/auth/verify-phone\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n        <ion-img class=\\\"logo\\\" [src]=\\\"'assets/logo-toupesu.svg'\\\"></ion-img>\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding register-phone\\\">\\r\\n  <form [formGroup]=\\\"emailVerificationForm\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"12\\\">\\r\\n          <p [innerHTML]=\\\"'M_CHECK_ACCOUNT_MSG' | translate\\\">\\r\\n          </p>        \\r\\n        </ion-col>\\r\\n      </ion-row> \\r\\n      <ion-row *ngIf=\\\"canShowMessageAccount()\\\">\\r\\n        <ion-col size=\\\"12\\\">\\r\\n            <p class=\\\"ion-text-center\\\"> \\r\\n              <strong>{{'USER_SECURITY_MSG2' | translate}}</strong>\\r\\n            </p>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row *ngIf=\\\"loadingEmail && server\\\">\\r\\n        <ion-col size=\\\"12\\\">\\r\\n            <p class=\\\"error-message ion-text-center\\\"> \\r\\n              <ion-spinner *ngIf=\\\"loadingEmail\\\" name=\\\"circles\\\"></ion-spinner>\\r\\n              {{'M_EMAIL_CHECKING' | translate}}\\r\\n            </p>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"12\\\">\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">{{'M_EMAIL_MSG' | translate}}</ion-label>\\r\\n            <ion-input (ionChange)=\\\"checkEmail(emailVerificationForm.value.email)\\\" type=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\r\\n          </ion-item>        \\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"12\\\">\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.email\\\">\\r\\n              <div class=\\\"error-message\\\" *ngIf=\\\"email.hasError(validation.type) && (email.dirty || email.touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                <span [innerHTML]=\\\"validation.message\\\"></span>\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>  \\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row  *ngIf=\\\"isEmailValid\\\">\\r\\n        <ion-col size=\\\"12\\\">\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">{{'PASSWORD_TEXT' | translate}}</ion-label>\\r\\n            <ion-input [type]=\\\"canShow ? 'text' : 'password'\\\" formControlName=\\\"password\\\"></ion-input>\\r\\n            <ion-icon (click)=\\\"updateType()\\\" color=\\\"warning\\\" [name]=\\\"canShow ? 'eye-off' : 'eye'\\\" slot=\\\"end\\\"></ion-icon>\\r\\n          </ion-item>        \\r\\n        </ion-col>\\r\\n      </ion-row>  \\r\\n    </ion-grid>\\r\\n  </form>  \\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"ion-padding ion-text-center\\\">\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size='6'>\\r\\n        <ion-button expand=\\\"full\\\" [disabled]=\\\"canCheckLogin()\\\" \\r\\n              color=\\\"warning\\\" \\r\\n              class=\\\"ion-text-uppercase\\\"\\r\\n              shape=\\\"round\\\" (click)=\\\"checkPassword(1)\\\">\\r\\n          {{'M_CHECK_LOGIN' | translate}}\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n      <ion-col size='6'>\\r\\n        <ion-button expand=\\\"full\\\" [disabled]=\\\"loadingForm\\\" \\r\\n              color=\\\"warning\\\" \\r\\n              class=\\\"ion-text-uppercase\\\"\\r\\n              shape=\\\"round\\\" (click)=\\\"onLogin(0)\\\">\\r\\n          {{'M_SKIP' | translate}}\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n  <p class=\\\"ion-text-center\\\"  *ngIf=\\\"loadingPass\\\">\\r\\n    <ion-spinner name=\\\"circles\\\"></ion-spinner> \\r\\n  </p>\\r\\n  <p class=\\\"ion-text-center\\\" *ngIf=\\\"loadingForm\\\">\\r\\n    <ion-spinner  name=\\\"circles\\\"></ion-spinner> \\r\\n  </p>\\r\\n</ion-footer>\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NavController } from '@ionic/angular';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { FormUtilsService } from 'src/app/shared/service/form-utils.service';\r\nimport { UserService } from 'src/app/dashboard/user/service/user.service';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { LocalStorageService } from 'src/app/shared/service/local-storage.service';\r\nimport { EventService } from 'src/app/shared/service/events.service';\r\nimport { AuthErrorService } from '../service/auth-error.service';\r\n\r\n@Component({\r\n  selector: 'app-verify-email',\r\n  templateUrl: './verify-email.page.html',\r\n  styleUrls: ['./verify-email.page.scss'],\r\n})\r\nexport class VerifyEmailPage implements OnInit {\r\n\r\n  emailVerificationForm: FormGroup;\r\n\r\n  validationMessages: any;\r\n  loadingForm: boolean;\r\n  loadingEmail: boolean;\r\n  isEmailValid: boolean;\r\n  loadingPass: boolean;\r\n  server: boolean;\r\n  canShow: boolean;\r\n  timeoutSession: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private userService: UserService,\r\n    private error: ErrorService,\r\n    private authError: AuthErrorService,\r\n    private navController: NavController,\r\n    private translate: TranslateService,\r\n    private formUtil: FormUtilsService,\r\n    private event: EventService,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService\r\n  ) {\r\n    this.timeoutSession = null;\r\n    this.loadingForm = false;\r\n    this.isEmailValid = false;\r\n    this.loadingEmail = false;\r\n    this.loadingPass = false;\r\n    this.canShow = false;\r\n    this.server = true;\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n    this.initFormMessage();\r\n  }\r\n\r\n\r\n  // Getters form\r\n  get email() {\r\n    return this.emailVerificationForm.get('email');\r\n  }\r\n\r\n  get password() {\r\n    return this.emailVerificationForm.get('password');\r\n  }\r\n\r\n  // Init form message\r\n  initFormMessage() {\r\n    this.translate.get(['USER_DETAIL_TEXT12']).subscribe(trans => {\r\n      this.validationMessages = {\r\n        email: [\r\n          { type: 'required', message: trans.USER_DETAIL_TEXT12 }\r\n        ]\r\n      };\r\n    });\r\n\r\n  }\r\n\r\n  // Init form \r\n  initForm() {\r\n    const registerData = this.userService.getRegistrationData();\r\n    this.emailVerificationForm = this.fb.group({\r\n      email: [''],\r\n      avez_vous_un_compte_web: [''],\r\n      password: [''],\r\n      prefix_country_with_plus: [registerData && registerData.prefix_country_with_plus ? registerData.prefix_country_with_plus : ''],\r\n      phoneid: [registerData.phoneid],\r\n      phone_prefix: [registerData.phone_prefix],\r\n      phone_number: [registerData.phone_number],\r\n      digit_code: [registerData.digit_code]\r\n    });\r\n  }\r\n\r\n  // update the type\r\n  updateType() {\r\n    this.canShow = !this.canShow;\r\n  }\r\n\r\n  // show the account creation message\r\n  canShowMessageAccount() {\r\n    return !this.loadingEmail && !this.isEmailValid && this.emailVerificationForm.value.email && !this.server;\r\n  }\r\n\r\n  // can check login\r\n  canCheckLogin() {\r\n    return this.emailVerificationForm.invalid || !this.emailVerificationForm.value.password || !this.isEmailValid || this.loadingPass;\r\n  }\r\n\r\n\r\n  // Check the user email\r\n  checkEmail(email: any) {\r\n    if (this.formUtil.validateEmail(email) && !this.timeoutSession) {\r\n      this.timeoutSession = setTimeout(() => {\r\n        this.loadingEmail = true;\r\n        this.isEmailValid = false;\r\n        this.authService.checkUserEmail(this.emailVerificationForm.value).subscribe(\r\n          (reponse: any) => {\r\n            this.loadingEmail = false;\r\n            this.server = false;\r\n            if (reponse && reponse.message === 'success') {\r\n              clearTimeout(this.timeoutSession);\r\n              this.timeoutSession = null;\r\n              this.localStorage.setItem('first-email', this.emailVerificationForm.value.email);\r\n              if (reponse.email_exist) {\r\n                this.isEmailValid = true;\r\n              } else {\r\n                this.onLogin(0);\r\n              }\r\n            }\r\n          }, error => {\r\n            this.loadingEmail = false;\r\n            this.server = false;\r\n            if (error && error.error && error.error.message === 'error') {\r\n              this.authError.manageAuthError(error);\r\n\r\n            } else {\r\n              this.error.manageError(error);\r\n            }\r\n          });\r\n\r\n      }, 2000);\r\n\r\n    } else {\r\n      // clear the existing time out and recall the checking function if email is valid\r\n      clearTimeout(this.timeoutSession);\r\n      this.timeoutSession = null;\r\n      if (this.formUtil.validateEmail(email)) {\r\n        this.checkEmail(email)\r\n      }\r\n    }\r\n  }\r\n\r\n  // Check if the password match\r\n  checkPassword(hasAccount: number) {\r\n    this.loadingPass = true;\r\n    this.authService.verifyUserPassword(this.emailVerificationForm.value).subscribe(\r\n      (reponse: any) => {\r\n        this.loadingPass = false;\r\n        if (reponse && reponse.message === 'success') {\r\n          this.onLogin(hasAccount);\r\n        }\r\n      }, error => {\r\n        this.loadingPass = false;\r\n        if (error && error.error && error.error.message === 'error') {\r\n          this.authError.manageAuthError(error);\r\n        } else {\r\n          this.error.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n  // save the user device Id\r\n  saveDevice(params: any) {\r\n    this.userService.saveDevice(params);\r\n  }\r\n\r\n  // Log in the user\r\n  auth(credentials: any) {\r\n    this.loadingForm = true;\r\n    this.authService.authentication(credentials).subscribe(\r\n      (reponse: any) => {\r\n        this.loadingForm = false;\r\n        if (reponse && reponse.message === 'success') {\r\n          this.userService.setUserSecret(credentials);\r\n          this.userService.setUserToken(reponse.token);\r\n          this.userService.setUserRole(reponse.role);\r\n          this.userService.setUserData(reponse.user);\r\n          this.userService.setUserBadge(reponse.badge_name);\r\n          // Get the current user lang\r\n          this.userService.setCurrentUserSessionLanguage(reponse.user.langue_user ? reponse.user.langue_user : '');\r\n\r\n          // update the user lang\r\n          const lang = reponse.user.langue_user;\r\n          if (lang) {\r\n            this.translate.use(lang.toLocaleLowerCase());\r\n          }\r\n\r\n          this.event.publish('new-token', reponse.token);\r\n\r\n          const deviceId = this.userService.getUserDevice();\r\n          if (deviceId) {\r\n            this.saveDevice({ device_phone: deviceId });\r\n          }\r\n          this.navController.setDirection('root');\r\n          if (reponse && reponse.user && (!reponse.user.firstname || !reponse.user.lastname)) {\r\n            this.localStorage.setItem('fisrt-login', 'yes');\r\n            this.router.navigateByUrl('/dashboard/user/profil');\r\n          } else {\r\n            this.localStorage.setItem('fisrt-login', 'yes');\r\n            this.router.navigateByUrl('/dashboard/user/security');\r\n          }\r\n        }\r\n      }, error => {\r\n        this.loadingForm = false;\r\n        this.error.manageError(error);\r\n      });\r\n  }\r\n\r\n\r\n  // Login the user\r\n  onLogin(hasAccount: number) {\r\n    this.emailVerificationForm.get('avez_vous_un_compte_web').setValue(hasAccount);\r\n    this.loadingForm = true;\r\n    this.authService.createAccountOrSynchronise(this.emailVerificationForm.value).subscribe(\r\n      (reponse: any) => {\r\n\r\n        if (reponse && reponse.message === 'success') {\r\n          this.authService.removeUserSession();\r\n          this.loadingForm = false;\r\n          const credentials = {\r\n            email_or_phone: this.emailVerificationForm.value.phone_number,\r\n            phone_prefix: this.emailVerificationForm.value.phone_prefix,\r\n            password: this.emailVerificationForm.value.digit_code\r\n          };\r\n          this.auth(credentials);\r\n        } else {\r\n          this.loadingForm = false;\r\n        }\r\n\r\n      }, error => {\r\n        this.loadingForm = false;\r\n\r\n        if (error && error.error && error.error.message === 'error') {\r\n          this.authError.manageAuthError(error);\r\n\r\n        } else {\r\n          this.error.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ2ZXJpZnktZW1haWwucGFnZS5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { VerifyEmailPage } from './verify-email.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VerifyEmailPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [VerifyEmailPage]\n})\nexport class VerifyEmailPageModule {}\n"],"sourceRoot":"webpack:///"}