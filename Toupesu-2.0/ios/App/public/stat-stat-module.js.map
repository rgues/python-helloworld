{"version":3,"sources":["./src/app/dashboard/my-tontines/tontine-detail/stat/stat.page.scss","./src/app/dashboard/my-tontines/tontine-detail/stat/stat.page.ts","./src/app/dashboard/my-tontines/tontine-detail/stat/stat.module.ts","./src/app/dashboard/my-tontines/tontine-detail/stat/stat.page.html"],"names":[],"mappings":"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","file":"stat-stat-module.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzdGF0LnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { TontineService } from '../../services/tontine.service';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { Router } from '@angular/router';\r\nimport { IonInfiniteScroll } from '@ionic/angular';\r\nimport { DateserviceService } from 'src/app/shared/service/dateservice.service';\r\nimport { UtilService } from 'src/app/shared/service/util.service';\r\n\r\n@Component({\r\n  selector: 'app-tontine-stat',\r\n  templateUrl: './stat.page.html',\r\n  styleUrls: ['./stat.page.scss'],\r\n})\r\nexport class StatPage implements OnInit {\r\n\r\n  periodForm: FormGroup;\r\n  currentDate: Date;\r\n  cycles: any;\r\n  cyclesTemp: any;\r\n  loading: boolean;\r\n  tontineData: any;\r\n  allStatsData: any;\r\n  currentStatData: any;\r\n  tontineId: number;\r\n  allData: any;\r\n  nbItems: number;\r\n  @ViewChild(IonInfiniteScroll,{static: false}) infiniteScroll: IonInfiniteScroll;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private tontine: TontineService,\r\n    private dateService: DateserviceService,\r\n    private util: UtilService,\r\n    private error: ErrorService,\r\n    private router: Router\r\n  ) {\r\n    this.loading = false;\r\n    this.currentStatData = null;\r\n    this.cyclesTemp = [];\r\n    this.tontineData = this.tontine.getCurrentTontineData();\r\n    this.tontineId = this.tontineData.tontine.tontine_id;\r\n    this.allStatsData = [];\r\n    this.currentDate = new Date();\r\n    this.cycles = [];\r\n    this.allData = [];\r\n    this.nbItems = 10;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initPeriodForm();\r\n    this.loading = true;\r\n    this.getTontinesCycle(null);\r\n  }\r\n\r\n  initPeriodForm() {\r\n    this.periodForm = this.fb.group({\r\n      dateStart: ['', Validators.required],\r\n      dateEnd: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  get startOn() {\r\n    return this.periodForm.get('dateStart');\r\n  }\r\n\r\n  get endOn() {\r\n    return this.periodForm.get('dateEnd');\r\n  }\r\n\r\n  // Filter the history by date\r\n  filterByDate(formData: any) {\r\n    this.infiniteScroll.disabled = false;\r\n    const filterResult = [];\r\n    const begin = this.dateService.formatDateTiret(formData.dateStart);\r\n    const end = this.dateService.formatDateTiret(formData.dateEnd);\r\n    const DateBegin = new Date(begin);\r\n    const DateEnd = new Date(end);\r\n    this.cyclesTemp.forEach(trans => {\r\n      const dateTrans = new Date(this.dateService.formatDateTiret(trans.cycle.created_at));\r\n      if (trans && dateTrans >= DateBegin && dateTrans <= DateEnd) {\r\n        filterResult.push(trans);\r\n      }\r\n    });\r\n    this.cycles = filterResult;\r\n  }\r\n\r\n  // Get the tontine's cycles\r\n  getTontinesCycle(event) {\r\n     this.tontine.getTontinesCycles(this.tontineData.tontine.tontine_id).subscribe((reponse: any) => {      \r\n      if (reponse && reponse.message === 'success') {\r\n        if (reponse.cycles && reponse.cycles.length > 0) {\r\n          this.allStatsData = reponse.cycles;\r\n          this.cyclesTemp = this.util.orderByObjetKeyUp(this.allStatsData,'cycle','created_at');\r\n          this.allData = this.cyclesTemp;\r\n          if (this.allData.length > this.nbItems) {\r\n            this.cycles = [];\r\n            for (let i = 0; i < this.nbItems; i++) {\r\n              this.cycles.push(this.allData[this.cycles.length]);\r\n            }\r\n          } else {\r\n            this.cycles = this.allData;\r\n          }\r\n        }\r\n      }\r\n      this.loading = false;\r\n      if (event) {\r\n        setTimeout(() => {\r\n          event.target.complete();\r\n        }, 2000);\r\n      }\r\n    }, error => {\r\n      if (event) {\r\n        event.target.complete();\r\n      }\r\n      this.loading = false;\r\n      if (error && error.error && error.error.user_not_found) {\r\n        this.loading = true;\r\n        this.error.renewSession().then((data: any) => {\r\n          if (data && data.result === 'OK') {\r\n            this.getTontinesCycle(event);\r\n          } else {\r\n            this.loading = false;\r\n          }\r\n         });\r\n      } else  {\r\n        this.error.manageError(error);\r\n      }\r\n    }); \r\n  }\r\n\r\n  // Refresh the list\r\n  refreSher(event) {\r\n    this.infiniteScroll.disabled = false;\r\n    this.getTontinesCycle(event);\r\n  }\r\n\r\n  // Infinite scroll data\r\n  infinteScrollData(event) {\r\n    setTimeout(() => {\r\n      for (let i = 0; i < this.nbItems; i++) {\r\n        if (this.cycles.length < this.allData.length) {\r\n          this.cycles.push(this.allData[this.cycles.length]);\r\n     \r\n        } else if (this.cycles.length === this.allData.length) {\r\n          event.target.disabled = true;\r\n        }\r\n      }\r\n      event.target.complete();\r\n    }, 500);\r\n  }\r\n\r\n  // Get all seances of a cycle\r\n  getSeance(cycleId: number) {\r\n    this.allStatsData.forEach(data => {\r\n    if (data.cycle.id === cycleId) {\r\n        this.currentStatData = data;\r\n        const nbreCyle = this.allStatsData.length;\r\n        this.tontine.setCurrentSeanceData({ nbCycles: nbreCyle, data: this.currentStatData });\r\n      }\r\n    });\r\n    this.router.navigateByUrl('/dashboard/my-tontines/' + this.tontineId + '/stat/pools');\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StatPage } from './stat.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CommonModule } from '@angular/common';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StatPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [StatPage]\n})\nexport class StatPageModule {}\n","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button color=\\\"primary\\\" [defaultHref]=\\\"['/','dashboard','my-tontines',tontineId]\\\" slot=\\\"text-only\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-avatar slot=\\\"start\\\">\\r\\n        <ion-img [src]=\\\"'assets/join-icon.svg'\\\" class=\\\"thumb-img\\\"></ion-img>\\r\\n    </ion-avatar>\\r\\n    <ion-title class=\\\"ion-padding\\\">\\r\\n      {{ 'FINANCIAL_STATISQUE' | translate }}\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar>\\r\\n    <form [formGroup]=\\\"periodForm\\\">\\r\\n      <ion-grid class=\\\"header-search-bg\\\">\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"5\\\">\\r\\n            <ion-item>\\r\\n              <ion-label>{{ 'M_START_TEXT' | translate }}</ion-label>\\r\\n              <ion-datetime formControlName=\\\"dateStart\\\" displayFormat=\\\"D MMM, YYYY\\\" [min]=\\\"currentDate.getFullYear()\\\"  pickerFormat=\\\"DD MMMM YYYY\\\"></ion-datetime>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"5\\\">\\r\\n            <ion-item>\\r\\n              <ion-label>{{ 'M_END_TEXT' | translate }}</ion-label>\\r\\n              <ion-datetime [disabled]=\\\"startOn.invalid\\\" formControlName=\\\"dateEnd\\\" displayFormat=\\\"D MMM, YYYY\\\" [min]=\\\"currentDate.getFullYear()\\\" pickerFormat=\\\"DD MMMM YYYY\\\"></ion-datetime>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"2\\\">\\r\\n            <ion-buttons class=\\\"edit-btn\\\">\\r\\n              <ion-button [disabled]=\\\"periodForm.invalid\\\" (click)=\\\"filterByDate(periodForm.value)\\\" > \\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"search\\\" color=\\\"warning\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n            </ion-buttons>            \\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    </form>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refreSher($event)\\\">\\r\\n    <ion-refresher-content\\r\\n      pullingIcon=\\\"reload-outline\\\"\\r\\n      refreshingSpinner=\\\"circles\\\"\\r\\n      refreshingText=\\\"{{ 'M_REFRESHING_TEXT' | translate }}\\\">\\r\\n    </ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  <p class=\\\"ion-text-center\\\"  *ngIf=\\\"loading\\\">\\r\\n    <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n  </p>\\r\\n  <ion-grid>\\r\\n    <ion-row *ngIf=\\\"!loading\\\">\\r\\n      <ion-col>\\r\\n        {{'TOTAL_NUMBER_CYCLE' | translate }}: {{cycles.length}}\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-list>\\r\\n          <ion-item *ngFor=\\\"let data of cycles\\\"  (click)=\\\"getSeance(data.cycle.id)\\\" detail>\\r\\n            <ion-label>\\r\\n              <h3><small>{{ 'CYCLE_REF' | translate }} : </small>{{data.cycle.numerocycle}}</h3>\\r\\n              <ion-text color=\\\"primary\\\"><h2><small>{{ 'CYCLE_START_ON' | translate }}:</small> {{ data.cycle.created_at ? data.cycle.created_at.split(' ')[0] : ('NOT_DEFINED' | translate)}} </h2></ion-text>  \\r\\n              <p>                \\r\\n              <span class=\\\"ion-float-left\\\"><small>{{ 'M_N_POOLS' | translate }}: </small>({{data.nombre_seances ? data.nombre_seances : 0}})</span> \\r\\n                <span class=\\\"ion-float-right\\\"><b><small>{{ 'STATUS_TEXT' | translate}}: </small>{{data.cycle.archived === 1 ? ('CLOSE_TEXT' | translate) : ('ACTIVE_TEXT' | translate) }}</b></span> \\r\\n              </p>\\r\\n            </ion-label>\\r\\n          </ion-item>\\r\\n        </ion-list>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n  <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"infinteScrollData($event)\\\">\\r\\n    <ion-infinite-scroll-content\\r\\n      loadingSpinner=\\\"bubbles\\\"\\r\\n      loadingText=\\\"{{ 'M_LOADING_MORE_DATA' | translate }}\\\">\\r\\n    </ion-infinite-scroll-content>\\r\\n  </ion-infinite-scroll>\\r\\n</ion-content>\\r\\n\";"],"sourceRoot":"webpack:///"}