{"version":3,"sources":["./src/app/dashboard/invitations/service/inivitation-error.service.ts","./src/app/dashboard/my-tontines/services/tontine.service.ts","./src/app/shared/pipes/comma-dumper.pipe.ts","./src/app/dashboard/my-tontines/tontine-detail/wallet/services/wallet-tontine.service.ts","./src/app/shared/service/form-utils.service.ts","./src/app/shared/select-data/select-data.component.scss","./src/app/shared/service/storage.service.ts","./src/app/shared/pipes/filter-data.pipe.ts","./src/app/shared/cashmode/cashmode.component.ts","./src/app/shared/prefix/prefix.component.scss","./src/app/shared/prefix/prefix.component.ts","./src/app/shared/cashmode/cashmode.component.html","./src/app/dashboard/my-wallet/service/wallet.service.ts","./src/app/dashboard/user/service/user.service.ts","./src/app/shared/paidmode-event/paidmode-event.component.html","./src/app/shared/service/api.service.ts","./src/app/shared/service/util.service.ts","./src/app/dashboard/invitations/service/invitations.service.ts","./src/app/shared/paidmode-event/paidmode-event.component.scss","./src/app/shared/pipes/counter-format.pipe.ts","./src/app/shared/tontine-invited/tontine-invited.component.scss","./src/environments/environment.ts","./src/app/shared/paidmode-loan/paidmode-loan.component.ts","./src/app/shared/paidmode-seance/paidmode-seance.component.scss","./src/app/shared/prefix/prefix.component.html","./src/app/shared/paidmode-seance-caution/paidmode-seance-caution.component.ts","./src/app/shared/service/payment-error.service.ts","./src/app/shared/bankmode/bankmode.component.scss","./src/app/shared/bankmode-loan/bankmode-loan.component.ts","./src/app/shared/paidmode-debt/paidmode-debt.component.scss","./src/app/shared/service/currency.service.ts","./src/app/shared/countries/countries.component.html","./src/app/shared/paidmode-swap/paidmode-swap.component.ts","./src/app/shared/paidmode/paidmode.component.ts","./src/app/shared/countries/countries.component.ts","./src/app/shared/cashmode-loan/cashmode-loan.component.html","./src/app/shared/paidmode/paidmode.component.html","./src/app/shared/paidmode-debt/paidmode-debt.component.ts","./src/app/shared/select-data/select-data.component.ts","./src/app/shared/paidmode-debt-order/paidmode-debt-order.component.scss","./src/app/shared/service/plugin.service.ts","./src/app/shared/payment-proofs/payment-proofs.component.scss","./src/app/auth/auth.guard.ts","./src/app/shared/shared.module.ts","./src/app/shared/initiate-pay/initiate-pay.component.ts","./src/app/shared/service/encheres.service.ts","./src/app/shared/service/ui.service.ts","./src/app/shared/tontine-invited-event/tontine-invited-event.component.scss","./src/app/shared/tontine-invited-event/tontine-invited-event.component.ts","./src/app/shared/view-proof/view-proof.component.html","./src/app/auth/service/auth.service.ts","./src/app/shared/tontine-invited/tontine-invited.component.html","./src/app/shared/payment-proofs/payment-proofs.component.ts","./src/app/shared/payment-proofs/payment-proofs.component.html","./src/app/shared/cashmode-loan/cashmode-loan.component.scss","./src/app/shared/paidmode-debt-order/paidmode-debt-order.component.html","./src/app/app.component.ts","./src/app/shared/service/payment-global-data.service.ts","./src/app/dashboard/my-tontines/tontine-detail/loans/service/loan.service.ts","./src/app/shared/paidmode-tontine/paidmode-tontine.component.scss","./src/app/shared/service/error.service.ts","./src/app/shared/bankmode-loan/bankmode-loan.component.scss","./src/app/dashboard/my-tontines/services/contribution.service.ts","./src/app/dashboard/pesuswap/services/swap.service.ts","./src/app/app.component.html","./src/app/shared/contribution-loan/contribution-loan.component.html","./src/app/shared/tontine-invited-event/tontine-invited-event.component.html","./src/app/app.module.ts","./src/app/shared/paidmode-debt/paidmode-debt.component.html","./src/app/shared/contribution-loan/contribution-loan.component.scss","./src/app/shared/contribution/contribution.component.ts","./src/app/shared/cashmode-loan/cashmode-loan.component.ts","./src/app/shared/paidmode-seance-caution/paidmode-seance-caution.component.scss","./src/app/shared/paidmode-seance/paidmode-seance.component.html","./src/app/shared/pipes/string-truncate.pipe.ts","./src/app/shared/service/location.service.ts","./src/app/dashboard/tontines-events/services/tontines-events.service.ts","./src/app/shared/wallet-order/wallet-order.component.html","./src/app/shared/pipes/to-date-obj.pipe.ts","./src/app/shared/paidmode-swap/paidmode-swap.component.scss","./src/app/shared/contribution-order/contribution-order.component.scss","./src/app/dashboard/pesuswap/services/swap-error.service.ts","./src/app/shared/paidmode-debt-order/paidmode-debt-order.component.ts","./src/app/shared/select-data/select-data.component.html","./src/app/shared/contribution-loan/contribution-loan.component.ts","./src/app/shared/cashmode/cashmode.component.scss","./src/app/dashboard/my-tontines/services/debts-manager.service.ts","./src/app/shared/tontine-invited/tontine-invited.component.ts","./node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","./src/app/shared/paidmode/paidmode.component.scss","./src/app/shared/view-proof/view-proof.component.scss","./src/app/shared/wallet-order/wallet-order.component.ts","./src/app/shared/paidmode-seance-caution/paidmode-seance-caution.component.html","./src/app/shared/paidmode-tontine/paidmode-tontine.component.html","./src/app/shared/contribution-order/contribution-order.component.html","./src/app/shared/countries/countries.component.scss","./src/app/shared/wallet-order/wallet-order.component.scss","./src/app/shared/paidmode-swap/paidmode-swap.component.html","./src/app/shared/paidmode-loan/paidmode-loan.component.html","./src/app/shared/bankmode/bankmode.component.ts","./src/app/shared/paidmode-event/paidmode-event.component.ts","./src/app/shared/initiate-pay/initiate-pay.component.scss","./src/app/shared/contribution-order/contribution-order.component.ts","./src/app/shared/service/events.service.ts","./src/app/shared/pipes/remove-occurence.ts","./src/app/shared/contribution/contribution.component.html","./src/app/shared/paidmode-seance/paidmode-seance.component.ts","./src/app/shared/bankmode-loan/bankmode-loan.component.html","./src/app/shared/paidmode-tontine/paidmode-tontine.component.ts","./src/app/app-routing.module.ts","./src/app/shared/paidmode-loan/paidmode-loan.component.scss","./src/app/shared/initiate-pay/initiate-pay.component.html","./src/app/shared/bankmode/bankmode.component.html","./src/app/shared/view-proof/view-proof.component.ts","./src/app/shared/service/local-storage.service.ts","./src/app/app.component.scss","./src/app/shared/contribution/contribution.component.scss","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { UiService } from 'src/app/shared/service/ui.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InivitationErrorService {\r\n\r\n  constructor(\r\n    private translate: TranslateService,\r\n    private ui: UiService\r\n  ) { }\r\n\r\n\r\n  // check the invitation error action\r\n  manageInvitationError(error: any) {\r\n\r\n\r\n    if (error.error.tontine_event_admin_not_found) {\r\n      this.translate.get('ADMIN_EVENT_NOT_FOUND').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n\r\n    if (error.error.tontine_admin_not_found) {\r\n      this.translate.get('INVITATIONS_UNAUTHORIZED').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n\r\n    if (error.error.tontine_event_not_found) {\r\n      this.translate.get('TONTINE_EVENT_DELETE_ERROR1').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n\r\n    if (error.error.tontine_not_found) {\r\n      this.translate.get('TONTINE_EVENT_DELETE_ERROR1').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n\r\n    if (error.error.invitation_not_found) {\r\n      this.translate.get('TONTINE_INVITE_TEXT12').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n\r\n    if (error.error.invitation_state) {\r\n      this.translate.get('INVITATION_STATE_CHANGE').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n\r\n    if (error.error.code_not_found) {\r\n      this.translate.get('USER_SECURITY_MSG6').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n\r\n    if (error.error.code_already_used) {\r\n      this.translate.get('USER_SECURITY_MSG9').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n\r\n    if (error.error.code_expired) {\r\n      this.translate.get('USER_SECURITY_MSG8').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n\r\n    if (error.error.tontine_not_found) {\r\n      this.translate.get('TONTINE_INVITE_TEXT10').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n\r\n    if (error.error.invitation_code_invalid) {\r\n      this.translate.get('TONTINE_INVITE_TEXT13').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n\r\n    if (error.error.invitation_code_expired) {\r\n      this.translate.get('TONTINE_INVITE_TEXT15').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n\r\n    if (error.error.invitation_id_not_exist) {\r\n      this.translate.get('TONTINE_INVITE_TEXT12').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n\r\n    if (error.error.tontine_admin_not_found) {\r\n      this.translate.get('TONTINE_INVITE_TEXT9').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n\r\n    if (error.error.user_exist_tontine) {\r\n      this.translate.get('USER_ALREADY_MEMBER_MSG8').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n\r\n    if (error.error.phone_is_invalid) {\r\n      this.translate.get('USER_DETAIL_TEXT11').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // check the invitation error\r\n  manageInviteError(error: any) {\r\n\r\n    this.manageInvitationError(error);\r\n  \r\n    if (error && error.error && error.error.resultat && error.error.resultat.length > 0) {\r\n      let i = 0;\r\n      while (i < error.error.resultat.length) {\r\n        if (error.error.resultat[i].tontine_admin_not_found) {\r\n          this.translate.get('TONTINE_INVITED_TEXT6').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n        }\r\n\r\n        if (error.error.resultat[i].tontine_not_found) {\r\n          this.translate.get('TONTINE_INVITED_TEXT7').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n        }\r\n\r\n        if (error.error.resultat[i].user_exist_tontine) {\r\n          this.translate.get('TONTINE_INVITED_TEXT8').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n        }\r\n\r\n        if (error.error.resultat[i].user_unauthorized) {\r\n          this.translate.get('TONTINE_INVITED_TEXT10').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n        }\r\n\r\n        if (error.error.resultat[i].invitation_exist) {\r\n          this.translate.get('TONTINE_INVITED_TEXT11').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n        }\r\n\r\n        if (error.error.resultat[i].phone_is_invalid) {\r\n          this.translate.get('USER_DETAIL_TEXT11').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n        }\r\n        i++;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LocationService } from 'src/app/shared/service/location.service';\r\nimport { ApiService } from 'src/app/shared/service/api.service';\r\nimport { UserService } from '../../user/service/user.service';\r\nimport { EventService } from 'src/app/shared/service/events.service';\r\nimport { StorageData } from 'src/app/shared/service/storage.service';\r\nimport { LocalStorageService } from 'src/app/shared/service/local-storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TontineService {\r\n\r\n  typeTontineName: string;\r\n  token: string;\r\n\r\n  constructor(\r\n    private location: LocationService,\r\n    private storage: StorageData,\r\n    public api: ApiService,\r\n    private userService: UserService,\r\n    private event: EventService,\r\n    private localStorage: LocalStorageService\r\n  ) {\r\n    this.typeTontineName = '';\r\n    this.token = this.userService.getUserToken();\r\n    this.event.subscribe('new-token', token => {\r\n      this.token = token;\r\n    });\r\n  }\r\n\r\n  // Get the current user\r\n  getCurrentTontineData(): any {\r\n    const tontineData = this.localStorage.getItem('tontine-data');\r\n    return tontineData ? tontineData : null;\r\n  }\r\n\r\n  // Get the current user\r\n  setCurrentTontineData(tontineData: any) {\r\n    this.localStorage.setItem('tontine-data', tontineData);\r\n  }\r\n\r\n  // Remove the user data\r\n  removeCurrentTontineData() {\r\n    this.localStorage.removeItem('tontine-data');\r\n  }\r\n\r\n  // Get the current seance data\r\n  getCurrentSeanceData(): Promise<any> {\r\n    return this.storage.get('seance-data');\r\n  }\r\n\r\n  // set the current seance data\r\n  setCurrentSeanceData(seanceData: any) {\r\n    this.storage.remove('seance-data');\r\n    this.storage.set('seance-data', seanceData);\r\n  }\r\n\r\n\r\n  // Get the type of tontine\r\n  getTypeTontine() {\r\n    return this.api.get('tontine/type/v1/type_tontine');\r\n  }\r\n\r\n  // Get the type of payment\r\n  getTypePayment() {\r\n    return this.api.get('tontine/type/v2/payment');\r\n  }\r\n\r\n  // Get the type name\r\n  getTypeName(typeId: number, listTypes: any) {\r\n    listTypes.forEach(type => {\r\n      if (type.id === typeId) {\r\n        this.location.getTranslationData(`TYPE_TONTINE_ID${type.id}`).subscribe(value => {\r\n          this.typeTontineName = value[`TYPE_TONTINE_ID${type.id}`];\r\n        });\r\n      }\r\n    });\r\n    return this.typeTontineName;\r\n  }\r\n\r\n  // Create the tontine\r\n  createTontine(tontine) {\r\n    return this.api.post('tontine/create/v1/tontine_create', tontine);\r\n  }\r\n\r\n\r\n  // Get the general informations of the tontines\r\n  getInfoGeneraleTontine(tontineId: number) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('tontine/create/v1/get/tontine_section/' + tontineId +\r\n      '/information_generale/' + this.token);\r\n  }\r\n\r\n\r\n  // Get the tontines contribution setting\r\n  getParametreTontine(tontineId: number) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('tontine/create/v1/get/tontine_section/' + tontineId\r\n      + '/parametre_cotisation/' + this.token);\r\n  }\r\n\r\n\r\n  // Get all penality of tontine\r\n  getPenaliteTontine(tontineId: number) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('tontine/create/v1/get/tontine_section/' + tontineId\r\n      + '/penalites/' + this.token);\r\n  }\r\n\r\n\r\n  // Get tontines documentation\r\n  getDocumentationTontine(tontineId: number) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('tontine/create/v1/get/tontine_section/' + tontineId\r\n      + '/documentation/' + this.token);\r\n  }\r\n\r\n  // Get tontines duration\r\n  getDateTontine(tontineId: number) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('tontine/create/v1/get/tontine_section/' + tontineId +\r\n      '/cycle_et_cotisation/' + this.token);\r\n  }\r\n\r\n\r\n  // Update the tontine\r\n  updateTontine(tontine) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.put('tontine/create/v1/tontine_update_info_generale/' + this.token, tontine);\r\n  }\r\n\r\n  // Create and update the tontine setting\r\n  createAndUpdateParametreTontine(tontine) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.put('tontine/create/v1/tontine_update_parametre_cotisation/'\r\n      + this.token, tontine);\r\n  }\r\n\r\n\r\n  // Create and update the tontine penality\r\n  createAndUpdatePenaliteTontine(tontine) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.put('tontine/create/v1/tontine_update_penalite/' + this.token, tontine);\r\n  }\r\n\r\n  // Create and update the tontine date\r\n  createAndUpdateDateTontine(tontine) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.put('tontine/create/v1/tontine_update_cycle/' + this.token, tontine);\r\n  }\r\n\r\n  // Create and update the tontine documentation\r\n  createAndUpdateDocumentationTontine(tontine) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.put('tontine/create/v1/tontine_update_documentation/' + this.token, tontine);\r\n  }\r\n\r\n  // Get the user tontine\r\n  getMyTontine() {\r\n    this.token = this.userService.getUserToken();\r\n    if (this.token) {\r\n      return this.api.get('tontine/user/v1/tontine_user/' + this.token);\r\n    }\r\n  }\r\n\r\n  // Get the  tontine information\r\n  getTontineDetail(tontineId: number) {\r\n    this.token = this.userService.getUserToken();\r\n    if (this.token) {\r\n      return this.api.get('tontine/visualiser/v1/visualiser_tontine/' + tontineId + '/' + this.token);\r\n    }\r\n  }\r\n\r\n  // Get the quality of the tontine\r\n  getQualityTontine() {\r\n    return this.api.get('tontine/quality/v1/quality_tontine');\r\n  }\r\n\r\n\r\n  // Add or remove the user role\r\n  addOrRemoveUserRole(tontine: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('tontine/attribute/v1/role/tomember/' + this.token, tontine);\r\n  }\r\n\r\n\r\n  // The list of tontime members\r\n  getTontinesMembers(tontineId: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('tontine/invitation/v1/member_confirmed/' + tontineId + '/' + this.token);\r\n  }\r\n\r\n  /** ============ Parts services start ============= */\r\n\r\n\r\n  // Add a member part\r\n  addPartMembreTontine(demandePart: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('part/v1/addPartMember/' + this.token, demandePart);\r\n  }\r\n\r\n  // Remove a part from a member\r\n  removePartMembreTontine(part: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('part/v1/subtractPartMember/' + this.token, part);\r\n  }\r\n\r\n  // Get all the part of tontine member\r\n  getPartMembreTontine(tontineId: number) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('part/v1/getAllPartMember/' + tontineId + '/' + this.token);\r\n  }\r\n\r\n  // Get all the part of tontine member with token\r\n  getPartMembreTontineWithToken(tontineId: number) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('part/v1/getAllPartMember/' + tontineId + '/' + this.token);\r\n  }\r\n\r\n  // Get all the part of tontine member with userId\r\n  getPartMembreTontineWithUserId(tontineId: number, userId: number) {\r\n    return this.api.get('part/v1/getAllPartMember/' + tontineId + '/' + userId);\r\n  }\r\n\r\n\r\n\r\n  /** ============ Statistics services start ============= */\r\n\r\n  // Get all cycles of a tontine\r\n  getTontinesCycles(tontineId: number) {\r\n    return this.api.get('statistique/v2/tontine/get/cycles/' + tontineId);\r\n  }\r\n\r\n  // Get all seances of a tontine's cycle\r\n  getTontinesCyclesSeances(cycleId: number) {\r\n    return this.api.get('statistique/v1/tontine/get/seance/' + cycleId);\r\n  }\r\n\r\n  // Get all data statistics of a tontine\r\n  getAllStatisticsData(tontineData: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('statistique/v1/tontine/' + this.token, tontineData);\r\n  }\r\n\r\n  // Get the list of members of a seance\r\n  getMembersSeanceList(cycleId: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('statistique/get/list/member/' + cycleId + '/' + this.token);\r\n  }\r\n\r\n  /** ============ Statistics services end ============= */\r\n\r\n\r\n  // update the quota admin validator\r\n  updateAdminValidator(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.put('tontine/create/v1/tontine_update_role/' + this.token, data);\r\n  }\r\n\r\n  /* Order the member list */\r\n  orderMembersList(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('ordering/v1/permut/order/bouffe/member/' + this.token, data);\r\n  }\r\n\r\n  /* Order the member list */\r\n  designatedJackpotList(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('ordering/v1/designate/member/bouffe/' + this.token, data);\r\n  }\r\n\r\n  /* get all member contribution for a tontine */\r\n  getMemberStokvelContribution(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    if (this.token) {\r\n      return this.api.post('trace/v1/etat/member/tontine/' + this.token, data);\r\n    }\r\n\r\n  }\r\n\r\n  // Disable a member of a tontine\r\n  disableTontineMember(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('membre/tontine/v1/active/or/desative/' + this.token, data);\r\n  }\r\n\r\n  // Disable a tontine\r\n  disableTontine(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('tontine/archived/' + this.token, data);\r\n  }\r\n\r\n  // Disable a tontine\r\n  setNbBatches(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('numberlot/tontine/set/nombre/lot/seance/' + this.token, data);\r\n  }\r\n\r\n\r\n  // get members who have paid full cautions\r\n  getMembersPaidFullCautions(cycleId: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get(`caution/get/member/withFullCaution/${cycleId}/` + this.token);\r\n  }\r\n\r\n\r\n  // get members who have paid partial cautions\r\n  getMembersPaidPartialCautions(cycleId: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get(`caution/get/member/withOutFullCaution/${cycleId}/` + this.token);\r\n  }\r\n\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'commadumper'\n})\nexport class CommaDumperPipe implements PipeTransform {\n\n  transform(value: any): any {\n    if (!value) {\n       return '0';\n    }\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n}\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from 'src/app/shared/service/api.service';\r\nimport { UserService } from 'src/app/dashboard/user/service/user.service';\r\nimport { EventService } from 'src/app/shared/service/events.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WalletTontineService {\r\n\r\n  token: string;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private api: ApiService,\r\n    private event: EventService\r\n  ) {\r\n    this.token = this.userService.getUserToken();\r\n    this.event.subscribe('new-token', token => {\r\n      this.token = token;\r\n    });\r\n  }\r\n\r\n    // Add a nez cashier\r\n    addCashier(tontine: any) {\r\n      this.token = this.userService.getUserToken();\r\n      return this.api.post(`tontine/wallet/v1/tontine/${this.token}`, tontine);\r\n    }\r\n\r\n    // Get all types of cashiers\r\n    getAllCashiers(tontineId: number) {\r\n      return this.api.get(`tontine/wallet/v1/get/all/caisses/${tontineId}`);\r\n    }\r\n\r\n    // Get the tontine wallet\r\n    getTontineWallet(tontine: any) {\r\n      this.token = this.userService.getUserToken();\r\n      if (this.token) {\r\n        return this.api.post(`tontine/wallet/v1/see/wallet/${this.token}`, tontine);\r\n      }\r\n     \r\n    }\r\n\r\n    // Get all wallet transaction\r\n    getWalletTransaction(data: any) {\r\n      this.token = this.userService.getUserToken();\r\n      return this.api.post(`tontine/wallet/v1/get/all/transaction/${this.token}`, data);\r\n    }\r\n\r\n    // Get traditionnnal banking wallet transaction to validate\r\n    getTradiBankingTransactionToValidate(data: any) {\r\n      this.token = this.userService.getUserToken();\r\n      return this.api.post(`tontine/wallet/v1/get/pending/transaction/${this.token}`, data);\r\n    }\r\n\r\n    // get proof of wallet transactions\r\n    getWalletTransactionsProofs(data: any) {\r\n      this.token = this.userService.getUserToken();\r\n      return this.api.post(`tontine/wallet/v1/get/proof/of/a/transaction/${this.token}`, data);\r\n    }\r\n\r\n    // Permit to admin to validate a transaction\r\n    validateTransByAdmin(data: any) {\r\n      this.token = this.userService.getUserToken();\r\n      return this.api.post(`tontine/wallet/v1/validate/a/deposit/transaction/${this.token}`, data);\r\n    }\r\n\r\n    // Cancel a deposit by admin\r\n    cancelTransByAdmin(data: any) {\r\n      this.token = this.userService.getUserToken();\r\n      return this.api.post(`tontine/wallet/v1/rejected/a/deposit/transaction/${this.token}`, data);\r\n    }\r\n\r\n    // transfert money from cashier to cashier\r\n    transfertFromCashierToCashier(data: any) {\r\n      this.token = this.userService.getUserToken();\r\n        return this.api.post(`tontine/wallet/v1/transfert/cash/source/to/destination/fund/${this.token}`, data);\r\n    }\r\n\r\n    // Make a deposit with traditionnal banking\r\n    makeDepositWithTraditionnalBanking(data: any) {\r\n      this.token = this.userService.getUserToken();\r\n      return this.api.post(`tontine/wallet/v1/save/deposit/withTraditionalBanking/${this.token}`, data);\r\n    }\r\n\r\n    /* Make deposit with ORANGE, MTN, PAYPAL, OZOW  with and without  conversion */\r\n    makeDepositWithMobileMoneyWithoutConversion(data: any) {\r\n      this.token = this.userService.getUserToken();\r\n      return this.api.post(`tontine/wallet/v1/save/deposit/withOnlineWallet/without/conversion/${this.token}`, data);\r\n    }\r\n\r\n    makeDepositWithMobileMoneyWithConversion(data: any) {\r\n      this.token = this.userService.getUserToken();\r\n      return this.api.post(`tontine/wallet/v1/save/deposit/withOnlineWallet/with/conversion/${this.token}`, data);\r\n    }\r\n\r\n    /* Withdrawal route specially for this route put token on body */\r\n\r\n    // Make a new withdrawal request \r\n    newWithdrawalRequest(data: any) {\r\n      return this.api.post(`reqwithdrawalTontine/new`, data);\r\n    }\r\n\r\n    // Save tontine bank profile\r\n    saveTontineBankProfile(data: any) {\r\n      return this.api.post(`reqwithdrawalTontine/savetontinebankprofile`, data);\r\n    }\r\n\r\n    // update tontine bank profile \r\n    updateTontineBankProfile(data: any) {\r\n      return this.api.post(`reqwithdrawalTontine/updatetontinebankprofile`, data);\r\n    }\r\n\r\n    // Delete the tontine bank profile\r\n    deleteTontineBankProfile(data: any) {\r\n      return this.api.post(`reqwithdrawalTontine/deletetontinebankprofile`, data);\r\n    }\r\n\r\n    // Get all the bank profile\r\n    getAllBankProfile(data: any) {\r\n      return this.api.post(`reqwithdrawalTontine/getallbankprofiles`, data);\r\n    }\r\n\r\n    // get the detail informations of bank profile \r\n    getInfoBankProfile(data: any) {\r\n      return this.api.post(`reqwithdrawalTontine/getinfobank`, data);\r\n    }\r\n\r\n    // Get all withdrawal request from a tontine\r\n    geAlltWithdrawallRequest(data: any) {\r\n      return this.api.post(`reqwithdrawalTontine/getallwithdrawrequest`, data);\r\n    }\r\n\r\n    // Get all approval request from a tontine withdrawal\r\n    getAllApprovalRequest(data: any) {\r\n      return this.api.post(`reqwithdrawalTontine/getallapprovalwithdraw`, data);\r\n    }\r\n\r\n    // Get all refusal request from a withdrawal \r\n    getAllRefusalRequest(data: any) {\r\n      return this.api.post(`reqwithdrawalTontine/getallrefusalwithdraw`, data);\r\n    }\r\n\r\n\r\n    // Approve a request for request withdrawal\r\n    approveWithdrawalRequest(data: any) {\r\n       return this.api.post(`reqwithdrawalTontine/approvalwithdraw`, data);\r\n    }\r\n\r\n    // Deny a withdrawal request\r\n    denyWithdrawalRequest(data: any) {\r\n      return this.api.post(`reqwithdrawalTontine/denywithdraw`, data);\r\n    }\r\n\r\n    \r\n    /* Make deposit with cash*/\r\n    makeDepositWithCash(data: any) {\r\n      this.token = this.userService.getUserToken();\r\n      return this.api.post(`tontine/wallet/v1/save/deposit/withCash/${this.token}`, data);\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormUtilsService {\r\n\r\n  constructor() { }\r\n\r\n\r\n  \r\n  // Get the troncate name\r\n  troncateName(value: string, nbDigit: number) {\r\n    return value && value.length < nbDigit ? value : value ? value.substring(0, nbDigit) + '...' : ''\r\n  }\r\n\r\n  // Remove space\r\n  removeSpace(inputData: any) {\r\n      const input = String(inputData);\r\n      return input.replace(/\\s/g, \"\");\r\n  }\r\n\r\n  validateEmail(myEmail: string) {\r\n    const regex = /^[a-zA-Z0-9._-]+@[a-z0-9._-]{2,}[.][a-z]{2,4}$/;\r\n    if (!regex.test(myEmail)) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  validatePhone(myPhone: string) {\r\n    const regex = /^[0-9]{6,13}$/;\r\n    if (!regex.test(myPhone)) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  validatePin(myPin: string) {\r\n    const regex = /^[0-9]{5}$/;\r\n    if (!regex.test(myPin)) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  validateMisaPrix(miseAprix: string) {\r\n    const regex = /^[0-9]+$/;\r\n    if (!regex.test(miseAprix)) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n    // Get a random id\r\n    getRandomId(): string {\r\n      let text = 'M';\r\n      const possible = 'ABCDEFGHJKLMPQRSTUVWXYZabcdefghjklmpqrstuvwxyz';\r\n      const chiffre = '0123456789';\r\n      for (let i = 0; i <= 5; i++) {\r\n          text += chiffre.charAt(Math.floor(Math.random() * chiffre.length));\r\n      }\r\n      return text;\r\n    }\r\n\r\n      // Format phone number\r\n  formatPhoneNumber(phoneNumberString: any, prefix: string) {\r\n    let  phone = phoneNumberString;\r\n    if (prefix === '237') {\r\n       phone = ('' + phoneNumberString).replace(/\\B(?=(\\d{2})+(?!\\d))/g, \" \");\r\n    } else if (prefix === '27') {\r\n       phone = ('' + phoneNumberString).replace(/\\B(?=(\\d{2})+(?!\\d))/g, \" \");\r\n       const codePhone: string[] = phone.split(' ');\r\n       if (codePhone && codePhone.length > 2) {\r\n          let phonePrex = codePhone[0] + codePhone[1] + codePhone[2];\r\n          phonePrex = phonePrex.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\r\n          codePhone.splice(0,3);\r\n          while(codePhone.length) {\r\n            phonePrex += ' ' + codePhone.splice(0,1);\r\n          }\r\n          phone = phonePrex;\r\n       } \r\n    }\r\n    \r\n    return phone;\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZWxlY3QtZGF0YS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageData {\n\n  constructor(\n    private storage: Storage\n  ) { }\n\n async set(key: string, value: any) {\n  await this.storage.set(key, value);\n  }\n\n  async get(key: string) {\n   return await this.storage.get(key);\n  }\n\n  async remove(key: string) {\n    await this.storage.remove(key);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filterdata'\n})\nexport class FilterDataPipe implements PipeTransform {\n\n  transform(items: any[], value: string, label:any): any[] {\n    if (!items) return [];\n    if (!value) return  items;\n    if (value == '' || value == null) return [];\n\n    if (label==\"title\") {\n       return items.filter((e:any) => e.title.toLowerCase().indexOf(value) > -1 );\n    }\n\n    if (label==\"NAMES\") {\n       return items.filter((e:any) => e.NAMES.toLowerCase().indexOf(value) > -1 );\n    }\n  } \n}\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ErrorService } from '../service/error.service';\r\nimport { DebtsManagerService } from 'src/app/dashboard/my-tontines/services/debts-manager.service';\r\nimport { TontineService } from 'src/app/dashboard/my-tontines/services/tontine.service';\r\nimport { PaymentErrorService } from '../service/payment-error.service';\r\nimport { EventService } from '../service/events.service';\r\nimport { UiService } from '../service/ui.service';\r\n\r\n@Component({\r\n  selector: 'app-cashmode',\r\n  templateUrl: './cashmode.component.html',\r\n  styleUrls: ['./cashmode.component.scss'],\r\n})\r\nexport class CashmodeComponent implements OnInit {\r\n\r\n  @Input() amountPay: number;\r\n  @Input() balance: number;\r\n\r\n  paymentForm: FormGroup;\r\n  validationMessages: any;\r\n  loadingPay: boolean;\r\n  currentTontine: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private translate: TranslateService,\r\n    private event: EventService,\r\n    private tontine: TontineService,\r\n    private error: ErrorService,\r\n    private debt: DebtsManagerService,\r\n    private ui: UiService,\r\n    private paymentError: PaymentErrorService\r\n  ) {\r\n    this.loadingPay = false;\r\n    this.currentTontine = this.tontine.getCurrentTontineData();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initFormMessage();\r\n    this.initCashPayment();\r\n  }\r\n\r\n  // Getters\r\n  get amount() {\r\n    return this.paymentForm.get('amount');\r\n  }\r\n\r\n  // Init form\r\n  initFormMessage() {\r\n    this.translate.get(['DEBT_AMOUNT_REQUIRED_TEXT']).subscribe(trans => {\r\n      this.validationMessages = {\r\n        amount: [\r\n          { type: 'required', message: trans.DEBT_AMOUNT_REQUIRED_TEXT }\r\n        ]\r\n      };\r\n    });\r\n  }\r\n\r\n  // Init traditional banking payment\r\n  initCashPayment() {\r\n    const params = this.debt.getDebtsData();\r\n    const items = params.items;\r\n    const itemsParams = [];\r\n    items.forEach(item => {\r\n      itemsParams.push({ seance_id: item.seance_id, numero_part: item.numero_part, montant: item.montant, typecontribution_id: item.typecontribution_id });\r\n    });\r\n    this.paymentForm = this.fb.group({\r\n      reference_facture: [params.facture ? params.facture.reference : ''],\r\n      device_id: [params.facture ? params.facture.device_id : ''],\r\n      montant_total_facture: [params.facture ? params.facture.montant : 0],\r\n      currency: [params.facture ? params.facture.device_name : 0],\r\n      amount: [this.balance, Validators.compose([Validators.required, Validators.min(1)])],\r\n      liste_item: [itemsParams, Validators.required],\r\n      receipt: [''],\r\n      liste_proof: [[]],\r\n      tontine_id: [params.facture ? params.facture.tontine_id : '']\r\n    });\r\n  }\r\n\r\n  // Make the payment\r\n  makePayment() {\r\n    this.paymentForm.get('liste_proof').setValue([{\r\n      montant: this.paymentForm.value.amount,\r\n      description: '',\r\n      receipt: ''\r\n    }]);\r\n    this.loadingPay = true;\r\n    this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n      this.ui.presentLoading(value);\r\n    });\r\n    this.debt.PayDueWithCash(this.paymentForm.value).subscribe((reponse: any) => {\r\n      this.loadingPay = false;\r\n      this.ui.dismissLoading();\r\n      if (reponse && reponse.message === 'success') {\r\n        this.translate.get('DEBT_PAYMENT_SUCCES_MSG').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n        });\r\n\r\n        if (this.balance - this.paymentForm.value.amount === 0) {\r\n          this.event.publish('modal-close', { result: 'complete' });\r\n        } else {\r\n          this.event.publish('modal-close', { result: 'partial' });\r\n        }\r\n      }\r\n    }, error => {\r\n  \r\n     \r\n      if (error && error.error) {\r\n        if (error.error.user_not_found) {\r\n          this.error.renewSession().then((data: any) => {\r\n            if (data && data.result === \"OK\") {\r\n              this.ui.dismissLoading();\r\n              this.makePayment();\r\n            } else {\r\n              this.ui.dismissLoading();\r\n              this.loadingPay = false;\r\n            }\r\n          });\r\n        } else {\r\n          this.loadingPay = false;\r\n          this.ui.dismissLoading();\r\n          this.paymentError.managePaymentOfflineError(error);\r\n        }\r\n      } else {\r\n        this.loadingPay = false;\r\n        this.ui.dismissLoading();\r\n        this.error.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcmVmaXguY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { LocationService } from 'src/app/shared/service/location.service';\nimport { ModalController, IonInfiniteScroll } from '@ionic/angular';\nimport { UtilService } from '../service/util.service';\n\n@Component({\n  selector: 'app-prefix',\n  templateUrl: './prefix.component.html',\n  styleUrls: ['./prefix.component.scss'],\n})\nexport class PrefixComponent implements OnInit {\n\n  loading: boolean;\n  filterData: any[];\n  states: any[];\n  filter: boolean;\n  allData: any[];\n  nbItems: number;\n  @ViewChild(IonInfiniteScroll, { static: false }) infiniteScroll: IonInfiniteScroll;\n\n  constructor(\n    private location: LocationService,\n    private util: UtilService,\n    private modal: ModalController,\n  ) {\n    this.filterData = [];\n    this.states = [];\n    this.loading = false;\n    this.filter = false;\n    this.allData = [];\n    this.nbItems = 15;\n  }\n\n  ngOnInit() {\n    this.loading = true;\n    this.getWordCountries(false, null);\n  }\n\n  // Filter the list of tontines\n  searchForInvitation(ev: any) {\n    this.infiniteScroll.disabled = false;\n    this.filter = true;\n    const val = ev.target.value;\n    if (val && val.trim() !== '') {\n      this.allData = this.filterData.filter((country) => {\n        return (country.country_label.toLowerCase().indexOf(val.toLowerCase()) > -1);\n      });\n      if (this.allData.length > this.nbItems) {\n        for (let i = 0; i < this.nbItems; i++) {\n          this.states.push(this.allData[this.states.length]);\n        }\n      } else {\n        this.states = this.allData;\n      }\n    } else {\n      this.states = this.filterData;\n    }\n  }\n\n  // Get all the word countries\n  getWordCountries(refresh, event) {\n    this.location.getWordCountries(refresh).then((countries: any) => {\n      if (countries && countries.length > 0) {\n        const states = this.util.orderByKey(countries, 'country_label');\n        this.allData = states;\n        this.filterData = states;\n        if (this.allData.length > this.nbItems) {\n          for (let i = 0; i < this.nbItems; i++) {\n            this.states.push(this.allData[this.states.length]);\n          }\n        } else {\n          this.states = this.allData;\n        }\n      }\n\n      if (event) {\n        setTimeout(() => {\n          event.target.complete();\n        }, 200);\n      }\n      this.loading = false;\n    });\n  }\n\n  // Refresh the list\n  refreSher(event) {\n    this.infiniteScroll.disabled = false;\n    this.getWordCountries(true, event);\n  }\n\n  // Infinite scroll data\n  infinteScrollData(event) {\n    setTimeout(() => {\n      for (let i = 0; i < this.nbItems; i++) {\n        if (this.states.length < this.allData.length) {\n          this.states.push(this.allData[this.states.length]);\n        } else if (this.states.length === this.allData.length) {\n          event.target.disabled = true;\n        }\n      }\n      event.target.complete();\n    }, 2000);\n  }\n\n  // select a country\n  selectCountry(event) {\n    this.modal.dismiss(event.detail.value, 'select');\n  }\n\n  // close modal\n  closeCountries() {\n    this.modal.dismiss(null, 'cancel');\n  }\n\n\n}\n","export default \"<form [formGroup]=\\\"paymentForm\\\">\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"12\\\">        \\r\\n        <ion-card class=\\\"paidmode\\\">\\r\\n          <ion-card-content class=\\\"ion-text-center\\\">\\r\\n              <ion-row class=\\\"ion-padding-bottom\\\">\\r\\n                <ion-col size=\\\"12\\\">\\r\\n                  <ion-item>\\r\\n                    <ion-label position=\\\"floating\\\">{{ 'AMOUNT_PAY_TEXT' | translate }}</ion-label>\\r\\n                    <ion-input type=\\\"number\\\" formControlName=\\\"amount\\\"></ion-input>\\r\\n                    <span slot=\\\"end\\\" class=\\\"slot-prefix ion-no-margin\\\"> {{ paymentForm.value.currency }} </span>\\r\\n                  </ion-item> \\r\\n                  <div class=\\\"validation-errors\\\">\\r\\n                    <ng-container *ngFor=\\\"let validation of validationMessages.amount\\\">\\r\\n                      <div class=\\\"error-message\\\" *ngIf=\\\"amount.hasError(validation.type) && (amount.dirty || amount.touched)\\\">\\r\\n                        <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                        {{ validation.message }}\\r\\n                      </div>\\r\\n                    </ng-container>\\r\\n                  </div>          \\r\\n                </ion-col>    \\r\\n              </ion-row>                            \\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n      </ion-col>      \\r\\n    </ion-row>\\r\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\r\\n      <ion-col size=\\\"auto\\\">\\r\\n        <ion-button expand=\\\"full\\\" [disabled]=\\\"paymentForm.invalid || loadingPay\\\"\\r\\n              (click)=\\\"makePayment()\\\"\\r\\n              color=\\\"warning\\\" \\r\\n              class=\\\"ion-text-uppercase\\\"\\r\\n              shape=\\\"round\\\"\\r\\n              [class.ion-hide]=\\\"balance - paymentForm.value.amount === 0\\\"\\r\\n              >\\r\\n         {{ 'SAVE_PARTIAL_PAYMENT' | translate }}\\r\\n        </ion-button>\\r\\n        <ion-button expand=\\\"full\\\" [disabled]=\\\"paymentForm.invalid || loadingPay\\\"\\r\\n              (click)=\\\"makePayment()\\\"\\r\\n              color=\\\"warning\\\" \\r\\n              class=\\\"ion-text-uppercase\\\"\\r\\n              shape=\\\"round\\\"\\r\\n              [class.ion-hide]=\\\"balance - paymentForm.value.amount  !== 0\\\"\\r\\n              >\\r\\n         {{ 'SUBMIT_FOR_APPROVAL' | translate }}\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n      <p class=\\\"ion-text-center\\\" *ngIf=\\\"loadingPay\\\">\\r\\n        <ion-spinner  name=\\\"circles\\\"></ion-spinner> \\r\\n      </p>\\r\\n    </ion-row>  \\r\\n  </ion-grid>\\r\\n  </form> \\r\\n  \";","import { Injectable } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { ApiService } from 'src/app/shared/service/api.service';\r\nimport { EventService } from 'src/app/shared/service/events.service';\r\nimport { UserService } from '../../user/service/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WalletService {\r\n\r\n  private subject = new Subject<any>();\r\n  token: string;\r\n\r\n  constructor(\r\n    public api: ApiService,\r\n    private userService: UserService,\r\n    private event: EventService\r\n  ) {\r\n    this.token = this.userService.getUserToken();\r\n    this.event.subscribe('new-token', token => {\r\n      this.token = token;\r\n    });\r\n  }\r\n\r\n  sendMessageWalletRecharge(message: any) {\r\n    this.subject.next({ recharge: message });\r\n  }\r\n\r\n  getMessageWalletRecharge(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  sendMessageAddAccount(message: any) {\r\n    this.subject.next({ account: message });\r\n  }\r\n\r\n  getMessageAddAccount(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  // Permit to the user to recharge his wallet without conversion\r\n  rechargeWallet(wallet: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('contribution/v1/charger/portemonnaie/' + this.token, wallet);\r\n  }\r\n\r\n  // Permit to the user to recharge his wallet after conversion\r\n  rechargeWalletWithConversion(wallet: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('contribution/v2/charger/portemonnaie/afterConvertDevice/' + this.token, wallet);\r\n  }\r\n\r\n  // Check the payment status throught Operator (MTN, orange, paypal, ozow )\r\n  getStatusPaymentOperator(payToken: string, operator: any) {\r\n    return this.api.get(`get/status/paiement/${operator}/${payToken}`);\r\n  }\r\n\r\n\r\n  // Check the payment status throught Operator (MTN, orange, paypal, ozow )\r\n  getStatusPaymentEventOperator(payToken: string, operator: any) {\r\n    return this.api.get(`get/status/paiementEvent/${operator}/${payToken}`);\r\n  }\r\n\r\n\r\n  /*======= Begin  paiement de Orange  ======*/\r\n\r\n  // Check the payment status throught Orange\r\n  getStatusOrangePayment(payToken: string) {\r\n    return this.api.get(`get/status/paiement/orange/${payToken}`);\r\n  }\r\n\r\n  // Check the payment status throught Orange\r\n  getStatusOrangePaymentEvent(payToken: string) {\r\n    return this.api.get(`get/status/paiementEvent/orange/${payToken}`);\r\n  }\r\n\r\n    // Get all  Orange Transaction inittiate on the system\r\n    getOrangeTransactionInitiate(payToken: string) {\r\n      return this.api.get(`get/status/paiement/orange/${payToken}`);\r\n    }\r\n\r\n  // Check the status paymnent throught SDK GAMES SERVER\r\n  checkPaymentStatusViaOrange(wallet: any) {\r\n    return this.api.post('paygateway/orange/checkTransation', wallet);\r\n  }\r\n\r\n  /*======= End paiement de Orange  ======*/\r\n\r\n\r\n\r\n  /*======= Begin paiement de Payapal  ======*/\r\n\r\n  // Check the payment status throught Paypal\r\n  getStatusPaypalPayment(payToken: string) {\r\n    return this.api.get(`get/status/paiement/paypal/${payToken}`);\r\n  }\r\n\r\n  // Check the payment status throught Paypal\r\n  getStatusPaypalPaymentEvent(payToken: string) {\r\n    return this.api.get(`get/status/paiementEvent/paypal/${payToken}`);\r\n  }\r\n\r\n  // Get all  paypal Transaction inittiate on the system\r\n   getPaypalTransactionInitiate(payToken: string) {\r\n      return this.api.get(`get/status/paiement/paypal/${payToken}`);\r\n  }\r\n\r\n  // Check the status paymnent for Paypal throught SDK GAMES SERVER\r\n  checkPaymentStatusViaPaypal(wallet: any) {\r\n    return this.api.post('paygateway/paypal/checkTransation', wallet);\r\n  }\r\n\r\n  /*======= End Mode de paiement de Payapal  ======*/\r\n\r\n\r\n\r\n  /*======= Begin Mode de paiement de Ozow  ======*/\r\n\r\n\r\n  // Check the payment status throught Ozow\r\n  getStatusOzowPayment(payToken: string) {\r\n    return this.api.get(`get/status/paiement/ozow/${payToken}`);\r\n  }\r\n\r\n  // Check the payment event status throught Ozow\r\n  getStatusOzowPaymentEvent(payToken: string) {\r\n    return this.api.get(`get/status/paiementEvent/ozow/${payToken}`);\r\n  }\r\n\r\n  // Get all  Ozow Transaction inittiate on the system\r\n    getOzowTransactionInitiate(payToken: string) {\r\n      return this.api.get(`get/status/paiement/Ozow/${payToken}`);\r\n    }\r\n\r\n  // Check the status paymnent for Ozow throught SDK GAMES SERVER\r\n  checkPaymentStatusViaOzow(wallet: any) {\r\n    return this.api.post('paygateway/ozow/checkTransation', wallet);\r\n  }\r\n\r\n  /*======= End Mode de paiement de Ozow   =======*/\r\n\r\n\r\n\r\n  /*======= Begin Mode de paiement de MTN  ======*/\r\n\r\n\r\n  // Check the payment status throught MTN\r\n  getStatusMtnPayment(payToken: string) {\r\n    return this.api.get(`get/status/paiement/MTN/${payToken}`);\r\n  }\r\n\r\n  // Check the payment event status throught MTN\r\n  getStatusMtnPaymentEvent(payToken: string) {\r\n    return this.api.get(`get/status/paiementEvent/MTN/${payToken}`);\r\n  }\r\n\r\n  getMtnTransactionInitiate(payToken: string) {\r\n    return this.api.get(`get/pending/payment/MTN/${payToken}`);\r\n  }\r\n\r\n    // Check the status paymnent for mtn throught SDK GAMES SERVER\r\n    checkPaymentStatusViaMtn(wallet: any) {\r\n      return this.api.post('paygateway/mtn/checkTransation', wallet);\r\n    }\r\n\r\n  /*======= End Mode de paiement de MTN   =======*/\r\n\r\n\r\n\r\n\r\n  /* ================== Withdrawal service ===================== */\r\n\r\n  // save a bank profile\r\n  saveBankProfile(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`cash/out/v1/bank/profil/save/` + this.token, data);\r\n  }\r\n\r\n  // save a bank profile\r\n  updateBankProfile(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`cash/out/v1/bank/profil/update/` + this.token, data);\r\n  }\r\n\r\n  // save a bank profile\r\n  DeleteBankProfile(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`cash/out/v1/bank/profil/delete/` + this.token, data);\r\n  }\r\n\r\n  // Get all bank\r\n  getAllBank() {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get(`cash/out/v1/get/bank/profil/` + this.token);\r\n  }\r\n\r\n  // Get all the detail of the bank\r\n  getBankDetail(bankId: number) {\r\n    return this.api.get(`cash/out/v1/get/infos/bank/` + bankId);\r\n  }\r\n\r\n  // Submit a request of bank\r\n  submitRequest(bankInfos: number) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`cash/out/v1/request/save/` + this.token, bankInfos);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from 'src/app/shared/service/api.service';\r\nimport { EventService } from 'src/app/shared/service/events.service';\r\nimport { LocalStorageService } from 'src/app/shared/service/local-storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  // tslint:disable-next-line: variable-name\r\n  token: string;\r\n\r\n  constructor(\r\n    private api: ApiService,\r\n    private localStorage: LocalStorageService,\r\n    private event: EventService\r\n  ) {\r\n    this.token = this.getUserToken();\r\n    this.event.subscribe('new-token', token => {\r\n      this.token = token;\r\n    });\r\n  }\r\n\r\n  // Get the current user session Language\r\n  public getCurrentUserSessionLanguage() {\r\n    return this.localStorage.getItem('user-session-language');\r\n  }\r\n\r\n  // Set the current user session Language\r\n  public setCurrentUserSessionLanguage(lang: any) {\r\n    this.localStorage.setItem('user-session-language', lang);\r\n  }\r\n\r\n  // Get the current user device\r\n  public getUserDevice(): any {\r\n    return this.localStorage.getItem('user-device');\r\n  }\r\n\r\n  // Set the current user device\r\n  public setUserDevice(data: any) {\r\n    this.localStorage.setItem('user-device',data);\r\n  }\r\n\r\n  // Get the current user registration Data\r\n  public getRegistrationData(): any {\r\n    return this.localStorage.getItemSecure('user-registration-data');\r\n  }\r\n\r\n  // Set the current user registration Data\r\n  public setRegistrationData(userData: any) {\r\n    this.localStorage.setItemSecure('user-registration-data', userData);\r\n  }\r\n\r\n  // Get the current user\r\n  public getUserData(): any {\r\n    return this.localStorage.getItemSecure('user-data');\r\n  }\r\n\r\n  // Set the current user\r\n  public setUserData(userData: any) {\r\n    this.localStorage.setItemSecure('user-data', userData);\r\n  }\r\n\r\n  // Get the current user payemnt method\r\n  public getUserpaymentMethod(): any {\r\n    return this.localStorage.getItem('user-payment-method');\r\n  }\r\n\r\n  // Get the current user payemnt method\r\n  public setUserPaymentMethod(data: any) {\r\n    this.localStorage.setItem('user-payment-method', data);\r\n  }\r\n\r\n  // Get the  user token\r\n  public getUserToken(): any {\r\n    return  this.localStorage.getItem('user-token');\r\n  }\r\n\r\n  // Get the  user token\r\n  public setUserToken(token: any) {\r\n    this.localStorage.setItem('user-token', token);\r\n  }\r\n\r\n  // Get the  user role\r\n  public getUserRole(): any {\r\n    return this.localStorage.getItem('user-role');\r\n  }\r\n\r\n  // Get the  user role\r\n  public setUserRole(role: any) {\r\n    this.localStorage.setItem('user-role', role);\r\n  }\r\n\r\n  // Get the  user badge\r\n  public getUserBadge(): any {\r\n    return this.localStorage.getItem('user-badge');\r\n  }\r\n\r\n  // Get the  user badge\r\n  public setUserBadge(badge: any) {\r\n    this.localStorage.setItem('user-badge', badge);\r\n  }\r\n\r\n  // Get the  user credentials\r\n  public getUserSecret(): any {\r\n    return this.localStorage.getItemSecure('user-credentials');\r\n  }\r\n\r\n  // Set the  user credentials\r\n  public setUserSecret(credentials: any) {\r\n    this.localStorage.setItemSecure('user-credentials', credentials);\r\n  }\r\n\r\n  // update the user language\r\n  updateUserLang(user: any) {\r\n    this.token = this.getUserToken();\r\n    return this.api.post('user/update/langue/user/' + this.token, user);\r\n  }\r\n\r\n  // Get the grade level of the user\r\n  getGradeLevelUser() {\r\n    this.token = this.getUserToken();\r\n    return this.api.get('user/school/v1/gradelevel/' + this.token);\r\n  }\r\n\r\n  // Add a grade level of a user\r\n  addGradeLevelUser(grade: any) {\r\n    this.token = this.getUserToken();\r\n    return this.api.post('user/school/v1/gradelevel/' + this.token, grade);\r\n  }\r\n\r\n  // Update the grade level of the user\r\n  updateGradeLevelUser(grade: any) {\r\n    this.token = this.getUserToken();\r\n    return this.api.put('user/school/v1/gradelevel/' + this.token, grade);\r\n  }\r\n\r\n  // Get the user travel\r\n  getTravellingUser() {\r\n    this.token = this.getUserToken();\r\n    return this.api.get('user/trip/v1/travel/' + this.token);\r\n  }\r\n\r\n  // add a travael to the user\r\n  addTravellingUser(grade: any) {\r\n    this.token = this.getUserToken();\r\n    return this.api.post('user/trip/v1/trip/' + this.token, grade);\r\n  }\r\n\r\n  // Update the travel of the user\r\n  updateTravellingUser(grade: any) {\r\n    this.token = this.getUserToken();\r\n    return this.api.put('user/trip/v1/trip/' + this.token, grade);\r\n  }\r\n\r\n  // Get the user experience\r\n  getExperienceUser() {\r\n    this.token = this.getUserToken();\r\n    return this.api.get('user/experience/v1/experience/' + this.token);\r\n  }\r\n\r\n  // Add an experience with the user\r\n  addExperienceUser(experience) {\r\n    this.token = this.getUserToken();\r\n    return this.api.post('user/experience/v1/experience/' + this.token, experience);\r\n  }\r\n\r\n  // Update the user experience\r\n  updateExperienceUser(experience: any) {\r\n    this.token = this.getUserToken();\r\n    return this.api.put('user/experience/v1/experience/' + this.token, experience);\r\n  }\r\n\r\n  // Get the user informations\r\n  getProfileUser() {\r\n    this.token = this.getUserToken();\r\n    return this.api.get('user/account/v1/profile/' + this.token);\r\n  }\r\n\r\n  // Get the user informations\r\n  getProfileUserId(userId: any) {\r\n    return this.api.get('/bid/v1/getProfile/' + userId);\r\n  }\r\n\r\n  // Update the user informations\r\n  updateProfileUser(profile: any) {\r\n    this.token = this.getUserToken();\r\n    return this.api.put('user/account/v1/profile/' + this.token, profile);\r\n  }\r\n\r\n  // Send email to update user password\r\n  sendEmailOrPassword(emailOrPhone: any) {\r\n    return this.api.post('user/account/v1/code/password', emailOrPhone);\r\n  }\r\n\r\n  // Send the code validation\r\n  sendCodeValidationForChangePassword(code: any) {\r\n    return this.api.post('user/account/v1/confirmcode/password', code);\r\n  }\r\n\r\n  // Change the user password\r\n  changeMyPassword(user: any) {\r\n    return this.api.post('user/account/v1/changepassword', user);\r\n  }\r\n\r\n  // Get all user user payment method\r\n  getAllMethodPaymentUser() {\r\n    return this.api.get('user/payment/v1/methodpayment/' + this.token);\r\n  }\r\n\r\n  // Add the user payment metohod\r\n  addMethodPaymentUser(methodPayment: any) {\r\n    this.token = this.getUserToken();\r\n    return this.api.post('user/payment/v1/methodpayment/' + this.token, methodPayment);\r\n  }\r\n\r\n  // Update user payment method\r\n  updateMethodPaymentUser(methodPayment: any) {\r\n    this.token = this.getUserToken();\r\n    return this.api.put('user/payment/v1/methodpayment/' + this.token, methodPayment);\r\n  }\r\n\r\n  // get the type of paiement method\r\n  getAllMethodPaymentType() {\r\n    return this.api.get('payment/v1/typepayment');\r\n  }\r\n\r\n  // get the type of paiement method by country\r\n  getAllMethodPaymentTypeByCountry(countryId: number) {\r\n    return this.api.get('payment/v2/typepayment/' + countryId);\r\n  }\r\n\r\n  // Pay a tontine automatically\r\n  payTontineAutomatically(tontines: any) {\r\n    this.token = this.getUserToken();\r\n    return this.api.post('automatic/payment/v1/from/wallet/' + this.token, tontines);\r\n  }\r\n\r\n  // Update the user pin \r\n  updateUserPin(data: any) {\r\n    this.token = this.getUserToken();\r\n    return this.api.post('user/change/pin/' + this.token, data);\r\n  }\r\n\r\n  // Send the device information for push notification\r\n  sendDeviceData(data: any) {\r\n    return this.api.post('onesignal/v1/add/identifier', data);\r\n  }\r\n\r\n  // Save the user device id for push notification\r\n  saveUserDeviceData(data: any) {\r\n    this.token = this.getUserToken();\r\n    return this.api.post('onesignal/v1/update/device/' + this.token, data);\r\n  }\r\n\r\n  // request news letter\r\n  requestNews(data: any) {\r\n    return this.api.post('newsletter/get/infos', data);\r\n  }\r\n\r\n  // Update the user picture\r\n  updatePicture(data: any) {\r\n    this.token = this.getUserToken();\r\n    return this.api.post('user/update/profile/' + this.token, data);\r\n  }\r\n\r\n  // Save the user device Id  daily\r\n  saveDevice(params: any) {\r\n    const param = this.localStorage.getItem('day-token');\r\n    const date = param ? new Date(JSON.parse(param)) : null;\r\n    const currentDate = new Date();\r\n    if (!date || date && (date.getFullYear() !== currentDate.getFullYear()\r\n      || date.getMonth() !== currentDate.getMonth()\r\n      || date.getDate() !== currentDate.getDate())) {\r\n      this.saveUserDeviceData(params).subscribe((ans: any) => {\r\n        if (ans && ans.message === 'success') {\r\n          this.setUserDevice(ans.result);\r\n          const currentDate = new Date();\r\n          this.localStorage.setItem('day-token', currentDate);\r\n        }\r\n      }, error => { });\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","export default \"<form [formGroup]=\\\"userPayMethodForm\\\">\\r\\n  <p class=\\\"ion-text-center\\\"  *ngIf=\\\"loadingOperator\\\">\\r\\n    <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n  </p>\\r\\n<ion-grid>\\r\\n  <ion-row>\\r\\n    <ion-col size=\\\"12\\\">\\r\\n      <ion-card class=\\\"paidmode\\\">\\r\\n        <ion-card-content class=\\\"ion-text-center\\\">    \\r\\n          <ion-row>\\r\\n            <ion-col size=\\\"12\\\">\\r\\n              <ion-item>\\r\\n                <ion-label>{{'COUNTRY_TEXT' | translate}}</ion-label>\\r\\n                <ion-select (ionChange)=\\\"updateCurrencyCountry(userPayMethodForm.value.country_id)\\\" formControlName=\\\"country_id\\\">\\r\\n                  <ion-select-option [value]=\\\"country.country_id\\\" *ngFor=\\\"let country of states\\\">{{ country.country_label }}</ion-select-option>          \\r\\n                </ion-select>\\r\\n              </ion-item>   \\r\\n              <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.country_id\\\">\\r\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"country.hasError(validation.type) && (country.dirty || country.touched)\\\">\\r\\n                    <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                    {{ validation.message }}\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>     \\r\\n            </ion-col>\\r\\n          </ion-row>       \\r\\n            <ion-row class=\\\"ion-justify-content-end\\\" *ngIf=\\\"userPayMethodForm.value.country_id && paymentMethods && paymentMethods.length > 0\\\">\\r\\n              <ion-col size=\\\"4\\\">\\r\\n                <ion-img [src]=\\\"paymentMethods&&paymentMethods[userPayMethodForm.value.typePaymentIndex] ? paymentMethods[userPayMethodForm.value.typePaymentIndex].logo : ' '\\\" class=\\\"logooperator\\\"></ion-img>\\r\\n              </ion-col>\\r\\n            </ion-row>  \\r\\n            <ion-row *ngIf=\\\"userPayMethodForm.value.country_id && paymentMethods && paymentMethods.length > 0\\\">\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label>{{ 'USER_PROFILE_TEXT4' | translate }}</ion-label>\\r\\n                  <ion-select (ionChange)=\\\"updatePaymentMethod(userPayMethodForm.value.typePaymentIndex)\\\" formControlName=\\\"typePaymentIndex\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let operator of paymentMethods; let operatorId = index\\\" [value]=\\\"operatorId\\\">{{ operator.name }}</ion-select-option>           \\r\\n                  </ion-select>\\r\\n                </ion-item>   \\r\\n                <div class=\\\"validation-errors\\\">\\r\\n                  <ng-container *ngFor=\\\"let validation of validationMessages.payementtype\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"payementtype.hasError(validation.type) && (payementtype.dirty || payementtype.touched)\\\">\\r\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                      {{ validation.message }}\\r\\n                    </div>\\r\\n                  </ng-container>\\r\\n                </div>   \\r\\n              </ion-col>\\r\\n            </ion-row> \\r\\n            <ion-row *ngIf=\\\"checkMobileOperator()\\\">\\r\\n              <ion-col size=\\\"4\\\">\\r\\n                <ion-item >\\r\\n                  <ion-label position=\\\"floating\\\">+</ion-label>\\r\\n                  <ion-input placeholder=\\\"{{userPayMethodForm.value.country_prefix}}\\\" type=\\\"text\\\"></ion-input>\\r\\n                </ion-item>        \\r\\n              </ion-col>\\r\\n              <ion-col size=\\\"8\\\">\\r\\n                <ion-item  >\\r\\n                  <ion-label position=\\\"floating\\\">{{ 'REGISTER_MPHONE' | translate }}</ion-label>\\r\\n                  <ion-input (ionChange)=\\\"checckEmailOrPhone(userPayMethodForm.value.phone,userPayMethodForm.value.typePaymentIndex)\\\" type=\\\"tel\\\" formControlName=\\\"phone\\\"></ion-input>\\r\\n                </ion-item> \\r\\n              </ion-col>\\r\\n              <ion-col size=\\\"12\\\" *ngIf=\\\"errorPhone\\\">\\r\\n                <div class=\\\"validation-errors\\\" >\\r\\n                  <div class=\\\"error-message\\\">\\r\\n                    <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                    <span [innerHTML]=\\\"'USER_DETAIL_TEXT11' | translate\\\"></span>\\r\\n                  </div>\\r\\n              </div>          \\r\\n              </ion-col>\\r\\n            </ion-row> \\r\\n            <ion-row class=\\\"ion-padding-bottom\\\">\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\" >{{ 'AMOUNT_TEXT' | translate }}</ion-label>\\r\\n                  <ion-input  (ionChange)=\\\"updatePaypalAmount()\\\" type=\\\"number\\\" formControlName=\\\"montant\\\"></ion-input>\\r\\n                  <span slot=\\\"end\\\" class=\\\"slot-prefix ion-no-margin\\\"> {{ contributionData.device_name }} </span>\\r\\n                </ion-item> \\r\\n                <div class=\\\"validation-errors\\\">\\r\\n                  <ng-container *ngFor=\\\"let validation of validationMessages.amount\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"montantContributeError.hasError(validation.type) && (montantContributeError.dirty || montantContributeError.touched)\\\">\\r\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                      {{ validation.message }}\\r\\n                    </div>\\r\\n                  </ng-container>\\r\\n                </div>          \\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row  *ngIf=\\\"canShowPaypalMessage()\\\">\\r\\n              <ion-col>\\r\\n                <div class=\\\"padding\\\">\\r\\n                <p style=\\\"color: red\\\">{{paypalMessage}}</p>\\r\\n              </div>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row>\\r\\n              <ion-col>\\r\\n                <ion-item lines=\\\"none\\\">                \\r\\n                  <ion-toggle  formControlName=\\\"anonym\\\"></ion-toggle>\\r\\n                  <ion-label>{{ 'ANONYM_TEXT' | translate }}</ion-label>\\r\\n                </ion-item>\\r\\n              </ion-col>\\r\\n            </ion-row>                           \\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>      \\r\\n  </ion-row>\\r\\n  <ion-row>\\r\\n    <svg height=\\\"0\\\" width=\\\"0\\\" viewBox=\\\"0 0 27.7 28.93\\\">\\r\\n      <defs>\\r\\n        <clipPath id=\\\"pay-btn-shape1\\\" >\\r\\n          <path d=\\\"M2.57,17.21A11.18,11.18,0,0,1,9.17,5.77h.06l.17-.22.11-.23c-1-.73-1.56-1.42-1.39-2,.42-1.32,5-1.17,10.22.33S27.43,7.47,27,8.81c-.16.48-.86.76-1.88.86h0v.1a5,5,0,0,0,.08.66,3.77,3.77,0,0,0,.1.46l.07.23c2,4,1.7,8.37-1.73,12.53a12.23,12.23,0,0,1-18.42-.1A11.55,11.55,0,0,1,2.57,17.21Z\\\" />            \\r\\n        </clipPath>        \\r\\n      </defs>\\r\\n    </svg>\\r\\n    <ion-col size=\\\"12\\\" class=\\\"ion-text-center wrap-pay-btn\\\" *ngIf=\\\"canPayWithPaypal()\\\"  (click)=\\\"showPayment(userPayMethodForm.value)\\\">\\r\\n      <svg id=\\\"pay-btn1\\\" preserveAspectRatio=\\\"xMidYMid slice\\\" viewBox=\\\"0 0 27.7 28.93\\\">\\r\\n        <path  class=\\\"arc-part\\\" d=\\\"M5.91,6.89a12.25,12.25,0,0,0-4.14,9.27,11.14,11.14,0,0,0,.16,1.7,12.82,12.82,0,0,0,.42,1.66c.08.27.19.54.29.8A8.24,8.24,0,0,0,3,21.1a14.85,14.85,0,0,0,.82,1.5,12.25,12.25,0,0,0,3.5,3.62,13.49,13.49,0,0,0,8,2.21,15.81,15.81,0,0,0,1.7-.17,13.74,13.74,0,0,0,1.69-.37,12.79,12.79,0,0,0,5.65-3.5,11.63,11.63,0,0,0,1.88-2.83,12.11,12.11,0,0,0,1.06-3.27,11,11,0,0,0-.94-6.84A10.42,10.42,0,0,1,27.23,13a10.65,10.65,0,0,1,.63,1.71,11.3,11.3,0,0,1,.22,3.64,12.78,12.78,0,0,1-.94,3.56,12.11,12.11,0,0,1-1.88,3.17,12.84,12.84,0,0,1-1.31,1.33,13.32,13.32,0,0,1-1.49,1.12,14,14,0,0,1-3.37,1.59,13,13,0,0,1-1.82.43,17.17,17.17,0,0,1-1.88.21,14.31,14.31,0,0,1-3.77-.27,14.55,14.55,0,0,1-5.12-2.19,11.53,11.53,0,0,1-1.41-1.17A13.92,13.92,0,0,1,.92,18a10.3,10.3,0,0,1-.08-1.88A12.36,12.36,0,0,1,3.31,9.34,10.42,10.42,0,0,1,5.91,6.89ZM7.27,3.35a1.52,1.52,0,0,1-.08-.78,1.82,1.82,0,0,1,.32-.76A2.29,2.29,0,0,1,9,1,6.31,6.31,0,0,1,9.78.89h2.36a25.76,25.76,0,0,1,6.19,1,23.94,23.94,0,0,1,5.74,2.5,20.58,20.58,0,0,1,2.56,1.83,3.84,3.84,0,0,1,1,1.27,1.29,1.29,0,0,1,.08.84,1.24,1.24,0,0,1-.47.64,1.21,1.21,0,0,0,.29-.67,1,1,0,0,0-.21-.65,3.64,3.64,0,0,0-1.07-.94c-.86-.53-1.75-1-2.66-1.47A34.29,34.29,0,0,0,18,3.06,38.16,38.16,0,0,0,12,1.84c-.5-.06-1-.11-1.52-.15l-.73-.13a6.42,6.42,0,0,0-.73,0A1.88,1.88,0,0,0,7.77,2,1.57,1.57,0,0,0,7.27,3.35Z\\\" />\\r\\n        <g class=\\\"pay-btn-border\\\">\\r\\n          <rect x=\\\"1.35\\\" y=\\\"0.56\\\" width=\\\"25.09\\\" height=\\\"26.44\\\" class=\\\"inner-pot\\\" />\\r\\n        </g>\\r\\n        <path class=\\\"pot-entry\\\" d=\\\"M22,6.27c-1.13-.38-2.45-.85-3.86-1.22-1-.28-2.17-.57-3.11-.75-2.64-.47-4.52-.57-4.62-.09-.09.19.19.57.75.85A24.19,24.19,0,0,0,17.46,7.4a22.19,22.19,0,0,0,7.07,1.13c.38-.09.66-.19.66-.28C25.32,7.9,24.05,7.15,22,6.27Z\\\" />\\r\\n        <text class=\\\"pay-text\\\"><tspan style=\\\"letter-spacing: -0.05859375em\\\">P</tspan><tspan x=\\\"4.94\\\" y=\\\"0\\\" style=\\\"letter-spacing: -0.087890625em\\\">A</tspan><tspan x=\\\"10.56\\\" y=\\\"0\\\">Y</tspan></text>\\r\\n      </svg>     \\r\\n      <div class=\\\"glow-wrap\\\">\\r\\n        <i class=\\\"glow\\\"></i>\\r\\n      </div>          \\r\\n    </ion-col>\\r\\n  </ion-row> \\r\\n  <ion-row  *ngIf=\\\"paypalLoading\\\">\\r\\n    <ion-col>\\r\\n      <p class=\\\"ion-text-center ion-padding\\\">\\r\\n        <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n      </p>\\r\\n    </ion-col>\\r\\n  </ion-row> \\r\\n  <ion-row *ngIf=\\\"canShowPaypalButton()\\\">\\r\\n    <ion-col class=\\\"ion-padding\\\" size=\\\"12\\\">\\r\\n      <div #paypalbuttoncontainer id=\\\"paypal-button-container\\\"></div> \\r\\n    </ion-col>\\r\\n  </ion-row>  \\r\\n</ion-grid>\\r\\n</form> \\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ToastController, LoadingController, AlertController } from '@ionic/angular';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  public baseUrl: string;\r\n  isLoadingShow = false;\r\n  public static timeOut: number;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    public toastController: ToastController,\r\n    public loadingController: LoadingController,\r\n    public alertController: AlertController\r\n  ) {\r\n      this.baseUrl =    'https://dev.toupesu.com/toupesu_v2_0/'; //  'https://api.toupesu.com/' ;  //  \r\n  }\r\n\r\n  public getJSON(): Observable<any> {\r\n    return this.http.get('assets/i18n/en.json');\r\n  }\r\n\r\n\r\n\r\n  get(path: string): Observable<any> {\r\n    return this.http.get(this.baseUrl + path);\r\n  }\r\n\r\n  post(path: string, body: any, options?: any): Observable<any> {\r\n    return this.http.post(this.baseUrl + path, body, options);\r\n  }\r\n\r\n  put(path: string, body: any, options?: any): Observable<any> {\r\n    return this.http.put(this.baseUrl + path, body, options);\r\n  }\r\n\r\n  delete(path: string, options?: any): Observable<any> {\r\n    return this.http.delete(this.baseUrl + path, options);\r\n  }\r\n\r\n  patch(path: string, body: any, options?: any): any {\r\n    return this.http.patch(this.baseUrl + path, body, options);\r\n  }\r\n\r\n  head(path: string, options?: any): Observable<any> {\r\n    return this.http.head(this.baseUrl + path, options);\r\n  }\r\n\r\n  jsonp(path: string, callbackParam?: string): Observable<any> {\r\n    return this.http.jsonp(this.baseUrl + path, callbackParam);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UtilService {\r\n\r\n  constructor(\r\n  ) {\r\n\r\n  }\r\n\r\n\r\n  // Format an array to matrix and can be used for pagination\r\n  formatArrayToMatrix(arraydata: any[], nbElements: number) {\r\n    const nbres = arraydata.length;\r\n    const nbIter = Math.ceil(nbres / nbElements);\r\n    const matrix = [];\r\n    let subMatrix = [];\r\n    let index = 0;\r\n    let j = 0;\r\n    while (index < nbIter) {\r\n      subMatrix = [], j = 0;\r\n      while (j < nbElements) {\r\n        if (index * nbElements + j < nbres) {\r\n          subMatrix.push(arraydata[index * nbElements + j]);\r\n        }\r\n        j++;\r\n      }\r\n      if (subMatrix.length > 0) {\r\n        matrix.push(subMatrix);\r\n      }\r\n      index++;\r\n    }\r\n    return matrix;\r\n  }\r\n\r\n  oderByTontineDate(tontineList: any[]) {\r\n    if (tontineList && tontineList.length > 0) {\r\n      let i = 0;\r\n      let temp: any;\r\n      while (i < tontineList.length) {\r\n        for (let j = i + 1; j < tontineList.length; j++) {\r\n          if (tontineList[i].tontine.created_at < tontineList[j].tontine.created_at) {\r\n            temp = tontineList[j];\r\n            tontineList[j] = tontineList[i];\r\n            tontineList[i] = temp;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n    } else {\r\n      return [];\r\n    }\r\n    return tontineList;\r\n  }\r\n\r\n  oderByUpdatedAt(dataList: any[]) {\r\n    if (dataList && dataList.length > 0) {\r\n      let i = 0;\r\n      let temp: any;\r\n      while (i < dataList.length) {\r\n        for (let j = i + 1; j < dataList.length; j++) {\r\n          if (dataList[i].updated_at < dataList[j].updated_at) {\r\n            temp = dataList[j];\r\n            dataList[j] = dataList[i];\r\n            dataList[i] = temp;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n    } else {\r\n      return [];\r\n    }\r\n    return dataList;\r\n  }\r\n\r\n  oderByFactureDate(data: any[]) {\r\n    if (data && data.length > 0) {\r\n      let i = 0;\r\n      let temp: any;\r\n      while (i < data.length) {\r\n        for (let j = i + 1; j < data.length; j++) {\r\n          if (data[i].facture.created_at < data[j].facture.created_at) {\r\n            temp = data[j];\r\n            data[j] = data[i];\r\n            data[i] = temp;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n    } else {\r\n      return [];\r\n    }\r\n    return data;\r\n  }\r\n\r\n  orderBySeanceKeyUp(data: any[]) {\r\n    if (data && data.length > 0) {\r\n      let i = 0;\r\n      let temp: any;\r\n      while (i < data.length) {\r\n        for (let j = i + 1; j < data.length; j++) {\r\n          if (data[i].infos_seance.updated_at < data[j].infos_seance.updated_at) {\r\n            temp = data[j];\r\n            data[j] = data[i];\r\n            data[i] = temp;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n    } else {\r\n      return [];\r\n    }\r\n    return data;\r\n  }\r\n\r\n  oderBySeanceDate(data: any[]) {\r\n    if (data && data.length > 0) {\r\n      let i = 0;\r\n      let temp: any;\r\n      while (i < data.length) {\r\n        for (let j = i + 1; j < data.length; j++) {\r\n          if (data[i].seance.date_debut < data[j].seance.date_debut) {\r\n            temp = data[j];\r\n            data[j] = data[i];\r\n            data[i] = temp;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n    } else {\r\n      return [];\r\n    }\r\n    return data;\r\n  }\r\n\r\n  oderByNotificationDate(tontineList: any[]) {\r\n    if (tontineList && tontineList.length > 0) {\r\n      let i = 0;\r\n      let temp: any;\r\n      while (i < tontineList.length) {\r\n        for (let j = i + 1; j < tontineList.length; j++) {\r\n          if (tontineList[i].created_at < tontineList[j].created_at) {\r\n            temp = tontineList[j];\r\n            tontineList[j] = tontineList[i];\r\n            tontineList[i] = temp;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n    } else {\r\n      return [];\r\n    }\r\n    return tontineList;\r\n  }\r\n\r\n  orderByTontineEventDate(tontineList: any[]) {\r\n    if (tontineList && tontineList.length > 0) {\r\n      let i = 0;\r\n      let temp: any;\r\n      while (i < tontineList.length) {\r\n        for (let j = i + 1; j < tontineList.length; j++) {\r\n          if (tontineList[i].created_at < tontineList[j].created_at) {\r\n            temp = tontineList[j];\r\n            tontineList[j] = tontineList[i];\r\n            tontineList[i] = temp;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n    } else {\r\n      return [];\r\n    }\r\n    return tontineList;\r\n  }\r\n\r\n  occurenceOfId(dataList: any[], key: string, id: number) {\r\n    let occur = 0;\r\n    let i = 0;\r\n    while (i < dataList.length) {\r\n      if (dataList[i][key] === id) {\r\n        occur++;\r\n      }\r\n      i++;\r\n    }\r\n    return occur;\r\n  }\r\n\r\n  occurenceIndex(dataList: any[], key: string, id: number) {\r\n    let indexList = [];\r\n    let i = 0;\r\n    while (i < dataList.length) {\r\n      if (dataList[i][key] === id) {\r\n        indexList.push(i);\r\n      }\r\n      i++;\r\n    }\r\n    return indexList;\r\n  }\r\n\r\n  removeIdOccurence(dataList: any[], key: string, id: number) {\r\n    let i = 0;\r\n    let found = false;\r\n    while (i < dataList.length && !found) {\r\n      if (dataList[i][key] === id) {\r\n        dataList.splice(i, 1);\r\n        found = true;\r\n      }\r\n      i++;\r\n    }\r\n    return dataList;\r\n  }\r\n\r\n  occurenceMax(dataList: any[]) {\r\n    let max = dataList[0];\r\n    let i = 0;\r\n    for (let j = i + 1; j < dataList.length; j++) {\r\n      if (max < dataList[j]) {\r\n        max = dataList[j];\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  orderByKey(dataList: any[], key: string) {\r\n    if (dataList && dataList.length > 0) {\r\n      let i = 0;\r\n      let temp: any;\r\n      while (i < dataList.length) {\r\n        for (let j = i + 1; j < dataList.length; j++) {\r\n          if (dataList[i][key] >= dataList[j][key]) {\r\n            temp = dataList[j];\r\n            dataList[j] = dataList[i];\r\n            dataList[i] = temp;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n    } else {\r\n      return [];\r\n    }\r\n    return dataList;\r\n  }\r\n\r\n  orderByKeyUp(dataList: any[], key: string) {\r\n    if (dataList && dataList.length > 0) {\r\n      let i = 0;\r\n      let temp: any;\r\n      while (i < dataList.length) {\r\n        for (let j = i + 1; j < dataList.length; j++) {\r\n          if (dataList[i][key] < dataList[j][key]) {\r\n            temp = dataList[j];\r\n            dataList[j] = dataList[i];\r\n            dataList[i] = temp;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n    } else {\r\n      return [];\r\n    }\r\n    return dataList;\r\n  }\r\n\r\n  orderByKeyDown(dataList: any[], key: string) {\r\n    if (dataList && dataList.length > 0) {\r\n      let i = 0;\r\n      let temp: any;\r\n      while (i < dataList.length) {\r\n        for (let j = i + 1; j < dataList.length; j++) {\r\n          if (dataList[i][key] >= dataList[j][key]) {\r\n            temp = dataList[j];\r\n            dataList[j] = dataList[i];\r\n            dataList[i] = temp;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n    } else {\r\n      return [];\r\n    }\r\n    return dataList;\r\n  }\r\n\r\n  orderByObjetKeyUp(dataList: any[],objet: string, key: string) {\r\n    if (dataList && dataList.length > 0) {\r\n      let i = 0;\r\n      let temp: any;\r\n      while (i < dataList.length) {\r\n        for (let j = i + 1; j < dataList.length; j++) {\r\n          if (dataList[i][objet][key] < dataList[j][objet][key]) {\r\n            temp = dataList[j];\r\n            dataList[j] = dataList[i];\r\n            dataList[i] = temp;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n    } else {\r\n      return [];\r\n    }\r\n    return dataList;\r\n  }\r\n\r\n  orderByObjetKeyDown(dataList: any[],objet: string, key: string) {\r\n    if (dataList && dataList.length > 0) {\r\n      let i = 0;\r\n      let temp: any;\r\n      while (i < dataList.length) {\r\n        for (let j = i + 1; j < dataList.length; j++) {\r\n          if (dataList[i][objet][key] >= dataList[j][objet][key]) {\r\n            temp = dataList[j];\r\n            dataList[j] = dataList[i];\r\n            dataList[i] = temp;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n    } else {\r\n      return [];\r\n    }\r\n    return dataList;\r\n  }\r\n\r\n  orderByKeyUpTime(dataList: any[], key: string) {\r\n    if (dataList && dataList.length > 0) {\r\n      let i = 0;\r\n      let temp: any;\r\n      while (i < dataList.length) {\r\n        for (let j = i + 1; j < dataList.length; j++) {\r\n          if (dataList[i][key][0] && (dataList[i][key][0].heures < dataList[j][key][0].heures)) {\r\n            temp = dataList[j];\r\n            dataList[j] = dataList[i];\r\n            dataList[i] = temp;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n    } else {\r\n      return [];\r\n    }\r\n    return dataList;\r\n  }\r\n\r\n  orderByPosition(dataList: any[]) {\r\n    if (dataList && dataList.length > 0) {\r\n      let i = 0;\r\n      let temp: any;\r\n      while (i < dataList.length) {\r\n        for (let j = i + 1; j < dataList.length; j++) {\r\n          if (dataList[i].settings.position >= dataList[j].settings.position) {\r\n            temp = dataList[j];\r\n            dataList[j] = dataList[i];\r\n            dataList[i] = temp;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n    } else {\r\n      return [];\r\n    }\r\n    return dataList;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from 'src/app/shared/service/api.service';\r\nimport { UserService } from '../../user/service/user.service';\r\nimport { LocalStorageService } from 'src/app/shared/service/local-storage.service';\r\nimport { EventService } from 'src/app/shared/service/events.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InvitationsService {\r\n  token: string;\r\n\r\n  constructor(\r\n    private api: ApiService,\r\n    private userService: UserService,\r\n    private event: EventService,\r\n    private localStorage: LocalStorageService\r\n  ) {\r\n    this.token = this.userService.getUserToken();\r\n    this.event.subscribe('new-token', token => {\r\n      this.token = token;\r\n    });\r\n  }\r\n\r\n  // send the debts Data\r\n  sendData(data) {\r\n    this.localStorage.setItem('invitation-data', data);\r\n  }\r\n\r\n  // Get the debts Data\r\n  getData() {\r\n    return this.localStorage.getItem('invitation-data');\r\n  }\r\n\r\n\r\n  /*===== Routes for invitations ========*/\r\n\r\n  // Send the tontine invitation by an admin\r\n  sendInvitationTontine(invitation: any, userId: number) {\r\n    return this.api.post('tontine/v1/invitation/members/' + userId, invitation);\r\n  }\r\n\r\n  // Accept the admin  invitation to join the tontine\r\n  acceptInvitationTontine(invitation: any) {\r\n    return this.api.post('tontine/v1/invitation/member/acceptJoinTontine', invitation);\r\n  }\r\n\r\n  // Accept the admin  invitation to join the tontine with token \r\n  acceptInvitationTontineWithToken(invitation: any) {\r\n    const token = this.userService.getUserToken();\r\n    return this.api.post(`tontine/v1/invitation/member/acceptJoinTontineToken/${token}`, invitation);\r\n  }\r\n\r\n  // cancel the admin invitation\r\n  cancelInvitation(invitation: any) {\r\n    return this.api.post('tontine/v1/invitation/member/refuseJoinTontine', invitation);\r\n  }\r\n\r\n  // cancel the admin invitation with token\r\n  cancelInvitationWithToken(invitation: any) {\r\n    const token = this.userService.getUserToken();\r\n    return this.api.post(`tontine/v1/invitation/member/refuseJoinTontineToken/${token}`, invitation);\r\n  }\r\n\r\n\r\n  // Get the invitation with status pending\r\n  getpendingInvitations(tontineId: any, adminId: any) {\r\n    return this.api.get('tontine/v1/invitation/member/pending/' + tontineId + '/' + adminId);\r\n  }\r\n\r\n  // Get the invitations with status requested\r\n  getRequestedInvitations(tontineId: any, adminId: any) {\r\n    return this.api.get('tontine/v1/invitation/member/requested/' + tontineId + '/' + adminId);\r\n  }\r\n\r\n  // Get the list of invitations rejected by user\r\n  getInvitationsRejectedbyUser(tontineId: any, adminId: any) {\r\n    return this.api.get('tontine/v1/invitation/member/rejected/' + tontineId + '/' + adminId);\r\n  }\r\n\r\n  // cancel the guest invitation sent by a member\r\n  cancelguestInvitation(userId: any, invitation: any) {\r\n    return this.api.post('tontine/v1/invitation/admin_tontine/refuseJoin/' + userId, invitation);\r\n  }\r\n\r\n  // accept the guest invitation sent by a member\r\n  acceptguestInvitation(userId: any, invitation: any) {\r\n    return this.api.post('tontine/v1/invitation/admin_tontine/acceptJoin/' + userId, invitation);\r\n  }\r\n\r\n  // Get the tontine invitation code\r\n  getInvitationCode(userId: any, invitation: any) {\r\n    return this.api.post('tontine/v1/invitation/admin_tontine/resendCode/' + userId, invitation);\r\n  }\r\n\r\n  // Get all invitations\r\n  getAllInvitation(tontineId: any, adminId: any) {\r\n    return this.api.get(`tontine/v1/invitation/member/all/${tontineId}/${adminId}`);\r\n  }\r\n\r\n  // Delete the invitation\r\n  deleteInvitation(invitation: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('tontine/v1/invitation/remove/entry/' + this.token, invitation);\r\n  }\r\n\r\n  // Get the list of invitation send\r\n  getInvitations() {\r\n    this.token = this.userService.getUserToken();\r\n    if (this.token) {\r\n      return this.api.get('tontine/v1/my/invitation/member/all/' + this.token);\r\n    }\r\n  }\r\n\r\n  /** ============ Invitations services end ============= */\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYWlkbW9kZS1ldmVudC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'compteurFormat'\r\n})\r\nexport class CounterFormatPipe implements PipeTransform {\r\n\r\n  transform(value: any): any {\r\n    if (!value) {\r\n      return  0+\"J \"+0+\"H:\"+0+\"m:\"+0+\"s\";\r\n    }\r\n    return Math.floor(parseInt(value)/86400)+\"J \"+Math.floor((parseInt(value)%86400)/3600)+\"H:\"+Math.floor(((parseInt(value)%86400)%3600)/60)+\"m:\"+(((parseInt(value)%86400)%3600)%60)+\"s\";\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0b250aW5lLWludml0ZWQuY29tcG9uZW50LnNjc3MifQ== */\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, Input, NgZone, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ErrorService } from '../service/error.service';\r\nimport { AlertController, Platform } from '@ionic/angular';\r\nimport { LocationService } from '../service/location.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TontineService } from 'src/app/dashboard/my-tontines/services/tontine.service';\r\nimport { ApiService } from '../service/api.service';\r\nimport { CurrencyService } from '../service/currency.service';\r\nimport { WalletService } from 'src/app/dashboard/my-wallet/service/wallet.service';\r\nimport { FormUtilsService } from '../service/form-utils.service';\r\nimport { PaymentErrorService } from '../service/payment-error.service';\r\nimport { LoanService } from 'src/app/dashboard/my-tontines/tontine-detail/loans/service/loan.service';\r\nimport { Router } from '@angular/router';\r\nimport { PaymentGlobalDataService } from '../service/payment-global-data.service';\r\nimport { UserService } from 'src/app/dashboard/user/service/user.service';\r\nimport { EventService } from '../service/events.service';\r\nimport { UiService } from '../service/ui.service';\r\ndeclare var paypal;\r\n\r\ninterface PaymentMethod {\r\n  id: number;\r\n  logo: string;\r\n  currency: string;\r\n  country_id: number;\r\n  name: string;\r\n  placeholder ?: string;\r\n  handling_fees?: number;\r\n  type_handling_fees?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-paidmode-loan',\r\n  templateUrl: './paidmode-loan.component.html',\r\n  styleUrls: ['./paidmode-loan.component.scss'],\r\n})\r\nexport class PaidmodeLoanComponent implements OnInit {\r\n\r\n  paymentMethods: PaymentMethod[];\r\n  paypalMessage: string;\r\n  userPayMethodForm: FormGroup;\r\n  currentCountryId: number;\r\n  states: any;\r\n  loadingOperator: boolean;\r\n  tontineData: any;\r\n  contributionData: any;\r\n  errorPhone: boolean;\r\n  loading: boolean;\r\n  cron: any;\r\n  timeOut: any;\r\n  contributionDataParams: any;\r\n  pin: string;\r\n  spinner: any;\r\n  allPaymentMethods: any;\r\n  userData: any;\r\n  paymentForm: FormGroup;\r\n  reference: string;\r\n  validationMessages: any;\r\n  paypalLoading: boolean;\r\n  paypal_initialized: boolean;\r\n  refernceId: string;\r\n\r\n  @Input() amountPay: number;\r\n  @Input() balance: number;\r\n  @Input() type: string;\r\n  @ViewChild('paypalbuttoncontainer', { static: false }) paypalbuttoncontainer: ElementRef;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private platform: Platform,\r\n    private tontine: TontineService,\r\n    private paymentData: PaymentGlobalDataService,\r\n    private events: EventService,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private loanService: LoanService,\r\n    private currency: CurrencyService,\r\n    private formUtil: FormUtilsService,\r\n    private alertController: AlertController,\r\n    private paymentError: PaymentErrorService,\r\n    private wallet: WalletService,\r\n    private errorService: ErrorService,\r\n    private location: LocationService,\r\n    private translate: TranslateService,\r\n    private zone: NgZone,\r\n    private ui: UiService\r\n  ) {\r\n    this.cron = null;\r\n    this.timeOut = null;\r\n    this.loadingOperator = false;\r\n    this.loading = false;\r\n    this.errorPhone = false;\r\n    this.states = [];\r\n    this.paymentMethods = [];\r\n    this.paypalMessage = '';\r\n    this.reference = this.formUtil.getRandomId();\r\n    this.tontineData = this.tontine.getCurrentTontineData();\r\n    this.userData = this.userService.getUserData();\r\n    this.allPaymentMethods = [];\r\n    this.contributionData = this.loanService.getLoanData();\r\n    this.paypalLoading = false;\r\n    this.paypal_initialized = false;\r\n    this.refernceId = '';\r\n    this.hardwareBackButton();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAllMethodPaymentType();\r\n    this.initFormMessage();\r\n    this.initPaymentForm();\r\n  }\r\n\r\n  /******************************** START  FORM  SERVICES *********************************************/\r\n\r\n  // Form getters\r\n  get phone() {\r\n    return this.userPayMethodForm.get('phone');\r\n  }\r\n\r\n  get amountError() {\r\n    return this.userPayMethodForm.get('montantAvecFees');\r\n  }\r\n\r\n  get country() {\r\n    return this.userPayMethodForm.get('country_id');\r\n  }\r\n\r\n  get device_name() {\r\n    return this.userPayMethodForm.get('device_name');\r\n  }\r\n\r\n  get payementtype() {\r\n    return this.userPayMethodForm.get('typePaymentIndex');\r\n  }\r\n\r\n  get montantContributeError() {\r\n    return this.userPayMethodForm.get('montant');\r\n  }\r\n\r\n  // Init form \r\n  initPaymentForm() {\r\n    const currentPayment = this.paymentData.getDefaultPaymentMethod();\r\n    this.userPayMethodForm = this.fb.group({\r\n      country_id: ['', Validators.required],\r\n      country_prefix: [''],\r\n      countryId: [''],\r\n      handleFees: [''],\r\n      handleFeesType: [''],\r\n      device_name: [''],\r\n      currency: [this.contributionData.currency_name],\r\n      currencyLabel: [''],\r\n      pay_token: [''],\r\n      url: [''],\r\n      montant: [{ value: this.amountPay, disabled: this.type === 'interest' ? true : false }, Validators.compose([Validators.required, Validators.min(1), Validators.max(this.amountPay)])],\r\n      montantAvecFees: ['0'],\r\n      montantTotal: ['0'],\r\n      type_payment_id: [currentPayment ? currentPayment.typepaiement_id : ''],\r\n      type_payment_name: [currentPayment ? currentPayment.name : ''],\r\n      typePaymentIndex: [0, Validators.required],\r\n      phone: [currentPayment  && this.formUtil.validatePhone(currentPayment.numero_compte) ? currentPayment.numero_compte : ''],\r\n      numero: ['']\r\n    });\r\n  }\r\n\r\n  // Init form message\r\n  initFormMessage() {\r\n    this.translate.get(['REGISTER_PHONE_REQUIRED', 'AMOUNT_REQUIRED', 'PAID_MODE_REQUIRED', 'M_COUNTRY_REQUIRED'])\r\n      .subscribe(value => {\r\n        this.validationMessages = {\r\n          payementtype: [\r\n            { type: 'required', message: value.PAID_MODE_REQUIRED }\r\n          ],\r\n          phone: [\r\n            { type: 'required', message: value.REGISTER_PHONE_REQUIRED },\r\n          ],\r\n          amount: [\r\n            { type: 'required', message: value.AMOUNT_REQUIRED }\r\n          ],\r\n          country_id: [\r\n            { type: 'required', message: value.M_COUNTRY_REQUIRED }\r\n          ]\r\n        };\r\n      });\r\n  }\r\n\r\n  // Remove space\r\n  removeSpace() {\r\n    this.userPayMethodForm.get('phone').setValue(this.paymentData.removeInputSpace(this.userPayMethodForm.value.phone));\r\n  }\r\n\r\n  // check if it is not  mobile operator\r\n  checkMobileOperator() {\r\n    return this.paymentData.isMobileOperator(this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex]);\r\n  }\r\n\r\n  // can show paypal message\r\n  canShowPaypalMessage() {\r\n    return this.userPayMethodForm.value.montant && this.paymentData.hasPaypalMessage(this.paypalMessage, this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex]);\r\n  }\r\n\r\n  // can pay with paypal\r\n  canPay() {\r\n    return this.paymentData.canShowPayment(this.userPayMethodForm.valid,this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex],this.userPayMethodForm.value.phone,this.errorPhone);\r\n  }\r\n\r\n\r\n  // can show paypal button\r\n  canShowPaypalButton() {\r\n    return this.paymentData.hasPaypalButton(this.paypal_initialized,this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex]);\r\n  }\r\n\r\n  // check if emial or phone is valid\r\n  checckEmailOrPhone(inputValue: string, index: number) {\r\n    this.removeSpace();\r\n    this.userPayMethodForm.get('type_payment_id').setValue(this.paymentMethods[index].id);\r\n    switch (this.paymentMethods[index].name) {\r\n      case 'ORANGE MONEY':\r\n        this.errorPhone = !this.formUtil.validatePhone(inputValue);\r\n        if (!this.errorPhone) {\r\n          this.userPayMethodForm.get('numero').setValue(this.userPayMethodForm.value.country_prefix +\r\n            '' + this.userPayMethodForm.value.phone);\r\n        }\r\n        break;\r\n\r\n      case 'MTN MOBILE MONEY':\r\n        this.errorPhone = !this.formUtil.validatePhone(inputValue);\r\n        if (!this.errorPhone) {\r\n          this.userPayMethodForm.get('numero').setValue(this.userPayMethodForm.value.country_prefix +\r\n            '' + this.userPayMethodForm.value.phone);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // get all payment method\r\n  getAllMethodPaymentType() {\r\n    this.loadingOperator = true;\r\n    this.userService.getAllMethodPaymentType().subscribe((reponse: any) => {\r\n      this.paymentMethods = [];\r\n      this.loadingOperator = false;\r\n      if (reponse && reponse.typePayment && reponse.typePayment.length > 0) {\r\n        this.paymentMethods = this.paymentData.formatPaymentMethodResponseContribution(reponse.typePayment);\r\n      }\r\n\r\n      const defaultMethod: PaymentMethod[] = [{\r\n        id: 0, country_id: 0, logo: 'assets/pesuwallet.jpg',\r\n        currency: this.contributionData.monnaie, name: 'WALLET', placeholder: '',\r\n        handling_fees: 0,\r\n        type_handling_fees: 'valeur'\r\n      }];\r\n      this.paymentMethods = defaultMethod.concat(this.paymentMethods);\r\n      this.allPaymentMethods = this.paymentMethods;\r\n      this.getCountries(false);\r\n    }, error => {\r\n      this.loadingOperator = false;\r\n      this.paymentMethods.push({\r\n        id: 0, country_id: 0, logo: 'assets/pesuwallet.jpg',\r\n        currency: this.contributionData.monnaie, name: 'WALLET', placeholder: '',\r\n        handling_fees: 0,\r\n        type_handling_fees: 'valeur'\r\n      });\r\n      this.allPaymentMethods = this.paymentMethods;\r\n      this.getCountries(false);\r\n      this.errorService.manageError(error);\r\n    });\r\n  }\r\n\r\n  // Get all countries\r\n  getCountries(refresher: boolean) {\r\n    this.location.getAllCountries(refresher).then((countries: any) => {\r\n      this.states = this.paymentData.formatCountriesData(countries);\r\n      // Set the country of the tontine\r\n      if (this.states && this.states.length > 0) {\r\n        setTimeout(() => {\r\n          this.states.forEach(country => {\r\n            if (country.country_key === this.tontineData.tontine.country_key) {\r\n              this.updateFormData(country);\r\n            }\r\n          });\r\n        }, 200);\r\n      }\r\n    });\r\n  }\r\n\r\n  // update the form data\r\n  updateFormData(country: any) {\r\n    if (country) {\r\n      this.userPayMethodForm.get('countryId').setValue(country.country_id);\r\n      this.userPayMethodForm.get('country_prefix').setValue(country.country_prefixe);\r\n      this.userPayMethodForm.get('currency').setValue(country.device_name);\r\n      this.userPayMethodForm.get('handleFees').setValue(country.handling_fees);\r\n      this.userPayMethodForm.get('handleFeesType').setValue(country.type_handling_fees);\r\n      this.userPayMethodForm.get('currencyLabel').setValue(country.currency_label);\r\n      this.zone.run(() => {\r\n        this.userPayMethodForm.get('country_id').setValue(country.country_id);\r\n      });\r\n      this.updatePaymentsMethods(country.country_id);\r\n    }\r\n  }\r\n\r\n  // Update the payment method\r\n  updatePaymentMethod(index) {\r\n\r\n    if (this.paymentMethods[index]) {\r\n      this.userPayMethodForm.get('type_payment_id').setValue(this.paymentMethods[index].id);\r\n      this.userPayMethodForm.get('type_payment_name').setValue(this.paymentMethods[index].name);\r\n      this.userPayMethodForm.get('device_name').setValue(this.paymentMethods[index].currency);\r\n      this.userPayMethodForm.get('handleFees').setValue(this.paymentMethods[index].handling_fees);\r\n      this.userPayMethodForm.get('handleFeesType').setValue(this.paymentMethods[index].type_handling_fees);\r\n      this.zone.run(() => {\r\n        this.userPayMethodForm.get('typePaymentIndex').setValue(index);\r\n      });\r\n    }\r\n    if (this.paymentMethods && this.paymentMethods[index] &&\r\n      this.paymentMethods[index].name === 'PAYPAL') {\r\n      this.paypal_initialized = false;\r\n      this.updatePaypalAmount();\r\n    }\r\n  }\r\n\r\n\r\n  updatePaymentsMethods(countryId: number) {\r\n    // update the payment method\r\n    const paymentsMethods = [];\r\n    this.paymentMethods = [];\r\n    this.allPaymentMethods.forEach(payment => {\r\n      if (payment.country_id === countryId || payment.country_id === 0) {\r\n        paymentsMethods.push(payment);\r\n      }\r\n    });\r\n    this.paymentMethods = paymentsMethods;\r\n    if (this.paymentMethods && this.paymentMethods.length > 0) {\r\n      this.updatePaymentMethod(0);\r\n    }\r\n  }\r\n\r\n  // Calucalte the payment with handlfees\r\n  getAmountFees(amountShare: any, devise: string) {\r\n    return this.paymentData.getHandleFeesWithDevise(amountShare, devise,this.userPayMethodForm.value.handleFees, this.userPayMethodForm.value.handleFeesType);\r\n  }\r\n\r\n  // Update the country info country prfix\r\n  updateCurrencyCountry(countryId: number) {\r\n    this.zone.run(() => {\r\n      this.paymentMethods = [];\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.states.forEach(state => {\r\n        if (state.country_id === countryId) {\r\n          this.updateFormData(state);\r\n        }\r\n      });\r\n    }, 300);\r\n  }\r\n\r\n  \r\n  // update parameters\r\n  updateParameters(data: any) {\r\n    let amountToPay = parseFloat(this.userPayMethodForm.value.montant);\r\n    const itemList = data.list_loan;\r\n    let currentAmount = 0;\r\n    const itemUpdates = [];\r\n    itemList.forEach(loan => {\r\n      currentAmount = amountToPay - parseFloat(loan.amount);\r\n      if (currentAmount >= 0) {\r\n        itemUpdates.push(loan);\r\n        amountToPay = currentAmount;\r\n      } else {\r\n        if (amountToPay > 0) {\r\n          itemUpdates.push({ loan_request_id: loan.loan_request_id, amount: amountToPay });\r\n        }\r\n        amountToPay = 0;\r\n      }\r\n    });\r\n    data.list_loan = itemUpdates;\r\n    return data;\r\n  }\r\n\r\n\r\n  // update operator param\r\n  updateOperatorParams(conversionType: string, devise: string) {\r\n    let currentParams = null;\r\n    const listItems = [];\r\n    switch (conversionType) {\r\n      case 'convert':\r\n        if (this.contributionData.type === 'loan-interest') {\r\n          currentParams = this.updateParameters(this.contributionData);\r\n          currentParams.list_loan.forEach(loan => {\r\n            listItems.push({\r\n              loan_request_id: loan.loan_request_id,\r\n              amount_depart_with_handling_fees: this.getAmountFees(loan.amount,devise),\r\n              amount_depart_without_handling_fees: loan.amount,\r\n              amount_arrivee_with_handling_fees: this.getAmountFees(loan.amount,devise),\r\n              amount_arrivee_without_handling_fees: loan.amount\r\n            });\r\n          });\r\n        } else {\r\n          currentParams = this.contributionData;\r\n          currentParams.list_interest_to_pay.forEach(loan => {\r\n            listItems.push({\r\n              loan_request_id: loan.loan_request_id,\r\n              amount_depart_with_handling_fees: this.getAmountFees(loan.amount,devise),\r\n              amount_depart_without_handling_fees: loan.amount,\r\n              amount_arrivee_with_handling_fees: this.getAmountFees(loan.amount,devise),\r\n              amount_arrivee_without_handling_fees: loan.amount\r\n            });\r\n          });\r\n        }\r\n\r\n        break;\r\n      case 'not-convert':\r\n        if (this.contributionData.type === 'loan-interest') {\r\n          currentParams = this.updateParameters(this.contributionData);\r\n          currentParams.list_loan.forEach(loan => {\r\n            listItems.push({\r\n              loan_request_id: loan.loan_request_id,\r\n              amount_without_handling_fees: loan.amount,\r\n              amount_with_handling_fees: this.getAmountFees(loan.amount,devise)\r\n            });\r\n          });\r\n        } else {\r\n          currentParams = this.contributionData;\r\n          currentParams.list_interest_to_pay.forEach(loan => {\r\n            listItems.push({\r\n              loan_request_id: loan.loan_request_id,\r\n              amount_without_handling_fees: loan.amount,\r\n              amount_with_handling_fees: this.getAmountFees(loan.amount,devise)\r\n            });\r\n          });\r\n        }\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return listItems;\r\n  }\r\n\r\n\r\n  // Show the payment mode\r\n  showPayment(mode: any) {\r\n\r\n    if (this.contributionData.type === 'loan-interest') {\r\n      this.contributionData.all_Amount = this.userPayMethodForm.value.montant;\r\n    }\r\n    switch (mode.type_payment_name) {\r\n\r\n      case 'ORANGE MONEY':\r\n        this.updateParametersOrange();\r\n        break;\r\n\r\n      case 'OZOW':\r\n        this.updateParametersOzow();\r\n        break;\r\n\r\n      case 'MTN MOBILE MONEY':\r\n        this.updateParametersMtn();\r\n        break;\r\n\r\n      case 'WALLET':\r\n        this.updateParametersWallet();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  /******************************** END  FORM  SERVICES *********************************************/\r\n\r\n\r\n  /******************************** START WALLET PAYMENT *********************************************/\r\n\r\n  \r\n  // update wallet parameters\r\n  updateParametersWallet() {\r\n    const translation = [];\r\n    this.translate.get(['CONFIRM_PAY_CONTRIBUTION_SUBTEXT1', 'CONFIRM_PAY_CONTRIBUTION_SUBTEXT2', 'CANCEL_TEXT', 'YES_TEXT']).subscribe(trans => {\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT1);\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT2);\r\n      translation.push(trans.CANCEL_TEXT);\r\n      translation.push(trans.YES_TEXT);\r\n      this.paymentWalletConfirm(this.contributionData, translation);\r\n    });\r\n  }\r\n\r\n\r\n  async paymentWalletConfirm(dataMessage: any, translation: string[]) {\r\n    const alert = await this.alertController.create({\r\n      header: `${dataMessage.title}`,\r\n      message: `${translation[0]} ${dataMessage.all_Amount}\r\n        ${dataMessage.currency_name} ${translation[1]}`,\r\n      buttons: [\r\n        {\r\n          text: `${translation[2]}`,\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n\r\n          }\r\n        }, {\r\n          text: `${translation[3]}`,\r\n          handler: () => {\r\n            this.paidWithWallet(dataMessage);\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  \r\n  // paid loan with wallet\r\n  paidWithWallet(contributionData: any) {\r\n    switch (contributionData.type) {\r\n      case 'loan-interest':\r\n        const param = this.updateParameters(contributionData);\r\n        this.paidWithWalletLoanAndInterest(param);\r\n        break;\r\n      case 'interest':\r\n        this.paidWithWalletInterest(contributionData);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // Paid the contribution with wallet\r\n  paidWithWalletLoanAndInterest(contributionData: any) {\r\n    this.loading = true;\r\n    this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n      this.ui.presentLoading(value);\r\n    });\r\n    this.loanService.payManyloanAndInterestWithWallet(contributionData)\r\n      .subscribe((reponse: any) => {\r\n        this.loading = false;\r\n        this.ui.dismissLoading();\r\n        if (reponse && reponse.message === 'success') {\r\n          this.translate.get('CONFIRM_PAY_CONTRIBUTION_MSG1').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n          this.initPaymentForm();\r\n          this.events.publish('modal-close', { result: 'complete' });\r\n\r\n        }\r\n      }, error => {\r\n\r\n   \r\n        if (error && error.error && error.error.message === 'error') {\r\n          if (error.error.user_not_found) {\r\n         \r\n            this.errorService.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.ui.dismissLoading();\r\n                this.paidWithWalletLoanAndInterest(contributionData);\r\n              } else {\r\n                this.exitPayment();\r\n              }\r\n            });\r\n          } else {\r\n            this.loading = false;\r\n            this.ui.dismissLoading();\r\n            this.paymentError.managePaymentOnlineError(error);\r\n          }\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.errorService.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  paidWithWalletInterest(contributionData: any) {\r\n    this.loading = true;\r\n    this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n      this.ui.presentLoading(value);\r\n    });\r\n    this.loanService.payManyloanInterestWithWallet(contributionData)\r\n      .subscribe((reponse: any) => {\r\n        this.loading = false;\r\n        this.ui.dismissLoading();\r\n        if (reponse && reponse.message === 'success') {\r\n          this.translate.get('CONFIRM_PAY_CONTRIBUTION_MSG1').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n          this.initPaymentForm();\r\n          this.events.publish('modal-close', { result: 'complete' });\r\n        }\r\n      }, error => {\r\n\r\n     \r\n        if (error && error.error && error.error.message === 'error') {\r\n          if (error.error.user_not_found) {\r\n   \r\n            this.errorService.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.ui.dismissLoading();\r\n                this.paidWithWalletInterest(contributionData);\r\n              } else {\r\n                this.exitPayment();\r\n              }\r\n            });\r\n          } else {\r\n            this.loading = false;\r\n            this.ui.dismissLoading();\r\n            this.paymentError.managePaymentOnlineError(error);\r\n          }\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.errorService.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n  /******************************** START WALLET PAYMENT *********************************************/\r\n\r\n\r\n\r\n  /******************************** START PAYPAL PAYMENT *********************************************/\r\n\r\n\r\n\r\n  setupPayPay() {\r\n    if (!this.paypal_initialized) {\r\n      this.initPayPal();\r\n    }\r\n  }\r\n\r\n  initPayPal() {\r\n\r\n    if (this.userPayMethodForm.value.montantTotal > 0) {\r\n      this.paypalLoading = true;\r\n      this.paypal_initialized = true;\r\n      let paypalbuttoncontainer = this.paypalbuttoncontainer.nativeElement as HTMLDivElement\r\n      let _this = this;\r\n\r\n      paypal.Button.render({\r\n        env: 'production', // sandbox | production\r\n        style: {\r\n          size: 'responsive',\r\n          color: 'gold',\r\n          shape: 'pill',\r\n          label: 'checkout', //label: checkout, buynow, credit, pay, paypal\r\n          tagline: false\r\n        },\r\n\r\n        client: {\r\n          sandbox: 'ARIMcMamksC74CLp7Zavgn62RsKK0XDfjePxjU9gsWmcdzyI3AYz3PwADIktvUgCdhAwWCXPaBzCckOC',\r\n          production: 'AVdCN0ymBsPer15VtLbeNoZ3vkjkhap6vXoxwsWF3B0H4GM_mVQ5GVpJ2h4-G_AlVVIsBYWx4JpVVxLT'\r\n        },\r\n        // Show the buyer a 'Pay Now' button in the checkout flow\r\n        commit: true,\r\n\r\n        payment: function (data, actions) {\r\n          return actions.payment.create({\r\n            payment: {\r\n              transactions: [\r\n                {\r\n                  amount: {\r\n                    total: _this.userPayMethodForm.value.montantTotal,\r\n                    currency: _this.userPayMethodForm.value.device_name\r\n                  },\r\n                  description: 'Toupesu'\r\n                }\r\n              ]\r\n            }\r\n          });\r\n\r\n        },\r\n        // onAuthorize() is called when the buyer approves the payment\r\n        onAuthorize: function (data, actions, error) {\r\n\r\n          if (error) {\r\n            _this.exitPayment();\r\n          }\r\n\r\n          if (error === 'INSTRUMENT_DECLINED') {\r\n            _this.exitPayment();\r\n          }\r\n\r\n          // Make a call to the REST ui to execute the payment\r\n          return actions.payment.execute().then(function () {\r\n            const params: any = {\r\n              refID: _this.reference,\r\n              amount: _this.userPayMethodForm.value.montantTotal,\r\n              moneyCode: _this.userPayMethodForm.value.device_name,\r\n              product: 'Toupesu',\r\n              paypalID: data.paymentToken.split('-')[1]\r\n            };\r\n            // Save and check the payment result\r\n            _this.userPayMethodForm.get('pay_token').setValue(data.paymentToken.split('-')[1]);\r\n            _this.api.post('livepaygateway/paypal/savePayRequest', JSON.stringify(params)).subscribe(\r\n              (ans: any) => {\r\n                if (ans && ans.success) {\r\n                  _this.updateParametersPaypal(data.paymentToken.split('-')[1]);\r\n                }\r\n              }, error => {\r\n                _this.updateParametersPaypal(data.paymentToken.split('-')[1]);\r\n              });\r\n          });\r\n        },\r\n        onCancel: function (data, actions) {\r\n          _this.exitPayment();\r\n        },\r\n        onClick: (data, actions) => {\r\n          _this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n            _this.ui.presentToast(value);\r\n          });\r\n        }\r\n      }, paypalbuttoncontainer);\r\n\r\n      setTimeout(() => {\r\n        this.paypalLoading = false;\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n\r\n  // update the paypal total amount\r\n  updatePaypalAmount() {\r\n    if (this.contributionData.type === 'loan-interest') {\r\n      this.contributionData.all_Amount = this.userPayMethodForm.value.montant;\r\n    }\r\n\r\n    if (this.contributionData.all_Amount) {\r\n    if (this.userPayMethodForm.value.type_payment_name === 'PAYPAL') {\r\n\r\n      const amount = this.getAmountFees(this.contributionData.all_Amount,this.contributionData.currency_name);\r\n      this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n\r\n      if (this.contributionData.currency_name !== this.userPayMethodForm.value.device_name) {\r\n        this.currency.convert(this.contributionData.currency_name, this.userPayMethodForm.value.device_name, this.contributionData.all_Amount).then(amountWithoutFees => {\r\n          if (amountWithoutFees) {\r\n\r\n            const amountFees = this.getAmountFees(amountWithoutFees,this.userPayMethodForm.value.device_name);\r\n            this.userPayMethodForm.get('montantTotal').setValue(amountFees);\r\n\r\n            this.translate.get('PAIDMODE_MSG2').subscribe(value => {\r\n              this.paypalMessage = `${value} ${this.userPayMethodForm.value.montantAvecFees}\r\n                 ${this.contributionData.currency_name} =\r\n                ${this.userPayMethodForm.value.montantTotal}\r\n                ${this.userPayMethodForm.value.device_name}`;\r\n              this.setupPayPay();\r\n            });\r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.paypalMessage = value;\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        this.userPayMethodForm.get('montantTotal').setValue(this.userPayMethodForm.value.montantAvecFees);\r\n        this.translate.get('PAIDMODE_MSG2').subscribe(value => {\r\n          this.paypalMessage = `${value}  ${this.userPayMethodForm.value.montantTotal}\r\n            ${this.userPayMethodForm.value.device_name}`;\r\n          this.setupPayPay();\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n  }\r\n\r\n  // Update parameters PAYPAL\r\n  updateParametersPaypal(payToken) {\r\n    const params = this.loanService.getLoanData();\r\n    const amount = this.getAmountFees(this.contributionData.all_Amount,params.currency_name);\r\n    this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n\r\n    if (params.currency_name === this.userPayMethodForm.value.device_name) {\r\n      const paramsData = {\r\n        list_loan: this.updateOperatorParams('not-convert',params.currency_name),\r\n        currency_name: this.contributionData.currency_name,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        numero: this.userPayMethodForm.value.numero,\r\n        pay_token: payToken,\r\n        operator: 'paypal'\r\n      };\r\n      this.paidWithoutConversionOperator(paramsData);\r\n    } else {\r\n      this.currency.convert(params.currency_name, this.userPayMethodForm.value.device_name, this.contributionData.all_Amount).then(montantsansFees => {\r\n        if (montantsansFees) {\r\n          const paramsData = {\r\n            list_loan: this.updateOperatorParams('convert',this.userPayMethodForm.value.device_name),\r\n            typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n            country_id: this.userPayMethodForm.value.countryId,\r\n            currency_depart_name: this.userPayMethodForm.value.device_name,\r\n            currency_arrivee_name: this.contributionData.currency_name,\r\n            somme_amount_depart_with_handling_fees: this.userPayMethodForm.value.montantTotal ? this.userPayMethodForm.value.montantTotal : 0,\r\n            somme_amount_depart_without_handling_fees: montantsansFees ? montantsansFees : 0,\r\n            numero: this.userPayMethodForm.value.numero,\r\n            pay_token: payToken,\r\n            operator: 'paypal'\r\n          };\r\n          this.paidWithConversionOperator(paramsData);\r\n        } else {\r\n          this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  /******************************** END PAYPAL PAYMENT *********************************************/\r\n\r\n\r\n  /******************************** START MTN PAYMENT *********************************************/\r\n\r\n  // Update parameters  Mtn payment\r\n  updateParametersMtn() {\r\n\r\n    const params = this.loanService.getLoanData();\r\n    const amount = this.getAmountFees(this.contributionData.all_Amount,params.currency_name);\r\n    this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n    \r\n    if (params.currency_name !== this.userPayMethodForm.value.device_name) {\r\n      \r\n            this.currency.convert(params.currency_name, this.userPayMethodForm.value.device_name,\r\n              this.contributionData.all_Amount).then(montantsansFees => {\r\n                if (montantsansFees) {\r\n                const dataParams = {\r\n                  list_loan: this.updateOperatorParams('convert',this.userPayMethodForm.value.device_name),\r\n                  typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n                  country_id: this.userPayMethodForm.value.countryId,\r\n                  currency_depart_name: this.userPayMethodForm.value.device_name,\r\n                  currency_arrivee_name: this.contributionData.currency_name,\r\n                  somme_amount_depart_with_handling_fees: this.getAmountFees(montantsansFees,this.userPayMethodForm.value.device_name),\r\n                  somme_amount_depart_without_handling_fees: montantsansFees ? montantsansFees : 0,\r\n                  numero: this.userPayMethodForm.value.numero,\r\n                  operator: 'MTN'\r\n                };\r\n                this.contributionDataParams = dataParams;\r\n                const messageConfirmation = {\r\n                  title: params.title, contribution: dataParams.somme_amount_depart_with_handling_fees,\r\n                  device_name: this.userPayMethodForm.value.device_name, type: 'converted'\r\n                };\r\n                this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n      \r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n\r\n        });\r\n    } else {\r\n\r\n      const paramsData = {\r\n        list_loan: this.updateOperatorParams('not-convert',this.contributionData.currency_name),\r\n        currency_name: this.contributionData.currency_name,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        numero: this.userPayMethodForm.value.numero,\r\n        operator: 'MTN'\r\n      };\r\n      this.contributionDataParams = paramsData;\r\n      const messageConfirmation = {\r\n        title: params.title, contribution: this.userPayMethodForm.value.montantAvecFees,\r\n        device_name: params.facture ? params.facture.device_name : '', type: 'notconverted'\r\n      };\r\n      this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n    }\r\n  }\r\n\r\n\r\n  /******************************** END MTN PAYMENT *********************************************/\r\n\r\n\r\n  /******************************** START ORANGE PAYMENT *********************************************/\r\n\r\n  // Update parameters  Orange payment\r\n  updateParametersOrange() {\r\n    const params = this.loanService.getLoanData();\r\n    const amount = this.getAmountFees(this.contributionData.all_Amount,params.currency_name);\r\n    this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n\r\n    if (params.currency_name !== this.userPayMethodForm.value.device_name) {\r\n       \r\n            this.currency.convert(params.currency_name, this.userPayMethodForm.value.device_name,\r\n              this.contributionData.all_Amount).then(montantsansFees => {\r\n\r\n                if (montantsansFees) {\r\n                  \r\n                const dataParams = {\r\n                  list_loan: this.updateOperatorParams('convert', this.userPayMethodForm.value.device_name),\r\n                  typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n                  country_id: this.userPayMethodForm.value.countryId,\r\n                  currency_depart_name: this.userPayMethodForm.value.device_name,\r\n                  currency_arrivee_name: this.contributionData.currency_name,\r\n                  somme_amount_depart_with_handling_fees: this.getAmountFees(montantsansFees,this.userPayMethodForm.value.device_name),\r\n                  somme_amount_depart_without_handling_fees: montantsansFees ? montantsansFees : 0,\r\n                  numero: this.userPayMethodForm.value.numero,\r\n                  operator: 'orange'\r\n                };\r\n                this.contributionDataParams = dataParams;\r\n                const messageConfirmation = {\r\n                  title: params.title, contribution: dataParams.somme_amount_depart_with_handling_fees,\r\n                  device_name: this.userPayMethodForm.value.device_name, type: 'converted'\r\n                };\r\n\r\n                this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n          \r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n\r\n        });\r\n    } else {\r\n\r\n      const paramsData = {\r\n        list_loan: this.updateOperatorParams('not-convert',this.contributionData.currency_name),\r\n        currency_name: this.contributionData.currency_name,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        numero: this.userPayMethodForm.value.numero,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        operator: 'orange'\r\n      };\r\n      this.contributionDataParams = paramsData;\r\n      const messageConfirmation = {\r\n        title: params.title, contribution: this.userPayMethodForm.value.montantAvecFees,\r\n        device_name: this.contributionData.currency_name, type: 'notconverted'\r\n      };\r\n      this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n    }\r\n  }\r\n\r\n  /******************************** END ORANGE PAYMENT *********************************************/\r\n\r\n\r\n\r\n  /******************************** START OZOW PAYMENT *********************************************/\r\n  // Update parameters OZOW payment\r\n  updateParametersOzow() {\r\n\r\n    const params = this.loanService.getLoanData();\r\n    const amount = this.getAmountFees(this.contributionData.all_Amount,params.currency_name);\r\n    this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n\r\n\r\n    if (params.currency_name !== this.userPayMethodForm.value.device_name) {\r\n         \r\n            this.currency.convert(params.currency_name, this.userPayMethodForm.value.device_name,\r\n              this.contributionData.all_Amount).then(montantsansFees => {\r\n\r\n                if (montantsansFees) {\r\n\r\n                const dataParams = {\r\n                  list_loan: this.updateOperatorParams('convert',this.userPayMethodForm.value.device_name),\r\n                  typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n                  country_id: this.userPayMethodForm.value.countryId,\r\n                  currency_depart_name: this.userPayMethodForm.value.device_name,\r\n                  currency_arrivee_name: this.contributionData.currency_name,\r\n                  somme_amount_depart_with_handling_fees: this.getAmountFees(montantsansFees,this.userPayMethodForm.value.device_name),\r\n                  somme_amount_depart_without_handling_fees: montantsansFees ? montantsansFees : 0,\r\n                  numero: this.userPayMethodForm.value.numero,\r\n                  operator: 'ozow'\r\n                };\r\n                this.contributionDataParams = dataParams;\r\n                const messageConfirmation = {\r\n                  title: params.title, contribution: dataParams.somme_amount_depart_with_handling_fees,\r\n                  device_name: this.userPayMethodForm.value.device_name, type: 'converted'\r\n                };\r\n                this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n         \r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n\r\n        });\r\n    } else {\r\n\r\n      const paramsData = {\r\n        list_loan: this.updateOperatorParams('not-convert', this.contributionData.currency_name),\r\n        currency_name: this.contributionData.currency_name,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        numero: this.userPayMethodForm.value.numero,\r\n        operator: 'ozow'\r\n      };\r\n      this.contributionDataParams = paramsData;\r\n      const messageConfirmation = {\r\n        title: params.title, contribution: this.userPayMethodForm.value.montantAvecFees,\r\n        device_name: params.facture ? params.facture.device_name : '', type: 'notconverted'\r\n      };\r\n      this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n\r\n    }\r\n  }\r\n\r\n  /******************************** END OZOW PAYMENT *********************************************/\r\n\r\n\r\n  /******************************** START COMMON PAYMENT  SERVICES *********************************************/\r\n\r\n\r\n  showConfirmationMessage(messageConfirmation: any, contributionDataParams: any) {\r\n    const translation = [];\r\n    this.translate.get(['CONFIRM_PAY_CONTRIBUTION_SUBTEXT1', 'CONFIRM_PAY_CONTRIBUTION_SUBTEXT2', 'CANCEL_TEXT', 'YES_TEXT'])\r\n      .subscribe(trans => {\r\n        translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT1);\r\n        translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT2);\r\n        translation.push(trans.CANCEL_TEXT);\r\n        translation.push(trans.YES_TEXT);\r\n        this.paymentOperatorConfirm(messageConfirmation, contributionDataParams, translation);\r\n      });\r\n  }\r\n\r\n\r\n  async paymentOperatorConfirm(dataMessage: any, contributionDataParams: any, translation: string[]) {\r\n    const alert = await this.alertController.create({\r\n      header: `${dataMessage.title}`,\r\n      message: `${translation[0]} ${dataMessage.contribution}\r\n    ${dataMessage.device_name}  ${translation[1]}`,\r\n      buttons: [\r\n        {\r\n          text: `${translation[2]}`,\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n\r\n          }\r\n        }, {\r\n          text: `${translation[3]}`,\r\n          handler: () => {\r\n            if (dataMessage.type === 'converted') {\r\n              this.paidWithConversionOperator(contributionDataParams);\r\n            } else if (dataMessage.type === 'notconverted') {\r\n              this.paidWithoutConversionOperator(contributionDataParams);\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  // Paid loan and Interest contribution  with operator without conversion\r\n  paidWithoutConversionOperatorLoanAndInterest(contributionData: any) {\r\n    this.loading = true;\r\n    this.showLoadingMessage(contributionData);\r\n    this.loanService.payManyloanAndInterestWithOperatorWithoutConversion(contributionData).subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'success') {\r\n        this.sendResponsePerOperator(reponse, contributionData.operator);\r\n      }\r\n    }, error => {\r\n      if (error && error.error && error.error.message === 'error') {\r\n        if (error.error.user_not_found) {\r\n          this.errorService.renewSession().then((data: any) => {\r\n            if (data && data.result === \"OK\") {\r\n              this.ui.dismissLoading();\r\n              this.paidWithoutConversionOperatorLoanAndInterest(contributionData);\r\n            } else {\r\n              this.exitPayment();\r\n            }\r\n          });\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.paymentError.managePaymentOnlineError(error);\r\n        }\r\n\r\n      } else {\r\n        this.loading = false;\r\n        this.ui.dismissLoading();\r\n        this.errorService.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Paid loan-Interest contribution with operator without conversion\r\n  paidWithoutloanInterestConversionOperator(contributionData: any) {\r\n    this.loading = true;\r\n    this.showLoadingMessage(contributionData);\r\n    this.loanService.payManyloanInterestWithOperatorWithoutConversion(contributionData).subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'success') {\r\n        this.sendResponsePerOperator(reponse, contributionData.operator);\r\n      }\r\n    }, error => {\r\n\r\n    \r\n      if (error && error.error && error.error.message === 'error') {\r\n\r\n        if (error.error.user_not_found) {\r\n          this.errorService.renewSession().then((data: any) => {\r\n            if (data && data.result === \"OK\") {\r\n              this.ui.dismissLoading();\r\n              this.paidWithoutloanInterestConversionOperator(contributionData);\r\n            } else {\r\n              this.exitPayment();\r\n            }\r\n          });\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.paymentError.managePaymentOnlineError(error);\r\n        }\r\n\r\n      } else {\r\n        this.loading = false;\r\n        this.ui.dismissLoading();\r\n        this.errorService.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Paid the user contribution with Paypal after conversion\r\n  paidWithConversionOperatorLoanAndInterest(contributionData: any) {\r\n    this.loading = true;\r\n    this.showLoadingMessage(contributionData);\r\n\r\n    this.loanService.payManyloanAndInterestWithOperatorWithConversion(contributionData).subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'success') {\r\n        this.sendResponsePerOperator(reponse, contributionData.operator);\r\n      }\r\n    }, error => {\r\n\r\n      if (error && error.error && error.error.message === 'error') {\r\n        if (error.error.user_not_found) {\r\n          this.errorService.renewSession().then((data: any) => {\r\n            if (data && data.result === \"OK\") {\r\n              this.ui.dismissLoading();\r\n              this.paidWithConversionOperatorLoanAndInterest(contributionData);\r\n            } else {\r\n              this.exitPayment();\r\n            }\r\n          });\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.paymentError.managePaymentOnlineError(error);\r\n        }\r\n\r\n      } else {\r\n        this.loading = false;\r\n        this.ui.dismissLoading();\r\n        this.errorService.manageError(error);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  paidWithConversionOperatorLoanInterest(contributionData: any) {\r\n    this.loading = true;\r\n    this.showLoadingMessage(contributionData);\r\n\r\n    this.loanService.payManyloanInterestWithOperatorWithConversion(contributionData).subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'success') {\r\n        this.sendResponsePerOperator(reponse, contributionData.operator);\r\n      }\r\n    }, error => {\r\n\r\n      if (error && error.error && error.error.message === 'error') {\r\n        if (error.error.user_not_found) {\r\n          this.errorService.renewSession().then((data: any) => {\r\n            if (data && data.result === \"OK\") {\r\n              this.ui.dismissLoading();\r\n              this.paidWithConversionOperatorLoanInterest(contributionData);\r\n            } else {\r\n              this.exitPayment();\r\n            }\r\n          });\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.paymentError.managePaymentOnlineError(error);\r\n        }\r\n      } else {\r\n        this.loading = false;\r\n        this.ui.dismissLoading();\r\n        this.errorService.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  paidWithoutConversionOperator(contributionData: any) {\r\n    switch (this.contributionData.type) {\r\n      case 'loan-interest':\r\n        this.paidWithoutConversionOperatorLoanAndInterest(contributionData);\r\n        break;\r\n      case 'interest':\r\n        const param = contributionData;\r\n        param.list_interest = contributionData.list_loan;\r\n        this.paidWithoutloanInterestConversionOperator(param);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  paidWithConversionOperator(contributionData: any) {\r\n    switch (this.contributionData.type) {\r\n      case 'loan-interest':\r\n        this.paidWithConversionOperatorLoanAndInterest(contributionData);\r\n        break;\r\n      case 'interest':\r\n        const param = contributionData;\r\n        param.list_interest = contributionData.list_loan;\r\n        this.paidWithConversionOperatorLoanInterest(param);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // Send message per operator\r\n  sendResponsePerOperator(data: any, operator: string) {\r\n    this.checkPaymentStatusOperator(data.pay_token, operator);\r\n    const reference = data && data.refID ? data.refID : '';\r\n    this.refernceId = reference;\r\n    this.cancelPaymentResult(reference);\r\n    switch (operator) {\r\n      case 'ozow':\r\n        window.open(data.url, '_blank');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // show the loading message\r\n  showLoadingMessage(data: any) {\r\n    switch (data.operator) {\r\n      case 'orange':\r\n        this.translate.get('ORANGE_PAYMENT_MESSAGE').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'MTN':\r\n        this.translate.get('MTN_PAYMENT_MESSAGE').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'paypal':\r\n        this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'ozow':\r\n        this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // SHOW THE SUCCES MESSAGE\r\n  showSuccesMessage(type: string) {\r\n    switch (type) {\r\n      case 'loan-interest':\r\n        this.translate.get('LOAN_PAYMENT_SUCCESS').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n        break;\r\n\r\n      case 'interest':\r\n        this.translate.get('INTEREST_PAYMENT_SUCCESS').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // clear the time out\r\n  clearTimeoutData() {\r\n    if (this.timeOut) {\r\n      clearTimeout(this.timeOut);\r\n      this.timeOut = null;\r\n    }\r\n  }\r\n\r\n  // clear the set interval\r\n  clearSetIntervalData() {\r\n    if (this.cron) {\r\n      clearInterval(this.cron);\r\n    }\r\n    this.cron = null;\r\n    for (let i = 0; i < 1000; i++) {\r\n      clearInterval(i);\r\n    }\r\n  }\r\n\r\n  // step 2 :  Check the status via Ozow\r\n  checkPaymentStatusOperator(payToken: string, operator: string) {\r\n    this.cron = setInterval(() => {\r\n      this.checkPaymentStatusOperatorServer(payToken, operator);\r\n    }, 20000);\r\n  }\r\n\r\n  // Check the payment Status\r\n  checkPaymentStatusOperatorServer(payToken: string, operator: string) {\r\n    this.wallet.getStatusPaymentOperator(payToken, operator).subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'OK') {\r\n        this.showPaymentResult();\r\n        this.showSuccesMessage(this.contributionData.type);\r\n\r\n      }\r\n    }, error => {\r\n\r\n      if (error && error.error && error.error.message === 'FAIL') {\r\n        this.exitPayment();\r\n        this.translate.get('PAYMENT_FAIL_MSG').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n      } else {\r\n        this.exitPayment();\r\n        this.translate.get('PAYMENT_FAIL_MSG').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n        this.errorService.manageError(error);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  // Show payment confirmation dialog\r\n  showPaymentResult() {\r\n    this.loading = false;\r\n    this.ui.dismissLoading();\r\n    this.initPaymentForm();\r\n    this.clearTimeoutData();\r\n    this.clearSetIntervalData();\r\n\r\n    this.events.publish('modal-close', { result: 'complete' });\r\n  }\r\n\r\n  // Cancel the payment\r\n  cancelPaymentResult(refence?: string) {\r\n    this.timeOut = setTimeout(() => {\r\n      this.exitPayment();\r\n      this.translate.get(['TRANSACTION_CANCEL', 'TOPUP_MSG9']).subscribe(trans => {\r\n        this.ui.presentAlert(`${trans.TRANSACTION_CANCEL}`, `${trans.TOPUP_MSG9} ${refence}`);\r\n      });\r\n    }, 300000);\r\n  }\r\n\r\n  // exit the payment directly\r\n  exitPayment() {\r\n    this.loading = false;\r\n    this.ui.dismissLoading();\r\n    this.getAllMethodPaymentType();\r\n    this.initFormMessage();\r\n    this.initPaymentForm();\r\n    this.clearTimeoutData();\r\n    this.clearSetIntervalData();\r\n  }\r\n\r\n  ionicViewDidLeave() {\r\n    if (this.loading) {\r\n      this.exitPayment();\r\n    }\r\n  }\r\n\r\n\r\n     // listen to back button\r\n     hardwareBackButton() {\r\n      this.platform.backButton.subscribe(() => {\r\n        const url = this.router.url;\r\n        if (url === '/dashboard/my-tontines/' + this.tontineData.tontine.tontine_id + '/debts/in-progress-paiement') {\r\n          if (this.refernceId) {\r\n            this.cancelPaymentResult(this.refernceId);\r\n          } else {\r\n            this.exitPayment();\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n  /******************************** END COMMON PAYMENT  SERVICES *********************************************/\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYWlkbW9kZS1zZWFuY2UuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button slot=\\\"icon-only\\\" (click)=\\\"closeCountries()\\\">\\n        <ion-icon color=\\\"warning\\\" name=\\\"close\\\" ></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"ion-text-center subtitle\\\">\\n      {{'REGISTER_MTEXT1' | translate}}\\n    </ion-title>\\n  </ion-toolbar>\\n  <ion-toolbar>\\n      <ion-searchbar placeholder=\\\"{{ 'M_NAME_TEXT' | translate }}\\\" type=\\\"text\\\" debounce=\\\"500\\\" (ionChange)=\\\"searchForInvitation($event)\\\" type=\\\"text\\\"></ion-searchbar>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refreSher($event)\\\">\\n    <ion-refresher-content\\n      pullingIcon=\\\"arrow-dropdown\\\"\\n      refreshingSpinner=\\\"circles\\\"\\n      refreshingText=\\\"{{ 'M_REFRESHING_TEXT' | translate }}\\\">\\n    </ion-refresher-content>\\n  </ion-refresher>\\n  <p class=\\\"ion-text-center\\\"  *ngIf=\\\"loading\\\">\\n    <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\n  </p>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\">\\n        <ion-radio-group (ionChange)=\\\"selectCountry($event)\\\">\\n          <ion-item  *ngFor=\\\"let country of states\\\">\\n            <ion-avatar slot=\\\"start\\\" *ngIf=\\\"country.country_flag\\\">\\n              <img src=\\\"{{country.country_flag}}\\\">\\n            </ion-avatar>\\n            <ion-label> + {{ country.country_prefixe }}</ion-label>\\n            <ion-radio slot=\\\"end\\\" [value]=\\\"country.code_country\\\"></ion-radio>\\n          </ion-item>\\n        </ion-radio-group>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n  <div  *ngIf=\\\"states && states.length === 0 && !loading &&!filter\\\">\\n    <p  class=\\\"ion-padding ion-text-center\\\"> {{ 'EMPTY_COUNTRY_LIST' | translate }}</p>\\n  </div>\\n\\n  <ion-infinite-scroll threshold=\\\"250px\\\" (ionInfinite)=\\\"infinteScrollData($event)\\\">\\n    <ion-infinite-scroll-content\\n      loadingSpinner=\\\"bubbles\\\"\\n      loadingText=\\\"{{ 'M_LOADING_MORE_DATA' | translate }}\\\">\\n    </ion-infinite-scroll-content>\\n  </ion-infinite-scroll>\\n</ion-content>\";","import { Component, OnInit, Input, NgZone, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ErrorService } from '../service/error.service';\r\nimport { AlertController, Platform } from '@ionic/angular';\r\nimport { LocationService } from '../service/location.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TontineService } from 'src/app/dashboard/my-tontines/services/tontine.service';\r\nimport { ContributionService } from 'src/app/dashboard/my-tontines/services/contribution.service';\r\nimport { CurrencyService } from '../service/currency.service';\r\nimport { WalletService } from 'src/app/dashboard/my-wallet/service/wallet.service';\r\nimport { FormUtilsService } from '../service/form-utils.service';\r\nimport { PaymentErrorService } from '../service/payment-error.service';\r\nimport { Router } from '@angular/router';\r\nimport { PaymentGlobalDataService } from '../service/payment-global-data.service';\r\nimport { UserService } from 'src/app/dashboard/user/service/user.service';\r\nimport { EventService } from '../service/events.service';\r\nimport { UiService } from '../service/ui.service';\r\nimport { ApiService } from '../service/api.service';\r\ndeclare var paypal: any;\r\n\r\ninterface PaymentMethod {\r\n  id: number;\r\n  logo: string;\r\n  currency: string;\r\n  country_id: number;\r\n  name: string;\r\n  placeholder ?: string;\r\n  handling_fees?: number;\r\n  type_handling_fees?: string;\r\n  type ?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-paidmode-seance-caution',\r\n  templateUrl: './paidmode-seance-caution.component.html',\r\n  styleUrls: ['./paidmode-seance-caution.component.scss'],\r\n})\r\nexport class PaidmodeCautionSenceComponent implements OnInit {\r\n\r\n  paymentMethods: PaymentMethod[];\r\n  paypalMessage: string;\r\n  userPayMethodForm: FormGroup;\r\n  currentCountryId: number;\r\n  states: any;\r\n  loadingOperator: boolean;\r\n  tontineData: any;\r\n  contributionData: any;\r\n  errorPhone: boolean;\r\n  loading: boolean;\r\n  cron: any;\r\n  timeOut: any;\r\n  contributionDataParams: any;\r\n  pin: string;\r\n  spinner: any;\r\n  allPaymentMethods: any;\r\n  paymentForm: FormGroup;\r\n  reference: string;\r\n  validationMessages: any;\r\n  paypalLoading: boolean;\r\n  paypal_initialized: boolean;\r\n  refernceId: string;\r\n\r\n  @Input() amountPay: number;\r\n  @ViewChild('paypalbuttoncontainer', { static: false }) paypalbuttoncontainer: ElementRef;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private platform: Platform,\r\n    private paymentData: PaymentGlobalDataService,\r\n    private router: Router,\r\n    private api: ApiService,\r\n    private currency: CurrencyService,\r\n    private events: EventService,\r\n    private contribution: ContributionService,\r\n    private alertController: AlertController,\r\n    private wallet: WalletService,\r\n    private tontine: TontineService,\r\n    private errorService: ErrorService,\r\n    private location: LocationService,\r\n    private translate: TranslateService,\r\n    private formUtil: FormUtilsService,\r\n    private zone: NgZone,\r\n    private paymentError: PaymentErrorService,\r\n    private ui: UiService\r\n  ) {\r\n    this.cron = null;\r\n    this.timeOut = null;\r\n    this.loadingOperator = false;\r\n    this.loading = false;\r\n    this.errorPhone = false;\r\n    this.states = [];\r\n    this.paymentMethods = [];\r\n    this.paypalMessage = '';\r\n    this.reference = this.formUtil.getRandomId();\r\n    this.tontineData = this.tontine.getCurrentTontineData();\r\n    this.allPaymentMethods = [];\r\n    this.paypalLoading = false;\r\n    this.paypal_initialized = false;\r\n    this.contributionData = this.contribution.getContributionData();\r\n    this.refernceId = '';\r\n    this.hardwareBackButton();\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.getAllMethodPaymentType();\r\n    this.initPaymentForm();\r\n    this.initFormMessage();\r\n  }\r\n\r\n\r\n  /******************************** START FORM PAYMENT SERVICES*********************************************/\r\n\r\n\r\n  // Form getters\r\n  get phone() {\r\n    return this.userPayMethodForm.get('phone');\r\n  }\r\n\r\n  get amountError() {\r\n    return this.userPayMethodForm.get('montantAvecFees');\r\n  }\r\n\r\n  get country() {\r\n    return this.userPayMethodForm.get('country_id');\r\n  }\r\n\r\n  get device_name() {\r\n    return this.userPayMethodForm.get('device_name');\r\n  }\r\n\r\n  get payementtype() {\r\n    return this.userPayMethodForm.get('typePaymentIndex');\r\n  }\r\n\r\n\r\n  // Init Form \r\n  initPaymentForm() {\r\n    const currentPayment = this.paymentData.getDefaultPaymentMethod();\r\n    this.userPayMethodForm = this.fb.group({\r\n      country_id: ['', Validators.required],\r\n      country_prefix: [''],\r\n      countryId: [''],\r\n      handleFees: [''],\r\n      handleFeesType: [''],\r\n      device_name: [''],\r\n      currency: [''],\r\n      currencyLabel: [''],\r\n      pay_token: [''],\r\n      url: [''],\r\n      montant: [''],\r\n      montantAvecFees: ['0'],\r\n      montantTotal: ['0'],\r\n      type_payment_id: [currentPayment ? currentPayment.typepaiement_id : ''],\r\n      type_payment_name: [currentPayment ? currentPayment.name : ''],\r\n      typePaymentIndex: [0, Validators.required],\r\n      phone: [currentPayment  && this.formUtil.validatePhone(currentPayment.numero_compte) ? currentPayment.numero_compte : ''],\r\n      numero: ['']\r\n    });\r\n  }\r\n\r\n  // Init form message\r\n  initFormMessage() {\r\n    this.translate.get(['REGISTER_PHONE_REQUIRED', 'AMOUNT_REQUIRED', 'PAID_MODE_REQUIRED'])\r\n      .subscribe(value => {\r\n        this.validationMessages = {\r\n          payementtype: [\r\n            { type: 'required', message: value.PAID_MODE_REQUIRED }\r\n          ],\r\n          phone: [\r\n            { type: 'required', message: value.REGISTER_PHONE_REQUIRED },\r\n          ],\r\n          amount: [\r\n            { type: 'required', message: value.AMOUNT_REQUIRED }\r\n          ],\r\n          country_id: [\r\n            { type: 'required', message: value.M_COUNTRY_REQUIRED }\r\n          ]\r\n        };\r\n      });\r\n  }\r\n\r\n  // Remove space\r\n  removeSpace() {\r\n    this.userPayMethodForm.get('phone').setValue(this.paymentData.removeInputSpace(this.userPayMethodForm.value.phone));\r\n  }\r\n\r\n  // check if it is not  mobile operator\r\n  checkMobileOperator() {\r\n    return this.paymentData.isMobileOperator(this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex]);\r\n  }\r\n\r\n  // can show paypal message\r\n  canShowPaypalMessage() {\r\n    return this.paymentData.hasPaypalMessage(this.paypalMessage, this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex]);\r\n  }\r\n\r\n\r\n  // can show  paypal button\r\n  canShowPaypalButton() {\r\n    return this.paymentData.hasPaypalButton(this.paypal_initialized, this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex]);\r\n  }\r\n\r\n  // can make payment \r\n  canPay() {\r\n    return this.paymentData.canShowPayment(this.userPayMethodForm.valid,this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex],this.userPayMethodForm.value.phone,this.errorPhone);\r\n  }\r\n\r\n\r\n\r\n  // check if emial or phone is valid\r\n  checckEmailOrPhone(inputValue: string, index: number) {\r\n    this.removeSpace();\r\n    this.userPayMethodForm.get('type_payment_id').setValue(this.paymentMethods[index].id);\r\n    switch (this.paymentMethods[index].name) {\r\n      case 'ORANGE MONEY':\r\n        this.errorPhone = !this.formUtil.validatePhone(inputValue);\r\n        if (!this.errorPhone) {\r\n          this.userPayMethodForm.get('numero').setValue(this.userPayMethodForm.value.country_prefix +\r\n            '' + this.userPayMethodForm.value.phone);\r\n        }\r\n        break;\r\n\r\n      case 'MTN MOBILE MONEY':\r\n        this.errorPhone = !this.formUtil.validatePhone(inputValue);\r\n        if (!this.errorPhone) {\r\n          this.userPayMethodForm.get('numero').setValue(this.userPayMethodForm.value.country_prefix +\r\n            '' + this.userPayMethodForm.value.phone);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // get all payment method\r\n  getAllMethodPaymentType() {\r\n    this.loadingOperator = true;\r\n    this.userService.getAllMethodPaymentType().subscribe((reponse: any) => {\r\n      this.loadingOperator = false;\r\n      this.paymentMethods = [];\r\n     /*  if (reponse && reponse.typePayment && reponse.typePayment.length > 0) {\r\n        this.paymentMethods = this.paymentData.formatPaymentMethodResponseContribution(reponse.typePayment);\r\n      } */\r\n\r\n      const defaultMethod: PaymentMethod[] = [{\r\n        id: 0, country_id: 0, logo: 'assets/pesuwallet.jpg',\r\n        currency: this.tontineData.tontine.monnaie, name: 'WALLET', placeholder: '',\r\n        handling_fees: 0,\r\n        type_handling_fees: 'valeur',\r\n        type: 'WALLET'\r\n      }];\r\n      this.paymentMethods = defaultMethod.concat(this.paymentMethods);\r\n      this.allPaymentMethods = this.paymentMethods;\r\n      this.getCountries(false);\r\n    }, error => {\r\n      this.loadingOperator = false;\r\n      this.paymentMethods.push({\r\n        id: 0, country_id: 0, logo: 'assets/pesuwallet.jpg',\r\n        currency: this.tontineData.tontine.monnaie, name: 'WALLET', placeholder: '',\r\n        handling_fees: 0,\r\n        type_handling_fees: 'valeur',\r\n        type: 'WALLET'\r\n      });\r\n      this.allPaymentMethods = this.paymentMethods;\r\n      this.getCountries(false);\r\n      this.errorService.manageError(error);\r\n    });\r\n  }\r\n\r\n  // Get all countries\r\n  getCountries(refresher: boolean) {\r\n    this.location.getAllCountries(refresher).then((countries: any) => {\r\n      this.states = this.paymentData.formatCountriesData(countries);\r\n      if (this.states && this.states.length > 0) {\r\n        setTimeout(() => {\r\n          this.states.forEach(country => {\r\n            if (country.country_key === this.tontineData.tontine.country_key) {\r\n              this.updateFormData(country);\r\n            }\r\n          });\r\n        }, 200);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  // update the form data\r\n  updateFormData(country: any) {\r\n    if (country) {\r\n      this.userPayMethodForm.get('countryId').setValue(country.country_id);\r\n      this.userPayMethodForm.get('country_prefix').setValue(country.country_prefixe);\r\n      this.userPayMethodForm.get('currency').setValue(country.device_name);\r\n      this.userPayMethodForm.get('handleFees').setValue(country.handling_fees);\r\n      this.userPayMethodForm.get('handleFeesType').setValue(country.type_handling_fees);\r\n      this.userPayMethodForm.get('currencyLabel').setValue(country.currency_label);\r\n      this.zone.run(() => {\r\n        this.userPayMethodForm.get('country_id').setValue(country.country_id);\r\n      });\r\n      this.updatePaymentsMethods(country.country_id);\r\n    }\r\n  }\r\n\r\n  // Update the payment method\r\n  updatePaymentMethod(index) {\r\n    if (this.paymentMethods[index]) {\r\n      this.userPayMethodForm.get('type_payment_id').setValue(this.paymentMethods[index].id);\r\n      this.userPayMethodForm.get('type_payment_name').setValue(this.paymentMethods[index].name);\r\n      this.userPayMethodForm.get('device_name').setValue(this.paymentMethods[index].currency);\r\n      this.userPayMethodForm.get('handleFees').setValue(this.paymentMethods[index].handling_fees);\r\n      this.userPayMethodForm.get('handleFeesType').setValue(this.paymentMethods[index].type_handling_fees);\r\n      this.zone.run(() => {\r\n        this.userPayMethodForm.get('typePaymentIndex').setValue(index);\r\n      });\r\n    }\r\n    if (this.paymentMethods && this.paymentMethods[index] &&\r\n      this.paymentMethods[index].name === 'PAYPAL') {\r\n      this.paypal_initialized = false;\r\n      this.updatePaypalAmount();\r\n    }\r\n  }\r\n\r\n\r\n  updatePaymentsMethods(countryId: number) {\r\n    // update the payment method\r\n    const paymentsMethods = [];\r\n    this.paymentMethods = [];\r\n    this.allPaymentMethods.forEach(payment => {\r\n      if (payment.country_id === countryId || payment.country_id === 0) {\r\n        paymentsMethods.push(payment);\r\n      }\r\n    });\r\n    this.paymentMethods = paymentsMethods;\r\n    if (this.paymentMethods && this.paymentMethods.length > 0) {\r\n      this.updatePaymentMethod(0);\r\n    }\r\n\r\n  }\r\n\r\n  // Calucalte the payment with handlfees\r\n  getAmountWithFees(amountShare: any, devise: string) {\r\n    return this.paymentData.getHandleFeesWithDevise(amountShare, devise, this.userPayMethodForm.value.handleFees, this.userPayMethodForm.value.handleFeesType);\r\n  }\r\n\r\n  // Update the country info country prfix\r\n  updateCurrencyCountry(countryId: number) {\r\n    this.zone.run(() => {\r\n      this.paymentMethods = [];\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.states.forEach(state => {\r\n        if (state.country_id === countryId) {\r\n          this.updateFormData(state);\r\n        }\r\n      });\r\n    }, 300);\r\n\r\n  }\r\n\r\n\r\n  selectOperator(data: any) {\r\n    const operator = this.paymentMethods[data.typePaymentIndex].name;\r\n    switch (operator) {\r\n      case 'ORANGE MONEY':\r\n        this.updateParametersOrange();\r\n        break;\r\n\r\n      case 'OZOW':\r\n        this.updateParametersOzow();\r\n        break;\r\n\r\n      case 'MTN MOBILE MONEY':\r\n        this.updateParametersMtn();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  // Show the payment mode\r\n  showPayment(data: any) {\r\n\r\n    const type = this.paymentMethods[data.typePaymentIndex].type;\r\n\r\n    switch (type) {\r\n\r\n      case 'OPERATOR':\r\n        this.selectOperator(data);\r\n        break;\r\n\r\n      case 'WALLET':\r\n        this.updateParametersWallet();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  /******************************** END FORM PAYMENT SERVICES*********************************************/\r\n\r\n\r\n  /******************************** START WALLET PAYMENT *********************************************/\r\n\r\n  async paymentWalletConfirm(dataMessage: any, translation: string[]) {\r\n    const alert = await this.alertController.create({\r\n      header: `${dataMessage.title}`,\r\n      message: `${translation[0]} ${dataMessage.contribution}\r\n        ${dataMessage.device_name} ${translation[1]}`,\r\n      buttons: [\r\n        {\r\n          text: `${translation[2]}`,\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n\r\n          }\r\n        }, {\r\n          text: `${translation[3]}`,\r\n          handler: () => {\r\n            this.paidWithWallet();\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  updateParametersWallet() {\r\n    const translation = [];\r\n    this.translate.get(['CONFIRM_PAY_CONTRIBUTION_SUBTEXT1', 'CONFIRM_PAY_CONTRIBUTION_SUBTEXT2', 'CANCEL_TEXT', 'YES_TEXT']).subscribe(trans => {\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT1);\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT2);\r\n      translation.push(trans.CANCEL_TEXT);\r\n      translation.push(trans.YES_TEXT);\r\n      console.log(this.contributionData);\r\n      this.paymentWalletConfirm(this.contributionData, translation);\r\n    });\r\n  }\r\n\r\n  // Send the user contribution\r\n  paidWithWallet() {\r\n    this.loading = true;\r\n    this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n      this.ui.presentLoading(value);\r\n    });\r\n    this.contribution.paidOldSessionTontineCautionWithWallet(this.contributionData)\r\n      .subscribe((reponse: any) => {\r\n\r\n        console.log(reponse);\r\n        this.loading = false;\r\n        this.ui.dismissLoading();\r\n        if (reponse && reponse.message === 'success') {\r\n          this.translate.get('CONFIRM_PAY_CONTRIBUTION_MSG1').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n          this.events.publish('modal-pay-seance');\r\n        }\r\n      }, error => {\r\n     \r\n      \r\n        if (error && error.error && error.error.message === 'error') {\r\n\r\n          if (error.error.user_not_found) {\r\n\r\n            this.errorService.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.ui.dismissLoading();\r\n                this.paidWithWallet();\r\n              } else {\r\n                this.exitPayment();\r\n              }\r\n            });\r\n          } else {\r\n            this.loading = false;\r\n            this.ui.dismissLoading();\r\n            this.paymentError.managePaymentOnlineError(error);\r\n          }\r\n\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.errorService.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n  /******************************** START WALLET PAYMENT *********************************************/\r\n\r\n\r\n\r\n  /******************************** START PAYPAL PAYMENT *********************************************/\r\n\r\n\r\n  // update the paypal total amount\r\n  updatePaypalAmount() {\r\n    if (this.userPayMethodForm.value.type_payment_name === 'PAYPAL') {\r\n\r\n      const amount = this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name) * this.contributionData.liste_part.length;\r\n      this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n\r\n      if (this.contributionData.device_name !== this.userPayMethodForm.value.device_name) {\r\n        this.currency.convert(this.contributionData.device_name, this.userPayMethodForm.value.device_name, this.contributionData.montant).then(montantSansFees => {\r\n          if (montantSansFees) {\r\n            const amountFees = this.getAmountWithFees(montantSansFees, this.userPayMethodForm.value.device_name) * this.contributionData.liste_part.length;\r\n            this.userPayMethodForm.get('montantTotal').setValue(amountFees);\r\n\r\n            this.translate.get('PAIDMODE_MSG2').subscribe(value => {\r\n              this.paypalMessage = `${value} ${this.userPayMethodForm.value.montantAvecFees}\r\n                 ${this.contributionData.device_name} =\r\n                ${this.userPayMethodForm.value.montantTotal}\r\n                ${this.userPayMethodForm.value.device_name}`;\r\n              this.setupPayPay();\r\n            });\r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.paypalMessage = value;\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        this.userPayMethodForm.get('montantTotal').setValue(this.userPayMethodForm.value.montantAvecFees);\r\n        this.translate.get('PAIDMODE_MSG2').subscribe(value => {\r\n          this.paypalMessage = `${value}  ${this.userPayMethodForm.value.montantTotal}\r\n            ${this.userPayMethodForm.value.device_name}`;\r\n          this.setupPayPay();\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  setupPayPay() {\r\n    if (!this.paypal_initialized) {\r\n      this.initPayPal();\r\n    }\r\n  }\r\n\r\n  initPayPal() {\r\n\r\n    if (this.userPayMethodForm.value.montantTotal > 0) {\r\n      this.paypalLoading = true;\r\n      this.paypal_initialized = true;\r\n      let paypalbuttoncontainer = this.paypalbuttoncontainer.nativeElement as HTMLDivElement\r\n      let _this = this;\r\n\r\n      paypal.Button.render({\r\n        env: 'production', // sandbox | production\r\n        style: {\r\n          size: 'responsive',\r\n          color: 'gold',\r\n          shape: 'pill',\r\n          label: 'checkout', //label: checkout, buynow, credit, pay, paypal\r\n          tagline: false\r\n        },\r\n\r\n        client: {\r\n          sandbox: 'ARIMcMamksC74CLp7Zavgn62RsKK0XDfjePxjU9gsWmcdzyI3AYz3PwADIktvUgCdhAwWCXPaBzCckOC',\r\n          production: 'AVdCN0ymBsPer15VtLbeNoZ3vkjkhap6vXoxwsWF3B0H4GM_mVQ5GVpJ2h4-G_AlVVIsBYWx4JpVVxLT'\r\n        },\r\n        // Show the buyer a 'Pay Now' button in the checkout flow\r\n        commit: true,\r\n\r\n        payment: function (data, actions) {\r\n          return actions.payment.create({\r\n            payment: {\r\n              transactions: [\r\n                {\r\n                  amount: {\r\n                    total: _this.userPayMethodForm.value.montantTotal,\r\n                    currency: _this.userPayMethodForm.value.device_name\r\n                  },\r\n                  description: 'Toupesu'\r\n                }\r\n              ]\r\n            }\r\n          });\r\n\r\n        },\r\n        // onAuthorize() is called when the buyer approves the payment\r\n        onAuthorize: function (data, actions, error) {\r\n\r\n          if (error) {\r\n            _this.exitPayment();\r\n          }\r\n\r\n          if (error === 'INSTRUMENT_DECLINED') {\r\n            _this.exitPayment();\r\n          }\r\n\r\n          // Make a call to the REST ui to execute the payment\r\n          return actions.payment.execute().then(function () {\r\n            const params: any = {\r\n              refID: _this.reference,\r\n              amount: _this.userPayMethodForm.value.montantTotal,\r\n              moneyCode: _this.userPayMethodForm.value.device_name,\r\n              product: 'Toupesu',\r\n              paypalID: data.paymentToken.split('-')[1]\r\n            };\r\n            // Save and check the payment result\r\n            _this.userPayMethodForm.get('pay_token').setValue(data.paymentToken.split('-')[1]);\r\n            _this.api.post('livepaygateway/paypal/savePayRequest', JSON.stringify(params)).subscribe(\r\n              (ans: any) => {\r\n                if (ans && ans.success) {\r\n                  _this.updateParametersPaypal(data.paymentToken.split('-')[1]);\r\n                }\r\n              }, error => {\r\n                _this.updateParametersPaypal(data.paymentToken.split('-')[1]);\r\n              });\r\n          });\r\n        },\r\n        onCancel: function (data, actions) {\r\n          _this.exitPayment();\r\n        },\r\n        onClick: (data, actions) => {\r\n          _this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n            _this.ui.presentToast(value);\r\n          });\r\n        }\r\n      }, paypalbuttoncontainer);\r\n\r\n      setTimeout(() => {\r\n        this.paypalLoading = false;\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  // Update parameters PAYPAL\r\n  updateParametersPaypal(payToken) {\r\n    // Add the handlefees to the amount\r\n    if (this.contributionData.device_name === this.userPayMethodForm.value.device_name) {\r\n      const params = {\r\n        seance_id: this.contributionData.seance_id,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        typecontribution_id: this.contributionData.typecontribution_id,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        montant_d_une_part_sans_handing_fees: this.contributionData.montant,\r\n        montant_d_une_part_avec_handling_fees: this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name),\r\n        device_name: this.contributionData.device_name,\r\n        sens_contribution: 'entrant',\r\n        liste_part: this.contributionData.liste_part,\r\n        pay_token: payToken,\r\n        pin: this.contributionData.pin,\r\n        operator: 'paypal'\r\n      };\r\n      this.makeDepositOperatorWithoutConversion(params);\r\n    } else {\r\n      this.currency.convert(this.contributionData.device_name, this.userPayMethodForm.value.device_name, this.contributionData.montant).then(montantSansFees => {\r\n        if (montantSansFees) {\r\n          const params = {\r\n            seance_id: this.contributionData.seance_id,\r\n            country_id: this.userPayMethodForm.value.countryId,\r\n            typecontribution_id: this.contributionData.typecontribution_id,\r\n            typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n            device_depart: this.userPayMethodForm.value.device_name,\r\n            device_arrivee: this.contributionData.device_name,\r\n            montant_device_depart_d_une_part_sans_handling_fees: montantSansFees ? montantSansFees : 0,\r\n            montant_device_depart_d_une_part_avec_handling_fees: this.getAmountWithFees(montantSansFees, this.userPayMethodForm.value.device_name),\r\n            montant_device_arrivee_d_une_part_sans_handling_fees: this.contributionData.montant,\r\n            sens_contribution: 'entrant',\r\n            liste_part: this.contributionData.liste_part,\r\n            pay_token: payToken,\r\n            pin: this.contributionData.pin,\r\n            operator: 'paypal'\r\n          };\r\n          this.makeDepositOperatorWithConversion(params);\r\n        } else {\r\n          this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  /******************************** END PAYPAL PAYMENT *********************************************/\r\n\r\n\r\n  /******************************** START MTN PAYMENT *********************************************/\r\n\r\n  // Update parameters  Mtn payment\r\n  updateParametersMtn() {\r\n    const amount = this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name) * this.contributionData.liste_part.length;\r\n    this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n\r\n    if (this.contributionData.device_name !== this.userPayMethodForm.value.device_name) {\r\n      this.currency.convert(this.contributionData.device_name, this.userPayMethodForm.value.device_name,\r\n        this.contributionData.montant).then(montantSansFees => {\r\n          if (montantSansFees) {\r\n            const params = {\r\n              seance_id: this.contributionData.seance_id,\r\n              typecontribution_id: this.contributionData.typecontribution_id,\r\n              typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n              country_id: this.userPayMethodForm.value.countryId,\r\n              device_depart: this.userPayMethodForm.value.device_name,\r\n              device_arrivee: this.contributionData.device_name,\r\n              montant_device_depart_d_une_part_sans_handling_fees: montantSansFees ? montantSansFees : 0,\r\n              montant_device_depart_d_une_part_avec_handling_fees: this.getAmountWithFees(montantSansFees, this.userPayMethodForm.value.device_name),\r\n              montant_device_arrivee_d_une_part_sans_handling_fees: this.contributionData.montant,\r\n              sens_contribution: 'entrant',\r\n              numero: this.userPayMethodForm.value.country_prefix + this.userPayMethodForm.value.phone,\r\n              liste_part: this.contributionData.liste_part,\r\n              pin: this.contributionData.pin,\r\n              operator: 'MTN'\r\n            };\r\n            this.contributionDataParams = params;\r\n            const messageConfirmation = {\r\n              title: this.contributionData.title, contribution: this.contributionDataParams.montant_device_depart_d_une_part_avec_handling_fees * this.contributionData.liste_part.length,\r\n              device_name: this.userPayMethodForm.value.device_name, type: 'converted'\r\n            };\r\n            this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n\r\n        });\r\n\r\n    } else {\r\n\r\n      const params = {\r\n        seance_id: this.contributionData.seance_id,\r\n        typecontribution_id: this.contributionData.typecontribution_id,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        device_name: this.contributionData.device_name,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        montant_d_une_part_sans_handing_fees: this.contributionData.montant,\r\n        montant_d_une_part_avec_handling_fees: this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name),\r\n        sens_contribution: 'entrant',\r\n        numero: this.userPayMethodForm.value.country_prefix + this.userPayMethodForm.value.phone,\r\n        liste_part: this.contributionData.liste_part,\r\n        pin: this.contributionData.pin,\r\n        operator: 'MTN'\r\n      };\r\n      this.contributionDataParams = params;\r\n      const messageConfirmation = {\r\n        title: this.contributionData.title, contribution: this.userPayMethodForm.value.montantAvecFees,\r\n        device_name: this.contributionData.device_name, type: 'notconverted'\r\n      };\r\n      this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n    }\r\n  }\r\n\r\n  /******************************** END MTN PAYMENT *********************************************/\r\n\r\n\r\n  /******************************** START ORANGE PAYMENT *********************************************/\r\n\r\n  // Update parameters  Orange payment\r\n  updateParametersOrange() {\r\n    const amount = this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name) * this.contributionData.liste_part.length;\r\n    this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n\r\n    if (this.contributionData.device_name !== this.userPayMethodForm.value.device_name) {\r\n      this.currency.convert(this.contributionData.device_name, this.userPayMethodForm.value.device_name,\r\n        this.contributionData.montant).then(montantSansFees => {\r\n          if (montantSansFees) {\r\n            const params = {\r\n              seance_id: this.contributionData.seance_id,\r\n              typecontribution_id: this.contributionData.typecontribution_id,\r\n              typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n              country_id: this.userPayMethodForm.value.countryId,\r\n              device_depart: this.userPayMethodForm.value.device_name,\r\n              device_arrivee: this.contributionData.device_name,\r\n              montant_device_depart_d_une_part_sans_handling_fees: montantSansFees ? montantSansFees : 0,\r\n              montant_device_depart_d_une_part_avec_handling_fees: this.getAmountWithFees(montantSansFees, this.userPayMethodForm.value.device_name),\r\n              montant_device_arrivee_d_une_part_sans_handling_fees: this.contributionData.montant,\r\n              montant_device_arrivee_d_une_part_avec_handling_fees: this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name),\r\n              sens_contribution: 'entrant',\r\n              numero: this.userPayMethodForm.value.country_prefix + this.userPayMethodForm.value.phone,\r\n              liste_part: this.contributionData.liste_part,\r\n              pin: this.contributionData.pin,\r\n              operator: 'orange'\r\n            };\r\n            this.contributionDataParams = params;\r\n            const messageConfirmation = {\r\n              title: this.contributionData.title, contribution: this.contributionDataParams.montant_device_depart_d_une_part_avec_handling_fees * this.contributionData.liste_part.length,\r\n              device_name: this.userPayMethodForm.value.device_name, type: 'converted'\r\n            };\r\n            this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n\r\n      const params = {\r\n        seance_id: this.contributionData.seance_id,\r\n        typecontribution_id: this.contributionData.typecontribution_id,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        device_name: this.contributionData.device_name,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        montant_d_une_part_sans_handing_fees: this.contributionData.montant,\r\n        montant_d_une_part_avec_handling_fees: this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name),\r\n        sens_contribution: 'entrant',\r\n        numero: this.userPayMethodForm.value.country_prefix + this.userPayMethodForm.value.phone,\r\n        liste_part: this.contributionData.liste_part,\r\n        pin: this.contributionData.pin,\r\n        operator: 'orange'\r\n      };\r\n      this.contributionDataParams = params;\r\n      const messageConfirmation = {\r\n        title: this.contributionData.title, contribution: this.userPayMethodForm.value.montantAvecFees,\r\n        device_name: this.contributionData.device_name, type: 'notconverted'\r\n      };\r\n      this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n    }\r\n  }\r\n\r\n\r\n  /******************************** END ORANGE PAYMENT *********************************************/\r\n\r\n\r\n\r\n  /******************************** START OZOW PAYMENT *********************************************/\r\n\r\n  // Update parameters OZOW payment\r\n  updateParametersOzow() {\r\n    const amount = this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name) * this.contributionData.liste_part.length;\r\n    this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n\r\n    if (this.contributionData.device_name !== this.userPayMethodForm.value.device_name) {\r\n      this.currency.convert(this.contributionData.device_name, this.userPayMethodForm.value.device_name,\r\n        this.contributionData.montant).then(montantSansFees => {\r\n          if (montantSansFees) {\r\n            const params = {\r\n              seance_id: this.contributionData.seance_id,\r\n              typecontribution_id: this.contributionData.typecontribution_id,\r\n              typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n              country_id: this.userPayMethodForm.value.countryId,\r\n              device_depart: this.userPayMethodForm.value.device_name,\r\n              device_arrivee: this.contributionData.device_name,\r\n              montant_device_depart_d_une_part_sans_handling_fees: montantSansFees ? montantSansFees : 0,\r\n              montant_device_depart_d_une_part_avec_handling_fees: this.getAmountWithFees(montantSansFees, this.userPayMethodForm.value.device_name),\r\n              montant_device_arrivee_d_une_part_sans_handling_fees: this.contributionData.montant,\r\n              sens_contribution: 'entrant',\r\n              numero: this.userPayMethodForm.value.country_prefix + this.userPayMethodForm.value.phone,\r\n              liste_part: this.contributionData.liste_part,\r\n              pin: this.contributionData.pin,\r\n              operator: 'ozow'\r\n            };\r\n            this.contributionDataParams = params;\r\n            const messageConfirmation = {\r\n              title: this.contributionData.title, contribution: this.contributionDataParams.montant_device_depart_d_une_part_avec_handling_fees * this.contributionData.liste_part.length,\r\n              device_name: this.userPayMethodForm.value.device_name, type: 'converted'\r\n            };\r\n            this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n\r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n        });\r\n\r\n    } else {\r\n\r\n      const params = {\r\n        seance_id: this.contributionData.seance_id,\r\n        typecontribution_id: this.contributionData.typecontribution_id,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        device_name: this.contributionData.device_name,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        montant_d_une_part_sans_handing_fees: this.contributionData.montant,\r\n        montant_d_une_part_avec_handling_fees: this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name),\r\n        sens_contribution: 'entrant',\r\n        numero: this.userPayMethodForm.value.country_prefix + this.userPayMethodForm.value.phone,\r\n        liste_part: this.contributionData.liste_part,\r\n        pin: this.contributionData.pin,\r\n        operator: 'ozow'\r\n      };\r\n      this.contributionDataParams = params;\r\n      const messageConfirmation = {\r\n        title: this.contributionData.title, contribution: this.userPayMethodForm.value.montantAvecFees,\r\n        device_name: this.contributionData.device_name, type: 'notconverted'\r\n      };\r\n      this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n    }\r\n  }\r\n\r\n\r\n  /******************************** END OZOW PAYMENT *********************************************/\r\n\r\n\r\n  /******************************** START FORM COMMON PAYMENT SERVICES *********************************************/\r\n\r\n  showConfirmationMessage(messageConfirmation: any, contributionDataParams: any) {\r\n    const translation = [];\r\n    this.translate.get(['CONFIRM_PAY_CONTRIBUTION_SUBTEXT1', 'CONFIRM_PAY_CONTRIBUTION_SUBTEXT2', 'CANCEL_TEXT', 'YES_TEXT']).subscribe(trans => {\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT1);\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT2);\r\n      translation.push(trans.CANCEL_TEXT);\r\n      translation.push(trans.YES_TEXT);\r\n      this.paymentOperatorConfirm(messageConfirmation, contributionDataParams, translation);\r\n    });\r\n  }\r\n\r\n  async paymentOperatorConfirm(dataMessage: any, contributionDataParams: any, translation: string[]) {\r\n    const alert = await this.alertController.create({\r\n      header: `${dataMessage.title}`,\r\n      message: `${translation[0]} ${dataMessage.contribution}\r\n    ${dataMessage.device_name}  ${translation[1]}`,\r\n      buttons: [\r\n        {\r\n          text: `${translation[2]}`,\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n\r\n          }\r\n        }, {\r\n          text: `${translation[3]}`,\r\n          handler: () => {\r\n            if (dataMessage.type === 'converted') {\r\n              this.makeDepositOperatorWithConversion(contributionDataParams);\r\n            } else if (dataMessage.type === 'notconverted') {\r\n              this.makeDepositOperatorWithoutConversion(contributionDataParams);\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n\r\n  // make deposit  with operator and conversion\r\n  makeDepositOperatorWithConversion(data: any) {\r\n    this.loading = true;\r\n    this.showLoadingMessage(data);\r\n    this.contribution.contributeWithOperatorWithConversionPastSeance(data)\r\n      .subscribe((reponse: any) => {\r\n        this.loading = false;\r\n        if (reponse && reponse.message === 'success') {\r\n          // Send the reponse per operator\r\n          this.sendResponsePerOperator(reponse, data.operator);\r\n\r\n        }\r\n      }, error => {\r\n     \r\n        if (error && error.error && error.error.message === 'error') {\r\n\r\n          if (error.error.user_not_found) {\r\n          \r\n            this.errorService.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.ui.dismissLoading();\r\n                this.makeDepositOperatorWithConversion(data);\r\n              } else {\r\n                this.exitPayment();\r\n              }\r\n            });\r\n          } else {\r\n            this.loading = false;\r\n            this.ui.dismissLoading();\r\n            this.paymentError.managePaymentOnlineError(error);\r\n          }\r\n\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.errorService.manageError(error);\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  // make deposit  with operator without conversion\r\n  makeDepositOperatorWithoutConversion(data: any) {\r\n    this.loading = true;\r\n    this.showLoadingMessage(data);\r\n    this.contribution.contributeWithOperatorWithoutConversionPastSeance(data)\r\n      .subscribe((reponse: any) => {\r\n        this.loading = false;\r\n        if (reponse && reponse.message === 'success') {\r\n          // Send the reponse per operator\r\n          this.sendResponsePerOperator(reponse, data.operator);\r\n        }\r\n      }, error => {\r\n    \r\n        if (error && error.error && error.error.message === 'error') {\r\n\r\n          if (error.error.user_not_found) {\r\n            \r\n            this.errorService.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.ui.dismissLoading();\r\n                this.makeDepositOperatorWithoutConversion(data);\r\n              } else {\r\n                this.exitPayment();\r\n              }\r\n            });\r\n          } else {\r\n            this.loading = false;\r\n            this.ui.dismissLoading();\r\n            this.paymentError.managePaymentOnlineError(error);\r\n          }\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.errorService.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n  // =======  Payment process result ===================\r\n\r\n  // Check the status througth operator\r\n  checkPaymentStatus(payToken: string, operator: string) {\r\n    this.cron = setInterval(() => {\r\n      this.checkPaymentStatusServer(payToken, operator);\r\n    }, 30000);\r\n  }\r\n\r\n  // Check the payment Status\r\n  checkPaymentStatusServer(payToken: string, operator: string) {\r\n    this.wallet.getStatusPaymentOperator(payToken, operator).subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'OK') {\r\n        this.showPaymentResult();\r\n        this.translate.get('CONFIRM_PAY_CONTRIBUTION_MSG1').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n      }\r\n    }, error => {\r\n      if (error && error.error && error.error.message === 'FAIL') {\r\n        this.exitPayment();\r\n        this.translate.get('ERROR_PAY_CONTRIBUTION_MSG').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n      } else {\r\n        this.exitPayment();\r\n        this.translate.get('ERROR_PAY_CONTRIBUTION_MSG').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n        this.errorService.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Send message per operator\r\n  sendResponsePerOperator(data: any, operator: string) {\r\n    this.checkPaymentStatus(data.pay_token, operator);\r\n    const reference = data && data.refID ? data.refID : '';\r\n    this.refernceId = reference;\r\n    this.cancelPaymentResult(reference);\r\n    switch (operator) {\r\n      case 'ozow':\r\n        window.open(data.url, '_blank');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // show the loading message\r\n  showLoadingMessage(data: any) {\r\n    switch (data.operator) {\r\n      case 'orange':\r\n        this.translate.get('ORANGE_PAYMENT_MESSAGE').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'MTN':\r\n        this.translate.get('MTN_PAYMENT_MESSAGE').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'paypal':\r\n        this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'ozow':\r\n        this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // clear the time out\r\n  clearTimeoutData() {\r\n    if (this.timeOut) {\r\n      clearTimeout(this.timeOut);\r\n      this.timeOut = null;\r\n    }\r\n  }\r\n\r\n  // clear the set interval\r\n  clearSetIntervalData() {\r\n    if (this.cron) {\r\n      clearInterval(this.cron);\r\n    }\r\n    this.cron = null;\r\n    for (let i = 0; i < 1000; i++) {\r\n      clearInterval(i);\r\n    }\r\n  }\r\n\r\n  // Show payment confirmation dialog\r\n  showPaymentResult() {\r\n    this.loading = false;\r\n    this.ui.dismissLoading();\r\n    this.initPaymentForm();\r\n    this.clearTimeoutData();\r\n    this.clearSetIntervalData();\r\n\r\n    this.events.publish('modal-pay-seance');\r\n  }\r\n\r\n  // Cancel the payment\r\n  cancelPaymentResult(refence?: string) {\r\n    this.timeOut = setTimeout(() => {\r\n      this.exitPayment();\r\n      this.translate.get(['TRANSACTION_CANCEL', 'TOPUP_MSG9']).subscribe(trans => {\r\n        this.ui.presentAlert(`${trans.TRANSACTION_CANCEL}`, `${trans.TOPUP_MSG9} ${refence}`);\r\n      });\r\n    }, 300000);\r\n  }\r\n\r\n  // exit the payment directly\r\n  exitPayment() {\r\n    this.loading = false;\r\n    this.ui.dismissLoading();\r\n    this.getAllMethodPaymentType();\r\n    this.initPaymentForm();\r\n    this.initFormMessage();\r\n    this.clearTimeoutData();\r\n    this.clearSetIntervalData();\r\n  }\r\n\r\n  ionicViewDidLeave() {\r\n    if (this.loading) {\r\n      this.exitPayment();\r\n    }\r\n  }\r\n\r\n  // listen to back button\r\n  hardwareBackButton() {\r\n    this.platform.backButton.subscribe(() => {\r\n      const url = this.router.url;\r\n      if (url === '/dashboard/my-tontines/' + this.tontineData.tontine.tontine_id + '/contrib-not-paid') {\r\n        if (this.refernceId) {\r\n          this.cancelPaymentResult(this.refernceId);\r\n        } else {\r\n          this.exitPayment();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /******************************** END FORM COMMON PAYMENT SERVICES *********************************************/\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ErrorService } from './error.service';\r\nimport { UiService } from './ui.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PaymentErrorService {\r\n\r\n  constructor(\r\n    private ui: UiService,\r\n    private translate: TranslateService,\r\n    private error: ErrorService\r\n  ) { }\r\n\r\n\r\n  managePaymentOfflineError(error: any) {\r\n\r\n    if (error.error.remplir_tous_les_champs) {\r\n      this.translate.get('DEBT_PARAMETER_NOTFOUND').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.device_id_not_exist) {\r\n      this.translate.get('CURRENCY_REQUIRED').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.seance_id_not_exist) {\r\n      this.translate.get('DEBT_SEANCE_NOTFOUND').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.device_id_not_match_device_id_tontine) {\r\n      this.translate.get('DEBT_CURRENCY_NOTFOUND').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    } \r\n\r\n    if (error.error.typecontribution_id_not_exist) {\r\n      this.translate.get('TONTINE_PENALTY_MSG9').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.total_amount_proof_is_greather_than_total_amount_receipt) {\r\n      this.translate.get('DEBT_TOTAL_AMOUNT_PROOF_MSG').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.tontine_id_not_exist) {\r\n      this.translate.get('TONTINE_INVITE_TEXT10').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.bouffe_id_not_exist) {\r\n      this.translate.get('BENEFICIARY_NOT_EXIST_TEXT').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.user_not_authorize) {\r\n      this.translate.get('ADD_SHARE_MSG6').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.total_amount_is_greather_than_bouffe_amount) {\r\n      this.translate.get('AMOUNT_GREATHER_THAN_JACKPOT').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.this_admin_has_already_validate) {\r\n      this.translate.get('ADMIN_ALREADY_VALIDATE').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.montant_online_is_greather_than_online_balance) {\r\n      this.translate.get('ONLINE_AMOUNT_GREATHER_THAN_ONLINE_BALANCE').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.montant_offline_is_greather_than_bank_balance) {\r\n      this.translate.get('OFFLINE_AMOUNT_GREATHER_THAN_OFFLINE_BALANCE').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.this_bouffe_is_already_initiated) {\r\n      this.translate.get('JACKPOT_INITIATE_TEXT').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.remplir_tous_les_champs) {\r\n      this.translate.get('DEBT_PARAMETER_NOTFOUND').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.user_not_authorized) {\r\n      this.translate.get('ADD_SHARE_MSG6').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.total_amount_proof_is_greather_than_bouffe_amount) {\r\n      this.translate.get('BENEFICIAL_AMOUNT_GREATHER_THAN_PROOF').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.sold_online_balance_is_insufficient) {\r\n      this.translate.get('ONLINE_WALLET_BALANCE_INSUFFICIENT').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.typepaiement_id_not_exist) {\r\n      this.translate.get('PAIDMODE_MSG3').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.currency_name_not_exist) {\r\n      this.translate.get('DEBT_CURRENCY_NOTFOUND').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.type_caisse_tontine_id_not_exist) {\r\n      this.translate.get('CAISSE_TONTINE_NOTFOUND').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n      });\r\n    } \r\n\r\n\r\n    if (error.error.type_caisse_depart_id_not_exist) {\r\n      this.translate.get('CAISSE_SOURCE_NOTFOUND').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.type_caisse_arrivee_id_not_exist) {\r\n      this.translate.get('CAISSE_DESTINATION_NOTFOUND').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.offline_balance_insuffisant) {\r\n      this.translate.get('BALANCE_OFFLINE_INSUFFICIENT').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.online_balance_insuffisant) {\r\n      this.translate.get('BALANCE_ONLINE_INSUFFICIENT').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  managePaymentOnlineError(error: any) {\r\n\r\n    if (error.error.remplir_tous_les_champs) {\r\n      this.translate.get('DEBT_PARAMETER_NOTFOUND').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.device_id_not_exist) {\r\n      this.translate.get('CURRENCY_REQUIRED').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.seance_id_not_exist) {\r\n      this.translate.get('DEBT_SEANCE_NOTFOUND').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.seance_not_found) {\r\n      this.translate.get('DEBT_SEANCE_NOTFOUND').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.device_id_not_match_device_id_tontine) {\r\n      this.translate.get('DEBT_CURRENCY_NOTFOUND').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    } \r\n\r\n    if (error.error.typecontribution_id_not_exist) {\r\n      this.translate.get('TONTINE_PENALTY_MSG9').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.total_amount_proof_is_greather_than_total_amount_receipt) {\r\n      this.translate.get('DEBT_TOTAL_AMOUNT_PROOF_MSG').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    } \r\n\r\n    if (error.error.insufficient_balance) {\r\n      this.translate.get('INSUFFICIENT_BALANCE_MSG').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.tontine_id_not_exist) {\r\n      this.translate.get('TONTINE_INVITE_TEXT10').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.parameter_not_found) {\r\n      this.translate.get('CONFIRM_PAY_CONTRIBUTION_MSG3').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n\r\n    if (error.error.device_not_exist_for_operator) {\r\n      this.translate.get('TOPUP_MSG1').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n\r\n    if (error.error.device_not_exist || error.error.currency_not_exist) {\r\n      this.translate.get('CURRENCY_DOES_NOT_EXIST').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n\r\n    if (error.error.device_not_exist_in_portemonnaie_user) {\r\n      this.translate.get('CONFIRM_PAY_CONTRIBUTION_MSG4').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n\r\n    if (error.error.solde_insuffisant || error.error.solde_payeur_insuffisant) {\r\n      this.translate.get('CONFIRM_PAY_CONTRIBUTION_MSG5').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n\r\n    if (error.error.no_match_device_to_device_tontine) {\r\n      this.translate.get('CONFIRM_PAY_CONTRIBUTION_MSG6').subscribe(value => {\r\n        this.ui.presentToast(`${value} ${error.error.monnaie_tontine}`);\r\n      });\r\n    }\r\n\r\n    if (error.error.montant_depasse_cout_part) {\r\n      this.translate.get('CONFIRM_PAY_CONTRIBUTION_MSG7').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n\r\n    if (error.error.typecontribution_not_exist) {\r\n      this.translate.get('CONFIRM_PAY_CONTRIBUTION_MSG8').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n\r\n    if (error.error.montant_restant_a_contribuer_grand) {\r\n      this.translate.get('CONFIRM_PAY_CONTRIBUTION_MSG9').subscribe(value => {\r\n        this.ui.presentToast(`${value} ${error.error.valeur_montant_restant_a_contribuer} ${error.error.monnaie_tontine ? error.error.monnaie_tontine : ''}`);\r\n      });\r\n    }\r\n\r\n    if (error.error.aucune_penalite_a_payer) {\r\n      this.translate.get('CONFIRM_PAY_CONTRIBUTION_MSG10').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n\r\n    if (error.error.penalite_restante_a_payer_grand) {\r\n      this.translate.get('CONFIRM_PAY_CONTRIBUTION_MSG11').subscribe(value => {\r\n        this.ui.presentToast(`${value} ${error.error.penalite_restante_a_payer} ${error.error.monnaie_tontine ? error.error.monnaie_tontine : ''}`);\r\n      });\r\n    }\r\n\r\n    if (error.error.tontine_status_inactive) {\r\n      this.translate.get('TONTINE_EVENT_ERROR1').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n\r\n    if (error.error.tontine_period_inactive) {\r\n      this.translate.get('TONTINE_EVENT_ERROR3').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n\r\n    if (error.error.device_depart_id_not_exist) {\r\n      this.translate.get('CURRENCY_DEPART_NOT_EXIST').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.device_arrivee_id_not_match_device_id_tontine) {\r\n      this.translate.get('CURRENCY_DESTINATION_NOTMATCH_STOKVEL_CURRENCY').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.typepaiement_id_not_exist) {\r\n      this.translate.get('PAIDMODE_MSG3').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.country_not_exist || error.error.country_id_not_exist) {\r\n      this.translate.get('COUNTRY_NOT_EXIST').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.invalid_payment) {\r\n      this.translate.get('INVALID_DEPOSIT').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.device_arrivee_id_not_exist) {\r\n      this.translate.get('CURRENCY_DESTINATION_NOT_EXIST').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.type_caisse_tontine_id_not_exist) {\r\n      this.translate.get('CAISSE_TONTINE_NOTFOUND').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.user_not_authorize) {\r\n      this.translate.get('ADD_SHARE_MSG6').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.pin_incorrect) {\r\n      this.translate.get('M_PIN_INVALID').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.solde_payeur_insuffisant) {\r\n      this.translate.get('M_INSUFFICIENT_SOLDE_ERROR').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.loan_request_id_not_exist) {\r\n      this.translate.get('LOAN_REQUEST_NOT_EXIST').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.amount_is_greater_than_rest_to_pay) {\r\n      this.translate.get('AMOUNT_GREATHER_THAN_REST_TO_PAY').subscribe(trans => {\r\n        this.ui.presentToast(`${trans} ${error.error.reste_a_payer}`);\r\n      });\r\n    }\r\n\r\n    if (error.error.swap_request_id_not_exist) {\r\n      this.translate.get('SWAP_REQUEST_NOT_EXIST').subscribe(trans => {\r\n        this.ui.presentToast(`${trans}`);\r\n      });\r\n    }\r\n\r\n    if (error.error.swap_request_id_is_already_completed) {\r\n      this.translate.get('SWAP_REQUEST_ALREADY_COMPLETE',{direction :`${error.error.direction}`}).subscribe(trans => {\r\n        this.ui.presentToast(`${trans}`);\r\n      });\r\n    }\r\n\r\n    if (error.error.currency_not_match_currency_swap_request) {\r\n      this.translate.get('CURRENCY_NOT_MATCH_CURRENCY_REQUEST').subscribe(trans => {\r\n        this.ui.presentToast(`${trans}`);\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJiYW5rbW9kZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ErrorService } from '../service/error.service';\r\nimport { TontineService } from 'src/app/dashboard/my-tontines/services/tontine.service';\r\nimport { PaymentErrorService } from '../service/payment-error.service';\r\nimport { LoanService } from 'src/app/dashboard/my-tontines/tontine-detail/loans/service/loan.service';\r\nimport { EventService } from '../service/events.service';\r\nimport { UiService } from '../service/ui.service';\r\nimport { PluginService } from '../service/plugin.service';\r\n\r\n@Component({\r\n  selector: 'app-bankmode-loan',\r\n  templateUrl: './bankmode-loan.component.html',\r\n  styleUrls: ['./bankmode-loan.component.scss'],\r\n})\r\nexport class BankmodeLoanComponent implements OnInit {\r\n\r\n  @Input() amountPay: number;\r\n  @Input() balance: number;\r\n  @Input() type: string;\r\n\r\n  paymentForm: FormGroup;\r\n  validationMessages: any;\r\n  loadingPay: boolean;\r\n  currentTontine: any;\r\n  contributionData: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private translate: TranslateService,\r\n    private events: EventService,\r\n    private tontine: TontineService,\r\n    private error: ErrorService,\r\n    private loanService: LoanService,\r\n    private ui: UiService,\r\n    private paymentError: PaymentErrorService,\r\n    private plugin: PluginService\r\n  ) {\r\n    this.loadingPay = false;\r\n    this.currentTontine = this.tontine.getCurrentTontineData();\r\n    this.contributionData = this.loanService.getLoanData();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initFormMessage();\r\n    this.initTradionnalPayment();\r\n  }\r\n\r\n  // Getters\r\n  get amount() {\r\n    return this.paymentForm.get('montant_total');\r\n  }\r\n\r\n  get proofMessage() {\r\n    return this.paymentForm.get('proofMessage');\r\n  }\r\n\r\n  get proof() {\r\n    return this.paymentForm.get('receipt');\r\n  }\r\n\r\n\r\n  // Init the form message\r\n  initFormMessage() {\r\n    this.translate.get(['REGISTER_PHONE_REQUIRED', 'AMOUNT_REQUIRED', 'PAID_MODE_REQUIRED', 'M_COUNTRY_REQUIRED'])\r\n      .subscribe(value => {\r\n        this.validationMessages = {\r\n          payementtype: [\r\n            { type: 'required', message: value.PAID_MODE_REQUIRED }\r\n          ],\r\n          phone: [\r\n            { type: 'required', message: value.REGISTER_PHONE_REQUIRED },\r\n          ],\r\n          amount: [\r\n            { type: 'required', message: value.AMOUNT_REQUIRED }\r\n          ],\r\n          country_id: [\r\n            { type: 'required', message: value.M_COUNTRY_REQUIRED }\r\n          ]\r\n        };\r\n      });\r\n  }\r\n\r\n  // Init traditional banking payment\r\n  initTradionnalPayment() {\r\n    this.paymentForm = this.fb.group({\r\n      currency: [this.contributionData.currency_name],\r\n      montant_total: [{ value: this.amountPay, disabled: this.type === 'interest' ? true : false }, Validators.compose([Validators.required, Validators.min(1), Validators.max(this.amountPay)])],\r\n      proofMessage: [''],\r\n      receipt: [''],\r\n      liste_proof: [[]]\r\n    });\r\n  }\r\n\r\n  // update parameters\r\n  updateParameters(data: any) {\r\n    let amountToPay = parseFloat(this.paymentForm.value.montant_total);\r\n    const itemList = data.list_loan;\r\n    let currentAmount = 0;\r\n    const itemUpdates = [];\r\n    itemList.forEach(loan => {\r\n      currentAmount = amountToPay - parseFloat(loan.amount);\r\n      if (currentAmount >= 0) {\r\n        itemUpdates.push(loan);\r\n        amountToPay = currentAmount;\r\n      } else {\r\n        if (amountToPay > 0) {\r\n          itemUpdates.push({ loan_request_id: loan.loan_request_id, amount: amountToPay });\r\n        }\r\n        amountToPay = 0;\r\n      }\r\n    });\r\n    data.list_loan = itemUpdates;\r\n    return data;\r\n  }\r\n\r\n  // Get the payment proofs\r\n  getProof() {\r\n    this.plugin.getPicture().subscribe((picture: any) => {\r\n      if (picture) {\r\n        setTimeout(() => {\r\n          this.paymentForm.get('receipt').setValue(picture);\r\n        }, 200);\r\n      }\r\n    });\r\n  }\r\n\r\n  // paid loan with bank\r\n  paidWithBank(contributionData: any) {\r\n    this.paymentForm.get('liste_proof').setValue([{\r\n      montant: contributionData.type === 'loan-interest' ? this.paymentForm.value.montant_total : this.amountPay,\r\n      description: this.paymentForm.value.proofMessage,\r\n      receipt: this.paymentForm.value.receipt\r\n    }]);\r\n    switch (contributionData.type) {\r\n      case 'loan-interest':\r\n        const param1 = this.updateParameters(contributionData);\r\n        param1.liste_proof = this.paymentForm.value.liste_proof;\r\n        param1.montant_total = this.paymentForm.value.montant_total;\r\n        this.paidWithBankLoanAndInterest(param1);\r\n        break;\r\n      case 'interest':\r\n        const param2 = contributionData;\r\n        param2.liste_proof = this.paymentForm.value.liste_proof;\r\n        param2.montant_total = this.amountPay;\r\n        this.paidWithBankInterest(param2);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // Paid the contribution with bank\r\n  paidWithBankLoanAndInterest(contributionData: any) {\r\n    this.loadingPay = true;\r\n    this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n      this.ui.presentLoading(value);\r\n    });\r\n    this.loanService.payManyLoanAndInterestWithBankTradi(contributionData)\r\n      .subscribe((reponse: any) => {\r\n        this.loadingPay = false;\r\n        this.ui.dismissLoading();\r\n        if (reponse && reponse.message === 'success') {\r\n          this.translate.get('CONFIRM_PAY_CONTRIBUTION_MSG1').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n          this.initTradionnalPayment();\r\n          this.events.publish('modal-close', { result: 'complete' });\r\n\r\n        }\r\n      }, error => {\r\n      \r\n      \r\n        if (error && error.error && error.error.message === 'error') {\r\n          if (error.error.user_not_found) {\r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.ui.dismissLoading();\r\n                this.paidWithBankLoanAndInterest(contributionData);\r\n              } else {\r\n                this.ui.dismissLoading();\r\n                this.loadingPay = false;\r\n              }\r\n            });\r\n          } else {\r\n            this.loadingPay = false;\r\n            this.ui.dismissLoading();\r\n            this.paymentError.managePaymentOnlineError(error);\r\n          }\r\n\r\n        } else {\r\n          this.loadingPay = false;\r\n          this.ui.dismissLoading();\r\n          this.error.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  // Paid the contribution with bank\r\n  paidWithBankInterest(contributionData: any) {\r\n    this.loadingPay = true;\r\n    this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n      this.ui.presentLoading(value);\r\n    });\r\n    this.loanService.payManyLoanInterestWithBankTradi(contributionData)\r\n      .subscribe((reponse: any) => {\r\n        this.loadingPay = false;\r\n        this.ui.dismissLoading();\r\n        if (reponse && reponse.message === 'success') {\r\n          this.translate.get('CONFIRM_PAY_CONTRIBUTION_MSG1').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n          this.initTradionnalPayment();\r\n          this.events.publish('modal-close', { result: 'complete' });\r\n        }\r\n      }, error => {\r\n     \r\n       \r\n        if (error && error.error && error.error.message === 'error') {\r\n          if (error.error.user_not_found) {\r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.ui.dismissLoading();\r\n                this.paidWithBankInterest(contributionData);\r\n              } else {\r\n                this.ui.dismissLoading();\r\n                this.loadingPay = false;\r\n              }\r\n            });\r\n          } else {\r\n            this.loadingPay = false;\r\n            this.ui.dismissLoading();\r\n            this.paymentError.managePaymentOnlineError(error);\r\n          }\r\n        } else {\r\n          this.loadingPay = false;\r\n          this.ui.dismissLoading();\r\n          this.error.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYWlkbW9kZS1kZWJ0LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CurrencyService {\r\n\r\n  public static baseUrlCurrencyRate = 'https://apilayer.net';\r\n  private static accessKey = 'f68da29e3769951bc2f8f9b94b3ce652';\r\n\r\n  public static currencyRate = {\r\n    path: '/api/live?access_key=' + CurrencyService.accessKey,\r\n    method: 'GET',\r\n    params: ['base'], // base=USD indique USD comme devise de base\r\n    description: 'permet de recuperer le cours des devises'\r\n  };\r\n\r\n  public static convertRate(ratefrom: string, to: string, amount: number): any {\r\n    return {\r\n      path: '/api/convert?access_key=' + CurrencyService.accessKey\r\n        + '&from=' + ratefrom\r\n        + '&to=' + to\r\n        + '&amount=' + amount\r\n        + '& format=1',\r\n      method: 'GET',\r\n      params: ['base'], // base=USD indique USD comme devise de base\r\n      description: 'permet de recuperer le cours des devises'\r\n    };\r\n  }\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {\r\n\r\n  }\r\n\r\n  // Get all the currencies rate\r\n  getCurrencyRate(): Observable<any> {\r\n    return this.http.get(CurrencyService.baseUrlCurrencyRate + CurrencyService.currencyRate.path);\r\n  }\r\n\r\n  // Get a conversion From currency to another one\r\n  getConvertionRate(ratefrom: string, to: string, amount: number): Observable<any> {\r\n    return this.http.get(CurrencyService.baseUrlCurrencyRate + CurrencyService.convertRate(ratefrom, to, amount).path);\r\n  }\r\n\r\n  // Get the rate of conversion\r\n  rateConvert(rateFrom: number, rateTo: number, value: number): number {\r\n    return (value * (1 / rateFrom)) * rateTo;\r\n  }\r\n\r\n  // get the convertion rate\r\n  conversionRateValue(cuurencyFrom: string, currencyTo: string) {\r\n    return new Promise((resolve) => {\r\n      this.getSelfConvertionRate().subscribe((data) => {\r\n        const value = data.quotes['USD' + currencyTo] / data.quotes['USD' + cuurencyFrom];\r\n        if (value > 20) {\r\n          resolve(Number((value + 0.02)).toFixed(6));\r\n        } else {\r\n          resolve(Number((value + 0.00002)).toFixed(6));\r\n        }\r\n\r\n      }, error => {\r\n        resolve(0);\r\n      });\r\n    });\r\n  }\r\n\r\n  getSelfConvertionRate(): Observable<any> {\r\n    return this.http.get(CurrencyService.baseUrlCurrencyRate + CurrencyService.currencyRate.path);\r\n  }\r\n\r\n  // Fisrt conversion of o a currency\r\n  convert(convertFrom, convertTo, myAmout) {\r\n    return new Promise((resolve) => {\r\n  \r\n        this.getSelfConvertionRate().subscribe((data) => {\r\n          const value = this.rateConvert(data.quotes['USD' + convertFrom], data.quotes['USD' + convertTo], myAmout);\r\n          if (convertTo === 'XAF' || convertTo === 'XOF' || convertTo === 'ZAR') {\r\n            resolve(Number((Math.ceil(value + 0.02))).toFixed(2));\r\n          } else {\r\n            resolve(Number((value + 0.02)).toFixed(2));\r\n          }\r\n        }, error => {\r\n          resolve(null);\r\n        });\r\n   \r\n    });\r\n  }\r\n}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button slot=\\\"icon-only\\\" (click)=\\\"closeCountries()\\\">\\r\\n        <ion-icon color=\\\"warning\\\" name=\\\"close\\\" ></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title class=\\\"ion-text-center subtitle\\\">\\r\\n      {{'REGISTER_MTEXT1' | translate}}\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar>\\r\\n      <ion-searchbar placeholder=\\\"{{ 'M_NAME_TEXT' | translate }}\\\" type=\\\"text\\\" debounce=\\\"500\\\" (ionChange)=\\\"searchForInvitation($event)\\\" type=\\\"text\\\"></ion-searchbar>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refreSher($event)\\\">\\r\\n    <ion-refresher-content\\r\\n      pullingIcon=\\\"reload-outline\\\"\\r\\n      refreshingSpinner=\\\"circles\\\"\\r\\n      refreshingText=\\\"{{ 'M_REFRESHING_TEXT' | translate }}\\\">\\r\\n    </ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  <p class=\\\"ion-text-center\\\"  *ngIf=\\\"loading\\\">\\r\\n    <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n  </p>\\r\\n  <ion-grid *ngIf=\\\"states && states.length > 0 && !loading\\\">\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"12\\\">\\r\\n        <ion-radio-group (ionChange)=\\\"selectCountry($event)\\\">\\r\\n          <ion-item  *ngFor=\\\"let country of states\\\">\\r\\n            <ion-avatar slot=\\\"start\\\" *ngIf=\\\"country &&country.country_flag\\\">\\r\\n              <img src=\\\"{{country.country_flag ? country.country_flag : ''}}\\\">\\r\\n            </ion-avatar>\\r\\n            <ion-label>{{ country && country.country_label ? country.country_label : '' }}</ion-label>\\r\\n            <ion-radio slot=\\\"end\\\" [value]=\\\"country && country.code_country ? country.code_country : ''\\\"></ion-radio>\\r\\n          </ion-item>\\r\\n        </ion-radio-group>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n  <div  *ngIf=\\\"states && states.length === 0 && !loading &&!filter\\\">\\r\\n    <p  class=\\\"ion-padding ion-text-center\\\"> {{ 'EMPTY_COUNTRY_LIST' | translate }}</p>\\r\\n  </div>\\r\\n\\r\\n  <ion-infinite-scroll threshold=\\\"250px\\\" (ionInfinite)=\\\"infinteScrollData($event)\\\">\\r\\n    <ion-infinite-scroll-content\\r\\n      loadingSpinner=\\\"bubbles\\\"\\r\\n      loadingText=\\\"{{ 'M_LOADING_MORE_DATA' | translate }}\\\">\\r\\n    </ion-infinite-scroll-content>\\r\\n  </ion-infinite-scroll>\\r\\n</ion-content>\";","import { Component, OnInit, Input, NgZone, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ErrorService } from '../service/error.service';\r\nimport { AlertController, Platform } from '@ionic/angular';\r\nimport { LocationService } from '../service/location.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ApiService } from '../service/api.service';\r\nimport { CurrencyService } from '../service/currency.service';\r\nimport { WalletService } from 'src/app/dashboard/my-wallet/service/wallet.service';\r\nimport { FormUtilsService } from '../service/form-utils.service';\r\nimport { PaymentErrorService } from '../service/payment-error.service';\r\nimport { SwapService } from 'src/app/dashboard/pesuswap/services/swap.service';\r\nimport { SwapErrorService } from '../../dashboard/pesuswap/services/swap-error.service';\r\nimport { Router } from '@angular/router';\r\nimport { TontineService } from 'src/app/dashboard/my-tontines/services/tontine.service';\r\nimport { PaymentGlobalDataService } from '../service/payment-global-data.service';\r\nimport { EventService } from '../service/events.service';\r\nimport { UserService } from 'src/app/dashboard/user/service/user.service';\r\nimport { UiService } from '../service/ui.service';\r\ndeclare var paypal;\r\n\r\ninterface PaymentMethod {\r\n  id: number;\r\n  logo: string;\r\n  currency: string;\r\n  country_id: number;\r\n  name: string;\r\n  placeholder ?: string;\r\n  handling_fees?: number;\r\n  type_handling_fees?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-paidmode-swap',\r\n  templateUrl: './paidmode-swap.component.html',\r\n  styleUrls: ['./paidmode-swap.component.scss'],\r\n})\r\nexport class PaidmodeSwapComponent implements OnInit {\r\n\r\n  paymentMethods: PaymentMethod[];\r\n  defaultState: any;\r\n  paypalMessage: string;\r\n  userPayMethodForm: FormGroup;\r\n  currentCountryId: number;\r\n  states: any;\r\n  loadingOperator: boolean;\r\n  tontineData: any;\r\n  contributionData: any;\r\n  errorPhone: boolean;\r\n  loading: boolean;\r\n  cron: any;\r\n  timeOut: any;\r\n  contributionDataParams: any;\r\n  pin: string;\r\n  spinner: any;\r\n  allPaymentMethods: any;\r\n  userData: any;\r\n  defautCountry: any;\r\n  listOfcountries: any;\r\n  paymentForm: FormGroup;\r\n  reference: string;\r\n  validationMessages: any;\r\n  paypalLoading: boolean;\r\n  paypal_initialized: boolean;\r\n  refernceId: string;\r\n\r\n  @Input() amountPay: number;\r\n  @ViewChild('paypalbuttoncontainer', { static: false }) paypalbuttoncontainer: ElementRef;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private events: EventService,\r\n    private ui: UiService,\r\n    private api: ApiService,\r\n    private currency: CurrencyService,\r\n    private paymentData: PaymentGlobalDataService,\r\n    private router: Router,\r\n    private platform: Platform,\r\n    private formUtil: FormUtilsService,\r\n    private swapService: SwapService,\r\n    private swapError: SwapErrorService,\r\n    private alertController: AlertController,\r\n    private tontine: TontineService,\r\n    private paymentError: PaymentErrorService,\r\n    private wallet: WalletService,\r\n    private errorService: ErrorService,\r\n    private location: LocationService,\r\n    private translate: TranslateService,\r\n    private zone: NgZone\r\n  ) {\r\n    this.cron = null;\r\n    this.timeOut = null;\r\n    this.loadingOperator = false;\r\n    this.loading = false;\r\n    this.errorPhone = false;\r\n    this.states = [];\r\n    this.paymentMethods = [];\r\n    this.listOfcountries = [];\r\n    this.paypalMessage = '';\r\n    this.reference = this.formUtil.getRandomId();\r\n    this.userData = this.userService.getUserData();\r\n    this.allPaymentMethods = [];\r\n    this.contributionData = this.swapService.getCurrentSwapData();\r\n    this.tontineData = this.tontine.getCurrentTontineData();\r\n    this.paypalLoading = false;\r\n    this.paypal_initialized = false;\r\n    this.refernceId = '';\r\n    this.hardwareBackButton();\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.getAllMethodPaymentType();\r\n    this.initFormMessage();\r\n    this.initPaymentForm();\r\n  }\r\n\r\n  /******************************** START FORM PAYMENT SERVICE *********************************************/\r\n\r\n  // Form getters\r\n  get phone() {\r\n    return this.userPayMethodForm.get('phone');\r\n  }\r\n\r\n  get amountError() {\r\n    return this.userPayMethodForm.get('montantAvecFees');\r\n  }\r\n\r\n  get country() {\r\n    return this.userPayMethodForm.get('country_id');\r\n  }\r\n\r\n  get device_name() {\r\n    return this.userPayMethodForm.get('device_name');\r\n  }\r\n\r\n  get payementtype() {\r\n    return this.userPayMethodForm.get('typePaymentIndex');\r\n  }\r\n\r\n  get montantContributeError() {\r\n    return this.userPayMethodForm.get('montant');\r\n  }\r\n\r\n  // Init form \r\n  initPaymentForm() {\r\n    const currentPayment = this.paymentData.getDefaultPaymentMethod();\r\n    this.userPayMethodForm = this.fb.group({\r\n      country_id: ['', Validators.required],\r\n      country_prefix: [''],\r\n      countryId: [''],\r\n      handleFees: [''],\r\n      handleFeesType: [''],\r\n      device_name: [''],\r\n      currency: [this.contributionData.currency],\r\n      currencyLabel: [''],\r\n      pay_token: [''],\r\n      url: [''],\r\n      montant: [{ value: this.contributionData.amount, disabled: true }, Validators.compose([Validators.required, Validators.min(1), Validators.max(this.contributionData.amount)])],\r\n      montantAvecFees: ['0'],\r\n      montantTotal: ['0'],\r\n      type_payment_id: [currentPayment ? currentPayment.typepaiement_id : ''],\r\n      type_payment_name: [currentPayment ? currentPayment.name : ''],\r\n      typePaymentIndex: [0, Validators.required],\r\n      phone: [currentPayment  && this.formUtil.validatePhone(currentPayment.numero_compte) ? currentPayment.numero_compte : ''],\r\n      numero: ['']\r\n    });\r\n  }\r\n\r\n  // Init form message\r\n  initFormMessage() {\r\n    this.translate.get(['REGISTER_PHONE_REQUIRED', 'AMOUNT_REQUIRED', 'PAID_MODE_REQUIRED', 'M_COUNTRY_REQUIRED'])\r\n      .subscribe(value => {\r\n        this.validationMessages = {\r\n          payementtype: [\r\n            { type: 'required', message: value.PAID_MODE_REQUIRED }\r\n          ],\r\n          phone: [\r\n            { type: 'required', message: value.REGISTER_PHONE_REQUIRED },\r\n          ],\r\n          amount: [\r\n            { type: 'required', message: value.AMOUNT_REQUIRED }\r\n          ],\r\n          country_id: [\r\n            { type: 'required', message: value.M_COUNTRY_REQUIRED }\r\n          ]\r\n        };\r\n      });\r\n  }\r\n\r\n  // Remove space\r\n  removeSpace() {\r\n    this.userPayMethodForm.get('phone').setValue(this.paymentData.removeInputSpace(this.userPayMethodForm.value.phone));\r\n  }\r\n\r\n  // check if it is not  mobile operator\r\n  checkMobileOperator() {\r\n    return this.paymentData.isMobileOperator(this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex]);\r\n  }\r\n\r\n  // can show paypal message\r\n  canShowPaypalMessage() {\r\n    return this.paymentData.hasPaypalMessage(this.paypalMessage, this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex]);\r\n  }\r\n\r\n  // can show  paypal button\r\n  canShowPaypalButton() {\r\n    return this.paymentData.hasPaypalButton(this.paypal_initialized, this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex]);\r\n  }\r\n\r\n  // can make payment \r\n  canPay() {\r\n    return this.paymentData.canShowPayment(this.userPayMethodForm.valid, this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex], this.userPayMethodForm.value.phone, this.errorPhone);\r\n  }\r\n\r\n  // check if emial or phone is valid\r\n  checckEmailOrPhone(inputValue: string, index: number) {\r\n    this.removeSpace();\r\n    this.userPayMethodForm.get('type_payment_id').setValue(this.paymentMethods[index].id);\r\n    switch (this.paymentMethods[index].name) {\r\n      case 'ORANGE MONEY':\r\n        this.errorPhone = !this.formUtil.validatePhone(inputValue);\r\n        if (!this.errorPhone) {\r\n          this.userPayMethodForm.get('numero').setValue(this.userPayMethodForm.value.country_prefix +\r\n            '' + this.userPayMethodForm.value.phone);\r\n        }\r\n        break;\r\n\r\n      case 'MTN MOBILE MONEY':\r\n        this.errorPhone = !this.formUtil.validatePhone(inputValue);\r\n        if (!this.errorPhone) {\r\n          this.userPayMethodForm.get('numero').setValue(this.userPayMethodForm.value.country_prefix +\r\n            '' + this.userPayMethodForm.value.phone);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // get all payment method\r\n  getAllMethodPaymentType() {\r\n    this.loadingOperator = true;\r\n    this.userService.getAllMethodPaymentType().subscribe((reponse: any) => {\r\n      this.paymentMethods = [];\r\n      this.loadingOperator = false;\r\n      if (reponse && reponse.typePayment && reponse.typePayment.length > 0) {\r\n        this.paymentMethods = this.paymentData.formatPaymentMethodResponseContribution(reponse.typePayment);\r\n      }\r\n      const defaultMethod: PaymentMethod[] = [{\r\n        id: 0, country_id: 0, logo: 'assets/pesuwallet.jpg',\r\n        currency: this.contributionData.currency, name: 'WALLET', placeholder: '',\r\n        handling_fees: 0,\r\n        type_handling_fees: 'valeur'\r\n      }];\r\n      this.paymentMethods = defaultMethod.concat(this.paymentMethods);\r\n      this.allPaymentMethods = this.paymentMethods;\r\n      this.getCountries(false);\r\n    }, error => {\r\n      this.loadingOperator = false;\r\n      this.paymentMethods.push({\r\n        id: 0, country_id: 0, logo: 'assets/pesuwallet.jpg',\r\n        currency: this.contributionData.currency, name: 'WALLET', placeholder: '',\r\n        handling_fees: 0,\r\n        type_handling_fees: 'valeur'\r\n      });\r\n      this.allPaymentMethods = this.paymentMethods;\r\n      this.getCountries(false);\r\n      this.errorService.manageError(error);\r\n    });\r\n  }\r\n\r\n  // Get all countries\r\n  getCountries(refresher: boolean) {\r\n    this.location.getAllCountries(refresher).then((countries: any) => {\r\n      // Get active country\r\n      countries.forEach(country => {\r\n        if (country.active === 1) {\r\n          this.listOfcountries.push(country.country_id);\r\n          if (country.default_country === 'yes') {\r\n            this.defautCountry = country.country_id;\r\n          }\r\n        }\r\n      });\r\n      this.states = this.paymentData.formatCountriesData(countries);\r\n      this.zone.run(() => {\r\n        this.states = this.states;\r\n      });\r\n\r\n      // Get the the current country\r\n      this.getCurrentCountry(false);\r\n    });\r\n  }\r\n\r\n  // Set defaulft country parameter\r\n  setDefaultCountry() {\r\n    // Get the list of country\r\n    let countryExist = false;\r\n    this.listOfcountries.forEach(countryId => {\r\n      if (countryId === this.userPayMethodForm.value.country_id) {\r\n        this.updateCurrencyCountry(this.userPayMethodForm.value.country_id);\r\n        countryExist = true;\r\n      }\r\n    });\r\n\r\n    // We set the default coutry\r\n    if (!countryExist) {\r\n      this.userPayMethodForm.get('country_id').setValue(this.defautCountry);\r\n      this.updateCurrencyCountry(this.defautCountry);\r\n    }\r\n  }\r\n\r\n  // Update the country info country prfix\r\n  updateCurrencyCountry(countryId: any) {\r\n    this.zone.run(() => {\r\n      this.paymentMethods = [];\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.states.forEach(state => {\r\n        if (parseInt(state.country_id, 10) === parseInt(countryId, 10)) {\r\n          this.updateFormData(state);\r\n        }\r\n      });\r\n    }, 300);\r\n  }\r\n\r\n  // Set the default country\r\n  getCurrentCountry(refresher: boolean) {\r\n    const userCountry = this.location.getCurrentUserCountry();\r\n    if (userCountry) {\r\n      if (userCountry.active === 1) {\r\n        this.updateFormData(userCountry);\r\n      } else {\r\n        this.setDefaultCountry();\r\n      }\r\n    } else {\r\n      this.location.getCurrentCountryInfo(refresher).then((country: any) => {\r\n        if (country) {\r\n          this.defaultState = country.settings;\r\n          if (this.defaultState.active === 1) {\r\n            this.updateFormData(this.defaultState);\r\n          } else {\r\n            this.setDefaultCountry();\r\n          }\r\n        } else {\r\n          this.setDefaultCountry();\r\n        }\r\n      }).catch(error => {\r\n      });\r\n    }\r\n  }\r\n\r\n  // update the form data\r\n  updateFormData(country: any) {\r\n    if (country) {\r\n      this.userPayMethodForm.get('countryId').setValue(country.country_id);\r\n\r\n      this.userPayMethodForm.get('country_prefix').setValue(country.country_prefixe);\r\n      this.userPayMethodForm.get('currency').setValue(country.device_name);\r\n      this.userPayMethodForm.get('handleFees').setValue(country.handling_fees);\r\n      this.userPayMethodForm.get('handleFeesType').setValue(country.type_handling_fees);\r\n      this.userPayMethodForm.get('currencyLabel').setValue(country.currency_label);\r\n\r\n      setTimeout(() => {\r\n        this.userPayMethodForm.get('country_id').setValue(country.country_id);\r\n        this.updatePaymentsMethods(country.country_id);\r\n      }, 200);\r\n\r\n    }\r\n  }\r\n\r\n  updatePaymentsMethods(countryId: number) {\r\n    // update the payment method\r\n    const paymentsMethods = [];\r\n    this.paymentMethods = [];\r\n    this.allPaymentMethods.forEach(payment => {\r\n      if (payment.country_id === countryId || payment.country_id === 0) {\r\n        paymentsMethods.push(payment);\r\n      }\r\n    });\r\n    this.paymentMethods = paymentsMethods;\r\n    if (this.paymentMethods && this.paymentMethods.length > 0) {\r\n      this.updatePaymentMethod(0);\r\n    }\r\n  }\r\n\r\n  // Update the payment method\r\n  updatePaymentMethod(index) {\r\n\r\n    if (this.paymentMethods[index]) {\r\n      this.userPayMethodForm.get('type_payment_id').setValue(this.paymentMethods[index].id);\r\n      this.userPayMethodForm.get('type_payment_name').setValue(this.paymentMethods[index].name);\r\n      this.userPayMethodForm.get('device_name').setValue(this.paymentMethods[index].currency);\r\n      this.userPayMethodForm.get('handleFees').setValue(this.paymentMethods[index].handling_fees);\r\n      this.userPayMethodForm.get('handleFeesType').setValue(this.paymentMethods[index].type_handling_fees);\r\n      this.zone.run(() => {\r\n        this.userPayMethodForm.get('typePaymentIndex').setValue(index);\r\n      });\r\n    }\r\n    if (this.paymentMethods && this.paymentMethods[index] &&\r\n      this.paymentMethods[index].name === 'PAYPAL') {\r\n      this.paypal_initialized = false;\r\n      this.updatePaypalAmount();\r\n    }\r\n  }\r\n\r\n  // Calucalte the payment with handlfees\r\n  getAmountFees(amountShare: any, devise: string) {\r\n    return this.paymentData.getHandleFeesWithDevise(amountShare, devise, this.userPayMethodForm.value.handleFees, this.userPayMethodForm.value.handleFeesType);\r\n  }\r\n\r\n  // Show the payment mode\r\n  showPayment(mode: any) {\r\n\r\n    switch (mode.type_payment_name) {\r\n\r\n      case 'ORANGE MONEY':\r\n        this.updateParametersOrange();\r\n        break;\r\n\r\n      case 'OZOW':\r\n        this.updateParametersOzow();\r\n        break;\r\n\r\n      case 'MTN MOBILE MONEY':\r\n        this.updateParametersMtn();\r\n        break;\r\n\r\n      case 'WALLET':\r\n        this.updateParametersWallet();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  /******************************** END FORM PAYMENT SERVICE *********************************************/\r\n\r\n\r\n  /******************************** START WALLET PAYMENT *********************************************/\r\n\r\n  // make the payment\r\n  async paymentWalletConfirm(dataMessage: any, translation: string[]) {\r\n    const alert = await this.alertController.create({\r\n      header: `${translation[0]}`,\r\n      message: `${translation[1]} ${dataMessage.amount}\r\n      ${dataMessage.currency} ${translation[2]}`,\r\n      buttons: [\r\n        {\r\n          text: `${translation[3]}`,\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n\r\n          }\r\n        }, {\r\n          text: `${translation[4]}`,\r\n          handler: () => {\r\n            this.paidWithWalletSwap(dataMessage);\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  updateParametersWallet() {\r\n    const translation = [];\r\n    this.translate.get(['PAY_SWAP_TEXT', 'CONFIRM_PAY_CONTRIBUTION_SUBTEXT1', 'CONFIRM_PAY_CONTRIBUTION_SUBTEXT2', 'CANCEL_TEXT', 'YES_TEXT']).subscribe(trans => {\r\n      translation.push(trans.PAY_SWAP_TEXT);\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT1);\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT2);\r\n      translation.push(trans.CANCEL_TEXT);\r\n      translation.push(trans.YES_TEXT);\r\n      this.paymentWalletConfirm(this.contributionData, translation);\r\n    });\r\n  }\r\n\r\n  paidWithWalletSwap(contributionData: any) {\r\n    this.loading = true;\r\n    this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n      this.ui.presentLoading(value);\r\n    });\r\n    this.swapService.paidPendingSwapRequest(contributionData)\r\n      .subscribe((reponse: any) => {\r\n        this.loading = false;\r\n        this.ui.dismissLoading();\r\n        if (reponse && reponse.message === 'success') {\r\n          if (reponse.pending_swap) {\r\n            this.translate.get('PENDING_SWAP_PAYMENT_TEXT').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n\r\n          if (reponse.completed_swap) {\r\n            this.translate.get('COMPLETE_SWAP_PAYMENT_TEXT').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n\r\n          this.initPaymentForm();\r\n          this.events.publish('modal-close', { result: 'complete' });\r\n\r\n        }\r\n      }, error => {\r\n\r\n        this.loading = false;\r\n        if (error && error.error && error.error.message === 'error') {\r\n          if (error.error.user_not_found) {\r\n            this.loading = true;\r\n            this.errorService.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.ui.dismissLoading();\r\n                this.paidWithWalletSwap(contributionData);\r\n              } else {\r\n                this.exitPayment();\r\n              }\r\n            });\r\n\r\n          } else {\r\n            this.ui.dismissLoading();\r\n            this.swapError.manageWalletError(error);\r\n          }\r\n        } else {\r\n          this.ui.dismissLoading();\r\n          this.errorService.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n  /******************************** START WALLET PAYMENT *********************************************/\r\n\r\n\r\n\r\n  /******************************** START PAYPAL PAYMENT *********************************************/\r\n\r\n  // update the paypal total amount\r\n  updatePaypalAmount() {\r\n    if (this.userPayMethodForm.value.type_payment_name === 'PAYPAL') {\r\n      const amount = this.getAmountFees(this.contributionData.amount, this.contributionData.currency);\r\n      this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n\r\n      if (this.contributionData.currency !== this.userPayMethodForm.value.device_name) {\r\n        this.currency.convert(this.contributionData.currency, this.userPayMethodForm.value.device_name, this.contributionData.amount)\r\n          .then(montantSansFees => {\r\n            if (montantSansFees) {\r\n              const amountFees = this.getAmountFees(montantSansFees, this.userPayMethodForm.value.device_name);\r\n              this.userPayMethodForm.get('montantTotal').setValue(amountFees);\r\n\r\n              this.translate.get('PAIDMODE_MSG2').subscribe(value => {\r\n                this.paypalMessage = `${value} ${this.userPayMethodForm.value.montantAvecFees}\r\n                 ${this.contributionData.currency} =\r\n                ${this.userPayMethodForm.value.montantTotal}\r\n                ${this.userPayMethodForm.value.device_name}`;\r\n                this.setupPayPay();\r\n              });\r\n            } else {\r\n              this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(trans => {\r\n                this.paypalMessage = trans;\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        this.userPayMethodForm.get('montantTotal').setValue(this.userPayMethodForm.value.montantAvecFees);\r\n        this.translate.get('PAIDMODE_MSG2').subscribe(value => {\r\n          this.paypalMessage = `${value}  ${this.userPayMethodForm.value.montantTotal}\r\n            ${this.userPayMethodForm.value.device_name}`;\r\n          this.setupPayPay();\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  setupPayPay() {\r\n    if (!this.paypal_initialized) {\r\n      this.initPayPal();\r\n    }\r\n  }\r\n\r\n  initPayPal() {\r\n\r\n    if (this.userPayMethodForm.value.montantTotal > 0) {\r\n      this.paypalLoading = true;\r\n      this.paypal_initialized = true;\r\n      let paypalbuttoncontainer = this.paypalbuttoncontainer.nativeElement as HTMLDivElement\r\n      let _this = this;\r\n\r\n      paypal.Button.render({\r\n        env: 'production', // sandbox | production\r\n        style: {\r\n          size: 'responsive',\r\n          color: 'gold',\r\n          shape: 'pill',\r\n          label: 'checkout', //label: checkout, buynow, credit, pay, paypal\r\n          tagline: false\r\n        },\r\n\r\n        client: {\r\n          sandbox: 'ARIMcMamksC74CLp7Zavgn62RsKK0XDfjePxjU9gsWmcdzyI3AYz3PwADIktvUgCdhAwWCXPaBzCckOC',\r\n          production: 'AVdCN0ymBsPer15VtLbeNoZ3vkjkhap6vXoxwsWF3B0H4GM_mVQ5GVpJ2h4-G_AlVVIsBYWx4JpVVxLT'\r\n        },\r\n        // Show the buyer a 'Pay Now' button in the checkout flow\r\n        commit: true,\r\n\r\n        payment: function (data, actions) {\r\n          return actions.payment.create({\r\n            payment: {\r\n              transactions: [\r\n                {\r\n                  amount: {\r\n                    total: _this.userPayMethodForm.value.montantTotal,\r\n                    currency: _this.userPayMethodForm.value.device_name\r\n                  },\r\n                  description: 'Toupesu'\r\n                }\r\n              ]\r\n            }\r\n          });\r\n\r\n        },\r\n        // onAuthorize() is called when the buyer approves the payment\r\n        onAuthorize: function (data, actions, error) {\r\n\r\n          if (error) {\r\n            _this.exitPayment();\r\n          }\r\n\r\n          if (error === 'INSTRUMENT_DECLINED') {\r\n            _this.exitPayment();\r\n          }\r\n\r\n          // Make a call to the REST ui to execute the payment\r\n          return actions.payment.execute().then(function () {\r\n            const params: any = {\r\n              refID: _this.reference,\r\n              amount: _this.userPayMethodForm.value.montantTotal,\r\n              moneyCode: _this.userPayMethodForm.value.device_name,\r\n              product: 'Toupesu',\r\n              paypalID: data.paymentToken.split('-')[1]\r\n            };\r\n            // Save and check the payment result\r\n            _this.userPayMethodForm.get('pay_token').setValue(data.paymentToken.split('-')[1]);\r\n            _this.api.post('livepaygateway/paypal/savePayRequest', JSON.stringify(params)).subscribe(\r\n              (ans: any) => {\r\n                if (ans && ans.success) {\r\n                  _this.updateParametersPaypal(data.paymentToken.split('-')[1]);\r\n                }\r\n              }, error => {\r\n                _this.updateParametersPaypal(data.paymentToken.split('-')[1]);\r\n              });\r\n          });\r\n        },\r\n        onCancel: function (data, actions) {\r\n          _this.exitPayment();\r\n        },\r\n        onClick: (data, actions) => {\r\n          _this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n            _this.ui.presentToast(value);\r\n          });\r\n        }\r\n      }, paypalbuttoncontainer);\r\n\r\n      setTimeout(() => {\r\n        this.paypalLoading = false;\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  // Update parameters PAYPAL\r\n  updateParametersPaypal(payToken) {\r\n    const params = this.swapService.getCurrentSwapData();\r\n    const amount = this.getAmountFees(this.contributionData.amount, params.currency);\r\n    this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n    if (params.currency === this.userPayMethodForm.value.device_name) {\r\n      const paramsData = {\r\n        list_swap_request_id: this.contributionData.list_swap_request_id,\r\n        currency: this.contributionData.currency,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        montant_total_sans_handling_fees: this.contributionData.amount,\r\n        montant_total_avec_handling_fees: amount,\r\n        numero: this.userPayMethodForm.value.numero,\r\n        pay_token: payToken,\r\n        operator: 'paypal'\r\n      };\r\n      this.paidWithoutConversionOperator(paramsData);\r\n    } else {\r\n      this.currency.convert(params.currency, this.userPayMethodForm.value.device_name, this.contributionData.amount).then(montantsansFees => {\r\n        if (montantsansFees) {\r\n          const paramsData = {\r\n            list_swap_request_id: this.contributionData.list_swap_request_id,\r\n            typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n            country_id: this.userPayMethodForm.value.countryId,\r\n            currency_depart: this.userPayMethodForm.value.device_name,\r\n            currency_arrivee: this.contributionData.currency,\r\n            montant_total_depart_sans_handling_fees: montantsansFees ? montantsansFees : 0,\r\n            montant_total_depart_avec_handling_fees: this.getAmountFees(montantsansFees, this.userPayMethodForm.value.device_name),\r\n            montant_total_arrivee_sans_handling_fees: this.contributionData.amount,\r\n            pay_token: payToken,\r\n            operator: 'paypal'\r\n          };\r\n          this.paidWithConversionOperator(paramsData);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /******************************** END PAYPAL PAYMENT *********************************************/\r\n\r\n\r\n  /******************************** START MTN PAYMENT *********************************************/\r\n\r\n  // Update parameters  Mtn payment\r\n  updateParametersMtn() {\r\n    const params = this.swapService.getCurrentSwapData();\r\n    const amount = this.getAmountFees(this.contributionData.amount, params.currency);\r\n    this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n\r\n    if (params.currency !== this.userPayMethodForm.value.device_name) {\r\n\r\n      this.currency.convert(params.currency, this.userPayMethodForm.value.device_name,\r\n        this.contributionData.amount).then(montantsansFees => {\r\n          if (montantsansFees) {\r\n            const dataParams = {\r\n              list_swap_request_id: this.contributionData.list_swap_request_id,\r\n              typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n              country_id: this.userPayMethodForm.value.countryId,\r\n              currency_depart: this.userPayMethodForm.value.device_name,\r\n              currency_arrivee: this.contributionData.currency,\r\n              montant_total_depart_sans_handling_fees: montantsansFees ? montantsansFees : 0,\r\n              montant_total_depart_avec_handling_fees: this.getAmountFees(montantsansFees, this.userPayMethodForm.value.device_name),\r\n              montant_total_arrivee_sans_handling_fees: this.contributionData.amount,\r\n              numero: this.userPayMethodForm.value.numero,\r\n              operator: 'MTN'\r\n            };\r\n            this.contributionDataParams = dataParams;\r\n            const messageConfirmation = {\r\n              title: params.title, contribution: dataParams.montant_total_depart_avec_handling_fees,\r\n              device_name: this.userPayMethodForm.value.device_name, type: 'converted'\r\n            };\r\n            this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n\r\n        });\r\n    } else {\r\n\r\n      const paramsData = {\r\n        list_swap_request_id: this.contributionData.list_swap_request_id,\r\n        currency: this.contributionData.currency,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        montant_total_sans_handling_fees: this.contributionData.amount,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        montant_total_avec_handling_fees: this.getAmountFees(this.contributionData.amount, this.contributionData.currency),\r\n        numero: this.userPayMethodForm.value.numero,\r\n        operator: 'MTN'\r\n      };\r\n      this.contributionDataParams = paramsData;\r\n      const messageConfirmation = {\r\n        title: params.title, contribution: this.userPayMethodForm.value.montantAvecFees,\r\n        device_name: this.contributionData.currency, type: 'notconverted'\r\n      };\r\n      this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n    }\r\n  }\r\n\r\n  /******************************** END MTN PAYMENT **************************************************/\r\n\r\n\r\n  /******************************** START ORANGE PAYMENT *********************************************/\r\n\r\n  // Update parameters  Orange payment\r\n  updateParametersOrange() {\r\n\r\n    const params = this.swapService.getCurrentSwapData();\r\n    const amount = this.getAmountFees(this.contributionData.amount, params.currency);\r\n    this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n\r\n    if (params.currency !== this.userPayMethodForm.value.device_name) {\r\n\r\n      this.currency.convert(params.currency, this.userPayMethodForm.value.device_name,\r\n        this.contributionData.amount).then(montantsansFees => {\r\n          if (montantsansFees) {\r\n            const dataParams = {\r\n              list_swap_request_id: this.contributionData.list_swap_request_id,\r\n              typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n              country_id: this.userPayMethodForm.value.countryId,\r\n              currency_depart: this.userPayMethodForm.value.device_name,\r\n              currency_arrivee: this.contributionData.currency,\r\n              montant_total_depart_sans_handling_fees: montantsansFees ? montantsansFees : 0,\r\n              montant_total_depart_avec_handling_fees: this.getAmountFees(montantsansFees, this.userPayMethodForm.value.device_name),\r\n              montant_total_arrivee_sans_handling_fees: this.contributionData.amount,\r\n              numero: this.userPayMethodForm.value.numero,\r\n              operator: 'orange'\r\n            };\r\n            this.contributionDataParams = dataParams;\r\n            const messageConfirmation = {\r\n              title: params.title, contribution: dataParams.montant_total_depart_avec_handling_fees,\r\n              device_name: this.userPayMethodForm.value.device_name, type: 'converted'\r\n            };\r\n\r\n            this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n\r\n\r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n\r\n        });\r\n    } else {\r\n\r\n      const paramsData = {\r\n        list_swap_request_id: this.contributionData.list_swap_request_id,\r\n        currency: this.contributionData.currency,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        montant_total_sans_handling_fees: this.contributionData.amount,\r\n        montant_total_avec_handling_fees: this.userPayMethodForm.value.montantAvecFees,\r\n        numero: this.userPayMethodForm.value.numero,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        operator: 'orange'\r\n      };\r\n      this.contributionDataParams = paramsData;\r\n      const messageConfirmation = {\r\n        title: params.title, contribution: this.userPayMethodForm.value.montantAvecFees,\r\n        device_name: this.contributionData.currency, type: 'notconverted'\r\n      };\r\n      this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n    }\r\n  }\r\n\r\n  /******************************** END ORANGE PAYMENT *********************************************/\r\n\r\n\r\n\r\n  /******************************** START OZOW PAYMENT *********************************************/\r\n\r\n  // Update parameters OZOW payment\r\n  updateParametersOzow() {\r\n\r\n    const params = this.swapService.getCurrentSwapData();\r\n    const amount = this.getAmountFees(this.contributionData.amount, params.currency);\r\n    this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n\r\n    if (params.currency !== this.userPayMethodForm.value.device_name) {\r\n\r\n      this.currency.convert(params.currency, this.userPayMethodForm.value.device_name,\r\n        this.contributionData.amount).then(montantsansFees => {\r\n\r\n          if (montantsansFees) {\r\n            const dataParams = {\r\n              list_swap_request_id: this.contributionData.list_swap_request_id,\r\n              typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n              country_id: this.userPayMethodForm.value.countryId,\r\n              currency_depart: this.userPayMethodForm.value.device_name,\r\n              currency_arrivee: this.contributionData.currency,\r\n              montant_total_depart_sans_handling_fees: montantsansFees ? montantsansFees : 0,\r\n              montant_total_depart_avec_handling_fees: this.getAmountFees(montantsansFees, this.userPayMethodForm.value.device_name),\r\n              montant_total_arrivee_sans_handling_fees: this.contributionData.amount,\r\n              numero: this.userPayMethodForm.value.numero,\r\n              operator: 'ozow'\r\n            };\r\n            this.contributionDataParams = dataParams;\r\n            const messageConfirmation = {\r\n              title: params.title, contribution: dataParams.montant_total_depart_avec_handling_fees,\r\n              device_name: this.userPayMethodForm.value.device_name, type: 'converted'\r\n            };\r\n            this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n\r\n\r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n\r\n        });\r\n    } else {\r\n\r\n      const paramsData = {\r\n        list_swap_request_id: this.contributionData.list_swap_request_id,\r\n        currency: this.contributionData.currency,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        montant_total_sans_handling_fees: this.contributionData.amount,\r\n        montant_total_avec_handling_fees: this.getAmountFees(this.contributionData.amount, this.contributionData.currency),\r\n        numero: this.userPayMethodForm.value.numero,\r\n        operator: 'ozow'\r\n      };\r\n      this.contributionDataParams = paramsData;\r\n      const messageConfirmation = {\r\n        title: params.title, contribution: this.userPayMethodForm.value.montantAvecFees,\r\n        device_name: this.contributionData.currency, type: 'notconverted'\r\n      };\r\n      this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n\r\n    }\r\n  }\r\n\r\n  /******************************** END OZOW PAYMENT *********************************************/\r\n\r\n\r\n  /******************************** COMMON PAYMENT  SERVICES **************************************/\r\n\r\n  showConfirmationMessage(messageConfirmation: any, contributionDataParams: any) {\r\n    const translation = [];\r\n    this.translate.get(['CONFIRM_PAY_CONTRIBUTION_SUBTEXT1', 'CONFIRM_PAY_CONTRIBUTION_SUBTEXT2', 'CANCEL_TEXT', 'YES_TEXT', 'SWAPPING_TEXT']).subscribe(trans => {\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT1);\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT2);\r\n      translation.push(trans.CANCEL_TEXT);\r\n      translation.push(trans.YES_TEXT);\r\n      translation.push(trans.SWAPPING_TEXT);\r\n      this.paymentOperatorConfirm(messageConfirmation, contributionDataParams, translation);\r\n    });\r\n  }\r\n\r\n  async paymentOperatorConfirm(dataMessage: any, contributionDataParams: any, translation: string[]) {\r\n    const alert = await this.alertController.create({\r\n      header: `${translation[4]} :   ${dataMessage.title}`,\r\n      message: `${translation[0]} ${dataMessage.contribution}\r\n    ${dataMessage.device_name}  ${translation[1]}`,\r\n      buttons: [\r\n        {\r\n          text: `${translation[2]}`,\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n\r\n          }\r\n        }, {\r\n          text: `${translation[3]}`,\r\n          handler: () => {\r\n            if (dataMessage.type === 'converted') {\r\n              this.paidWithConversionOperator(contributionDataParams);\r\n            } else if (dataMessage.type === 'notconverted') {\r\n              this.paidWithoutConversionOperator(contributionDataParams);\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  // Paid swap request without conversion\r\n  paidWithoutConversionOperator(contributionData: any) {\r\n    this.loading = true;\r\n    this.showLoadingMessage(contributionData);\r\n    this.swapService.paySwapRequestWithOperatorWithoutConversion(contributionData).subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'success') {\r\n        this.sendResponsePerOperator(reponse, contributionData.operator);\r\n      }\r\n    }, error => {\r\n\r\n      \r\n      if (error && error.error && error.error.message === 'error') {\r\n        if (error.error.user_not_found) {\r\n          this.errorService.renewSession().then((data: any) => {\r\n            if (data && data.result === \"OK\") {\r\n              this.ui.dismissLoading();\r\n              this.paidWithoutConversionOperator(contributionData);\r\n            } else {\r\n              this.exitPayment();\r\n            }\r\n          });\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.paymentError.managePaymentOnlineError(error);\r\n        }\r\n\r\n      } else {\r\n        this.loading = false;\r\n        this.ui.dismissLoading();\r\n        this.errorService.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Paid swap request with Paypal after conversion\r\n  paidWithConversionOperator(contributionData: any) {\r\n    this.loading = true;\r\n    this.showLoadingMessage(contributionData);\r\n\r\n    this.swapService.paySwapRequestWithOperatorWithConversion(contributionData).subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'success') {\r\n        this.sendResponsePerOperator(reponse, contributionData.operator);\r\n      }\r\n    }, error => {\r\n\r\n      if (error && error.error && error.error.message === 'error') {\r\n        if (error.error.user_not_found) {\r\n          this.errorService.renewSession().then((data: any) => {\r\n            if (data && data.result === \"OK\") {\r\n              this.ui.dismissLoading();\r\n              this.paidWithConversionOperator(contributionData);\r\n            } else {\r\n              this.exitPayment();\r\n            }\r\n          });\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.paymentError.managePaymentOnlineError(error);\r\n        }\r\n\r\n      } else {\r\n        this.loading = false;\r\n        this.ui.dismissLoading();\r\n        this.errorService.manageError(error);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  // Send message per operator\r\n  sendResponsePerOperator(data: any, operator: string) {\r\n    this.checkPaymentStatusOperator(data.pay_token, operator);\r\n    const reference = data && data.refID ? data.refID : '';\r\n    this.refernceId = reference;\r\n    this.cancelPaymentResult(reference);\r\n    switch (operator) {\r\n      case 'ozow':\r\n        window.open(data.url, '_blank');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // show the loading message\r\n  showLoadingMessage(data: any) {\r\n    switch (data.operator) {\r\n      case 'orange':\r\n        this.translate.get('ORANGE_PAYMENT_MESSAGE').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'MTN':\r\n        this.translate.get('MTN_PAYMENT_MESSAGE').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'paypal':\r\n        this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'ozow':\r\n        this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // step 2 :  Check the status via Ozow\r\n  checkPaymentStatusOperator(payToken: string, operator: string) {\r\n    this.cron = setInterval(() => {\r\n      this.checkPaymentStatusOperatorServer(payToken, operator);\r\n    }, 20000);\r\n  }\r\n\r\n  // SHOW THE SUCCES MESSAGE\r\n  showSuccesMessage() {\r\n    this.translate.get('SWAP_PAYMENT_SUCCESS').subscribe(value => {\r\n      this.ui.presentToast(value);\r\n    });\r\n  }\r\n\r\n  // clear the time out\r\n  clearTimeoutData() {\r\n    if (this.timeOut) {\r\n      clearTimeout(this.timeOut);\r\n      this.timeOut = null;\r\n    }\r\n  }\r\n\r\n  // clear the set interval\r\n  clearSetIntervalData() {\r\n    if (this.cron) {\r\n      clearInterval(this.cron);\r\n    }\r\n    this.cron = null;\r\n    for (let i = 0; i < 1000; i++) {\r\n      clearInterval(i);\r\n    }\r\n  }\r\n\r\n  // Check the payment Status\r\n  checkPaymentStatusOperatorServer(payToken: string, operator: string) {\r\n    this.wallet.getStatusPaymentOperator(payToken, operator).subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'OK') {\r\n        this.showPaymentResult();\r\n        this.showSuccesMessage();\r\n      }\r\n    }, error => {\r\n\r\n      if (error && error.error && error.error.message === 'FAIL') {\r\n        this.exitPayment();\r\n        this.translate.get('PAYMENT_FAIL_MSG').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n      } else {\r\n        this.exitPayment();\r\n        this.translate.get('PAYMENT_FAIL_MSG').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n        this.errorService.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Show payment confirmation dialog\r\n  showPaymentResult() {\r\n    this.loading = false;\r\n    this.ui.dismissLoading();\r\n    this.initPaymentForm();\r\n    this.clearTimeoutData();\r\n    this.clearSetIntervalData();\r\n\r\n    this.events.publish('modal-close', { result: 'complete' });\r\n  }\r\n\r\n  // Cancel the payment\r\n  cancelPaymentResult(refence?: string) {\r\n    this.timeOut = setTimeout(() => {\r\n      this.exitPayment();\r\n      this.translate.get(['TRANSACTION_CANCEL', 'TOPUP_MSG9']).subscribe(trans => {\r\n        this.ui.presentAlert(`${trans.TRANSACTION_CANCEL}`, `${trans.TOPUP_MSG9} ${refence}`);\r\n      });\r\n    }, 300000);\r\n  }\r\n\r\n  // exit the payment directly\r\n  exitPayment() {\r\n    this.loading = false;\r\n    this.ui.dismissLoading();\r\n\r\n    this.getAllMethodPaymentType();\r\n    this.initFormMessage();\r\n    this.initPaymentForm();\r\n    this.clearTimeoutData();\r\n    this.clearSetIntervalData();\r\n  }\r\n\r\n  ionicViewDidLeave() {\r\n    if (this.loading) {\r\n      this.exitPayment();\r\n    }\r\n  }\r\n\r\n  // listen to back button\r\n  hardwareBackButton() {\r\n    this.platform.backButton.subscribe(() => {\r\n      const url = this.router.url;\r\n      if (url === '/dashboard/pesuswap/swap-not-paid') {\r\n        if (this.refernceId) {\r\n          this.cancelPaymentResult(this.refernceId);\r\n        } else {\r\n          this.exitPayment();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /******************************** END PAYMENT SERVICES **************************************/\r\n}\r\n","import { Component, OnInit, Input, NgZone, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ErrorService } from '../service/error.service';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController, NavController, Platform } from '@ionic/angular';\r\nimport { LocationService } from '../service/location.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TontineService } from 'src/app/dashboard/my-tontines/services/tontine.service';\r\nimport { ContributionService } from 'src/app/dashboard/my-tontines/services/contribution.service';\r\nimport { ApiService } from '../service/api.service';\r\nimport { CurrencyService } from '../service/currency.service';\r\nimport { WalletService } from 'src/app/dashboard/my-wallet/service/wallet.service';\r\nimport { FormUtilsService } from '../service/form-utils.service';\r\nimport { PaymentErrorService } from '../service/payment-error.service';\r\nimport { PaymentGlobalDataService } from '../service/payment-global-data.service';\r\nimport { UserService } from 'src/app/dashboard/user/service/user.service';\r\nimport { UiService } from '../service/ui.service';\r\nimport { EventService } from '../service/events.service';\r\nimport { AuthService } from 'src/app/auth/service/auth.service';\r\ndeclare var paypal: any;\r\n\r\ninterface PaymentMethod {\r\n  id: number;\r\n  logo: string;\r\n  currency: string;\r\n  country_id: number;\r\n  name: string;\r\n  placeholder ?: string;\r\n  handling_fees?: number;\r\n  type_handling_fees?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-paidmode',\r\n  templateUrl: './paidmode.component.html',\r\n  styleUrls: ['./paidmode.component.scss'],\r\n})\r\nexport class PaidmodeComponent implements OnInit {\r\n\r\n  paymentMethods: PaymentMethod[];\r\n  paypalMessage: string;\r\n  userPayMethodForm: FormGroup;\r\n  currentCountryId: number;\r\n  states: any;\r\n  loadingOperator: boolean;\r\n  tontineData: any;\r\n  contributionData: any;\r\n  errorPhone: boolean;\r\n  loading: boolean;\r\n  cron: any;\r\n  timeOut: any;\r\n  contributionDataParams: any;\r\n  pin: string;\r\n  spinner: any;\r\n  allPaymentMethods: any;\r\n  paymentForm: FormGroup;\r\n  reference: string;\r\n  validationMessages: any;\r\n  paypalLoading: boolean;\r\n  paypal_initialized: boolean;\r\n  refernceId: string;\r\n\r\n  @Input() amountPay: number;\r\n  @ViewChild('paypalbuttoncontainer', { static: false }) paypalbuttoncontainer: ElementRef;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private api: ApiService,\r\n    private ui: UiService,\r\n    private auth: AuthService,\r\n    private currency: CurrencyService,\r\n    private events: EventService,\r\n    private contribution: ContributionService,\r\n    private platform: Platform,\r\n    private alertController: AlertController,\r\n    private wallet: WalletService,\r\n    private tontine: TontineService,\r\n    private errorService: ErrorService,\r\n    private location: LocationService,\r\n    private translate: TranslateService,\r\n    private formUtil: FormUtilsService,\r\n    private paymentData: PaymentGlobalDataService,\r\n    private router: Router,\r\n    private zone: NgZone,\r\n    private navController: NavController,\r\n    private paymentError: PaymentErrorService\r\n  ) {\r\n    this.cron = null;\r\n    this.timeOut = null;\r\n    this.loadingOperator = false;\r\n    this.loading = false;\r\n    this.errorPhone = false;\r\n    this.states = [];\r\n    this.paymentMethods = [];\r\n    this.paypalMessage = '';\r\n    this.reference = this.formUtil.getRandomId();\r\n    this.tontineData = this.tontine.getCurrentTontineData();\r\n    this.allPaymentMethods = [];\r\n    this.paypalLoading = false;\r\n    this.paypal_initialized = false;\r\n    this.contributionData = this.contribution.getContributionData();\r\n    this.refernceId = '';\r\n    this.hardwareBackButton();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAllMethodPaymentType();\r\n    this.initFormMessage();\r\n    this.initPaymentForm();\r\n  }\r\n\r\n  /******************************** START FORM SERVICES *********************************************/\r\n\r\n  // Form getters\r\n  get phone() {\r\n    return this.userPayMethodForm.get('phone');\r\n  }\r\n\r\n  get amountError() {\r\n    return this.userPayMethodForm.get('montantWithFees');\r\n  }\r\n\r\n  get country() {\r\n    return this.userPayMethodForm.get('country_id');\r\n  }\r\n\r\n  get device_name() {\r\n    return this.userPayMethodForm.get('device_name');\r\n  }\r\n\r\n  get payementtype() {\r\n    return this.userPayMethodForm.get('typePaymentIndex');\r\n  }\r\n\r\n  // Init form message \r\n  initFormMessage() {\r\n    this.translate.get(['REGISTER_PHONE_REQUIRED', 'M_COUNTRY_REQUIRED', 'AMOUNT_REQUIRED', 'PAID_MODE_REQUIRED'])\r\n      .subscribe(value => {\r\n        this.validationMessages = {\r\n          payementtype: [\r\n            { type: 'required', message: value.PAID_MODE_REQUIRED }\r\n          ],\r\n          phone: [\r\n            { type: 'required', message: value.REGISTER_PHONE_REQUIRED },\r\n          ],\r\n          amount: [\r\n            { type: 'required', message: value.AMOUNT_REQUIRED }\r\n          ],\r\n          country_id: [\r\n            { type: 'required', message: value.M_COUNTRY_REQUIRED }\r\n          ]\r\n        };\r\n      });\r\n  }\r\n\r\n  // Init form\r\n  initPaymentForm() {\r\n    const currentPayment = this.paymentData.getDefaultPaymentMethod();\r\n    this.userPayMethodForm = this.fb.group({\r\n      country_id: ['', Validators.required],\r\n      country_prefix: [''],\r\n      countryId: [''],\r\n      handleFees: [''],\r\n      handleFeesType: [''],\r\n      device_name: [''],\r\n      currency: [''],\r\n      currencyLabel: [''],\r\n      pay_token: [''],\r\n      url: [''],\r\n      montant: [''],\r\n      montantWithFees: ['0'],\r\n      montantTotal: ['0'],\r\n      type_payment_id: [currentPayment ? currentPayment.typepaiement_id : ''],\r\n      type_payment_name: [currentPayment ? currentPayment.name : ''],\r\n      typePaymentIndex: [0, Validators.required],\r\n      phone: [currentPayment && this.formUtil.validatePhone(currentPayment.numero_compte) ? currentPayment.numero_compte : ''],\r\n      numero: ['']\r\n    });\r\n  }\r\n\r\n  // Remove space\r\n  removeSpace() {\r\n    this.userPayMethodForm.get('phone').setValue(this.paymentData.removeInputSpace(this.userPayMethodForm.value.phone));\r\n  }\r\n\r\n  // check if emial or phone is valid\r\n  checckEmailOrPhone(inputValue: string, index: number) {\r\n    this.removeSpace();\r\n    this.userPayMethodForm.get('type_payment_id').setValue(this.paymentMethods[index].id);\r\n    switch (this.paymentMethods[index].name) {\r\n      case 'ORANGE MONEY':\r\n        this.errorPhone = !this.formUtil.validatePhone(inputValue);\r\n        if (!this.errorPhone) {\r\n          this.userPayMethodForm.get('numero').setValue(this.userPayMethodForm.value.country_prefix +\r\n            '' + this.userPayMethodForm.value.phone);\r\n        }\r\n        break;\r\n\r\n      case 'MTN MOBILE MONEY':\r\n        this.errorPhone = !this.formUtil.validatePhone(inputValue);\r\n        if (!this.errorPhone) {\r\n          this.userPayMethodForm.get('numero').setValue(this.userPayMethodForm.value.country_prefix +\r\n            '' + this.userPayMethodForm.value.phone);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // check if it is not  mobile operator\r\n  checkMobileOperator() {\r\n    return this.paymentData.isMobileOperator(this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex]);\r\n  }\r\n\r\n\r\n  // can show paypal message\r\n  canShowPaypalMessage() {\r\n    return this.paymentData.hasPaypalMessage(this.paypalMessage,this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex]);\r\n  }\r\n\r\n\r\n  // can show  paypal button\r\n  canShowPaypalButton() {\r\n    return this.paymentData.hasPaypalButton(this.paypal_initialized, this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex]);\r\n  }\r\n\r\n  // can make payment \r\n  canPay() {\r\n    return this.paymentData.canShowPayment(this.userPayMethodForm.valid,this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex],this.userPayMethodForm.value.phone, this.errorPhone);\r\n  }\r\n\r\n  // get all payment method\r\n  getAllMethodPaymentType() {\r\n    this.loadingOperator = true;\r\n    this.userService.getAllMethodPaymentType().subscribe((reponse: any) => {\r\n      this.loadingOperator = false;\r\n      this.paymentMethods = [];\r\n\r\n      if (reponse && reponse.typePayment && reponse.typePayment.length > 0) {\r\n        this.paymentMethods = this.paymentData.formatPaymentMethodResponseContribution(reponse.typePayment);\r\n      }\r\n\r\n      const defaultMethod: PaymentMethod[] = [{\r\n        id: 0, country_id: 0, logo: 'assets/pesuwallet.jpg',\r\n        currency: this.tontineData.tontine.monnaie, name: 'WALLET', placeholder: '',\r\n        handling_fees: 0,\r\n        type_handling_fees: 'valeur'\r\n      }];\r\n      this.paymentMethods = defaultMethod.concat(this.paymentMethods);\r\n      this.allPaymentMethods = this.paymentMethods;\r\n      this.getCountries(false);\r\n    }, error => {\r\n      this.loadingOperator = false;\r\n      this.paymentMethods.push({\r\n        id: 0, country_id: 0, logo: 'assets/pesuwallet.jpg',\r\n        currency: this.tontineData.tontine.monnaie, name: 'WALLET', placeholder: '',\r\n        handling_fees: 0,\r\n        type_handling_fees: 'valeur'\r\n      });\r\n      this.allPaymentMethods = this.paymentMethods;\r\n      this.getCountries(false);\r\n      this.errorService.manageError(error);\r\n    });\r\n  }\r\n\r\n  // Get all countries\r\n  getCountries(refresher: boolean) {\r\n    this.location.getAllCountries(refresher).then((countries: any) => {\r\n      this.states = this.paymentData.formatCountriesData(countries);\r\n      if (this.states && this.states.length > 0) {\r\n        setTimeout(() => {\r\n          this.states.forEach(country => {\r\n            if (country.country_key === this.tontineData.tontine.country_key) {\r\n              this.updateFormData(country);\r\n            }\r\n          });\r\n        }, 200);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  // update the form data\r\n  updateFormData(country: any) {\r\n    if (country) {\r\n      this.userPayMethodForm.get('countryId').setValue(country.country_id);\r\n      this.userPayMethodForm.get('country_prefix').setValue(country.country_prefixe);\r\n      this.userPayMethodForm.get('currency').setValue(country.device_name);\r\n      this.userPayMethodForm.get('handleFees').setValue(country.handling_fees);\r\n      this.userPayMethodForm.get('handleFeesType').setValue(country.type_handling_fees);\r\n      this.userPayMethodForm.get('currencyLabel').setValue(country.currency_label);\r\n      this.zone.run(() => {\r\n        this.userPayMethodForm.get('country_id').setValue(country.country_id);\r\n      });\r\n      this.updatePaymentsMethods(country.country_id);\r\n    }\r\n  }\r\n\r\n  // Update the payment method\r\n  updatePaymentMethod(index) {\r\n    if (this.paymentMethods[index]) {\r\n      this.userPayMethodForm.get('type_payment_id').setValue(this.paymentMethods[index].id);\r\n      this.userPayMethodForm.get('type_payment_name').setValue(this.paymentMethods[index].name);\r\n      this.userPayMethodForm.get('device_name').setValue(this.paymentMethods[index].currency);\r\n      this.userPayMethodForm.get('handleFees').setValue(this.paymentMethods[index].handling_fees);\r\n      this.userPayMethodForm.get('handleFeesType').setValue(this.paymentMethods[index].type_handling_fees);\r\n      this.zone.run(() => {\r\n        this.userPayMethodForm.get('typePaymentIndex').setValue(index);\r\n      });\r\n    }\r\n    if (this.paymentMethods && this.paymentMethods[index] &&\r\n      this.paymentMethods[index].name === 'PAYPAL') {\r\n      this.paypal_initialized = false;\r\n      this.updatePaypalAmount();\r\n    }\r\n  }\r\n\r\n  // update the payment methods\r\n  updatePaymentsMethods(countryId: number) {\r\n    // update the payment method\r\n    const paymentsMethods = [];\r\n    this.paymentMethods = [];\r\n    this.allPaymentMethods.forEach(payment => {\r\n      if (payment.country_id === countryId || payment.country_id === 0) {\r\n        paymentsMethods.push(payment);\r\n      }\r\n    });\r\n    this.paymentMethods = paymentsMethods;\r\n    if (this.paymentMethods && this.paymentMethods.length > 0) {\r\n      this.updatePaymentMethod(0);\r\n    }\r\n  }\r\n\r\n  // Calucalte the payment with handlfees\r\n  getAmountWithFees(amountShare: any, device: string) {\r\n    return this.paymentData.getHandleFeesWithDevise(amountShare,device,this.userPayMethodForm.value.handleFees,this.userPayMethodForm.value.handleFeesType);\r\n  }\r\n\r\n  // Update the country info country prfix\r\n  updateCurrencyCountry(countryId: number) {\r\n    this.zone.run(() => {\r\n      this.paymentMethods = [];\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.states.forEach(state => {\r\n        if (state.country_id === countryId) {\r\n          this.updateFormData(state);\r\n        }\r\n      });\r\n    }, 300);\r\n  }\r\n\r\n\r\n  // Show the payment mode\r\n  showPayment(mode: any) {\r\n\r\n    switch (mode.type_payment_name) {\r\n\r\n      case 'ORANGE MONEY':\r\n        this.updateParametersOrange();\r\n        break;\r\n\r\n      case 'OZOW':\r\n        this.updateParametersOzow();\r\n        break;\r\n\r\n      case 'MTN MOBILE MONEY':\r\n        this.updateParametersMtn();\r\n        break;\r\n\r\n      case 'WALLET':\r\n        this.updateParametersWallet();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  /******************************** END FORM SERVICES *********************************************/\r\n\r\n\r\n\r\n  /******************************** START WALLET PAYMENT *********************************************/\r\n\r\n  async paymentWalletConfirm(dataMessage: any, translation: string[]) {\r\n    const alert = await this.alertController.create({\r\n      header: `${dataMessage.title}`,\r\n      message: `${translation[0]} ${dataMessage.contribution}\r\n        ${dataMessage.device_name} ${translation[1]}`,\r\n      buttons: [\r\n        {\r\n          text: `${translation[2]}`,\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n\r\n          }\r\n        }, {\r\n          text: `${translation[3]}`,\r\n          handler: () => {\r\n            this.paidWithWallet();\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n\r\n  // update the wallet params\r\n  updateParametersWallet() {\r\n\r\n    const translation = [];\r\n    this.translate.get(['CONFIRM_PAY_CONTRIBUTION_SUBTEXT1', 'CONFIRM_PAY_CONTRIBUTION_SUBTEXT2', 'CANCEL_TEXT', 'YES_TEXT']).subscribe(trans => {\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT1);\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT2);\r\n      translation.push(trans.CANCEL_TEXT);\r\n      translation.push(trans.YES_TEXT);\r\n      this.paymentWalletConfirm(this.contributionData, translation);\r\n    });\r\n\r\n  }\r\n\r\n\r\n  // Send the user contribution\r\n  paidWithWallet() {\r\n    this.loading = true;\r\n    this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n      this.ui.presentLoading(value);\r\n    });\r\n    this.contribution.contributionAllShareWithWallet(this.contributionData)\r\n      .subscribe((reponse: any) => {\r\n        this.loading = false;\r\n        this.ui.dismissLoading();\r\n        if (reponse && reponse.message === 'success') {\r\n\r\n          this.translate.get('CONFIRM_PAY_CONTRIBUTION_MSG1').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n\r\n          this.events.publish('modal-pay-close');\r\n\r\n          // check if it a penality\r\n          if (this.contributionData && this.contributionData.typecontribution_id && this.contributionData.typecontribution_id === 2) {\r\n            this.events.publish('new-tontine');\r\n            this.navController.setDirection('root');\r\n            this.router.navigate(['dashboard/my-tontines']);\r\n          }\r\n        }\r\n      }, error => {\r\n\r\n  \r\n        if (error && error.error && error.error.message === 'error') {\r\n          if (error.error.user_not_found) {\r\n            this.errorService.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.ui.dismissLoading();\r\n                this.paidWithWallet();\r\n              } else {\r\n                this.exitPayment();\r\n              }\r\n            });\r\n          } else {\r\n            this.loading = false;\r\n            this.ui.dismissLoading();\r\n            this.paymentError.managePaymentOnlineError(error);\r\n          }\r\n\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.errorService.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n  /******************************** START WALLET PAYMENT *********************************************/\r\n\r\n\r\n\r\n  /******************************** START PAYPAL PAYMENT *********************************************/\r\n\r\n\r\n  // update the paypal total amount\r\n  updatePaypalAmount() {\r\n    if (this.userPayMethodForm.value.type_payment_name === 'PAYPAL') {\r\n      const amount = this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name) * this.contributionData.liste_part.length;\r\n      this.userPayMethodForm.get('montantWithFees').setValue(amount);\r\n\r\n      if (this.contributionData.device_name !== this.userPayMethodForm.value.device_name) {\r\n        this.currency.convert(this.contributionData.device_name, this.userPayMethodForm.value.device_name, this.contributionData.montant).then(montSansFees => {\r\n          if (montSansFees) {\r\n            const montantFees = this.getAmountWithFees(montSansFees, this.userPayMethodForm.value.device_name) * this.contributionData.liste_part.length;\r\n            this.userPayMethodForm.get('montantTotal').setValue(montantFees);\r\n            this.translate.get('PAIDMODE_MSG2').subscribe(value => {\r\n              this.paypalMessage = `${value} ${this.userPayMethodForm.value.montantWithFees}\r\n                 ${this.contributionData.device_name} =\r\n                ${this.userPayMethodForm.value.montantTotal}\r\n                ${this.userPayMethodForm.value.device_name}`;\r\n              this.setupPayPay();\r\n            });\r\n          } else {\r\n\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.paypalMessage = value;\r\n            });\r\n\r\n          }\r\n        });\r\n      } else {\r\n        this.userPayMethodForm.get('montantTotal').setValue(this.userPayMethodForm.value.montantWithFees);\r\n        this.translate.get('PAIDMODE_MSG2').subscribe(value => {\r\n          this.paypalMessage = `${value}  ${this.userPayMethodForm.value.montantTotal}\r\n            ${this.userPayMethodForm.value.device_name}`;\r\n          this.setupPayPay();\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  setupPayPay() {\r\n    if (!this.paypal_initialized) {\r\n      this.initPayPal();\r\n    }\r\n  }\r\n\r\n  initPayPal() {\r\n\r\n    if (this.userPayMethodForm.value.montantTotal > 0) {\r\n      this.paypalLoading = true;\r\n      this.paypal_initialized = true;\r\n      let paypalbuttoncontainer = this.paypalbuttoncontainer.nativeElement as HTMLDivElement\r\n      let _this = this;\r\n\r\n      paypal.Button.render({\r\n        env: 'production', // sandbox | production\r\n        style: {\r\n          size: 'responsive',\r\n          color: 'gold',\r\n          shape: 'pill',\r\n          label: 'checkout', //label: checkout, buynow, credit, pay, paypal\r\n          tagline: false\r\n        },\r\n\r\n        client: {\r\n          sandbox: 'ARIMcMamksC74CLp7Zavgn62RsKK0XDfjePxjU9gsWmcdzyI3AYz3PwADIktvUgCdhAwWCXPaBzCckOC',\r\n          production: 'AVdCN0ymBsPer15VtLbeNoZ3vkjkhap6vXoxwsWF3B0H4GM_mVQ5GVpJ2h4-G_AlVVIsBYWx4JpVVxLT'\r\n        },\r\n        // Show the buyer a 'Pay Now' button in the checkout flow\r\n        commit: true,\r\n\r\n        payment: function (data, actions) {\r\n          return actions.payment.create({\r\n            payment: {\r\n              transactions: [\r\n                {\r\n                  amount: {\r\n                    total: _this.userPayMethodForm.value.montantTotal,\r\n                    currency: _this.userPayMethodForm.value.device_name\r\n                  },\r\n                  description: 'Toupesu'\r\n                }\r\n              ]\r\n            }\r\n          });\r\n\r\n        },\r\n        // onAuthorize() is called when the buyer approves the payment\r\n        onAuthorize: function (data, actions, error) {\r\n\r\n          if (error) {\r\n            _this.exitPayment();\r\n          }\r\n\r\n          if (error === 'INSTRUMENT_DECLINED') {\r\n            _this.exitPayment();\r\n          }\r\n\r\n          // Make a call to the REST ui to execute the payment\r\n          return actions.payment.execute().then(function () {\r\n            const params: any = {\r\n              refID: _this.reference,\r\n              amount: _this.userPayMethodForm.value.montantTotal,\r\n              moneyCode: _this.userPayMethodForm.value.device_name,\r\n              product: 'Toupesu',\r\n              paypalID: data.paymentToken.split('-')[1]\r\n            };\r\n            // Save and check the payment result\r\n            _this.userPayMethodForm.get('pay_token').setValue(data.paymentToken.split('-')[1]);\r\n            _this.api.post('livepaygateway/paypal/savePayRequest', JSON.stringify(params)).subscribe(\r\n              (ans: any) => {\r\n                if (ans && ans.success) {\r\n                  _this.updateParametersPaypal(data.paymentToken.split('-')[1]);\r\n                }\r\n              }, error => {\r\n                _this.updateParametersPaypal(data.paymentToken.split('-')[1]);\r\n              });\r\n          });\r\n        },\r\n        onCancel: function (data, actions) {\r\n          _this.exitPayment();\r\n        },\r\n        onClick: (data, actions) => {\r\n          _this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n            _this.ui.presentToast(value);\r\n          });\r\n        }\r\n      }, paypalbuttoncontainer);\r\n\r\n      setTimeout(() => {\r\n        this.paypalLoading = false;\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  // Update parameters PAYPAL\r\n  updateParametersPaypal(payToken) {\r\n    // Add the handlefees to the amount\r\n    if (this.contributionData.device_name === this.userPayMethodForm.value.device_name) {\r\n      const params = {\r\n        seance_id: this.contributionData.seance_id,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        typecontribution_id: this.contributionData.typecontribution_id,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        montant_d_une_part_sans_handing_fees: this.contributionData.montant,\r\n        montant_d_une_part_avec_handling_fees: this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name),\r\n        device_name: this.contributionData.device_name,\r\n        sens_contribution: 'entrant',\r\n        liste_part: this.contributionData.liste_part,\r\n        pay_token: payToken,\r\n        operator: 'paypal',\r\n        pin: this.contributionData.pin\r\n      };\r\n      this.paidWithoutConversionOperator(params);\r\n    } else {\r\n      this.currency.convert(this.contributionData.device_name, this.userPayMethodForm.value.device_name, this.contributionData.montant).then(montSansFees => {\r\n        if (montSansFees) {\r\n          const params = {\r\n            seance_id: this.contributionData.seance_id,\r\n            country_id: this.userPayMethodForm.value.countryId,\r\n            typecontribution_id: this.contributionData.typecontribution_id,\r\n            typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n            device_depart: this.userPayMethodForm.value.device_name,\r\n            device_arrivee: this.contributionData.device_name,\r\n            montant_device_depart_d_une_part_sans_handling_fees: montSansFees ? montSansFees : 0,\r\n            montant_device_depart_d_une_part_avec_handling_fees: this.getAmountWithFees(montSansFees, this.userPayMethodForm.value.device_name),\r\n            montant_device_arrivee_d_une_part_sans_handling_fees: this.contributionData.montant,\r\n            sens_contribution: 'entrant',\r\n            liste_part: this.contributionData.liste_part,\r\n            pay_token: payToken,\r\n            operator: 'paypal',\r\n            pin: this.contributionData.pin\r\n          };\r\n          this.paidWithConversionOperator(params);\r\n        } else {\r\n          this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /******************************** END PAYPAL PAYMENT *********************************************/\r\n\r\n\r\n\r\n\r\n  /******************************** START MTN PAYMENT *********************************************/\r\n\r\n  // Update parameters  Mtn payment\r\n  updateParametersMtn() {\r\n    const amount = this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name) * this.contributionData.liste_part.length;\r\n    this.userPayMethodForm.get('montantWithFees').setValue(amount);\r\n\r\n    if (this.contributionData.device_name !== this.userPayMethodForm.value.device_name) {\r\n\r\n      this.currency.convert(this.contributionData.device_name, this.userPayMethodForm.value.device_name,\r\n        this.contributionData.montant).then(montantSansFees => {\r\n          if (montantSansFees) {\r\n            const params = {\r\n              seance_id: this.contributionData.seance_id,\r\n              typecontribution_id: this.contributionData.typecontribution_id,\r\n              typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n              country_id: this.userPayMethodForm.value.countryId,\r\n              device_depart: this.userPayMethodForm.value.device_name,\r\n              device_arrivee: this.contributionData.device_name,\r\n              montant_device_depart_d_une_part_sans_handling_fees: montantSansFees ? montantSansFees : 0,\r\n              montant_device_depart_d_une_part_avec_handling_fees: this.getAmountWithFees(montantSansFees, this.userPayMethodForm.value.device_name),\r\n              montant_device_arrivee_d_une_part_sans_handling_fees: this.contributionData.montant,\r\n              sens_contribution: 'entrant',\r\n              numero: this.userPayMethodForm.value.country_prefix + this.userPayMethodForm.value.phone,\r\n              liste_part: this.contributionData.liste_part,\r\n              pin: this.contributionData.pin,\r\n              operator: 'MTN'\r\n            };\r\n            this.contributionDataParams = params;\r\n            const messageConfirmation = {\r\n              title: this.contributionData.title, contribution: this.contributionDataParams * this.contributionData.liste_part.length,\r\n              device_name: this.userPayMethodForm.value.device_name, type: 'converted'\r\n            };\r\n            this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n\r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n\r\n        });\r\n\r\n    } else {\r\n\r\n      const params = {\r\n        seance_id: this.contributionData.seance_id,\r\n        typecontribution_id: this.contributionData.typecontribution_id,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        device_name: this.contributionData.device_name,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        montant_d_une_part_sans_handing_fees: this.contributionData.montant,\r\n        montant_d_une_part_avec_handling_fees: this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name),\r\n        sens_contribution: 'entrant',\r\n        numero: this.userPayMethodForm.value.country_prefix + this.userPayMethodForm.value.phone,\r\n        liste_part: this.contributionData.liste_part,\r\n        pin: this.contributionData.pin,\r\n        operator: 'MTN'\r\n\r\n      };\r\n      this.contributionDataParams = params;\r\n      const messageConfirmation = {\r\n        title: this.contributionData.title, contribution: this.userPayMethodForm.value.montantWithFees,\r\n        device_name: this.contributionData.device_name, type: 'notconverted'\r\n      };\r\n      this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n    }\r\n  }\r\n\r\n\r\n  /******************************** END MTN PAYMENT *********************************************/\r\n\r\n\r\n  /******************************** START ORANGE PAYMENT *********************************************/\r\n\r\n  // Update parameters  Orange payment\r\n  updateParametersOrange() {\r\n    const amount = this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name) * this.contributionData.liste_part.length;\r\n    this.userPayMethodForm.get('montantWithFees').setValue(amount);\r\n\r\n    if (this.contributionData.device_name !== this.userPayMethodForm.value.device_name) {\r\n\r\n      this.currency.convert(this.contributionData.device_name, this.userPayMethodForm.value.device_name,\r\n        this.contributionData.montant).then(montantSansFees => {\r\n\r\n          if (montantSansFees) {\r\n\r\n            const params = {\r\n              seance_id: this.contributionData.seance_id,\r\n              typecontribution_id: this.contributionData.typecontribution_id,\r\n              typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n              country_id: this.userPayMethodForm.value.countryId,\r\n              device_depart: this.userPayMethodForm.value.device_name,\r\n              device_arrivee: this.contributionData.device_name,\r\n              montant_device_depart_d_une_part_sans_handling_fees: montantSansFees ? montantSansFees : 0,\r\n              montant_device_depart_d_une_part_avec_handling_fees: this.getAmountWithFees(montantSansFees, this.userPayMethodForm.value.device_name),\r\n              montant_device_arrivee_d_une_part_sans_handling_fees: this.contributionData.montant,\r\n              montant_device_arrivee_d_une_part_avec_handling_fees: this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name),\r\n              sens_contribution: 'entrant',\r\n              numero: this.userPayMethodForm.value.country_prefix + this.userPayMethodForm.value.phone,\r\n              liste_part: this.contributionData.liste_part,\r\n              pin: this.contributionData.pin,\r\n              operator: 'orange'\r\n            };\r\n            this.contributionDataParams = params;\r\n            const messageConfirmation = {\r\n              title: this.contributionData.title, contribution: this.contributionDataParams.montant_device_depart_d_une_part_avec_handling_fees * this.contributionData.liste_part.length,\r\n              device_name: this.userPayMethodForm.value.device_name, type: 'converted'\r\n            };\r\n            this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n\r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n        });\r\n\r\n    } else {\r\n\r\n      const params = {\r\n        seance_id: this.contributionData.seance_id,\r\n        typecontribution_id: this.contributionData.typecontribution_id,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        device_name: this.contributionData.device_name,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        montant_d_une_part_sans_handing_fees: this.contributionData.montant,\r\n        montant_d_une_part_avec_handling_fees: this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name),\r\n        sens_contribution: 'entrant',\r\n        numero: this.userPayMethodForm.value.country_prefix + this.userPayMethodForm.value.phone,\r\n        liste_part: this.contributionData.liste_part,\r\n        pin: this.contributionData.pin,\r\n        operator: 'orange'\r\n      };\r\n      this.contributionDataParams = params;\r\n      const messageConfirmation = {\r\n        title: this.contributionData.title, contribution: this.userPayMethodForm.value.montantWithFees,\r\n        device_name: this.contributionData.device_name, type: 'notconverted'\r\n      };\r\n      this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n    }\r\n  }\r\n\r\n  /******************************** END ORANGE PAYMENT *********************************************/\r\n\r\n\r\n\r\n  /******************************** START OZOW PAYMENT *********************************************/\r\n\r\n  // Update parameters OZOW payment\r\n  updateParametersOzow() {\r\n    const amount = this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name) * this.contributionData.liste_part.length\r\n    this.userPayMethodForm.get('montantWithFees').setValue(amount);\r\n    if (this.contributionData.device_name !== this.userPayMethodForm.value.device_name) {\r\n\r\n      this.currency.convert(this.contributionData.device_name, this.userPayMethodForm.value.device_name,\r\n        this.contributionData.montant).then(montantSansFees => {\r\n\r\n          if (montantSansFees) {\r\n          \r\n          const params = {\r\n            seance_id: this.contributionData.seance_id,\r\n            typecontribution_id: this.contributionData.typecontribution_id,\r\n            typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n            country_id: this.userPayMethodForm.value.countryId,\r\n            device_depart: this.userPayMethodForm.value.device_name,\r\n            device_arrivee: this.contributionData.device_name,\r\n            montant_device_depart_d_une_part_sans_handling_fees: montantSansFees ? montantSansFees : 0,\r\n            montant_device_depart_d_une_part_avec_handling_fees: this.getAmountWithFees(montantSansFees, this.userPayMethodForm.value.device_name),\r\n            montant_device_arrivee_d_une_part_sans_handling_fees: this.contributionData.montant,\r\n            sens_contribution: 'entrant',\r\n            numero: this.userPayMethodForm.value.country_prefix + this.userPayMethodForm.value.phone,\r\n            liste_part: this.contributionData.liste_part,\r\n            pin: this.contributionData.pin,\r\n            operator: 'ozow'\r\n          };\r\n          this.contributionDataParams = params;\r\n          const messageConfirmation = {\r\n            title: this.contributionData.title, contribution: this.contributionDataParams.montant_device_depart_d_une_part_avec_handling_fees * this.contributionData.liste_part.length,\r\n            device_name: this.userPayMethodForm.value.device_name, type: 'converted'\r\n          };\r\n          this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n\r\n        } else {\r\n          this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n        }\r\n        });\r\n\r\n    } else {\r\n\r\n      const params = {\r\n        seance_id: this.contributionData.seance_id,\r\n        typecontribution_id: this.contributionData.typecontribution_id,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        device_name: this.contributionData.device_name,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        montant_d_une_part_sans_handing_fees: this.contributionData.montant,\r\n        montant_d_une_part_avec_handling_fees: this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name),\r\n        sens_contribution: 'entrant',\r\n        numero: this.userPayMethodForm.value.country_prefix + this.userPayMethodForm.value.phone,\r\n        liste_part: this.contributionData.liste_part,\r\n        pin: this.contributionData.pin,\r\n        operator: 'ozow'\r\n      };\r\n      this.contributionDataParams = params;\r\n      const messageConfirmation = {\r\n        title: this.contributionData.title, contribution: this.userPayMethodForm.value.montantWithFees,\r\n        device_name: this.contributionData.device_name, type: 'notconverted'\r\n      };\r\n      this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n    }\r\n  }\r\n\r\n\r\n  /******************************** END OZOW PAYMENT *********************************************/\r\n\r\n\r\n  /******************************** START COMMON PAYMENT SERVICES *********************************************/\r\n\r\n  showConfirmationMessage(messageConfirmation: any, contributionDataParams: any) {\r\n    const translation = [];\r\n    this.translate.get(['CONFIRM_PAY_CONTRIBUTION_SUBTEXT1', 'CONFIRM_PAY_CONTRIBUTION_SUBTEXT2', 'CANCEL_TEXT', 'YES_TEXT']).subscribe(trans => {\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT1);\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT2);\r\n      translation.push(trans.CANCEL_TEXT);\r\n      translation.push(trans.YES_TEXT);\r\n      this.paymentOperatorConfirm(messageConfirmation, contributionDataParams, translation);\r\n    });\r\n  }\r\n\r\n  async paymentOperatorConfirm(dataMessage: any, contributionDataParams: any, translation: string[]) {\r\n    const alert = await this.alertController.create({\r\n      header: `${dataMessage.title}`,\r\n      message: `${translation[0]} ${dataMessage.contribution}\r\n    ${dataMessage.device_name}  ${translation[1]}`,\r\n      buttons: [\r\n        {\r\n          text: `${translation[2]}`,\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n\r\n          }\r\n        }, {\r\n          text: `${translation[3]}`,\r\n          handler: () => {\r\n            if (dataMessage.type === 'converted') {\r\n              this.paidWithConversionOperator(contributionDataParams);\r\n            } else if (dataMessage.type === 'notconverted') {\r\n              this.paidWithoutConversionOperator(contributionDataParams);\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  // Paid the user contribution with Ozow after conversion\r\n  paidWithConversionOperator(contributionData: any) {\r\n    this.loading = true;\r\n    this.showLoadingMessage(contributionData);\r\n\r\n    this.contribution.contributeAndconvertWithoutWalletAllshare(contributionData).subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'success') {\r\n        this.sendResponsePerOperator(reponse, contributionData.operator);\r\n      }\r\n    }, error => {\r\n\r\n     \r\n      if (error && error.error && error.error.message === 'error') {\r\n        if (error.error.user_not_found) {\r\n          this.errorService.renewSession().then((data: any) => {\r\n            if (data && data.result === \"OK\") {\r\n              this.ui.dismissLoading();\r\n              this.paidWithConversionOperator(contributionData);\r\n            } else {\r\n              this.exitPayment();\r\n            }\r\n          });\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.paymentError.managePaymentOnlineError(error);\r\n        }\r\n\r\n      } else {\r\n        this.loading = false;\r\n        this.ui.dismissLoading();\r\n        this.errorService.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Paid the user contribution with Ozow without conversion\r\n  paidWithoutConversionOperator(contributionData: any) {\r\n    this.loading = true;\r\n    this.showLoadingMessage(contributionData);\r\n    this.contribution.contributeWithoutWalletAndConversionAllshare(contributionData).subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'success') {\r\n        this.sendResponsePerOperator(reponse, contributionData.operator);\r\n      }\r\n    }, error => {\r\n  \r\n\r\n      if (error && error.error && error.error.message === 'error') {\r\n\r\n        if (error.error.user_not_found) {\r\n          this.errorService.renewSession().then((data: any) => {\r\n            if (data && data.result === \"OK\") {\r\n              this.ui.dismissLoading();\r\n              this.paidWithoutConversionOperator(contributionData);\r\n            } else {\r\n              this.exitPayment();\r\n            }\r\n          });\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.paymentError.managePaymentOnlineError(error);\r\n        }\r\n\r\n      } else {\r\n        this.loading = false;\r\n        this.ui.dismissLoading();\r\n        this.errorService.manageError(error);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  // Send message per operator\r\n  sendResponsePerOperator(data: any, operator: string) {\r\n    this.checkPaymentStatusOperator(data.pay_token, operator);\r\n    const reference = data && data.refID ? data.refID : '';\r\n    this.refernceId = reference;\r\n    this.cancelPaymentResult(reference);\r\n    switch (operator) {\r\n      case 'ozow':\r\n        window.open(data.url, '_blank');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // show the loading message\r\n  showLoadingMessage(data: any) {\r\n    switch (data.operator) {\r\n      case 'orange':\r\n        this.translate.get('ORANGE_PAYMENT_MESSAGE').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'MTN':\r\n        this.translate.get('MTN_PAYMENT_MESSAGE').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'paypal':\r\n        this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'ozow':\r\n        this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // step 2 :  Check the status via Ozow\r\n  checkPaymentStatusOperator(payToken: string, operator: string) {\r\n    this.cron = setInterval(() => {\r\n      this.checkPaymentStatusOperatorServer(payToken, operator);\r\n    }, 20000);\r\n  }\r\n\r\n  // SHOW THE SUCCES MESSAGE\r\n  showSuccesMessage() {\r\n    this.translate.get('CONFIRM_PAY_CONTRIBUTION_MSG1').subscribe(value => {\r\n      this.ui.presentToast(value);\r\n    });\r\n  }\r\n\r\n  // clear the time out\r\n  clearTimeoutData() {\r\n    if (this.timeOut) {\r\n      clearTimeout(this.timeOut);\r\n      this.timeOut = null;\r\n    }\r\n  }\r\n\r\n  // clear the set interval\r\n  clearSetIntervalData() {\r\n    if (this.cron) {\r\n      clearInterval(this.cron);\r\n    }\r\n    this.cron = null;\r\n    for (let i = 0; i < 1000; i++) {\r\n      clearInterval(i);\r\n    }\r\n  }\r\n\r\n  // Check the payment Status\r\n  checkPaymentStatusOperatorServer(payToken: string, operator: string) {\r\n    this.wallet.getStatusPaymentOperator(payToken, operator).subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'OK') {\r\n        this.showPaymentResult();\r\n        this.showSuccesMessage();\r\n      }\r\n    }, error => {\r\n\r\n      if (error && error.error && error.error.message === 'FAIL') {\r\n        this.exitPayment();\r\n        this.translate.get('ERROR_PAY_CONTRIBUTION_MSG').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n      } else {\r\n        this.exitPayment();\r\n        this.translate.get('ERROR_PAY_CONTRIBUTION_MSG').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n        this.errorService.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Show payment confirmation dialog\r\n  showPaymentResult() {\r\n    this.loading = false;\r\n    this.ui.dismissLoading();\r\n    this.initPaymentForm();\r\n    this.clearSetIntervalData();\r\n    this.clearTimeoutData();\r\n    const currentDate = new Date();\r\n    this.auth.setAppLastSession(currentDate.getTime());\r\n    this.events.publish('modal-pay-close');\r\n\r\n    // Check if it's a penality\r\n    if (this.contributionData.typecontribution_id && this.contributionData.typecontribution_id === 2) {\r\n      this.events.publish('new-tontine');\r\n      this.navController.setDirection('root');\r\n      this.router.navigate(['dashboard/my-tontines']);\r\n    }\r\n  }\r\n\r\n  // Cancel the payment\r\n  cancelPaymentResult(refence?: string) {\r\n    this.timeOut = setTimeout(() => {\r\n      this.exitPayment();\r\n      this.translate.get(['TRANSACTION_CANCEL', 'TOPUP_MSG9']).subscribe(trans => {\r\n        this.ui.presentAlert(`${trans.TRANSACTION_CANCEL}`, `${trans.TOPUP_MSG9} ${refence}`);\r\n      });\r\n    }, 300000);\r\n  }\r\n\r\n  // exit the payment directly\r\n  exitPayment() {\r\n    this.loading = false;\r\n    this.ui.dismissLoading();\r\n    this.getAllMethodPaymentType();\r\n    this.initFormMessage();\r\n    this.initPaymentForm();\r\n    this.clearTimeoutData();\r\n    this.clearSetIntervalData();\r\n    this.events.publish('modal-pay-close');\r\n  }\r\n\r\n  // clear all timer when exit the page\r\n  ionicViewDidLeave() {\r\n    if (this.loading) {\r\n      this.exitPayment();\r\n    }\r\n  }\r\n\r\n  // listen to back button\r\n  hardwareBackButton() {\r\n    this.platform.backButton.subscribe(() => {\r\n      const url = this.router.url;\r\n      if (url === '/dashboard/my-tontines/' + this.tontineData.tontine.tontine_id) {\r\n        if (this.refernceId) {\r\n          this.cancelPaymentResult(this.refernceId);\r\n        } else {\r\n          this.exitPayment();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /******************************** END PAYMENT  COMMON SERVICES *********************************************/\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { LocationService } from 'src/app/shared/service/location.service';\r\nimport { ModalController, IonInfiniteScroll } from '@ionic/angular';\r\nimport { UtilService } from '../service/util.service';\r\n\r\n@Component({\r\n  selector: 'app-countries',\r\n  templateUrl: './countries.component.html',\r\n  styleUrls: ['./countries.component.scss'],\r\n})\r\nexport class CountriesComponent implements OnInit {\r\n\r\n  loading: boolean;\r\n  filterData: any[];\r\n  states: any[];\r\n  filter: boolean;\r\n  allData: any[];\r\n  nbItems: number;\r\n  @ViewChild(IonInfiniteScroll, { static: false }) infiniteScroll: IonInfiniteScroll;\r\n\r\n  constructor(\r\n    private location: LocationService,\r\n    private util: UtilService,\r\n    private modal: ModalController,\r\n  ) {\r\n    this.filterData = [];\r\n    this.states = [];\r\n    this.loading = false;\r\n    this.filter = false;\r\n    this.allData = [];\r\n    this.nbItems = 15;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loading = true;\r\n    this.getWordCountries(false, null);\r\n  }\r\n\r\n  // Filter the list of tontines\r\n  searchForInvitation(ev: any) {\r\n    this.infiniteScroll.disabled = false;\r\n    this.filter = true;\r\n    const val = ev.target.value;\r\n    if (val && val.trim() !== '') {\r\n      this.allData = this.filterData.filter((country) => {\r\n        if (country) {\r\n          return (country.country_label.toLowerCase().indexOf(val.toLowerCase()) > -1);\r\n        }\r\n\r\n      });\r\n      if (this.allData.length > this.nbItems) {\r\n        for (let i = 0; i < this.nbItems; i++) {\r\n          this.states.push(this.allData[this.states.length]);\r\n        }\r\n      } else {\r\n        this.states = this.allData;\r\n      }\r\n    } else {\r\n      this.states = this.filterData;\r\n    }\r\n  }\r\n\r\n  // Get all the word countries\r\n  getWordCountries(refresh, event) {\r\n    this.location.getWordCountries(refresh).then((countries: any) => {\r\n      if (countries && countries.length > 0) {\r\n        const states = this.util.orderByKey(countries, 'country_label');\r\n        this.allData = states;\r\n        this.filterData = states;\r\n        if (this.allData.length > this.nbItems) {\r\n          for (let i = 0; i < this.nbItems; i++) {\r\n            this.states.push(this.allData[this.states.length]);\r\n          }\r\n        } else {\r\n          this.states = this.allData;\r\n        }\r\n      }\r\n\r\n      if (event) {\r\n        setTimeout(() => {\r\n          event.target.complete();\r\n        }, 200);\r\n      }\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  // Refresh the list\r\n  refreSher(event) {\r\n    this.infiniteScroll.disabled = false;\r\n    this.getWordCountries(true, event);\r\n  }\r\n\r\n  // Infinite scroll data\r\n  infinteScrollData(event) {\r\n    setTimeout(() => {\r\n      for (let i = 0; i < this.nbItems; i++) {\r\n        if (this.states.length < this.allData.length) {\r\n          this.states.push(this.allData[this.states.length]);\r\n        } else if (this.states.length === this.allData.length) {\r\n          event.target.disabled = true;\r\n        }\r\n      }\r\n      event.target.complete();\r\n    }, 2000);\r\n  }\r\n\r\n  // select a country\r\n  selectCountry(event) {\r\n    this.modal.dismiss(event.detail.value, 'select');\r\n  }\r\n\r\n  // close modal\r\n  closeCountries() {\r\n    this.modal.dismiss(null, 'cancel');\r\n  }\r\n\r\n}\r\n","export default \"<form [formGroup]=\\\"paymentForm\\\">\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"12\\\">        \\r\\n        <ion-card class=\\\"paidmode\\\">\\r\\n          <ion-card-content class=\\\"ion-text-center\\\">\\r\\n              <ion-row class=\\\"ion-padding-bottom\\\">\\r\\n                <ion-col size=\\\"12\\\">\\r\\n                  <ion-item>\\r\\n                    <ion-label position=\\\"floating\\\">{{ 'AMOUNT_PAY_TEXT' | translate }}</ion-label>\\r\\n                    <ion-input type=\\\"number\\\" formControlName=\\\"montant_total\\\"></ion-input>\\r\\n                    <span slot=\\\"end\\\" class=\\\"slot-prefix ion-no-margin\\\"> {{ paymentForm.value.currency }} </span>\\r\\n                  </ion-item> \\r\\n                  <div class=\\\"validation-errors\\\">\\r\\n                    <ng-container *ngFor=\\\"let validation of validationMessages.amount\\\">\\r\\n                      <div class=\\\"error-message\\\" *ngIf=\\\"amount.hasError(validation.type) && (amount.dirty || amount.touched)\\\">\\r\\n                        <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                        {{ validation.message }}\\r\\n                      </div>\\r\\n                    </ng-container>\\r\\n                  </div>          \\r\\n                </ion-col>    \\r\\n              </ion-row>                            \\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n      </ion-col>      \\r\\n    </ion-row>\\r\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\r\\n      <ion-col size=\\\"auto\\\">\\r\\n        <ion-button expand=\\\"full\\\" [disabled]=\\\"paymentForm.invalid || loadingPay\\\"\\r\\n              (click)=\\\"paidWithCash(contributionData)\\\"\\r\\n              color=\\\"warning\\\" \\r\\n              class=\\\"ion-text-uppercase\\\"\\r\\n              shape=\\\"round\\\"\\r\\n              [class.ion-hide]=\\\"amountPay - (type !== 'interest' ? paymentForm.value.montant_total : amountPay) === 0\\\"\\r\\n              >\\r\\n         {{ 'SAVE_PARTIAL_PAYMENT' | translate }}\\r\\n        </ion-button>\\r\\n        <ion-button expand=\\\"full\\\" [disabled]=\\\"paymentForm.invalid || loadingPay\\\"\\r\\n              (click)=\\\"paidWithCash(contributionData)\\\"\\r\\n              color=\\\"warning\\\" \\r\\n              class=\\\"ion-text-uppercase\\\"\\r\\n              shape=\\\"round\\\"\\r\\n              [class.ion-hide]=\\\"amountPay - (type !== 'interest' ? paymentForm.value.montant_total : amountPay)  !== 0\\\"\\r\\n              >\\r\\n         {{ 'SUBMIT_FOR_APPROVAL' | translate }}\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n      <p class=\\\"ion-text-center\\\" *ngIf=\\\"loadingPay\\\">\\r\\n        <ion-spinner  name=\\\"circles\\\"></ion-spinner> \\r\\n      </p>\\r\\n    </ion-row>  \\r\\n  </ion-grid>\\r\\n  </form> \\r\\n  \";","export default \"<form [formGroup]=\\\"userPayMethodForm\\\">\\n  <p class=\\\"ion-text-center\\\"  *ngIf=\\\"loadingOperator\\\">\\n    <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\n  </p>\\n<ion-grid>\\n  <ion-row>\\n    <ion-col size=\\\"12\\\">\\n      <ion-card class=\\\"paidmode\\\">\\n        <ion-card-content class=\\\"ion-text-center\\\">    \\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <ion-item>\\n                <ion-label>{{'COUNTRY_TEXT' | translate}}</ion-label>\\n                <ion-select (ionChange)=\\\"updateCurrencyCountry(userPayMethodForm.value.country_id)\\\" name=\\\"country_id\\\" formControlName=\\\"country_id\\\">\\n                  <ion-select-option [value]=\\\"country.country_id\\\" *ngFor=\\\"let country of states\\\">{{ country.country_label }}</ion-select-option>          \\n                </ion-select>\\n              </ion-item>   \\n              <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.country_id\\\">\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"country.hasError(validation.type) && (country.dirty || country.touched)\\\">\\n                    <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\n                    {{ validation.message }}\\n                  </div>\\n                </ng-container>\\n              </div>     \\n            </ion-col>\\n          </ion-row>       \\n            <ion-row class=\\\"ion-justify-content-end\\\" *ngIf=\\\"userPayMethodForm.value.country_id && paymentMethods && paymentMethods.length > 0\\\">\\n              <ion-col size=\\\"4\\\">\\n                <ion-img [src]=\\\"paymentMethods && paymentMethods[userPayMethodForm.value.typePaymentIndex] ? paymentMethods[userPayMethodForm.value.typePaymentIndex].logo : ' '\\\" class=\\\"logooperator\\\"></ion-img>\\n              </ion-col>\\n            </ion-row>  \\n            <ion-row  *ngIf=\\\"userPayMethodForm.value.country_id && paymentMethods && paymentMethods.length > 0\\\">\\n              <ion-col size=\\\"12\\\">\\n                <ion-item>\\n                  <ion-label>{{ 'USER_PROFILE_TEXT4' | translate }}</ion-label>\\n                  <ion-select (ionChange)=\\\"updatePaymentMethod(userPayMethodForm.value.typePaymentIndex)\\\" name=\\\"typePaymentIndex\\\" formControlName=\\\"typePaymentIndex\\\">\\n                    <ion-select-option *ngFor=\\\"let operator of paymentMethods; let operatorId = index\\\"\\n                    [value]=\\\"operatorId\\\">{{ operator.name }}</ion-select-option>           \\n                  </ion-select>\\n                </ion-item>   \\n                <div class=\\\"validation-errors\\\">\\n                  <ng-container *ngFor=\\\"let validation of validationMessages.payementtype\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"payementtype.hasError(validation.type) && (payementtype.dirty || payementtype.touched)\\\">\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\n                      {{ validation.message }}\\n                    </div>\\n                  </ng-container>\\n                </div>   \\n              </ion-col>\\n            </ion-row> \\n            <ion-row   *ngIf=\\\"checkMobileOperator()\\\">\\n              <ion-col size=\\\"4\\\">\\n                <ion-item >\\n                  <ion-label position=\\\"floating\\\">+</ion-label>\\n                  <ion-input placeholder=\\\"{{userPayMethodForm.value.country_prefix}}\\\" type=\\\"text\\\"></ion-input>\\n                </ion-item>        \\n              </ion-col>\\n              <ion-col size=\\\"8\\\">\\n                <ion-item >\\n                  <ion-label position=\\\"floating\\\">{{ 'REGISTER_MPHONE' | translate }}</ion-label>\\n                  <ion-input (ionChange)=\\\"checckEmailOrPhone(userPayMethodForm.value.phone,userPayMethodForm.value.typePaymentIndex)\\\" type=\\\"tel\\\" formControlName=\\\"phone\\\"></ion-input>\\n                </ion-item> \\n              </ion-col>\\n              <ion-col size=\\\"12\\\">\\n                <div class=\\\"validation-errors\\\" *ngIf=\\\"errorPhone\\\">\\n                    <div class=\\\"error-message\\\">\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\n                      <span [innerHTML]=\\\"'USER_DETAIL_TEXT11' | translate\\\"></span>\\n                    </div>\\n                </div>\\n              </ion-col>\\n            </ion-row> \\n            <ion-row  *ngIf=\\\"canShowPaypalMessage()\\\">\\n              <ion-col>\\n                <div class=\\\"padding\\\">\\n                <p style=\\\"color: red\\\">{{paypalMessage}}</p>\\n              </div>\\n              </ion-col>\\n            </ion-row>                           \\n        </ion-card-content>\\n      </ion-card>\\n    </ion-col>      \\n  </ion-row>\\n  <ion-row>\\n    <svg height=\\\"0\\\" width=\\\"0\\\" viewBox=\\\"0 0 27.7 28.93\\\">\\n      <defs>\\n        <clipPath id=\\\"pay-btn-shape\\\" >\\n          <path d=\\\"M2.57,17.21A11.18,11.18,0,0,1,9.17,5.77h.06l.17-.22.11-.23c-1-.73-1.56-1.42-1.39-2,.42-1.32,5-1.17,10.22.33S27.43,7.47,27,8.81c-.16.48-.86.76-1.88.86h0v.1a5,5,0,0,0,.08.66,3.77,3.77,0,0,0,.1.46l.07.23c2,4,1.7,8.37-1.73,12.53a12.23,12.23,0,0,1-18.42-.1A11.55,11.55,0,0,1,2.57,17.21Z\\\" />            \\n        </clipPath>        \\n      </defs>\\n    </svg>\\n    <ion-col size=\\\"12\\\" class=\\\"ion-text-center wrap-pay-btn\\\" *ngIf=\\\"canPay()\\\"  (click)=\\\"showPayment(userPayMethodForm.value)\\\">\\n      <svg id=\\\"pay-btn\\\" preserveAspectRatio=\\\"xMidYMid slice\\\" viewBox=\\\"0 0 27.7 28.93\\\">\\n        <path  class=\\\"arc-part\\\" d=\\\"M5.91,6.89a12.25,12.25,0,0,0-4.14,9.27,11.14,11.14,0,0,0,.16,1.7,12.82,12.82,0,0,0,.42,1.66c.08.27.19.54.29.8A8.24,8.24,0,0,0,3,21.1a14.85,14.85,0,0,0,.82,1.5,12.25,12.25,0,0,0,3.5,3.62,13.49,13.49,0,0,0,8,2.21,15.81,15.81,0,0,0,1.7-.17,13.74,13.74,0,0,0,1.69-.37,12.79,12.79,0,0,0,5.65-3.5,11.63,11.63,0,0,0,1.88-2.83,12.11,12.11,0,0,0,1.06-3.27,11,11,0,0,0-.94-6.84A10.42,10.42,0,0,1,27.23,13a10.65,10.65,0,0,1,.63,1.71,11.3,11.3,0,0,1,.22,3.64,12.78,12.78,0,0,1-.94,3.56,12.11,12.11,0,0,1-1.88,3.17,12.84,12.84,0,0,1-1.31,1.33,13.32,13.32,0,0,1-1.49,1.12,14,14,0,0,1-3.37,1.59,13,13,0,0,1-1.82.43,17.17,17.17,0,0,1-1.88.21,14.31,14.31,0,0,1-3.77-.27,14.55,14.55,0,0,1-5.12-2.19,11.53,11.53,0,0,1-1.41-1.17A13.92,13.92,0,0,1,.92,18a10.3,10.3,0,0,1-.08-1.88A12.36,12.36,0,0,1,3.31,9.34,10.42,10.42,0,0,1,5.91,6.89ZM7.27,3.35a1.52,1.52,0,0,1-.08-.78,1.82,1.82,0,0,1,.32-.76A2.29,2.29,0,0,1,9,1,6.31,6.31,0,0,1,9.78.89h2.36a25.76,25.76,0,0,1,6.19,1,23.94,23.94,0,0,1,5.74,2.5,20.58,20.58,0,0,1,2.56,1.83,3.84,3.84,0,0,1,1,1.27,1.29,1.29,0,0,1,.08.84,1.24,1.24,0,0,1-.47.64,1.21,1.21,0,0,0,.29-.67,1,1,0,0,0-.21-.65,3.64,3.64,0,0,0-1.07-.94c-.86-.53-1.75-1-2.66-1.47A34.29,34.29,0,0,0,18,3.06,38.16,38.16,0,0,0,12,1.84c-.5-.06-1-.11-1.52-.15l-.73-.13a6.42,6.42,0,0,0-.73,0A1.88,1.88,0,0,0,7.77,2,1.57,1.57,0,0,0,7.27,3.35Z\\\" />\\n        <g class=\\\"pay-btn-border\\\">\\n          <rect x=\\\"1.35\\\" y=\\\"0.56\\\" width=\\\"25.09\\\" height=\\\"26.44\\\" class=\\\"inner-pot\\\" />\\n        </g>\\n        <path class=\\\"pot-entry\\\" d=\\\"M22,6.27c-1.13-.38-2.45-.85-3.86-1.22-1-.28-2.17-.57-3.11-.75-2.64-.47-4.52-.57-4.62-.09-.09.19.19.57.75.85A24.19,24.19,0,0,0,17.46,7.4a22.19,22.19,0,0,0,7.07,1.13c.38-.09.66-.19.66-.28C25.32,7.9,24.05,7.15,22,6.27Z\\\" />\\n        <text class=\\\"pay-text\\\"><tspan style=\\\"letter-spacing: -0.05859375em\\\">P</tspan><tspan x=\\\"4.94\\\" y=\\\"0\\\" style=\\\"letter-spacing: -0.087890625em\\\">A</tspan><tspan x=\\\"10.56\\\" y=\\\"0\\\">Y</tspan></text>\\n      </svg>       \\n      <div class=\\\"glow-wrap\\\">\\n        <i class=\\\"glow\\\"></i>\\n      </div>          \\n    </ion-col>\\n  </ion-row> \\n  <ion-row  *ngIf=\\\"paypalLoading\\\">\\n    <ion-col>\\n      <p class=\\\"ion-text-center ion-padding\\\">\\n        <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\n      </p>\\n    </ion-col>\\n  </ion-row> \\n  <ion-row *ngIf=\\\"canShowPaypalButton()\\\">\\n    <ion-col class=\\\"ion-padding\\\" size=\\\"12\\\">\\n      <div #paypalbuttoncontainer id=\\\"paypal-button-container\\\"></div> \\n    </ion-col>\\n  </ion-row> \\n</ion-grid>\\n</form> \\n\";","import { Component, OnInit, Input, NgZone, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ErrorService } from '../service/error.service';\r\nimport { AlertController, Platform } from '@ionic/angular';\r\nimport { LocationService } from '../service/location.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TontineService } from 'src/app/dashboard/my-tontines/services/tontine.service';\r\nimport { ApiService } from '../service/api.service';\r\nimport { CurrencyService } from '../service/currency.service';\r\nimport { WalletService } from 'src/app/dashboard/my-wallet/service/wallet.service';\r\nimport { DebtsManagerService } from 'src/app/dashboard/my-tontines/services/debts-manager.service';\r\nimport { FormUtilsService } from '../service/form-utils.service';\r\nimport { PaymentErrorService } from '../service/payment-error.service';\r\nimport { Router } from '@angular/router';\r\nimport { PaymentGlobalDataService } from '../service/payment-global-data.service';\r\nimport { UserService } from 'src/app/dashboard/user/service/user.service';\r\nimport { UiService } from '../service/ui.service';\r\nimport { EventService } from '../service/events.service';\r\ndeclare var paypal;\r\n\r\ninterface PaymentMethod {\r\n  id: number;\r\n  logo: string;\r\n  currency: string;\r\n  country_id: number;\r\n  name: string;\r\n  placeholder ?: string;\r\n  handling_fees?: number;\r\n  type_handling_fees?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-paidmode-debt',\r\n  templateUrl: './paidmode-debt.component.html',\r\n  styleUrls: ['./paidmode-debt.component.scss'],\r\n})\r\nexport class PaidmodeDebtComponent implements OnInit {\r\n\r\n  paymentMethods: PaymentMethod[];\r\n  paypalMessage: string;\r\n  userPayMethodForm: FormGroup;\r\n  currentCountryId: number;\r\n  states: any;\r\n  loadingOperator: boolean;\r\n  tontineData: any;\r\n  contributionData: any;\r\n  errorPhone: boolean;\r\n  loading: boolean;\r\n  cron: any;\r\n  timeOut: any;\r\n  contributionDataParams: any;\r\n  pin: string;\r\n  spinner: any;\r\n  allPaymentMethods: any;\r\n  userData: any;\r\n  paymentForm: FormGroup;\r\n  reference: string;\r\n  validationMessages: any;\r\n  paypalLoading: boolean;\r\n  paypal_initialized: boolean;\r\n  refernceId: string;\r\n\r\n  @Input() amountPay: number;\r\n  @Input() balance: number;\r\n  @ViewChild('paypalbuttoncontainer', { static: false }) paypalbuttoncontainer: ElementRef;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private tontine: TontineService,\r\n    private platform: Platform,\r\n    private router: Router,\r\n    private events: EventService,\r\n    private ui: UiService,\r\n    private api: ApiService,\r\n    private debt: DebtsManagerService,\r\n    private paymentData: PaymentGlobalDataService,\r\n    private currency: CurrencyService,\r\n    private formUtil: FormUtilsService,\r\n    private alertController: AlertController,\r\n    private paymentError: PaymentErrorService,\r\n    private wallet: WalletService,\r\n    private errorService: ErrorService,\r\n    private location: LocationService,\r\n    private translate: TranslateService,\r\n    private zone: NgZone\r\n  ) {\r\n    this.cron = null;\r\n    this.timeOut = null;\r\n    this.loadingOperator = false;\r\n    this.loading = false;\r\n    this.errorPhone = false;\r\n    this.states = [];\r\n    this.paymentMethods = [];\r\n    this.paypalMessage = '';\r\n    this.reference = this.formUtil.getRandomId();\r\n    this.tontineData = this.tontine.getCurrentTontineData();\r\n    this.userData = this.userService.getUserData();\r\n    this.allPaymentMethods = [];\r\n    const params = this.debt.getDebtsData();\r\n    this.contributionData = params.facture;\r\n    this.paypalLoading = false;\r\n    this.paypal_initialized = false;\r\n    this.refernceId = '';\r\n    this.hardwareBackButton();\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.getAllMethodPaymentType();\r\n    this.initFormMessage();\r\n    this.initPaymentForm();\r\n  }\r\n\r\n\r\n  /******************************** END FORM SERVICES *********************************************/\r\n\r\n\r\n  // Form getters\r\n  get phone() {\r\n    return this.userPayMethodForm.get('phone');\r\n  }\r\n\r\n  get amountError() {\r\n    return this.userPayMethodForm.get('montantAvecFees');\r\n  }\r\n\r\n  get country() {\r\n    return this.userPayMethodForm.get('country_id');\r\n  }\r\n\r\n  get device_name() {\r\n    return this.userPayMethodForm.get('device_name');\r\n  }\r\n\r\n  get payementtype() {\r\n    return this.userPayMethodForm.get('typePaymentIndex');\r\n  }\r\n\r\n  get montantContributeError() {\r\n    return this.userPayMethodForm.get('montant');\r\n  }\r\n\r\n\r\n  // init form message \r\n  initFormMessage() {\r\n    this.translate.get(['REGISTER_PHONE_REQUIRED', 'AMOUNT_REQUIRED', 'PAID_MODE_REQUIRED', 'M_COUNTRY_REQUIRED'])\r\n      .subscribe(value => {\r\n        this.validationMessages = {\r\n          payementtype: [\r\n            { type: 'required', message: value.PAID_MODE_REQUIRED }\r\n          ],\r\n          phone: [\r\n            { type: 'required', message: value.REGISTER_PHONE_REQUIRED },\r\n          ],\r\n          amount: [\r\n            { type: 'required', message: value.AMOUNT_REQUIRED }\r\n          ],\r\n          country_id: [\r\n            { type: 'required', message: value.M_COUNTRY_REQUIRED }\r\n          ]\r\n        };\r\n      });\r\n  }\r\n\r\n  // Init form message\r\n  initPaymentForm() {\r\n    const currentPayment = this.paymentData.getDefaultPaymentMethod();\r\n    this.userPayMethodForm = this.fb.group({\r\n      country_id: ['', Validators.required],\r\n      country_prefix: [''],\r\n      countryId: [''],\r\n      handleFees: [''],\r\n      handleFeesType: [''],\r\n      device_name: [''],\r\n      currency: [''],\r\n      currencyLabel: [''],\r\n      pay_token: [''],\r\n      url: [''],\r\n      montant: [this.balance, Validators.compose([Validators.required, Validators.min(1)])],\r\n      montantAvecFees: ['0'],\r\n      montantTotal: ['0'],\r\n      type_payment_id: [currentPayment ? currentPayment.typepaiement_id : ''],\r\n      type_payment_name: [currentPayment ? currentPayment.name : ''],\r\n      typePaymentIndex: [0, Validators.required],\r\n      phone: [currentPayment  && this.formUtil.validatePhone(currentPayment.numero_compte) ? currentPayment.numero_compte : ''],\r\n      numero: ['']\r\n    });\r\n  }\r\n\r\n\r\n  // Remove space\r\n  removeSpace() {\r\n    this.userPayMethodForm.get('phone').setValue(this.paymentData.removeInputSpace(this.userPayMethodForm.value.phone));\r\n  }\r\n\r\n  // Check if it's not  mobile operator\r\n  checkMobileOperator() {\r\n    return this.paymentData.isMobileOperator(this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex]);\r\n  }\r\n\r\n  // Can show paypal message\r\n  canShowPaypalMessage() {\r\n    return this.userPayMethodForm.value.montant && this.paymentData.hasPaypalMessage(this.paypalMessage,this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex]);\r\n  }\r\n\r\n  // can show  paypal button\r\n  canShowPaypalButton() {\r\n    return this.paymentData.hasPaypalButton(this.paypal_initialized, this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex]);\r\n  }\r\n\r\n  // can make payment \r\n  canPay() {\r\n    return this.paymentData.canShowPayment(this.userPayMethodForm.valid,this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex],this.userPayMethodForm.value.phone,this.errorPhone);\r\n  }\r\n\r\n  // check if emial or phone is valid\r\n  checckEmailOrPhone(inputValue: string, index: number) {\r\n    this.removeSpace();\r\n    this.userPayMethodForm.get('type_payment_id').setValue(this.paymentMethods[index].id);\r\n    switch (this.paymentMethods[index].name) {\r\n      case 'ORANGE MONEY':\r\n        this.errorPhone = !this.formUtil.validatePhone(inputValue);\r\n        if (!this.errorPhone) {\r\n          this.userPayMethodForm.get('numero').setValue(this.userPayMethodForm.value.country_prefix +\r\n            '' + this.userPayMethodForm.value.phone);\r\n        }\r\n        break;\r\n\r\n      case 'MTN MOBILE MONEY':\r\n        this.errorPhone = !this.formUtil.validatePhone(inputValue);\r\n        if (!this.errorPhone) {\r\n          this.userPayMethodForm.get('numero').setValue(this.userPayMethodForm.value.country_prefix +\r\n            '' + this.userPayMethodForm.value.phone);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // get all payment method\r\n  getAllMethodPaymentType() {\r\n    this.loadingOperator = true;\r\n    this.userService.getAllMethodPaymentType().subscribe((reponse: any) => {\r\n      this.paymentMethods = [];\r\n      this.loadingOperator = false;\r\n      if (reponse && reponse.typePayment && reponse.typePayment.length > 0) {\r\n        this.paymentMethods = this.paymentData.formatPaymentMethodResponseContribution(reponse.typePayment);\r\n      }\r\n      const defaultMethod: PaymentMethod[] = [{\r\n        id: 0, country_id: 0, logo: 'assets/pesuwallet.jpg',\r\n        currency: this.contributionData.device_name, name: 'WALLET', placeholder: '',\r\n        handling_fees: 0,\r\n        type_handling_fees: 'valeur'\r\n      }];\r\n      this.paymentMethods = defaultMethod.concat(this.paymentMethods);\r\n      this.allPaymentMethods = this.paymentMethods;\r\n      this.getCountries(false);\r\n    }, error => {\r\n      this.loadingOperator = false;\r\n      this.paymentMethods.push({\r\n        id: 0, country_id: 0, logo: 'assets/pesuwallet.jpg',\r\n        currency: this.contributionData.device_name, name: 'WALLET', placeholder: '',\r\n        handling_fees: 0,\r\n        type_handling_fees: 'valeur'\r\n      });\r\n      this.allPaymentMethods = this.paymentMethods;\r\n      this.getCountries(false);\r\n      this.errorService.manageError(error);\r\n    });\r\n  }\r\n\r\n  // Get all countries\r\n  getCountries(refresher: boolean) {\r\n    this.location.getAllCountries(refresher).then((countries: any) => {\r\n      this.states = this.paymentData.formatCountriesData(countries);\r\n      // Set the country of the tontine\r\n      if (this.states && this.states.length > 0) {\r\n        setTimeout(() => {\r\n          this.states.forEach(country => {\r\n            if (country.country_key === this.tontineData.tontine.country_key) {\r\n              this.updateFormData(country);\r\n            }\r\n          });\r\n        }, 200);\r\n      }\r\n    });\r\n  }\r\n\r\n  // update the form data\r\n  updateFormData(country: any) {\r\n    if (country) {\r\n      this.userPayMethodForm.get('countryId').setValue(country.country_id);\r\n      this.userPayMethodForm.get('country_prefix').setValue(country.country_prefixe);\r\n      this.userPayMethodForm.get('currency').setValue(country.device_name);\r\n      this.userPayMethodForm.get('handleFees').setValue(country.handling_fees);\r\n      this.userPayMethodForm.get('handleFeesType').setValue(country.type_handling_fees);\r\n      this.userPayMethodForm.get('currencyLabel').setValue(country.currency_label);\r\n      this.zone.run(() => {\r\n        this.userPayMethodForm.get('country_id').setValue(country.country_id);\r\n      });\r\n      this.updatePaymentsMethods(country.country_id);\r\n    }\r\n  }\r\n\r\n  // Update the payment method\r\n  updatePaymentMethod(index) {\r\n    if (this.paymentMethods[index]) {\r\n      this.userPayMethodForm.get('type_payment_id').setValue(this.paymentMethods[index].id);\r\n      this.userPayMethodForm.get('type_payment_name').setValue(this.paymentMethods[index].name);\r\n      this.userPayMethodForm.get('device_name').setValue(this.paymentMethods[index].currency);\r\n      this.userPayMethodForm.get('handleFees').setValue(this.paymentMethods[index].handling_fees);\r\n      this.userPayMethodForm.get('handleFeesType').setValue(this.paymentMethods[index].type_handling_fees);\r\n      this.zone.run(() => {\r\n        this.userPayMethodForm.get('typePaymentIndex').setValue(index);\r\n      });\r\n    }\r\n    if (this.paymentMethods && this.paymentMethods[index] &&\r\n      this.paymentMethods[index].name === 'PAYPAL') {\r\n      this.paypal_initialized = false;\r\n      this.updatePaypalAmount();\r\n    }\r\n  }\r\n\r\n  updatePaymentsMethods(countryId: number) {\r\n    // update the payment method\r\n    const paymentsMethods = [];\r\n    this.paymentMethods = [];\r\n    this.allPaymentMethods.forEach(payment => {\r\n      if (payment.country_id === countryId || payment.country_id === 0) {\r\n        paymentsMethods.push(payment);\r\n      }\r\n    });\r\n    this.paymentMethods = paymentsMethods;\r\n    if (this.paymentMethods && this.paymentMethods.length > 0) {\r\n      this.updatePaymentMethod(0);\r\n    }\r\n  }\r\n\r\n  // Calucalte the payment with handlfees\r\n  geetAmountWithFees(amountShare: any, devise: string) {\r\n    return this.paymentData.getHandleFeesWithDevise(amountShare,devise,this.userPayMethodForm.value.handleFees,this.userPayMethodForm.value.handleFeesType);\r\n  }\r\n\r\n  // Update the country info country prfix\r\n  updateCurrencyCountry(countryId: number) {\r\n    this.zone.run(() => {\r\n      this.paymentMethods = [];\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.states.forEach(state => {\r\n        if (state.country_id === countryId) {\r\n          this.updateFormData(state);\r\n        }\r\n      });\r\n    }, 300);\r\n  }\r\n\r\n\r\n  // Show the payment mode\r\n  showPayment(mode: any) {\r\n\r\n    switch (mode.type_payment_name) {\r\n\r\n      case 'ORANGE MONEY':\r\n        this.updateParametersOrange();\r\n        break;\r\n\r\n      case 'OZOW':\r\n        this.updateParametersOzow();\r\n        break;\r\n\r\n      case 'MTN MOBILE MONEY':\r\n        this.updateParametersMtn();\r\n        break;\r\n\r\n      case 'WALLET':\r\n        this.updateParametersWallet();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  /******************************** END FORM SERVICES *********************************************/\r\n\r\n\r\n  /******************************** START WALLET PAYMENT *********************************************/\r\n\r\n  async paymentWalletConfirm(dataMessage: any, translation: string[]) {\r\n    const alert = await this.alertController.create({\r\n      header: `${dataMessage.title}`,\r\n      message: `${translation[0]} ${dataMessage.montant}\r\n        ${dataMessage.device_name} ${translation[1]}`,\r\n      buttons: [\r\n        {\r\n          text: `${translation[2]}`,\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n\r\n          }\r\n        }, {\r\n          text: `${translation[3]}`,\r\n          handler: () => {\r\n            this.paidWithWallet(dataMessage);\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n\r\n  updateParametersWallet() {\r\n    const translation = [];\r\n    this.translate.get(['CONFIRM_PAY_CONTRIBUTION_SUBTEXT1', 'CONFIRM_PAY_CONTRIBUTION_SUBTEXT2', 'CANCEL_TEXT', 'YES_TEXT']).subscribe(trans => {\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT1);\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT2);\r\n      translation.push(trans.CANCEL_TEXT);\r\n      translation.push(trans.YES_TEXT);\r\n      const params = this.debt.getDebtsData();\r\n      const items = params.items;\r\n      const itemsParams = [];\r\n      items.forEach(item => {\r\n        itemsParams.push({ seance_id: item.seance_id, numero_part: item.numero_part, montant: item.montant, typecontribution_id: item.typecontribution_id });\r\n      });\r\n      const data = {\r\n        title: this.tontineData.tontine.name,\r\n        reference_facture: params.facture ? params.facture.reference : '',\r\n        device_name: params.facture ? params.facture.device_name : '',\r\n        montant_total_facture: params.facture ? params.facture.montant : 0,\r\n        montant: this.userPayMethodForm.value.montant,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        liste_item: itemsParams,\r\n        tontine_id: params.facture ? params.facture.tontine_id : ''\r\n      };\r\n      this.paymentWalletConfirm(data, translation);\r\n    });\r\n  }\r\n\r\n  // Paid the contribution with wallet\r\n  paidWithWallet(contributionData: any) {\r\n    this.loading = true;\r\n    this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n      this.ui.presentLoading(value);\r\n    });\r\n    this.debt.paidMemberBillOnlineWallet(contributionData)\r\n      .subscribe((reponse: any) => {\r\n        this.loading = false;\r\n        this.ui.dismissLoading();\r\n        if (reponse && reponse.message === 'success') {\r\n          this.translate.get('CONFIRM_PAY_CONTRIBUTION_MSG1').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n          this.initPaymentForm();\r\n          if (this.balance - this.userPayMethodForm.value.montant === 0) {\r\n            this.events.publish('modal-close', { result: 'complete-all' });\r\n          } else {\r\n            this.events.publish('modal-close', { result: 'partial' });\r\n          }\r\n        }\r\n      }, error => {\r\n\r\n    \r\n        if (error && error.error && error.error.message === 'error') {\r\n          if (error.error.user_not_found) {\r\n            this.errorService.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.ui.dismissLoading();\r\n                this.paidWithWallet(contributionData);\r\n              } else {\r\n                this.exitPayment();\r\n              }\r\n            });\r\n          } else {\r\n            this.loading = false;\r\n            this.ui.dismissLoading();\r\n            this.paymentError.managePaymentOnlineError(error);\r\n          }\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.errorService.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n  /******************************** START WALLET PAYMENT *********************************************/\r\n\r\n\r\n\r\n  /******************************** START PAYPAL PAYMENT *********************************************/\r\n\r\n  // update the paypal total amount\r\n  updatePaypalAmount() {\r\n    if (this.userPayMethodForm.value.montant > 0) {\r\n    if (this.userPayMethodForm.value.type_payment_name === 'PAYPAL') {\r\n      const amount = this.geetAmountWithFees(this.userPayMethodForm.value.montant, this.contributionData.device_name);\r\n      this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n\r\n      if (this.contributionData.device_name !== this.userPayMethodForm.value.device_name) {\r\n        this.currency.convert(this.contributionData.device_name, this.userPayMethodForm.value.device_name, this.userPayMethodForm.value.montant)\r\n          .then(montantSansFees => {\r\n            if (montantSansFees) {\r\n              const amountWithFees = this.geetAmountWithFees(montantSansFees, this.userPayMethodForm.value.device_name);\r\n              this.userPayMethodForm.get('montantTotal').setValue(amountWithFees);\r\n              this.translate.get('PAIDMODE_MSG2').subscribe(value => {\r\n                this.paypalMessage = `${value} ${this.userPayMethodForm.value.montantAvecFees}\r\n                 ${this.contributionData.device_name} =\r\n                ${this.userPayMethodForm.value.montantTotal}\r\n                ${this.userPayMethodForm.value.device_name}`;\r\n                this.setupPayPay();\r\n              });\r\n            } else {\r\n              this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n                this.paypalMessage = value;\r\n              });\r\n            }\r\n          });\r\n\r\n      } else {\r\n        this.userPayMethodForm.get('montantTotal').setValue(this.userPayMethodForm.value.montantAvecFees);\r\n        this.translate.get('PAIDMODE_MSG2').subscribe(value => {\r\n          this.paypalMessage = `${value}  ${this.userPayMethodForm.value.montantTotal}\r\n            ${this.userPayMethodForm.value.device_name}`;\r\n          this.setupPayPay();\r\n        });\r\n      }\r\n    }\r\n  }\r\n  }\r\n\r\n  setupPayPay() {\r\n    if (!this.paypal_initialized) {\r\n      this.initPayPal();\r\n    }\r\n  }\r\n\r\n  initPayPal() {\r\n\r\n    if (this.userPayMethodForm.value.montantTotal > 0) {\r\n      this.paypalLoading = true;\r\n      this.paypal_initialized = true;\r\n      let paypalbuttoncontainer = this.paypalbuttoncontainer.nativeElement as HTMLDivElement\r\n      let _this = this;\r\n\r\n      paypal.Button.render({\r\n        env: 'production', // sandbox | production\r\n        style: {\r\n          size: 'responsive',\r\n          color: 'gold',\r\n          shape: 'pill',\r\n          label: 'checkout', //label: checkout, buynow, credit, pay, paypal\r\n          tagline: false\r\n        },\r\n\r\n        client: {\r\n          sandbox: 'ARIMcMamksC74CLp7Zavgn62RsKK0XDfjePxjU9gsWmcdzyI3AYz3PwADIktvUgCdhAwWCXPaBzCckOC',\r\n          production: 'AVdCN0ymBsPer15VtLbeNoZ3vkjkhap6vXoxwsWF3B0H4GM_mVQ5GVpJ2h4-G_AlVVIsBYWx4JpVVxLT'\r\n        },\r\n        // Show the buyer a 'Pay Now' button in the checkout flow\r\n        commit: true,\r\n\r\n        payment: function (data, actions) {\r\n          return actions.payment.create({\r\n            payment: {\r\n              transactions: [\r\n                {\r\n                  amount: {\r\n                    total: _this.userPayMethodForm.value.montantTotal,\r\n                    currency: _this.userPayMethodForm.value.device_name\r\n                  },\r\n                  description: 'Toupesu'\r\n                }\r\n              ]\r\n            }\r\n          });\r\n\r\n        },\r\n        // onAuthorize() is called when the buyer approves the payment\r\n        onAuthorize: function (data, actions, error) {\r\n\r\n          if (error) {\r\n            _this.exitPayment();\r\n          }\r\n\r\n          if (error === 'INSTRUMENT_DECLINED') {\r\n            _this.exitPayment();\r\n          }\r\n\r\n          // Make a call to the REST ui to execute the payment\r\n          return actions.payment.execute().then(function () {\r\n            const params: any = {\r\n              refID: _this.reference,\r\n              amount: _this.userPayMethodForm.value.montantTotal,\r\n              moneyCode: _this.userPayMethodForm.value.device_name,\r\n              product: 'Toupesu',\r\n              paypalID: data.paymentToken.split('-')[1]\r\n            };\r\n            // Save and check the payment result\r\n            _this.userPayMethodForm.get('pay_token').setValue(data.paymentToken.split('-')[1]);\r\n            _this.api.post('livepaygateway/paypal/savePayRequest', JSON.stringify(params)).subscribe(\r\n              (ans: any) => {\r\n                if (ans && ans.success) {\r\n                  _this.updateParametersPaypal(data.paymentToken.split('-')[1]);\r\n                }\r\n              }, error => {\r\n                _this.updateParametersPaypal(data.paymentToken.split('-')[1]);\r\n              });\r\n          });\r\n        },\r\n        onCancel: function (data, actions) {\r\n          _this.exitPayment();\r\n        },\r\n        onClick: (data, actions) => {\r\n          _this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n            _this.ui.presentToast(value);\r\n          });\r\n        }\r\n      }, paypalbuttoncontainer);\r\n\r\n      setTimeout(() => {\r\n        this.paypalLoading = false;\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  // Update parameters PAYPAL\r\n  updateParametersPaypal(payToken) {\r\n    const params = this.debt.getDebtsData();\r\n    const items = params.items;\r\n    const itemsParams = [];\r\n    items.forEach(item => {\r\n      itemsParams.push({ seance_id: item.seance_id, numero_part: item.numero_part, montant: item.montant, typecontribution_id: item.typecontribution_id });\r\n    });\r\n\r\n    const amount = this.geetAmountWithFees(this.userPayMethodForm.value.montant, params.facture.device_name);\r\n    this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n\r\n    if (params.facture.device_name === this.userPayMethodForm.value.device_name) {\r\n      const paramsData = {\r\n        reference_facture: params.facture ? params.facture.reference : '',\r\n        device_name: params.facture ? params.facture.device_name : '',\r\n        montant_total_facture: params.facture ? params.facture.montant : 0,\r\n        montant_avec_handling_fees: this.userPayMethodForm.value.montantAvecFees,\r\n        montant_sans_handling_fees: this.userPayMethodForm.value.montant,\r\n        numero: this.userData.phone_with_prefix,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        liste_item: itemsParams,\r\n        tontine_id: params.facture ? params.facture.tontine_id : '',\r\n        pay_token: payToken,\r\n        operator: 'paypal'\r\n      };\r\n      this.paidWithoutConversionOperator(paramsData);\r\n    } else {\r\n      this.currency.convert(params.facture.device_name, this.userPayMethodForm.value.device_name, this.userPayMethodForm.value.montant).then(montantsansFees => {\r\n        if (montantsansFees) {\r\n          const paramsData = {\r\n            reference_facture: params.facture ? params.facture.reference : '',\r\n            device_depart_name: this.userPayMethodForm.value.device_name,\r\n            device_arrivee_name: params.facture ? params.facture.device_name : '',\r\n            montant_total_facture: params.facture ? params.facture.montant : 0,\r\n            montant_depart_avec_handling_fees: this.geetAmountWithFees(montantsansFees, this.userPayMethodForm.value.device_name),\r\n            montant_depart_sans_handling_fees: montantsansFees ? montantsansFees : 0,\r\n            montant_arrivee_avec_handling_fees: this.userPayMethodForm.value.montantAvecFees,\r\n            montant_arrivee_sans_handling_fees: this.userPayMethodForm.value.montant,\r\n            numero: this.userData.phone_with_prefix,\r\n            typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n            country_id: this.userPayMethodForm.value.countryId,\r\n            liste_item: itemsParams,\r\n            tontine_id: params.facture ? params.facture.tontine_id : '',\r\n            pay_token: payToken,\r\n            operator: 'paypal'\r\n          };\r\n          this.paidWithConversionOperator(paramsData);\r\n        } else {\r\n          this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /******************************** END PAYPAL PAYMENT *********************************************/\r\n\r\n\r\n  /******************************** START MTN PAYMENT *********************************************/\r\n\r\n  // Update parameters  Mtn payment\r\n  updateParametersMtn() {\r\n\r\n    const params = this.debt.getDebtsData();\r\n    const items = params.items;\r\n    const itemsParams = [];\r\n    items.forEach(item => {\r\n      itemsParams.push({ seance_id: item.seance_id, numero_part: item.numero_part, montant: item.montant, typecontribution_id: item.typecontribution_id });\r\n    });\r\n\r\n    const amount = this.geetAmountWithFees(this.userPayMethodForm.value.montant, params.facture.device_name);\r\n    this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n\r\n    if (params.facture.device_name !== this.userPayMethodForm.value.device_name) {\r\n\r\n      this.currency.convert(params.facture.device_name, this.userPayMethodForm.value.device_name,\r\n        this.userPayMethodForm.value.montant).then(montantsansFees => {\r\n\r\n          if (montantsansFees) {\r\n            const dataParams = {\r\n              reference_facture: params.facture ? params.facture.reference : '',\r\n              device_depart_name: this.userPayMethodForm.value.device_name,\r\n              device_arrivee_name: params.facture ? params.facture.device_name : '',\r\n              montant_total_facture: params.facture ? params.facture.montant : 0,\r\n              montant_depart_avec_handling_fees: this.geetAmountWithFees(montantsansFees, this.userPayMethodForm.value.device_name),\r\n              montant_depart_sans_handling_fees: montantsansFees ? montantsansFees : 0,\r\n              montant_arrivee_avec_handling_fees: this.userPayMethodForm.value.montantAvecFees,\r\n              montant_arrivee_sans_handling_fees: this.userPayMethodForm.value.montant,\r\n              numero: this.userPayMethodForm.value.numero,\r\n              typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n              country_id: this.userPayMethodForm.value.countryId,\r\n              liste_item: itemsParams,\r\n              tontine_id: params.facture ? params.facture.tontine_id : '',\r\n              operator: 'MTN'\r\n            };\r\n            this.contributionDataParams = dataParams;\r\n            const messageConfirmation = {\r\n              title: params.title, contribution: this.contributionDataParams.montant_depart_avec_handling_fees,\r\n              device_name: this.userPayMethodForm.value.device_name, type: 'converted'\r\n            };\r\n            this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n\r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n\r\n      const paramsData = {\r\n        reference_facture: params.facture ? params.facture.reference : '',\r\n        device_name: params.facture ? params.facture.device_name : '',\r\n        montant_total_facture: params.facture ? params.facture.montant : 0,\r\n        montant_avec_handling_fees: this.userPayMethodForm.value.montantAvecFees,\r\n        montant_sans_handling_fees: this.userPayMethodForm.value.montant,\r\n        numero: this.userPayMethodForm.value.numero,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        liste_item: itemsParams,\r\n        tontine_id: params.facture ? params.facture.tontine_id : '',\r\n        operator: 'MTN'\r\n      };\r\n      this.contributionDataParams = paramsData;\r\n      const messageConfirmation = {\r\n        title: params.title, contribution: this.userPayMethodForm.value.montantAvecFees,\r\n        device_name: params.facture ? params.facture.device_name : '', type: 'notconverted'\r\n      };\r\n      this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n    }\r\n  }\r\n\r\n\r\n  /******************************** END MTN PAYMENT *********************************************/\r\n\r\n\r\n  /******************************** START ORANGE PAYMENT *********************************************/\r\n\r\n  // Update parameters  Orange payment\r\n  updateParametersOrange() {\r\n\r\n    const params = this.debt.getDebtsData();\r\n    const items = params.items;\r\n    const itemsParams = [];\r\n    items.forEach(item => {\r\n      itemsParams.push({ seance_id: item.seance_id, numero_part: item.numero_part, montant: item.montant, typecontribution_id: item.typecontribution_id });\r\n    });\r\n\r\n    const amount = this.geetAmountWithFees(this.userPayMethodForm.value.montant, params.facture.device_name);\r\n    this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n\r\n    if (params.facture.device_name !== this.userPayMethodForm.value.device_name) {\r\n      this.currency.convert(params.facture.device_name, this.userPayMethodForm.value.device_name,\r\n        this.userPayMethodForm.value.montant).then(montantsansFees => {\r\n\r\n          if (montantsansFees) {\r\n            const dataParams = {\r\n              reference_facture: params.facture ? params.facture.reference : '',\r\n              device_depart_name: this.userPayMethodForm.value.device_name,\r\n              device_arrivee_name: params.facture ? params.facture.device_name : '',\r\n              montant_total_facture: params.facture ? params.facture.montant : 0,\r\n              montant_depart_avec_handling_fees: this.geetAmountWithFees(montantsansFees, this.userPayMethodForm.value.device_name),\r\n              montant_depart_sans_handling_fees: montantsansFees ? montantsansFees : 0,\r\n              montant_arrivee_avec_handling_fees: this.userPayMethodForm.value.montantAvecFees,\r\n              montant_arrivee_sans_handling_fees: this.userPayMethodForm.value.montant,\r\n              numero: this.userPayMethodForm.value.numero,\r\n              typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n              country_id: this.userPayMethodForm.value.countryId,\r\n              liste_item: itemsParams,\r\n              tontine_id: params.facture ? params.facture.tontine_id : '',\r\n              operator: 'orange'\r\n            };\r\n            this.contributionDataParams = dataParams;\r\n            const messageConfirmation = {\r\n              title: params.title, contribution: this.contributionDataParams.montant_depart_avec_handling_fees,\r\n              device_name: this.userPayMethodForm.value.device_name, type: 'converted'\r\n            };\r\n\r\n            this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n\r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n        });\r\n\r\n    } else {\r\n\r\n      const paramsData = {\r\n        reference_facture: params.facture ? params.facture.reference : '',\r\n        device_name: params.facture ? params.facture.device_name : '',\r\n        montant_total_facture: params.facture ? params.facture.montant : 0,\r\n        montant_avec_handling_fees: this.userPayMethodForm.value.montantAvecFees,\r\n        montant_sans_handling_fees: this.userPayMethodForm.value.montant,\r\n        numero: this.userPayMethodForm.value.numero,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        liste_item: itemsParams,\r\n        tontine_id: params.facture ? params.facture.tontine_id : '',\r\n        operator: 'orange'\r\n      };\r\n      this.contributionDataParams = paramsData;\r\n      const messageConfirmation = {\r\n        title: params.title, contribution: this.userPayMethodForm.value.montantAvecFees,\r\n        device_name: params.facture ? params.facture.device_name : '', type: 'notconverted'\r\n      };\r\n      this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n    }\r\n  }\r\n\r\n\r\n  /******************************** END ORANGE PAYMENT *********************************************/\r\n\r\n\r\n\r\n  /******************************** START OZOW PAYMENT *********************************************/\r\n\r\n  // Update parameters OZOW payment\r\n  updateParametersOzow() {\r\n\r\n    const params = this.debt.getDebtsData();\r\n    const items = params.items;\r\n    const itemsParams = [];\r\n    items.forEach(item => {\r\n      itemsParams.push({ seance_id: item.seance_id, numero_part: item.numero_part, montant: item.montant, typecontribution_id: item.typecontribution_id });\r\n    });\r\n\r\n    const amount = this.geetAmountWithFees(this.userPayMethodForm.value.montant, params.facture.device_name);\r\n    this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n\r\n    if (params.facture.device_name !== this.userPayMethodForm.value.device_name) {\r\n\r\n      this.currency.convert(params.facture.device_name, this.userPayMethodForm.value.device_name,\r\n        this.userPayMethodForm.value.montant).then(montantsansFees => {\r\n\r\n          if (montantsansFees) {\r\n\r\n            const dataParams = {\r\n              reference_facture: params.facture ? params.facture.reference : '',\r\n              device_depart_name: this.userPayMethodForm.value.device_name,\r\n              device_arrivee_name: params.facture ? params.facture.device_name : '',\r\n              montant_total_facture: params.facture ? params.facture.montant : 0,\r\n              montant_depart_avec_handling_fees: this.geetAmountWithFees(montantsansFees, this.userPayMethodForm.value.device_name),\r\n              montant_depart_sans_handling_fees: montantsansFees ? montantsansFees : 0,\r\n              montant_arrivee_avec_handling_fees: this.userPayMethodForm.value.montantAvecFees,\r\n              montant_arrivee_sans_handling_fees: this.userPayMethodForm.value.montant,\r\n              numero: this.userData.phone_with_prefix,\r\n              typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n              country_id: this.userPayMethodForm.value.countryId,\r\n              liste_item: itemsParams,\r\n              tontine_id: params.facture ? params.facture.tontine_id : '',\r\n              operator: 'ozow'\r\n            };\r\n            this.contributionDataParams = dataParams;\r\n            const messageConfirmation = {\r\n              title: params.title, contribution: this.contributionDataParams.montant_depart_avec_handling_fees,\r\n              device_name: this.userPayMethodForm.value.device_name, type: 'converted'\r\n            };\r\n\r\n            this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n\r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n        });\r\n\r\n    } else {\r\n\r\n      const paramsData = {\r\n        reference_facture: params.facture ? params.facture.reference : '',\r\n        device_name: params.facture ? params.facture.device_name : '',\r\n        montant_total_facture: params.facture ? params.facture.montant : 0,\r\n        montant_avec_handling_fees: this.userPayMethodForm.value.montantAvecFees,\r\n        montant_sans_handling_fees: this.userPayMethodForm.value.montant,\r\n        numero: this.userData.phone_with_prefix,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        liste_item: itemsParams,\r\n        tontine_id: params.facture ? params.facture.tontine_id : '',\r\n        operator: 'ozow'\r\n      };\r\n      this.contributionDataParams = paramsData;\r\n      const messageConfirmation = {\r\n        title: params.title, contribution: this.userPayMethodForm.value.montantAvecFees,\r\n        device_name: params.facture ? params.facture.device_name : '', type: 'notconverted'\r\n      };\r\n      this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n\r\n    }\r\n  }\r\n\r\n  /******************************** END OZOW PAYMENT *********************************************/\r\n\r\n\r\n  /******************************** START COMMON PAYMENT SERVICES *********************************************/\r\n\r\n  showConfirmationMessage(messageConfirmation: any, contributionDataParams: any) {\r\n    const translation = [];\r\n    this.translate.get(['CONFIRM_PAY_CONTRIBUTION_SUBTEXT1', 'CONFIRM_PAY_CONTRIBUTION_SUBTEXT2', 'CANCEL_TEXT', 'YES_TEXT']).subscribe(trans => {\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT1);\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT2);\r\n      translation.push(trans.CANCEL_TEXT);\r\n      translation.push(trans.YES_TEXT);\r\n      this.paymentOperatorConfirm(messageConfirmation, contributionDataParams, translation);\r\n    });\r\n\r\n  }\r\n\r\n\r\n  async paymentOperatorConfirm(dataMessage: any, contributionDataParams: any, translation: string[]) {\r\n    const alert = await this.alertController.create({\r\n      header: `${dataMessage.title}`,\r\n      message: `${translation[0]} ${dataMessage.contribution}\r\n    ${dataMessage.device_name}  ${translation[1]}`,\r\n      buttons: [\r\n        {\r\n          text: `${translation[2]}`,\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n\r\n          }\r\n        }, {\r\n          text: `${translation[3]}`,\r\n          handler: () => {\r\n            if (dataMessage.type === 'converted') {\r\n              this.paidWithConversionOperator(contributionDataParams);\r\n            } else if (dataMessage.type === 'notconverted') {\r\n              this.paidWithoutConversionOperator(contributionDataParams);\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n\r\n  // Paid the user contribution with operator after conversion\r\n  paidWithConversionOperator(contributionData: any) {\r\n    this.loading = true;\r\n    this.showLoadingMessage(contributionData);\r\n\r\n    this.debt.paidMemberBillOnlineWithConversion(contributionData).subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'success') {\r\n        this.sendResponsePerOperator(reponse, contributionData.operator);\r\n      }\r\n    }, error => {\r\n\r\n     \r\n      if (error && error.error && error.error.message === 'error') {\r\n\r\n        if (error.error.user_not_found) {\r\n          this.errorService.renewSession().then((data: any) => {\r\n            if (data && data.result === \"OK\") {\r\n              this.ui.dismissLoading();\r\n              this.paidWithConversionOperator(contributionData);\r\n            } else {\r\n              this.exitPayment();\r\n            }\r\n          });\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.paymentError.managePaymentOnlineError(error);\r\n        }\r\n\r\n      } else {\r\n        this.loading = false;\r\n        this.ui.dismissLoading();\r\n        this.errorService.manageError(error);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  // Paid the user contribution with operator without conversion\r\n  paidWithoutConversionOperator(contributionData: any) {\r\n    this.loading = true;\r\n    this.showLoadingMessage(contributionData);\r\n    this.debt.paidMemberBillOnlineWithoutConversion(contributionData).subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'success') {\r\n        this.sendResponsePerOperator(reponse, contributionData.operator);\r\n      }\r\n    }, error => {\r\n    \r\n      if (error && error.error && error.error.message === 'error') {\r\n        if (error.error.user_not_found) {\r\n \r\n          this.errorService.renewSession().then((data: any) => {\r\n            if (data && data.result === \"OK\") {\r\n              this.ui.dismissLoading();\r\n              this.paidWithoutConversionOperator(contributionData);\r\n            } else {\r\n              this.exitPayment();\r\n            }\r\n          });\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.paymentError.managePaymentOnlineError(error);\r\n        }\r\n\r\n      } else {\r\n        this.loading = false;\r\n        this.ui.dismissLoading();\r\n        this.errorService.manageError(error);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n  // Send message per operator\r\n  sendResponsePerOperator(data: any, operator: string) {\r\n    this.checkPaymentStatusOperator(data.pay_token, operator);\r\n    const reference = data && data.refID ? data.refID : '';\r\n    this.refernceId = reference;\r\n    this.cancelPaymentResult(reference);\r\n    switch (operator) {\r\n      case 'ozow':\r\n        window.open(data.url, '_blank');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  // show the loading message\r\n  showLoadingMessage(data: any) {\r\n    switch (data.operator) {\r\n      case 'orange':\r\n        this.translate.get('ORANGE_PAYMENT_MESSAGE').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'MTN':\r\n        this.translate.get('MTN_PAYMENT_MESSAGE').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'paypal':\r\n        this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'ozow':\r\n        this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  // step 2 :  Check the status via Ozow\r\n  checkPaymentStatusOperator(payToken: string, operator: string) {\r\n    this.cron = setInterval(() => {\r\n      this.checkPaymentStatusOperatorServer(payToken, operator);\r\n    }, 20000);\r\n  }\r\n\r\n\r\n  // SHOW THE SUCCES MESSAGE\r\n  showSuccesMessage() {\r\n    this.translate.get('CONFIRM_PAY_CONTRIBUTION_MSG1').subscribe(value => {\r\n      this.ui.presentToast(value);\r\n    });\r\n  }\r\n\r\n  // clear the time out\r\n  clearTimeoutData() {\r\n    if (this.timeOut) {\r\n      clearTimeout(this.timeOut);\r\n      this.timeOut = null;\r\n    }\r\n  }\r\n\r\n  // clear the set interval\r\n  clearSetIntervalData() {\r\n    if (this.cron) {\r\n      clearInterval(this.cron);\r\n    }\r\n    this.cron = null;\r\n    for (let i = 0; i < 1000; i++) {\r\n      clearInterval(i);\r\n    }\r\n  }\r\n\r\n\r\n  // Check the payment Status\r\n  checkPaymentStatusOperatorServer(payToken: string, operator: string) {\r\n    this.wallet.getStatusPaymentOperator(payToken, operator).subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'OK') {\r\n        this.showPaymentResult();\r\n        this.showSuccesMessage();\r\n      }\r\n    }, error => {\r\n\r\n      if (error && error.error && error.error.message === 'FAIL') {\r\n        this.exitPayment();\r\n        this.translate.get('ERROR_PAY_CONTRIBUTION_MSG').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n      } else {\r\n        this.exitPayment();\r\n        this.translate.get('ERROR_PAY_CONTRIBUTION_MSG').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n        this.errorService.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  \r\n  // Show payment confirmation dialog\r\n  showPaymentResult() {\r\n    this.loading = false;\r\n    this.ui.dismissLoading();\r\n    this.initPaymentForm();\r\n    this.clearTimeoutData();\r\n    this.clearSetIntervalData();\r\n\r\n    if (this.balance - this.userPayMethodForm.value.montant === 0) {\r\n      this.events.publish('modal-close', { result: 'complete-all' });\r\n    } else {\r\n      this.events.publish('modal-close', { result: 'partial' });\r\n    }\r\n  }\r\n\r\n\r\n  // Cancel the payment\r\n  cancelPaymentResult(refence?: string) {\r\n    this.timeOut = setTimeout(() => {\r\n      this.exitPayment();\r\n      this.translate.get(['TRANSACTION_CANCEL', 'TOPUP_MSG9']).subscribe(trans => {\r\n        this.ui.presentAlert(`${trans.TRANSACTION_CANCEL}`, `${trans.TOPUP_MSG9} ${refence}`);\r\n      });\r\n    }, 300000);\r\n  }\r\n\r\n\r\n  // exit the payment directly\r\n  exitPayment() {\r\n    this.loading = false;\r\n    this.ui.dismissLoading();\r\n    this.getAllMethodPaymentType();\r\n    this.initPaymentForm();\r\n    this.initFormMessage();\r\n    this.clearTimeoutData();\r\n    this.clearSetIntervalData();\r\n  }\r\n\r\n\r\n  ionicViewDidLeave() {\r\n    if (this.loading) {\r\n      this.exitPayment();\r\n    }\r\n  }\r\n\r\n  // listen to back button\r\n  hardwareBackButton() {\r\n    this.platform.backButton.subscribe(() => {\r\n      const url = this.router.url;\r\n      if (url === '/dashboard/my-tontines/' + this.tontineData.tontine.tontine_id + '/debts/in-progress-paiement') {\r\n        if (this.refernceId) {\r\n          this.cancelPaymentResult(this.refernceId);\r\n        } else {\r\n          this.exitPayment();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /******************************** END COMMON PAYMENT SERVICES *********************************************/\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ModalController, IonInfiniteScroll, NavParams } from '@ionic/angular';\r\n\r\n\r\n@Component({\r\n  selector: 'app-select-data',\r\n  templateUrl: './select-data.component.html',\r\n  styleUrls: ['./select-data.component.scss'],\r\n})\r\nexport class SelectDataComponent implements OnInit {\r\n\r\n  loading: boolean;\r\n  filterData: any[];\r\n  listData: any[];\r\n  filter: boolean;\r\n  allData: any[];\r\n  nbItems: number;\r\n  param: any;\r\n  type: any;\r\n  @ViewChild(IonInfiniteScroll, { static: false }) infiniteScroll: IonInfiniteScroll;\r\n\r\n  constructor(\r\n    private modal: ModalController,\r\n    private navParams: NavParams\r\n  ) {\r\n    this.filterData = [];\r\n    this.listData = [];\r\n    this.loading = false;\r\n    this.filter = false;\r\n    this.allData = [];\r\n    this.nbItems = 15;\r\n    this.param = this.navParams.get('tontine');\r\n    this.type = this.navParams.get('type');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loading = true;\r\n    this.getData(this.param);\r\n  }\r\n\r\n\r\n  // Filter the list of tontines\r\n  searchForInvitation(ev: any) {\r\n    this.infiniteScroll.disabled = false;\r\n    this.filter = true;\r\n    const val = ev.target.value;\r\n    if (val && val.trim() !== '') {\r\n      this.allData = this.filterData.filter((data) => {\r\n        if (data) {\r\n          return (data.name.toLowerCase().indexOf(val.toLowerCase()) > -1);\r\n        }\r\n\r\n      });\r\n      if (this.allData.length > this.nbItems) {\r\n        for (let i = 0; i < this.nbItems; i++) {\r\n          this.listData.push(this.allData[this.listData.length]);\r\n        }\r\n      } else {\r\n        this.listData = this.allData;\r\n      }\r\n    } else {\r\n      this.listData = this.filterData;\r\n    }\r\n  }\r\n\r\n  // Get all data\r\n  getData(data: any) {\r\n\r\n    this.allData = [];\r\n    if (this.type === 'tontine') {\r\n      data.forEach(element => {\r\n        this.allData.push({ id: element.tontine.tontine_id, name: element.tontine.name });\r\n      });\r\n    } else if (this.type === 'invitation' || this.type === 'notification') {\r\n      let index = 0;\r\n      data.forEach(element => {\r\n        this.allData.push({ id: index, name: element.tontine.name });\r\n        index++;\r\n      });\r\n    }\r\n    this.filterData = this.allData;\r\n\r\n    if (this.allData.length > this.nbItems) {\r\n      for (let i = 0; i < this.nbItems; i++) {\r\n        this.listData.push(this.allData[this.listData.length]);\r\n      }\r\n    } else {\r\n      this.listData = this.allData;\r\n    }\r\n  }\r\n\r\n  \r\n  // Infinite scroll data\r\n  infinteScrollData(event) {\r\n    setTimeout(() => {\r\n      for (let i = 0; i < this.nbItems; i++) {\r\n        if (this.listData.length < this.allData.length) {\r\n          this.listData.push(this.allData[this.listData.length]);\r\n        } else if (this.listData.length === this.allData.length) {\r\n          event.target.disabled = true;\r\n        }\r\n      }\r\n      event.target.complete();\r\n    }, 2000);\r\n  }\r\n\r\n  // select a country\r\n  selectData(event) {\r\n    this.modal.dismiss(event.detail.value, 'select');\r\n  }\r\n\r\n  // close modal\r\n  closeModal() {\r\n    this.modal.dismiss(null, 'cancel');\r\n  }\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYWlkbW9kZS1kZWJ0LW9yZGVyLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\r\nimport { SocialSharing } from '@ionic-native/social-sharing/ngx';\r\nimport { OneSignal } from '@ionic-native/onesignal/ngx';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PluginService {\r\n  shareData: any;\r\n  constructor(\r\n    private camera: Camera,\r\n    private socialSharing: SocialSharing,\r\n    private onesignal: OneSignal,\r\n  ) {\r\n    this.shareData = [];\r\n  }\r\n\r\n  // Get a picture\r\n  getPicture() {\r\n    return new Observable((subscriber) => {\r\n      const options: CameraOptions = {\r\n        quality: 50,\r\n        destinationType: this.camera.DestinationType.DATA_URL,\r\n        mediaType: this.camera.MediaType.PICTURE,\r\n        encodingType: this.camera.EncodingType.JPEG,\r\n        sourceType: this.camera.PictureSourceType.PHOTOLIBRARY\r\n      }\r\n      this.camera.getPicture(options).then((imageData) => {\r\n        let base64Image = 'data:image/jpeg;base64,' + imageData;\r\n        subscriber.next(base64Image);\r\n      }, (err) => {\r\n        subscriber.next(null);\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  // Take a picture\r\n  takePicture() {\r\n    return new Observable((subscriber) => {\r\n      const options: CameraOptions = {\r\n        quality: 50,\r\n        cameraDirection: this.camera.Direction.FRONT,\r\n        destinationType: this.camera.DestinationType.DATA_URL,\r\n        encodingType: this.camera.EncodingType.JPEG,\r\n        sourceType: this.camera.PictureSourceType.CAMERA\r\n      }\r\n      this.camera.getPicture(options).then((imageData) => {\r\n        let base64Image = 'data:image/jpeg;base64,' + imageData;\r\n        subscriber.next(base64Image);\r\n      }, (err) => {\r\n        subscriber.next(err);\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  // share fucntion\r\n  share(message: string, title: string, link: string) {\r\n    this.socialSharing.share(message, title, '', link).then(() => {\r\n    }).catch(() => {\r\n    });\r\n  }\r\n\r\n\r\n   // Get the user Id\r\n   getIds() {\r\n    return new Observable((subscriber) => {\r\n    this.onesignal.getIds().then(ids => {\r\n      if (ids && ids.userId) {\r\n        subscriber.next(ids.userId);\r\n      } else {\r\n        subscriber.next(null);\r\n      }\r\n    });\r\n  });\r\n  }\r\n\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYXltZW50LXByb29mcy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\r\nimport { CanLoad, Route, UrlSegment, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from '../dashboard/user/service/user.service';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanLoad {\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private route: Router\r\n    ) {}\r\n    \r\n    canLoad( route: Route, segments: UrlSegment[]): Observable<boolean> | Promise<boolean> | boolean {\r\n            if (this.userService.getUserToken()) {\r\n                return true;\r\n            } else {\r\n                this.route.navigateByUrl('/auth');\r\n                return false;\r\n            }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { PaidmodeComponent } from './paidmode/paidmode.component';\r\nimport { PaidmodeEventComponent } from './paidmode-event/paidmode-event.component';\r\nimport { TontineInvitedComponent } from './tontine-invited/tontine-invited.component';\r\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\r\nimport { TontineInvitedEventComponent } from './tontine-invited-event/tontine-invited-event.component';\r\nimport { EncheresService } from './service/encheres.service';\r\nimport { CommaDumperPipe } from './pipes/comma-dumper.pipe';\r\nimport { CounterFormatPipe } from './pipes/counter-format.pipe';\r\nimport { FilterDataPipe } from './pipes/filter-data.pipe';\r\nimport { ToDateObjPipe } from './pipes/to-date-obj.pipe';\r\nimport { CountriesComponent } from './countries/countries.component';\r\nimport { PrefixComponent } from './prefix/prefix.component';\r\nimport { BankmodeComponent } from './bankmode/bankmode.component';\r\nimport { ContributionComponent } from './contribution/contribution.component';\r\nimport { PaidmodeDebtComponent } from './paidmode-debt/paidmode-debt.component';\r\nimport { ViewProofComponent } from './view-proof/view-proof.component';\r\nimport { PaidmodeDebtOrderComponent } from './paidmode-debt-order/paidmode-debt-order.component';\r\nimport { ContributionOrderComponent } from './contribution-order/contribution-order.component';\r\nimport { InitiatePayComponent } from './initiate-pay/initiate-pay.component';\r\nimport { PaidmodeTontineComponent } from './paidmode-tontine/paidmode-tontine.component';\r\nimport { PaymentProofsComponent } from './payment-proofs/payment-proofs.component';\r\nimport { WalletOrderComponent } from './wallet-order/wallet-order.component';\r\nimport { StringTruncatePipe } from './pipes/string-truncate.pipe';\r\nimport { FormUtilsService } from './service/form-utils.service';\r\nimport { CashmodeComponent } from './cashmode/cashmode.component';\r\nimport { PaidmodeSenceComponent } from './paidmode-seance/paidmode-seance.component';\r\nimport { ContributionLoanComponent } from './contribution-loan/contribution-loan.component';\r\nimport { BankmodeLoanComponent } from './bankmode-loan/bankmode-loan.component';\r\nimport { PaidmodeLoanComponent } from './paidmode-loan/paidmode-loan.component';\r\nimport { CashmodeLoanComponent } from './cashmode-loan/cashmode-loan.component';\r\nimport { PaidmodeSwapComponent } from './paidmode-swap/paidmode-swap.component';\r\nimport { SelectDataComponent } from './select-data/select-data.component';\r\nimport { RemoveCurrencyPipe } from './pipes/remove-occurence';\r\nimport { PaidmodeCautionSenceComponent } from './paidmode-seance-caution/paidmode-seance-caution.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PaidmodeComponent,\r\n    TontineInvitedComponent,\r\n    TontineInvitedEventComponent,\r\n    PaidmodeEventComponent,\r\n    PaidmodeDebtComponent,\r\n    PaidmodeDebtOrderComponent,\r\n    PaidmodeCautionSenceComponent,\r\n    PaidmodeTontineComponent,\r\n    PaymentProofsComponent,\r\n    PaidmodeSenceComponent,\r\n    CommaDumperPipe,\r\n    RemoveCurrencyPipe,\r\n    CountriesComponent,\r\n    SelectDataComponent,\r\n    PrefixComponent,\r\n    ContributionComponent,\r\n    ContributionLoanComponent,\r\n    BankmodeLoanComponent,\r\n    CashmodeLoanComponent,\r\n    PaidmodeLoanComponent,\r\n    ContributionOrderComponent,\r\n    InitiatePayComponent,\r\n    ViewProofComponent,\r\n    BankmodeComponent,\r\n    CashmodeComponent,\r\n    WalletOrderComponent,\r\n    PaidmodeSwapComponent,\r\n    CounterFormatPipe,\r\n    FilterDataPipe,\r\n    ToDateObjPipe,\r\n    StringTruncatePipe\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  exports: [\r\n    PaidmodeComponent,\r\n    TontineInvitedComponent,\r\n    TontineInvitedEventComponent,\r\n    PaidmodeEventComponent,\r\n    PaidmodeDebtComponent,\r\n    PaidmodeDebtOrderComponent,\r\n    PaidmodeSenceComponent,\r\n    PaidmodeCautionSenceComponent,\r\n    PaidmodeTontineComponent,\r\n    InitiatePayComponent,\r\n    CountriesComponent,\r\n    SelectDataComponent,\r\n    PrefixComponent,\r\n    ContributionComponent,\r\n    ContributionLoanComponent,\r\n    BankmodeLoanComponent,\r\n    PaidmodeLoanComponent,\r\n    CashmodeLoanComponent,\r\n    ContributionOrderComponent,\r\n    ViewProofComponent,\r\n    BankmodeComponent,\r\n    CashmodeComponent,\r\n    WalletOrderComponent,\r\n    PaymentProofsComponent,\r\n    PaidmodeSwapComponent,\r\n    CommaDumperPipe,\r\n    CounterFormatPipe,\r\n    RemoveCurrencyPipe,\r\n    FilterDataPipe,\r\n    ToDateObjPipe,\r\n    StringTruncatePipe,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule\r\n  ],\r\n  providers: [\r\n    TranslateService,\r\n    EncheresService,\r\n    FormUtilsService\r\n  ],\r\n  entryComponents:[\r\n    CountriesComponent,\r\n    SelectDataComponent,\r\n    ContributionComponent,\r\n    ContributionLoanComponent,\r\n    InitiatePayComponent,\r\n    ContributionOrderComponent,\r\n    PrefixComponent,\r\n    ViewProofComponent,\r\n    PaymentProofsComponent,\r\n    PaidmodeSwapComponent\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ModalController, NavController } from '@ionic/angular';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { WalletTontineService } from 'src/app/dashboard/my-tontines/tontine-detail/wallet/services/wallet-tontine.service';\r\nimport { TontineService } from 'src/app/dashboard/my-tontines/services/tontine.service';\r\nimport { ErrorService } from '../service/error.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DebtsManagerService } from 'src/app/dashboard/my-tontines/services/debts-manager.service';\r\nimport { Router } from '@angular/router';\r\nimport { PaymentErrorService } from '../service/payment-error.service';\r\nimport { UserService } from 'src/app/dashboard/user/service/user.service';\r\nimport { EventService } from '../service/events.service';\r\nimport { UiService } from '../service/ui.service';\r\n\r\ninterface Caisse {\r\n  choice: boolean;\r\n  choice_name: string;\r\n  currency_name: string;\r\n  type_caisse_tontine_id: number,\r\n  type_caisse_tontine_name: number,\r\n  montant_online: number,\r\n  current_montant_online: number,\r\n  online_error: boolean;\r\n  montant_offline: number\r\n  current_montant_offline: number\r\n  offline_error: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-initiate-pay',\r\n  templateUrl: './initiate-pay.component.html',\r\n  styleUrls: ['./initiate-pay.component.scss'],\r\n})\r\nexport class InitiatePayComponent implements OnInit {\r\n\r\n  @Input() tontineName: string;\r\n  @Input() type: string;\r\n\r\n  formPayment: FormGroup;\r\n  listCaisse: Caisse[];\r\n  loading: boolean;\r\n  currentTontine: any;\r\n  currentUser: any;\r\n  currentPaymentData: any;\r\n  validationMessages: any;\r\n  totalAmount: number;\r\n  nbValidator: number;\r\n\r\n  constructor(\r\n    private modatCtrl: ModalController,\r\n    private fb: FormBuilder,\r\n    private user: UserService,\r\n    private router: Router,\r\n    private walletTontine: WalletTontineService,\r\n    private navControler: NavController,\r\n    private event: EventService,\r\n    private debt: DebtsManagerService,\r\n    private tontine: TontineService,\r\n    private ui: UiService,\r\n    private translate: TranslateService,\r\n    private error: ErrorService,\r\n    private paymentError: PaymentErrorService\r\n  ) {\r\n    this.listCaisse = [];\r\n    this.loading = false;\r\n    this.currentTontine = this.tontine.getCurrentTontineData();\r\n    this.currentPaymentData = this.debt.getDebtsData();\r\n    this.totalAmount = 0;\r\n    this.currentUser = this.user.getUserData();\r\n    this.nbValidator = this.currentTontine.tontine.number_admin_that_validates_contributions ? this.currentTontine.tontine.number_admin_that_validates_contributions : 1;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getWalletData();\r\n    this.initInitiateForm();\r\n    this.validationMessage();\r\n  }\r\n\r\n  // Form getters\r\n  get reason() {\r\n    return this.formPayment.get('reason');\r\n  }\r\n  get chechoutList() {\r\n    return this.formPayment.get('chechoutList');\r\n  }\r\n\r\n  // Init the validation message\r\n  validationMessage() {\r\n    this.translate.get(['REASON_TEXT', 'CHECKOUT_SELECT_MSG']).subscribe(trans => {\r\n      this.validationMessages = {\r\n        reason: [\r\n          { type: 'required', message: trans.REASON_TEXT }\r\n        ],\r\n        chechoutList: [\r\n          { type: 'required', message: trans.CHECKOUT_SELECT_MSG }\r\n        ]\r\n      };\r\n    });\r\n  }\r\n\r\n\r\n  // Init the form\r\n  initInitiateForm() {\r\n    this.formPayment = this.fb.group({\r\n      reason: [''],\r\n      user_id: [this.currentUser.id],\r\n      bouffe_id: [this.currentPaymentData.bouffe_id],\r\n      device_id: [this.currentPaymentData.device_id],\r\n      liste_caisse: [[], Validators.required],\r\n      chechoutList: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  // Close the contribution\r\n  closeContribute() {\r\n    this.modatCtrl.dismiss(null, 'cancel');\r\n  }\r\n\r\n  // check if we has an error\r\n  hasError() {\r\n    let error = false;\r\n    let i = 0;\r\n    while (!error && i < this.listCaisse.length) {\r\n      if (this.listCaisse[i].online_error || this.listCaisse[i].offline_error) {\r\n        error = true;\r\n      }\r\n      i++;\r\n    }\r\n    return error;\r\n  }\r\n\r\n\r\n  // Trigger form change\r\n  hasFormChange() {\r\n    this.formPayment.valueChanges.subscribe(allValues => {\r\n      for (let fieldName in allValues) {\r\n        if (fieldName != '') {\r\n\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // Update the select values\r\n  updateChoice(choices: any[]) {\r\n    this.totalAmount = 0;\r\n    this.listCaisse.forEach((caisse, index) => {\r\n      if (choices.indexOf(caisse.choice_name) > -1) {\r\n        this.listCaisse[index].choice = true;\r\n      } else {\r\n        this.listCaisse[index].choice = false;\r\n        this.listCaisse[index].montant_online = 0;\r\n        this.listCaisse[index].montant_offline = 0;\r\n      }\r\n      this.totalAmount += caisse.montant_online;\r\n      this.totalAmount += caisse.montant_offline;\r\n    });\r\n    this.formPayment.get('liste_caisse').setValue(this.listCaisse);\r\n  }\r\n\r\n  // Validate the initiate amount\r\n  validateAmount(currentAount: number, newAmount: number, index: number, type: string) {\r\n    switch (type) {\r\n      case 'online':\r\n        this.listCaisse[index].online_error = currentAount < newAmount;\r\n        break;\r\n      case 'offline':\r\n        this.listCaisse[index].offline_error = currentAount < newAmount;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // Get the wallet data\r\n  getWalletData() {\r\n    this.loading = true;\r\n    const param = { tontine_id: this.currentTontine.tontine.tontine_id };\r\n    this.walletTontine.getTontineWallet(param).subscribe((reponse: any) => {\r\n     \r\n      this.listCaisse = [];\r\n      let index = 0;\r\n      if (reponse && reponse.message === 'success') {\r\n        reponse.detail_caisse.forEach(caisse => {\r\n          if (parseFloat(caisse.online_balance) > 0 || parseFloat(caisse.bank_balance) > 0) {\r\n            this.listCaisse.push(\r\n              {\r\n                choice: false,\r\n                choice_name: `caisse_${index}`,\r\n                currency_name: caisse.currency_name,\r\n                type_caisse_tontine_id: caisse.type_caisse_tontine_id,\r\n                type_caisse_tontine_name: caisse.caisse_name,\r\n                montant_online: 0,\r\n                online_error: false,\r\n                current_montant_online: caisse && caisse.online_balance ? parseFloat(caisse.online_balance) : 0,\r\n                montant_offline: 0,\r\n                current_montant_offline: caisse && caisse.bank_balance ? parseFloat(caisse.bank_balance) : 0,\r\n                offline_error: false\r\n              }\r\n            );\r\n          }\r\n          index++;\r\n          this.formPayment.get('liste_caisse').setValue(this.listCaisse);\r\n        });\r\n      }\r\n\r\n      this.loading = false;\r\n    }, error => {\r\n      this.loading = false;\r\n      if (error && error.error && error.error.message === 'error') {\r\n\r\n        if (error.error.tontine_id_not_exist) {\r\n          this.translate.get('ADD_SHARE_MSG4').subscribe(trans => {\r\n            this.ui.presentToast(trans);\r\n          });\r\n        }\r\n        if (error.error.user_not_found) {\r\n          this.loading = true;\r\n          this.error.renewSession().then((data: any) => {\r\n            if (data && data.result === 'OK') {\r\n              this.getWalletData();\r\n            } else {\r\n              this.loading = false;\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // Paid the user contribution with Ozow without conversion\r\n  iniatePayment() {\r\n    this.loading = true;\r\n    this.translate.get('INITIALIZE_TEXT').subscribe(value => {\r\n      this.ui.presentLoading(value);\r\n    });\r\n    this.debt.initiatePayment(this.formPayment.value).subscribe((reponse: any) => {\r\n      this.ui.dismissLoading();\r\n      if (reponse && reponse.message === 'success') {\r\n        if (reponse.last_admin) {\r\n          this.translate.get('LAST_JECKPOT_VALIDATOR').subscribe(trans => {\r\n            this.ui.presentToast(trans);\r\n          });\r\n          this.navControler.setDirection('root');\r\n          if (this.nbValidator === 1) {\r\n            this.router.navigate(['/', 'dashboard', 'my-tontines', this.currentTontine.tontine.tontine_id, 'session-no-paid']);\r\n          } else {\r\n            this.router.navigate(['/', 'dashboard', 'my-tontines', this.currentTontine.tontine.tontine_id, 'wallet']);\r\n          }\r\n        }\r\n\r\n        this.event.publish('payment-initiate');\r\n        this.closeContribute();\r\n      }\r\n    }, error => {\r\n      this.loading = false;\r\n      if (error && error.error && error.error.message === 'error') {\r\n        if (error.error.user_not_found) {\r\n          this.loading = true;\r\n          this.error.renewSession().then((data: any) => {\r\n            if (data && data.result === \"OK\") {\r\n              this.ui.dismissLoading();\r\n              this.iniatePayment();\r\n            } else {\r\n              this.ui.dismissLoading();\r\n              this.loading = false;\r\n            }\r\n          });\r\n        } else {\r\n          this.ui.dismissLoading();\r\n          this.paymentError.managePaymentOfflineError(error);\r\n        }\r\n\r\n      } else {\r\n        this.ui.dismissLoading();\r\n        this.error.manageError(error);\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiService } from './api.service';\r\nimport { Socket } from 'ngx-socket-io';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EncheresService {\r\n\r\n    constructor( \r\n      private api: ApiService,\r\n      private socket: Socket\r\n    ) {\r\n   \r\n    }\r\n\r\n  // Connect to the socket\r\n  connexion(seanceId): boolean {\r\n   const connexion = this.socket.connect();\r\n    this.socket.emit('room', seanceId);\r\n    return connexion;\r\n  }\r\n\r\n  // Connect a member to tontine\r\n  memberConnectionOld(userId, numeroPart, seanceId): EncheresService {\r\n    this.socket.emit('member-connect', [userId, numeroPart, seanceId]);\r\n    return this;\r\n  }\r\n\r\n  memberConnection(userId, numeroPart, seanceId,numberLot): EncheresService{\r\n    this.socket.emit('member-connect', [userId,numeroPart,seanceId,numberLot]);\r\n    return this;\r\n  }\r\n\r\n  // Get all members\r\n  getMembers(): Observable<any> {\r\n    return  new Observable(observer => {\r\n      this.socket.on('connected', (data) => {\r\n        observer.next(data);\r\n        return observer;\r\n      });\r\n    });\r\n  }\r\n\r\n  // Get the counter\r\n  getCounter(): Observable<any> {\r\n    return  new Observable(observer => {\r\n      this.socket.on('compter', (data) => {\r\n        observer.next(data);\r\n        return observer;\r\n      });\r\n    });\r\n  }\r\n\r\n  // Get Informations of a seance\r\n  getSessionInfo(): Observable<any> {\r\n    return  new Observable(observer => {\r\n      this.socket.on('session', (data) => {\r\n        //console.log('jojosession === '+JSON.parse(data));\r\n        observer.next(JSON.parse(data));\r\n        return observer;\r\n      });\r\n    });\r\n  }\r\n\r\n  // Get the next amount of the bid\r\n  getNextAmount(): Observable<any> {\r\n    return  new Observable(observer => {\r\n      this.socket.on('next-amount', (data) => {\r\n        observer.next(JSON.parse(data));\r\n        return observer;\r\n      });\r\n    });\r\n  }\r\n\r\n  // Get the current amount of the bid\r\n  getCurrentAmount(): Observable<any> {\r\n    return  new Observable(observer => {\r\n      this.socket.on('current-amount', (data) => {\r\n        observer.next(JSON.parse(data));\r\n        return observer;\r\n      });\r\n    });\r\n  }\r\n\r\n  // Get the winner of the bid\r\n  getWinnerCurrent(valueID): Observable<any> {\r\n    return  new Observable(observer => {\r\n      this.socket.on('last-bider-'+valueID, (data) => {\r\n        observer.next(JSON.parse(data));\r\n        return observer;\r\n      });\r\n    });\r\n  }\r\n\r\n // Send the bid data\r\n  biderOld(userId, numeroPart, seanceId) {\r\n    this.socket.emit('bid', [userId, numeroPart, seanceId]);\r\n  }\r\n\r\n  bider(userId, numeroPart, seanceId,numeroLot,current_amount,increment){\r\n    this.socket.emit('bid',[userId, numeroPart,seanceId,numeroLot,current_amount,increment]);\r\n  }\r\n\r\n  // Get the bidder history\r\n  getBidderHistory(seance_id,numero_lot) {\r\n    return this.api.get('bid/get/bider/'+seance_id+'/'+numero_lot);\r\n  }\r\n\r\n  // Get the bid result\r\n  getBidResult(): Observable<any> {\r\n    return  new Observable(observer => {\r\n      this.socket.on('bid', (data) => {\r\n        observer.next(JSON.parse(data));\r\n        return observer;\r\n      });\r\n    });\r\n  }\r\n\r\n  // Get all chat messages\r\n  getChatMessages(): Observable<any> {\r\n    return  new Observable(observer => {\r\n      this.socket.on('message', (data) => {\r\n        observer.next(data);\r\n      });\r\n      return () => {\r\n        this.socket.disconnect();\r\n      };\r\n    });\r\n  }\r\n\r\n  // Send the bid amount\r\n  getAmount(): Observable<any> {\r\n    return  new Observable(observer => {\r\n      this.socket.on('emit-bid-amount', (data) => {\r\n        observer.next(data);\r\n      });\r\n      return () => {\r\n        this.socket.disconnect();\r\n      };\r\n    });\r\n  }\r\n\r\n// Send the bid delai\r\n  getDelai(): Observable<any> {\r\n    return  new Observable(observer => {\r\n      this.socket.on('delai', (data) => {\r\n        observer.next(data);\r\n      });\r\n      return () => {\r\n        this.socket.disconnect();\r\n      };\r\n    });\r\n  }\r\n\r\n  // Get the top member of the bid\r\n  getTopMember(): Observable<any> {\r\n    return  new Observable(observer => {\r\n      this.socket.on('emit-top-member', (data) => {\r\n        observer.next(data);\r\n      });\r\n      return () => {\r\n        this.socket.disconnect();\r\n      };\r\n    });\r\n  }\r\n\r\n  // Get all chats\r\n  getChats(): Observable<any> {\r\n    return  new Observable(observer => {\r\n      this.socket.on('chats', (data) => {\r\n        observer.next(data);\r\n      });\r\n      return observer;\r\n    });\r\n  }\r\n\r\n  // Get chat data\r\n  getChat(): Observable<any> {\r\n    return  new Observable(observer => {\r\n      this.socket.on('chat', (data) => {\r\n        observer.next(data);\r\n        return observer;\r\n      });\r\n    });\r\n  }\r\n\r\n  // Set the chat message\r\n  setChat(username: string, message: string, tontine: string) {\r\n    this.socket.emit('chat', [username, message, tontine]);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastController, LoadingController, AlertController, Platform } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { UserService } from 'src/app/dashboard/user/service/user.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UiService {\r\n\r\n  isLoadingShow = false;\r\n\r\n  constructor(\r\n    public toastController: ToastController,\r\n    public loadingController: LoadingController,\r\n    public alertController: AlertController,\r\n    private userService: UserService,\r\n    private translate: TranslateService,\r\n    private router: Router,\r\n    private platform: Platform\r\n  ) {\r\n\r\n  }\r\n\r\n  async presentAlert(title, message) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: message,\r\n      buttons: ['OK']\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  async presentLoading(messageLoading: string) {\r\n    this.isLoadingShow = true;\r\n    return await this.loadingController.create({\r\n      message: messageLoading,\r\n    }).then(a => {\r\n      a.present().then(() => {\r\n        const timer = setInterval(() => {\r\n          if (!this.isLoadingShow) {\r\n            a.dismiss().then(() => { });\r\n            clearTimeout(timer);\r\n          }\r\n        }, 2000);\r\n\r\n      });\r\n    });\r\n  }\r\n\r\n  async dismissLoading() {\r\n    this.isLoadingShow = false;\r\n    return await this.loadingController.dismiss().then(() => { });\r\n  }\r\n\r\n  async presentToast(messageParam: string) {\r\n    const toast = await this.toastController.create({\r\n      message: messageParam,\r\n      duration: 5000,\r\n      position: 'top'\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  // confirmation message\r\n  async confirmationMessage(translation: string[]) {\r\n\r\n    const alert = await this.alertController.create({\r\n      header: `${translation[0]}`,\r\n      message: `${translation[1]}`,\r\n      buttons: [\r\n        {\r\n          text: `${translation[2]}`,\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n\r\n          }\r\n        }, {\r\n          text: `${translation[3]}`,\r\n          handler: () => {\r\n            navigator['app'].exitApp();\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  // listen to back button\r\n  hardwareBackButton() {\r\n    this.platform.backButton.subscribe(() => {\r\n      const url = this.router.url;\r\n      if (url === '/auth' || url === '/dashboard' || url === '/dashboard/user/profil') {\r\n        const messages = [];\r\n        this.translate.get(['M_EXIT_TITLE', 'M_EXIT_MESSAGE', 'CANCEL_TEXT', 'YES_TEXT'])\r\n          .subscribe(trans => {\r\n            messages.push(trans.M_EXIT_TITLE);\r\n            messages.push(trans.M_EXIT_MESSAGE);\r\n            messages.push(trans.CANCEL_TEXT);\r\n            messages.push(trans.YES_TEXT);\r\n            this.confirmationMessage(messages);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n  * Check the user pin and handle/cancel an action.\r\n  * @param callBackSuccess The callback function call when the pin is correct. \r\n  * @param callBackCancel The callback function call when the pin is incorrect. Optionnal\r\n  * @param paramSuccess The data param of callBackSuccess. Optionnal\r\n  * @param paramCancel The data param of callBackCancel. Optionnal\r\n  *\r\n  * @returns void.\r\n  */\r\n  confirmPin(callBackSuccess: (data?: any) => void, callBackCancel?: (data?: any) => void, paramSuccess?: any, paramCancel?: any) {\r\n    const translations = [];\r\n    this.translate.get(['M_ENTER_YOUR_PIN', 'M_PIN', 'CANCEL_TEXT', 'YES_TEXT']).subscribe(trans => {\r\n      translations.push(trans.M_ENTER_YOUR_PIN);\r\n      translations.push(trans.M_PIN);\r\n      translations.push(trans.CANCEL_TEXT);\r\n      translations.push(trans.YES_TEXT);\r\n      this.getUserPin(translations, callBackSuccess, callBackCancel, paramSuccess, paramCancel);\r\n    });\r\n  }\r\n\r\n  // get the user pin \r\n  async getUserPin(translations: string[], callBackSuccess: (data?: any) => void, callBackCancel?: (data?: any) => void, paramSuccess?: any, paramCancel?: any) {\r\n    const userPin = this.userService.getUserSecret();\r\n    const alert = await this.alertController.create({\r\n      header: `${translations[0]}`,\r\n      inputs: [\r\n        {\r\n          name: 'pin',\r\n          type: 'tel',\r\n          placeholder: `${translations[1]}`,\r\n        }\r\n      ],\r\n      buttons: [\r\n        {\r\n          text: `${translations[2]}`,\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n            callBackCancel(paramCancel);\r\n          }\r\n        }, {\r\n          text: `${translations[3]}`,\r\n          handler: (ans) => {\r\n\r\n            // Check if the pin is correct\r\n            if (parseInt(ans.pin, 10) === parseInt(userPin.password, 10)) {\r\n              // call function\r\n              callBackSuccess(paramSuccess);\r\n            } else {\r\n              this.translate.get('M_PIN_INVALID').subscribe(trans => {\r\n                this.presentToast(trans);\r\n              });\r\n            }\r\n\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0b250aW5lLWludml0ZWQtZXZlbnQuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder, FormArray, FormControl } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { States } from '../models/countries';\r\nimport { LocationService } from '../service/location.service';\r\nimport { TontinesEventsService } from 'src/app/dashboard/tontines-events/services/tontines-events.service';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { CountriesComponent } from '../countries/countries.component';\r\nimport { FormUtilsService } from '../service/form-utils.service';\r\nimport { InivitationErrorService } from '../../dashboard/invitations/service/inivitation-error.service';\r\nimport { ErrorService } from '../service/error.service';\r\nimport { UiService } from '../service/ui.service';\r\nimport { EventService } from '../service/events.service';\r\nimport { AuthService } from 'src/app/auth/service/auth.service';\r\n\r\ninterface Invitations {\r\n  emailOrPhone: string;\r\n  PhoneOnly?: any;\r\n  platform: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-tontine-invited-event',\r\n  templateUrl: './tontine-invited-event.component.html',\r\n  styleUrls: ['./tontine-invited-event.component.scss'],\r\n})\r\nexport class TontineInvitedEventComponent implements OnInit {\r\n\r\n  formInvited: FormGroup;\r\n  validationMessages: any;\r\n  states: States[];\r\n  errorPhone: boolean;\r\n  errorEmail: boolean;\r\n  loading: boolean;\r\n  spinner: any;\r\n  tontineEventData: any;\r\n  sendListContact: Invitations[];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private modatCtrl: ModalController,\r\n    private event: TontinesEventsService,\r\n    private events: EventService,\r\n    private translate: TranslateService,\r\n    private error: ErrorService,\r\n    private locate: LocationService,\r\n    private formUtil: FormUtilsService,\r\n    private inviteError: InivitationErrorService,\r\n    private authService: AuthService,\r\n    private ui: UiService\r\n  ) {\r\n    this.states = [];\r\n    this.errorPhone = false;\r\n    this.errorEmail = false;\r\n    this.loading = false;\r\n    this.tontineEventData = this.event.getCurrentTontineEventData();\r\n    this.sendListContact = [];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initFormInvitation();\r\n    this.getValidationsMessage();\r\n    this.getWordCountries(false);\r\n  }\r\n\r\n  // Form getters\r\n  get sendMode() {\r\n    return this.formInvited.get('sendMode');\r\n  }\r\n\r\n  get sendList() {\r\n    return this.formInvited.get('sendList') as FormArray;\r\n  }\r\n\r\n  get emailOrPhone() {\r\n    return this.formInvited.get('emailOrPhone');\r\n  }\r\n\r\n  get phoneId() {\r\n    return this.formInvited.get('phoneid');\r\n  }\r\n\r\n  get countryId() {\r\n    return this.formInvited.get('country_id');\r\n  }\r\n\r\n  // init the form \r\n  initFormInvitation() {\r\n    this.formInvited = this.fb.group({\r\n      tontine_event_id: [this.tontineEventData && this.tontineEventData.id ? this.tontineEventData.id : '', Validators.required],\r\n      members: [[]],\r\n      sendMode: ['sms', Validators.required],\r\n      emailOrPhone: [''],\r\n      sendList: new FormArray([]),\r\n      phoneid: [''],\r\n      country_id: [''],\r\n      countryName: ['']\r\n    });\r\n  }\r\n\r\n  // Remove space\r\n  removeSpace() {\r\n    this.formInvited.get('emailOrPhone').setValue(this.formUtil.removeSpace(this.formInvited.value.emailOrPhone));\r\n  }\r\n\r\n  // can add member\r\n  canAddMember() {\r\n    return !this.formInvited.value.phoneid \r\n            || !this.formInvited.value.emailOrPhone \r\n            || this.formInvited.value.emailOrPhone && ((!this.errorPhone && this.sendMode.value === 'sms') || (!this.errorEmail && this.sendMode.value === 'email'));\r\n  }\r\n\r\n  // can show  contact message\r\n  canShowContactMessage() {\r\n    return this.formInvited.value.emailOrPhone && (!this.errorPhone && (this.sendMode.value === 'sms') || !this.errorEmail && (this.sendMode.value === 'email'));\r\n  }\r\n\r\n  // can send invitation\r\n  canSendInvitation() {\r\n    return this.formInvited.invalid \r\n           || this.loading \r\n           || this.formInvited.value.emailOrPhone && (!this.errorPhone && !this.errorEmail) || (!this.formInvited.value.emailOrPhone && this.sendList.length === 0);\r\n  }\r\n\r\n  // Get validations messages\r\n  getValidationsMessage() {\r\n    this.translate.get(['M_SEND_MODE_ERROR_MSG']).subscribe(trans => {\r\n      this.validationMessages = {\r\n        sendMode: [\r\n          { type: 'required', message: trans.M_SEND_MODE_ERROR_MSG }\r\n        ]\r\n      };\r\n    });\r\n  }\r\n\r\n  // validate the field\r\n  validateFields(mode: string) {\r\n    this.removeSpace();\r\n    this.errorPhone = false;\r\n    this.errorEmail = false;\r\n    if (mode === 'sms') {\r\n      this.errorPhone = this.formUtil.validatePhone(this.formInvited.value.emailOrPhone);\r\n    } else if (mode === 'email') {\r\n      this.errorEmail = this.formUtil.validateEmail(this.formInvited.value.emailOrPhone);\r\n    }\r\n  }\r\n\r\n  // Update the country\r\n  updateCountryPrefix(currentCountry: any) {\r\n    this.states.forEach(state => {\r\n      if (state.country_id === currentCountry) {\r\n        this.formInvited.get('phoneid').setValue(state.country_prefixe);\r\n        this.formInvited.get('country_id').setValue(state.country_id);\r\n        this.formInvited.get('countryName').setValue(state.country_label);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Get all the word countries\r\n  getWordCountries(refresh) {\r\n    this.locate.getWordCountries(refresh).then((countries: any) => {\r\n      if (countries && countries.length > 0) {\r\n        this.states = countries;\r\n        this.getCurrentCountry(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Set the default country\r\n  getCurrentCountry(refresher: boolean) {\r\n    this.locate.getCurrentWordCountryInfo(refresher).then((country: any) => {\r\n      if (country) {\r\n        this.updateCountryPrefix(country.country_id);\r\n      }\r\n    }).catch(error => {\r\n    });\r\n  }\r\n\r\n  // open the countries modal\r\n  showCountries() {\r\n    this.modatCtrl\r\n      .create({\r\n        component: CountriesComponent\r\n      })\r\n      .then(modalEl => {\r\n        modalEl.present();\r\n        modalEl.onDidDismiss().then((ans) => {\r\n          if (ans && ans.role === 'select') {\r\n            this.states.forEach(state => {\r\n              if (state.code_country === ans.data) {\r\n                this.formInvited.get('countryName').setValue(state.country_label);\r\n                this.formInvited.get('phoneid').setValue(state.country_prefixe);\r\n                this.formInvited.get('country_id').setValue(state.country_id);\r\n              }\r\n            });\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  // add a member\r\n  addMberContact(mberContact: HTMLInputElement) {\r\n    if (this.formUtil.validatePhone(mberContact.value)) {\r\n      const phoneNumber = this.formInvited.value.phoneid + mberContact.value;\r\n      this.sendList.push(new FormControl(phoneNumber));\r\n      this.sendListContact.push({ emailOrPhone: phoneNumber, PhoneOnly: mberContact.value, platform: 'mobile' });\r\n    } else {\r\n      this.sendList.push(new FormControl(mberContact.value));\r\n      this.sendListContact.push({ emailOrPhone: mberContact.value, PhoneOnly: null, platform: 'mobile' });\r\n    }\r\n    mberContact.value = '';\r\n    this.formInvited.value.emailOrPhone = '';\r\n  }\r\n\r\n  // Remove contact\r\n  removeContact(contact: FormControl) {\r\n    const index = this.sendList.controls.indexOf(contact);\r\n    this.sendList.removeAt(index);\r\n    const objIndex = this.sendListContact.findIndex(o => o.emailOrPhone === contact.value);\r\n    if (objIndex > -1) {\r\n      this.sendListContact.splice(objIndex, 1);\r\n    }\r\n  }\r\n\r\n  // send invitations to the user\r\n  sendInvitation() {\r\n    this.loading = true;\r\n    this.translate.get('SENDING_INVITATION').subscribe(trans => {\r\n      this.ui.presentLoading(trans);\r\n    });\r\n\r\n    if (this.formInvited.value.emailOrPhone) {\r\n      if (this.formInvited.value.sendMode === 'sms') {\r\n        const phoneNumber = this.formInvited.value.phoneid + this.formInvited.value.emailOrPhone;\r\n        this.sendListContact.push({ emailOrPhone: phoneNumber, PhoneOnly: this.formInvited.value.emailOrPhone, platform: 'mobile' });\r\n      } else {\r\n        this.sendListContact.push({ emailOrPhone: this.formInvited.value.emailOrPhone, PhoneOnly: null, platform: 'mobile' });\r\n      }\r\n    }\r\n\r\n    // Remove double\r\n    this.sendListContact = this.sendListContact.filter((elem, index, self) => self.findIndex(\r\n      (t) => { return (t.emailOrPhone === elem.emailOrPhone && t.PhoneOnly === elem.PhoneOnly) }) === index);\r\n\r\n    this.formInvited.get('members').setValue(this.sendListContact);\r\n    this.formInvited.get('tontine_event_id').setValue(this.tontineEventData.id);\r\n    this.event.sendInvitation(this.formInvited.value)\r\n      .subscribe((reponse: any) => {\r\n        this.ui.dismissLoading();\r\n        this.loading = false;\r\n        this.initFormInvitation();\r\n        this.getWordCountries(false);\r\n        this.translate.get('TONTINE_INVITED_TEXT5').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n        const currentDate = new Date();\r\n        this.authService.setAppLastSession(currentDate.getTime());\r\n        this.events.publish('new-invitation-event');\r\n      }, error => {\r\n        this.loading = false;\r\n        if (error && error.error && !error.error.success) {\r\n          if (error.error.user_not_found) {\r\n            this.loading = true;\r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.ui.dismissLoading();\r\n                this.sendInvitation();\r\n              } else {\r\n                this.loading = false;\r\n                this.ui.dismissLoading();\r\n              }\r\n            });\r\n          } else {\r\n            this.ui.dismissLoading();\r\n            this.inviteError.manageInviteError(error);\r\n          }\r\n        } else {\r\n          this.ui.dismissLoading();\r\n          this.error.manageError(error);\r\n        }\r\n      });\r\n  }\r\n}\r\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title class=\\\"ion-text-center\\\">{{ 'PROOF_TEXT' | translate }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card>\\n    <ion-card-content class=\\\"ion-text-center\\\"> \\n      <ion-row *ngIf=\\\"proof\\\">\\n          <ion-col size=\\\"12\\\">\\n             <ion-img [src]=\\\"proof\\\"></ion-img>\\n          </ion-col>\\n      </ion-row>\\n      <ion-row *ngIf=\\\"!proof\\\">\\n        <ion-col size=\\\"12\\\">\\n           <p class=\\\"ion-text-center\\\">\\n             {{'BILL_PROOF_EMPTY' | translate }}\\n           </p>\\n        </ion-col>\\n    </ion-row>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\\n<ion-footer class=\\\"ion-padding ion-text-center\\\">\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <ion-button expand=\\\"full\\\" \\n              fill=\\\"outline\\\"\\n              color=\\\"warning\\\" \\n              class=\\\"ion-text-uppercase\\\"\\n              shape=\\\"round\\\" (click)=\\\"closeContribute()\\\">\\n          {{ 'CANCEL_TEXT' | translate }}\\n        </ion-button>\\n    </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-footer>\\n  \";","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController, NavController, Platform } from '@ionic/angular';\r\n\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ApiService } from 'src/app/shared/service/api.service';\r\nimport { LocationService } from 'src/app/shared/service/location.service';\r\nimport { StorageData } from 'src/app/shared/service/storage.service';\r\nimport { LocalStorageService } from 'src/app/shared/service/local-storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  // tslint:disable-next-line: variable-name\r\n\r\n  constructor(\r\n    private platform: Platform,\r\n    private api: ApiService,\r\n    private location: LocationService,\r\n    private nav: NavController,\r\n    private translate: TranslateService,\r\n    private alertController: AlertController,\r\n    private localStorage: LocalStorageService,\r\n    private storage: StorageData,\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n\r\n  // Set the last open \r\n  setAppLastSession(dateOpen: number) {\r\n    this.localStorage.setItem('last-session', String(dateOpen));\r\n  }\r\n\r\n  // Get the apps version\r\n  getAppLastSession() {\r\n    return this.localStorage.getItem('last-session');\r\n  }\r\n\r\n  // delete the apps\r\n  removeAppLastSession() {\r\n    this.localStorage.removeItem('last-session');\r\n  }\r\n\r\n\r\n  // Remove lang data\r\n  public removeConfigData() {\r\n    this.localStorage.removeItem('all-countries');\r\n    this.localStorage.removeItem('all-country-languages');\r\n    this.localStorage.removeItem('countries');\r\n    this.localStorage.removeItem('country_code');\r\n    this.localStorage.removeItem('user-country');\r\n    this.localStorage.removeItem('user-language');\r\n    this.localStorage.removeItem('word-countries');\r\n    this.localStorage.removeItem('language-translation');\r\n    this.localStorage.removeItem('current-country-languages');\r\n    this.localStorage.removeItem('default-country-languages');\r\n    this.localStorage.removeItem('user-device');\r\n    this.localStorage.removeItem('user-registration-data');\r\n    this.localStorage.removeItem('user-session-language');\r\n    this.localStorage.removeItem('first-email');\r\n    this.removeAppLastSession();\r\n  }\r\n\r\n\r\n  // Remove all user data\r\n  public removeUserSession() {\r\n    this.localStorage.removeItem('fisrt-login');\r\n    this.localStorage.removeItem('user-token');\r\n    this.localStorage.removeItem('user-data');\r\n    this.localStorage.removeItem('user-role');\r\n    this.localStorage.removeItem('user-badge');\r\n    this.localStorage.removeItem('user-credentials');\r\n    this.localStorage.removeItem('user-payment-method');\r\n    this.localStorage.removeItem('startRefreshToken');\r\n    this.localStorage.removeItem('type-contribution');\r\n\r\n    this.localStorage.removeItem('debts-data');\r\n    this.localStorage.removeItem('new-event');\r\n    this.localStorage.removeItem('tontine-data');\r\n    this.localStorage.removeItem('contrib-data');\r\n    this.localStorage.removeItem('tontine-data-event');\r\n    this.localStorage.removeItem('day-token');\r\n\r\n    this.storage.remove('seance-data');\r\n    this.storage.remove('swap-data');\r\n    this.storage.remove('loan-data');\r\n    this.storage.remove('app-notif');\r\n    this.storage.remove('app-events');\r\n    this.storage.remove('app-tontines');\r\n    this.storage.remove('app-events-user');\r\n    this.storage.remove('current-balance');\r\n    this.storage.remove('app-wallet-trans');\r\n    this.storage.remove('app-tontine-trans');\r\n    this.storage.remove('app-wallet-tontines-trans');\r\n    this.localStorage.setItem('startRefreshToken', 'false');\r\n  }\r\n\r\n\r\n  // Log out the user\r\n  public logoutMember() {\r\n    this.removeUserSession();\r\n    this.removeConfigData();\r\n    this.nav.setDirection('root');\r\n    this.router.navigate(['auth']);\r\n  }\r\n\r\n\r\n\r\n  // Create the user account\r\n  createAccount(user: any) {\r\n    return this.api.post('user/account/v1/createaccount', user);\r\n  }\r\n\r\n  // Login to the user account\r\n  authentication(credentials: any) {\r\n    return this.api.post('user/account/v1/auth', credentials);\r\n  }\r\n\r\n  // send a code to user for registration\r\n  sendUserCode(data: any) {\r\n    return this.api.post('user/send/v1/digitcode', data);\r\n  }\r\n\r\n  // Check if the user Email exist\r\n  checkUserEmail(data: any) {\r\n    return this.api.post('user/check/email', data);\r\n  }\r\n\r\n  // Verify the user password\r\n  verifyUserPassword(data: any) {\r\n    return this.api.post('user/check/email/match/password', data);\r\n  }\r\n\r\n  // Create user account or synchonize with web\r\n  createAccountOrSynchronise(data: any) {\r\n    return this.api.post('user/valid/v1/digitcode/and/createAccount/mobile', data);\r\n  }\r\n\r\n  // Listen to back button\r\n  showUpdateMessage() {\r\n    const messages = [];\r\n    this.translate.get(['M_UPDATE_TITLE', 'M_UPDATE_MESSAGE', 'IGNORE_TEXT', 'YES_TEXT'])\r\n      .subscribe(trans => {\r\n        messages.push(trans.M_UPDATE_TITLE);\r\n        messages.push(trans.M_UPDATE_MESSAGE);\r\n        messages.push(trans.IGNORE_TEXT);\r\n        messages.push(trans.YES_TEXT);\r\n        this.updateMessage(messages);\r\n      });\r\n  }\r\n\r\n  // Update message\r\n  async updateMessage(translation: string[]) {\r\n\r\n    const alert = await this.alertController.create({\r\n      header: `${translation[0]}`,\r\n      message: `${translation[1]}`,\r\n      buttons: [\r\n        {\r\n          text: `${translation[2]}`,\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n\r\n          }\r\n        }, {\r\n          text: `${translation[3]}`,\r\n          handler: () => {\r\n            let link = '';\r\n            if (this.platform.is('android')) {\r\n              link = 'https://bit.ly/2Zr78Me';\r\n            } else {\r\n              link = 'https://apple.co/2yrfLeM';\r\n            }\r\n            window.open(link, '_system', 'location=yes');\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  // Get the app version \r\n  getVersion() {\r\n    const platform = this.platform.is('android') ? 'android' : this.platform.is('ios') ? 'ios' : '';\r\n\r\n    return new Promise((resolve) => {\r\n      this.location.checkVersion(platform).then((ans: any) => {\r\n\r\n        if (ans && ans.version === 'DOWN') {\r\n          let version = String(ans.data.version);\r\n\r\n          while (version.includes('.')) {\r\n            version = version.replace('.', '').trim();\r\n          }\r\n\r\n          if (ans && ans.data && ans.data.maintenance === 1) {\r\n            this.checkStatus(1);\r\n            resolve('OK');\r\n          } else {\r\n            this.checkStatus(0);\r\n\r\n            if (ans && ans.data && parseInt(version) > 134) {\r\n              this.showUpdateMessage();\r\n            }\r\n            resolve('NONE');\r\n          }\r\n        } else {\r\n          this.localStorage.setItem('maintenance', 'NONE');\r\n          resolve('NONE');\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // Check status\r\n  checkStatus(maintenance) {\r\n    if (maintenance === 1) {\r\n      const message = [];\r\n      this.translate.get(['MAINTENANCE_TITLE_TEXT', 'MAINTENANCE_MSG_TEXT', 'OK_TEXT']).subscribe(trans => {\r\n        message.push(trans.MAINTENANCE_TITLE_TEXT);\r\n        message.push(trans.MAINTENANCE_MSG_TEXT);\r\n        message.push(trans.OK_TEXT);\r\n        this.maintenanceMessage(message);\r\n      });\r\n      this.localStorage.setItem('maintenance', 'OK');\r\n      this.logoutMember();\r\n    } else {\r\n      this.localStorage.setItem('maintenance', 'NONE');\r\n    }\r\n  }\r\n\r\n  // Maintenance message\r\n  async maintenanceMessage(translation: string[]) {\r\n\r\n    const alert = await this.alertController.create({\r\n      header: `${translation[0]}`,\r\n      message: `${translation[1]}`,\r\n      buttons: [\r\n        {\r\n          text: `${translation[2]}`,\r\n          handler: () => {\r\n            if (navigator['app']) {\r\n              navigator['app'].exitApp();\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n}\r\n","export default \"<ion-grid class=\\\"add-member\\\">\\r\\n  <ion-row>\\r\\n    <ion-col size=\\\"12\\\">\\r\\n      <ion-card class=\\\"mber-invited\\\">\\r\\n        <ion-card-content>\\r\\n            <form [formGroup]=\\\"formInvited\\\">\\r\\n              <ion-row *ngIf=\\\"tontines && tontines.length > 0\\\">\\r\\n                <ion-col size=\\\"12\\\">\\r\\n                  <ion-item (click)=\\\"showTontines()\\\">\\r\\n                    <ion-label>{{ 'M_TONTINE_TEXT' | translate }} : </ion-label>\\r\\n                    <p><strong> {{truncateName(formInvited.value.tontineName,12)}}</strong> </p>          \\r\\n                    <ion-icon name=\\\"chevron-down-outline\\\" slot=\\\"end\\\"></ion-icon>\\r\\n                  </ion-item>  \\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n              <ion-row>\\r\\n                <ion-col size=\\\"12\\\">\\r\\n                  <ion-item>\\r\\n                    <ion-label>{{ 'M_SEND_METHOD' | translate }}</ion-label>\\r\\n                    <ion-select  (ionChange)=\\\"validateFields(formInvited.value.sendMode)\\\" formControlName=\\\"sendMode\\\">\\r\\n                      <ion-select-option [value]=\\\"'sms'\\\"> {{ 'M_SMS_TEXT' | translate }}</ion-select-option>      \\r\\n                      <ion-select-option [value]=\\\"'email'\\\">{{ 'EMAIL_TEXT' | translate }}</ion-select-option>     \\r\\n                    </ion-select>\\r\\n                  </ion-item> \\r\\n \\r\\n                  <ion-item *ngIf=\\\"formInvited.value.sendMode === 'sms'\\\" (click)=\\\"showCountries()\\\">\\r\\n                    <ion-label>{{'COUNTRY_TEXT' | translate}} : </ion-label>\\r\\n                    <p><strong> {{ formInvited.value.countryName }} </strong> </p>          \\r\\n                    <ion-icon name=\\\"chevron-down-outline\\\" slot=\\\"end\\\"></ion-icon>\\r\\n                  </ion-item> \\r\\n                  <div class=\\\"validation-errors\\\">\\r\\n                    <ng-container *ngFor=\\\"let validation of validationMessages.sendMode\\\">\\r\\n                      <div class=\\\"error-message\\\" *ngIf=\\\"sendMode.hasError(validation.type) && (sendMode.dirty || sendMode.touched)\\\">\\r\\n                        <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                        {{ validation.message }}\\r\\n                      </div>\\r\\n                    </ng-container>\\r\\n                  </div>   \\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"12\\\">\\r\\n                    <ul>\\r\\n                        <li *ngFor=\\\"let sendTo of sendList.controls\\\">\\r\\n                            {{ sendTo.value }} \\r\\n                            <ion-button fill=\\\"clear\\\" color=\\\"warning\\\" (click)=\\\"removeContact(sendTo)\\\">\\r\\n                                <ion-icon name=\\\"remove-circle-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\r\\n                            </ion-button>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"9\\\">\\r\\n                  <ion-item lines=\\\"none\\\">\\r\\n                    <ion-label>{{ 'TONTINE_INVITED_TEXT1' | translate }}</ion-label>\\r\\n                  </ion-item> \\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"3\\\">\\r\\n                  <ion-button fill=\\\"clear\\\" [disabled]=\\\"canAddNewMember()\\\" color=\\\"warning\\\" (click)=\\\"addMberContact(mberContact)\\\">\\r\\n                      <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\r\\n                  </ion-button>                  \\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"4\\\"  *ngIf=\\\"formInvited.value.sendMode === 'sms'\\\">\\r\\n                  <ion-item>\\r\\n                    <ion-label>+</ion-label>\\r\\n                    <ion-input   type=\\\"text\\\" placeholder=\\\"{{formInvited.value.phoneid}}\\\"></ion-input>\\r\\n                  </ion-item>\\r\\n                </ion-col>\\r\\n                <ion-col>\\r\\n                  <ion-item>\\r\\n                    <ion-input  (ionChange)=\\\"validateFields(formInvited.value.sendMode)\\\" formControlName=\\\"emailOrPhone\\\" [type]=\\\"formInvited.value.sendMode === 'sms' ? 'tel' : 'email'\\\" placeholder=\\\"{{ formInvited.value.sendMode === 'sms'  ? ('REGISTER_MPHONE' | translate) : ('M_EMAIL_MSG' | translate) }}\\\" \\r\\n                    #mberContact></ion-input>\\r\\n                  </ion-item> \\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"12\\\" *ngIf=\\\"formInvited.value.emailOrPhone\\\">  \\r\\n                  <p *ngIf=\\\"canShowContactMember()\\\">{{'M_MEMBER_CONTACT' | translate}} {{ 'TONTINE_INVITED_TEXT4' | translate }}.</p>\\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n              <ion-row>\\r\\n                <ion-col>\\r\\n                    <ion-button expand=\\\"full\\\" \\r\\n                          color=\\\"warning\\\" \\r\\n                          class=\\\"ion-text-uppercase\\\"\\r\\n                          shape=\\\"round\\\" [disabled]=\\\"canInviteMember()\\\" (click)=\\\"sendInvitation()\\\">\\r\\n                          {{ 'TONTINE_INVITE_TEXT2' | translate }}\\r\\n                    </ion-button>\\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n            </form>\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-grid>\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ModalController, IonInfiniteScroll } from '@ionic/angular';\r\nimport { ViewProofComponent } from 'src/app/shared/view-proof/view-proof.component';\r\nimport { TontineService } from 'src/app/dashboard/my-tontines/services/tontine.service';\r\nimport { DebtsManagerService } from 'src/app/dashboard/my-tontines/services/debts-manager.service';\r\n\r\n@Component({\r\n  selector: 'app-payment-proofs',\r\n  templateUrl: './payment-proofs.component.html',\r\n  styleUrls: ['./payment-proofs.component.scss'],\r\n})\r\nexport class PaymentProofsComponent implements OnInit {\r\n\r\n  currentProofsData: any;\r\n  @ViewChild(IonInfiniteScroll, { static: false }) infiniteScroll: IonInfiniteScroll;\r\n  loading: boolean;\r\n  myProofs: any;\r\n  allData: any;\r\n  nbItems: number;\r\n  currentSeanceData: any;\r\n  tontineData: any;\r\n\r\n  constructor(\r\n    private modatCtrl: ModalController,\r\n    private tontine: TontineService,\r\n    private debt: DebtsManagerService\r\n  ) {\r\n    this.currentProofsData = this.debt.getDebtsData();\r\n    this.tontineData = this.tontine.getCurrentTontineData();\r\n    this.loading = false;\r\n    this.myProofs = [];\r\n    this.allData = [];\r\n    this.nbItems = 10;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loading = true;\r\n    this.getProofs();\r\n  }\r\n\r\n  // close the modal\r\n  closeContribute() {\r\n    this.modatCtrl.dismiss(null, 'cancel');\r\n  }\r\n\r\n  // Get the list of proofs of a members\r\n  getProofs() {\r\n    let dataResp: any[] = [];\r\n    dataResp = dataResp.concat({ type: 'bank', data: this.currentProofsData.proof[0].liste_traditional_banking_proof });\r\n    dataResp = dataResp.concat({ type: 'online', data: this.currentProofsData.proof[0].liste_online_wallet_proof });\r\n    dataResp = dataResp.concat({ type: 'checkout', data: this.currentProofsData.proof[0].liste_pay_with_caisse_tontine_proof });\r\n    this.allData = dataResp;\r\n    if (this.allData.length > this.nbItems) {\r\n      this.myProofs = [];\r\n      for (let i = 0; i < this.nbItems; i++) {\r\n        this.myProofs.push(this.allData[this.myProofs.length]);\r\n      }\r\n    } else {\r\n      this.myProofs = this.allData;\r\n    }\r\n    this.loading = false;\r\n  }\r\n\r\n  // Infinite scroll data\r\n  infinteScrollData(event) {\r\n    setTimeout(() => {\r\n      for (let i = 0; i < this.nbItems; i++) {\r\n        if (this.myProofs.length < this.allData.length) {\r\n          this.myProofs.push(this.allData[this.myProofs.length]);\r\n        } else if (this.myProofs.length === this.allData.length) {\r\n          event.target.disabled = true;\r\n        }\r\n      }\r\n      event.target.complete();\r\n    }, 500);\r\n  }\r\n\r\n  showProof(proofsData: any) {\r\n    this.modatCtrl\r\n      .create({\r\n        component: ViewProofComponent,\r\n        componentProps: {\r\n          proof: proofsData\r\n        }\r\n      })\r\n      .then(modalEl => modalEl.present());\r\n  }\r\n\r\n}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title class=\\\"ion-text-center\\\">{{ 'LIST_OF_PROOFS' | translate }}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"session-proof\\\">\\r\\n  <p class=\\\"ion-text-center\\\"  *ngIf=\\\"loading\\\">\\r\\n    <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n  </p>\\r\\n  <ion-grid *ngIf=\\\"myProofs && myProofs.length > 0\\\">\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-list>     \\r\\n          <div *ngFor=\\\"let proof of myProofs\\\">\\r\\n          <ion-item  *ngIf=\\\"proof.type === 'bank'\\\">          \\r\\n            <ion-label>            \\r\\n              <p>\\r\\n                <ion-text class=\\\"ion-float-left\\\"><b>{{ 'DATE_TEXT' | translate }}: </b>{{ proof.data && proof.data.updated_at ? proof.updated_at.split(' ')[0] : '' }}</ion-text>\\r\\n                <ion-text  class=\\\"ion-float-right\\\"><b>{{'BY_TEXT' | translate}}: </b>{{ 'TRADITIONNAL_BANKING' | translate  }}</ion-text>\\r\\n              </p>\\r\\n              <p *ngIf=\\\"proof.description\\\">\\r\\n                <ion-text class=\\\"ion-float-left\\\"><b>{{'DESCRIPTION_TEXT' | translate}}: </b>{{ proof.data && proof.data.description ? proof.data.description : ''  }}</ion-text>\\r\\n              </p>\\r\\n              <ion-text color=\\\"warning\\\">\\r\\n                <h3>{{'AMOUNT_TEXT' | translate }}: {{ proof && proof.montant ? (proof.montant | commadumper) : 0  }}{{tontineData.tontine && tontineData.tontine.monnaie ? tontineData.tontine.monnaie :'' }}\\r\\n                </h3>\\r\\n              </ion-text>\\r\\n              <p class=\\\"ion-text-right\\\">\\r\\n                <a (click)=\\\"showProof(proof)\\\" class=\\\"ion-text-capitalize\\\">\\r\\n                  {{'DEBT_VIEW_PROOF' | translate}}\\r\\n                </a>\\r\\n              </p>            \\r\\n            </ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item  *ngIf=\\\"proof.type === 'online'\\\">          \\r\\n            <ion-label>            \\r\\n              <p>\\r\\n                <ion-text class=\\\"ion-float-left\\\"><b>{{ 'DATE_TEXT' | translate }}: </b>{{ proof.data && proof.data.updated_at ? proof.data.updated_at.split(' ')[0] : '' }}</ion-text>\\r\\n                <ion-text *ngIf=\\\"proof.typepaiement_name\\\" class=\\\"ion-float-right\\\"><b>{{'BY_TEXT' | translate}}: </b>{{ proof.data && proof.data.typepaiement_name ? proof.data.typepaiement_name : ''  }}</ion-text>\\r\\n              </p>\\r\\n              <ion-text color=\\\"warning\\\">\\r\\n                <h3>{{'AMOUNT_TEXT' | translate }}: {{ proof.data && proof.data.montant ? (proof.data.montant | commadumper) : 0  }}{{tontineData.tontine && tontineData.tontine.monnaie ? tontineData.tontine.monnaie :'' }}\\r\\n                </h3>\\r\\n              </ion-text>\\r\\n              <p class=\\\"ion-text-right\\\">\\r\\n                <a (click)=\\\"showProof(proof.data.receipt)\\\" class=\\\"ion-text-capitalize\\\">\\r\\n                  {{'DEBT_VIEW_PROOF' | translate}}\\r\\n                </a>\\r\\n              </p>            \\r\\n            </ion-label>\\r\\n          </ion-item>\\r\\n\\r\\n          <ion-item  *ngIf=\\\"proof.type === 'checkout'\\\">          \\r\\n            <ion-label>            \\r\\n              <p>\\r\\n                <ion-text class=\\\"ion-float-left\\\"><b>{{ 'DATE_TEXT' | translate }}: </b>{{ proof.data && proof.data.updated_at ? proof.data.updated_at.split(' ')[0] : '' }}</ion-text>\\r\\n                <ion-text *ngIf=\\\"proof.typepaiement_name\\\" class=\\\"ion-float-right\\\"><b>{{'BY_TEXT' | translate}}: </b>{{ proof.data && proof.data.method_payment_name ? (proof.data.method_payment_name | translate) : ''  }}</ion-text>\\r\\n              </p>\\r\\n              <p *ngIf=\\\"proof.data.caisse_name\\\">\\r\\n                <ion-text class=\\\"ion-float-left\\\"><b>{{'DESCRIPTION_TEXT' | translate}}: </b>{{ proof.data && proof.data.caisse_name ? (proof.data.caisse_name | translate) : ''  }}</ion-text>\\r\\n              </p>\\r\\n              <ion-text color=\\\"warning\\\">\\r\\n                <h3>{{'AMOUNT_TEXT' | translate }}: {{ proof.data&& proof.data.montant ? (proof.data.montant | commadumper) : 0  }}{{tontineData.tontine && tontineData.tontine.monnaie ? tontineData.tontine.monnaie :'' }}\\r\\n                </h3>\\r\\n              </ion-text>            \\r\\n            </ion-label>\\r\\n          </ion-item>\\r\\n        </div>\\r\\n        </ion-list>\\r\\n      </ion-col>      \\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n  <div  *ngIf=\\\"myProofs && myProofs.length === 0  && !loading\\\">\\r\\n    <p class=\\\"ion-padding ion-text-center\\\" >{{ 'PROOFS_EMPTY_MSG' | translate}}</p>\\r\\n  </div>\\r\\n\\r\\n  <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"infinteScrollData($event)\\\">\\r\\n    <ion-infinite-scroll-content\\r\\n      loadingSpinner=\\\"bubbles\\\"\\r\\n      loadingText=\\\"{{ 'M_LOADING_MORE_DATA' | translate }}\\\">\\r\\n    </ion-infinite-scroll-content>\\r\\n  </ion-infinite-scroll>\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"ion-padding ion-text-center\\\">\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n          <ion-button expand=\\\"full\\\" \\r\\n                fill=\\\"outline\\\"\\r\\n                color=\\\"warning\\\" \\r\\n                class=\\\"ion-text-uppercase\\\"\\r\\n                shape=\\\"round\\\" (click)=\\\"closeContribute()\\\">\\r\\n            {{ 'CANCEL_TEXT' | translate }}\\r\\n          </ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-footer>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYXNobW9kZS1sb2FuLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<form [formGroup]=\\\"userPayMethodForm\\\">\\r\\n  <p class=\\\"ion-text-center\\\"  *ngIf=\\\"loadingOperator\\\">\\r\\n    <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n  </p>\\r\\n<ion-grid>\\r\\n  <ion-row>\\r\\n    <ion-col size=\\\"12\\\">\\r\\n      <ion-card class=\\\"paidmode\\\">\\r\\n        <ion-card-content class=\\\"ion-text-center\\\">    \\r\\n          <ion-row>\\r\\n            <ion-col size=\\\"12\\\">\\r\\n              <ion-item>\\r\\n                <ion-label>{{'COUNTRY_TEXT' | translate}}</ion-label>\\r\\n                <ion-select (ionChange)=\\\"updateCurrencyCountry(userPayMethodForm.value.country_id)\\\" formControlName=\\\"country_id\\\">\\r\\n                  <ion-select-option [value]=\\\"country.country_id\\\" *ngFor=\\\"let country of states\\\">{{ country.country_label }}</ion-select-option>          \\r\\n                </ion-select>\\r\\n              </ion-item>   \\r\\n              <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.country_id\\\">\\r\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"country.hasError(validation.type) && (country.dirty || country.touched)\\\">\\r\\n                    <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                    {{ validation.message }}\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>     \\r\\n            </ion-col>\\r\\n          </ion-row>       \\r\\n            <ion-row class=\\\"ion-justify-content-end\\\" *ngIf=\\\"userPayMethodForm.value.country_id && paymentMethods && paymentMethods.length > 0\\\">\\r\\n              <ion-col size=\\\"4\\\">\\r\\n                <ion-img [src]=\\\"paymentMethods&&paymentMethods[userPayMethodForm.value.typePaymentIndex] ? paymentMethods[userPayMethodForm.value.typePaymentIndex].logo : ' '\\\" class=\\\"logooperator\\\"></ion-img>\\r\\n              </ion-col>\\r\\n            </ion-row>  \\r\\n            <ion-row *ngIf=\\\"userPayMethodForm.value.country_id && paymentMethods && paymentMethods.length > 0\\\">\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label>{{ 'USER_PROFILE_TEXT4' | translate }}</ion-label>\\r\\n                  <ion-select (ionChange)=\\\"updatePaymentMethod(userPayMethodForm.value.typePaymentIndex)\\\" formControlName=\\\"typePaymentIndex\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let operator of paymentMethods; let operatorId = index\\\" [value]=\\\"operatorId\\\">{{ operator.name }}</ion-select-option>           \\r\\n                  </ion-select>\\r\\n                </ion-item>   \\r\\n                <div class=\\\"validation-errors\\\">\\r\\n                  <ng-container *ngFor=\\\"let validation of validationMessages.payementtype\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"payementtype.hasError(validation.type) && (payementtype.dirty || payementtype.touched)\\\">\\r\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                      {{ validation.message }}\\r\\n                    </div>\\r\\n                  </ng-container>\\r\\n                </div>   \\r\\n              </ion-col>\\r\\n            </ion-row> \\r\\n     \\r\\n            <ion-row class=\\\"ion-padding-bottom\\\">\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\" >{{ 'AMOUNT_TEXT' | translate }}</ion-label>\\r\\n                  <ion-input  type=\\\"number\\\" formControlName=\\\"montant\\\"></ion-input>\\r\\n                  <span slot=\\\"end\\\" class=\\\"slot-prefix ion-no-margin\\\"> {{ contributionData.device_name }} </span>\\r\\n                </ion-item> \\r\\n                <div class=\\\"validation-errors\\\">\\r\\n                  <ng-container *ngFor=\\\"let validation of validationMessages.amount\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"montantContributeError.hasError(validation.type) && (montantContributeError.dirty || montantContributeError.touched)\\\">\\r\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                      {{ validation.message }}\\r\\n                    </div>\\r\\n                  </ng-container>\\r\\n                </div>          \\r\\n              </ion-col>\\r\\n            </ion-row> \\r\\n            <ion-row class=\\\"ion-padding-bottom\\\">\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\" >{{ 'REASON_TEXT' | translate }}</ion-label>\\r\\n                  <ion-input  type=\\\"text\\\" formControlName=\\\"reason\\\"></ion-input>\\r\\n                </ion-item> \\r\\n                <div class=\\\"validation-errors\\\">\\r\\n                  <ng-container *ngFor=\\\"let validation of validationMessages.reason\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"reason.hasError(validation.type) && (reason.dirty || reason.touched)\\\">\\r\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                      {{ validation.message }}\\r\\n                    </div>\\r\\n                  </ng-container>\\r\\n                </div>          \\r\\n              </ion-col>\\r\\n              <ion-col  *ngIf=\\\"userPayMethodForm.value.receipt && userPayMethodForm.value.type_payment_name !== 'CASH'\\\" size=\\\"12\\\" class=\\\"ion-padding\\\"> \\r\\n                <ion-thumbnail>\\r\\n                  <img src=\\\"{{userPayMethodForm.value.receipt}}\\\">\\r\\n                </ion-thumbnail>\\r\\n              </ion-col>\\r\\n              <ion-col size=\\\"12\\\" class=\\\"ion-padding\\\"  *ngIf=\\\"userPayMethodForm.value.type_payment_name !== 'CASH'\\\">\\r\\n                <ion-button  color=\\\"primary\\\" size=\\\"medium\\\" class=\\\"ion-text-capitalize\\\" (click)=\\\"getProof()\\\">\\r\\n                  <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n                  {{ 'PROF_PAYMENT' | translate }}\\r\\n               </ion-button>\\r\\n              </ion-col>\\r\\n            </ion-row>                       \\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>      \\r\\n  </ion-row>\\r\\n  <ion-row>\\r\\n    <svg height=\\\"0\\\" width=\\\"0\\\" viewBox=\\\"0 0 27.7 28.93\\\">\\r\\n      <defs>\\r\\n        <clipPath id=\\\"pay-btn-shape1\\\" >\\r\\n          <path d=\\\"M2.57,17.21A11.18,11.18,0,0,1,9.17,5.77h.06l.17-.22.11-.23c-1-.73-1.56-1.42-1.39-2,.42-1.32,5-1.17,10.22.33S27.43,7.47,27,8.81c-.16.48-.86.76-1.88.86h0v.1a5,5,0,0,0,.08.66,3.77,3.77,0,0,0,.1.46l.07.23c2,4,1.7,8.37-1.73,12.53a12.23,12.23,0,0,1-18.42-.1A11.55,11.55,0,0,1,2.57,17.21Z\\\" />            \\r\\n        </clipPath>        \\r\\n      </defs>\\r\\n    </svg>\\r\\n    <ion-col size=\\\"12\\\" class=\\\"ion-text-center wrap-pay-btn\\\" *ngIf=\\\"userPayMethodForm.valid && userPayMethodForm.value.montant <=  balance\\\"  (click)=\\\"showPayment(userPayMethodForm.value)\\\">\\r\\n      <svg id=\\\"pay-btn1\\\" preserveAspectRatio=\\\"xMidYMid slice\\\" viewBox=\\\"0 0 27.7 28.93\\\">\\r\\n        <path  class=\\\"arc-part\\\" d=\\\"M5.91,6.89a12.25,12.25,0,0,0-4.14,9.27,11.14,11.14,0,0,0,.16,1.7,12.82,12.82,0,0,0,.42,1.66c.08.27.19.54.29.8A8.24,8.24,0,0,0,3,21.1a14.85,14.85,0,0,0,.82,1.5,12.25,12.25,0,0,0,3.5,3.62,13.49,13.49,0,0,0,8,2.21,15.81,15.81,0,0,0,1.7-.17,13.74,13.74,0,0,0,1.69-.37,12.79,12.79,0,0,0,5.65-3.5,11.63,11.63,0,0,0,1.88-2.83,12.11,12.11,0,0,0,1.06-3.27,11,11,0,0,0-.94-6.84A10.42,10.42,0,0,1,27.23,13a10.65,10.65,0,0,1,.63,1.71,11.3,11.3,0,0,1,.22,3.64,12.78,12.78,0,0,1-.94,3.56,12.11,12.11,0,0,1-1.88,3.17,12.84,12.84,0,0,1-1.31,1.33,13.32,13.32,0,0,1-1.49,1.12,14,14,0,0,1-3.37,1.59,13,13,0,0,1-1.82.43,17.17,17.17,0,0,1-1.88.21,14.31,14.31,0,0,1-3.77-.27,14.55,14.55,0,0,1-5.12-2.19,11.53,11.53,0,0,1-1.41-1.17A13.92,13.92,0,0,1,.92,18a10.3,10.3,0,0,1-.08-1.88A12.36,12.36,0,0,1,3.31,9.34,10.42,10.42,0,0,1,5.91,6.89ZM7.27,3.35a1.52,1.52,0,0,1-.08-.78,1.82,1.82,0,0,1,.32-.76A2.29,2.29,0,0,1,9,1,6.31,6.31,0,0,1,9.78.89h2.36a25.76,25.76,0,0,1,6.19,1,23.94,23.94,0,0,1,5.74,2.5,20.58,20.58,0,0,1,2.56,1.83,3.84,3.84,0,0,1,1,1.27,1.29,1.29,0,0,1,.08.84,1.24,1.24,0,0,1-.47.64,1.21,1.21,0,0,0,.29-.67,1,1,0,0,0-.21-.65,3.64,3.64,0,0,0-1.07-.94c-.86-.53-1.75-1-2.66-1.47A34.29,34.29,0,0,0,18,3.06,38.16,38.16,0,0,0,12,1.84c-.5-.06-1-.11-1.52-.15l-.73-.13a6.42,6.42,0,0,0-.73,0A1.88,1.88,0,0,0,7.77,2,1.57,1.57,0,0,0,7.27,3.35Z\\\" />\\r\\n        <g class=\\\"pay-btn-border\\\">\\r\\n          <rect x=\\\"1.35\\\" y=\\\"0.56\\\" width=\\\"25.09\\\" height=\\\"26.44\\\" class=\\\"inner-pot\\\" />\\r\\n        </g>\\r\\n        <path class=\\\"pot-entry\\\" d=\\\"M22,6.27c-1.13-.38-2.45-.85-3.86-1.22-1-.28-2.17-.57-3.11-.75-2.64-.47-4.52-.57-4.62-.09-.09.19.19.57.75.85A24.19,24.19,0,0,0,17.46,7.4a22.19,22.19,0,0,0,7.07,1.13c.38-.09.66-.19.66-.28C25.32,7.9,24.05,7.15,22,6.27Z\\\" />\\r\\n        <text class=\\\"pay-text\\\"><tspan style=\\\"letter-spacing: -0.05859375em\\\">P</tspan><tspan x=\\\"4.94\\\" y=\\\"0\\\" style=\\\"letter-spacing: -0.087890625em\\\">A</tspan><tspan x=\\\"10.56\\\" y=\\\"0\\\">Y</tspan></text>\\r\\n      </svg>     \\r\\n      <div class=\\\"glow-wrap\\\">\\r\\n        <i class=\\\"glow\\\"></i>\\r\\n      </div>          \\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-grid>\\r\\n</form> \\r\\n\";","import { Component } from '@angular/core';\r\nimport { Platform } from '@ionic/angular';\r\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\r\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LocationService } from './shared/service/location.service';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { ContributionService } from './dashboard/my-tontines/services/contribution.service';\r\nimport { ErrorService } from './shared/service/error.service';\r\nimport { UserService } from './dashboard/user/service/user.service';\r\nimport { OneSignal } from '@ionic-native/onesignal/ngx';\r\nimport { AuthService } from './auth/service/auth.service';\r\nimport { LocalStorageService } from './shared/service/local-storage.service';\r\nimport { GoogleAnalytics } from '@ionic-native/google-analytics/ngx';\r\n\r\ninterface CurrentLanguage {\r\n  lang: string;\r\n  name: string;\r\n  active: boolean;\r\n  countryId: number;\r\n  langueData: any;\r\n  translationData: any;\r\n  index: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: 'app.component.html',\r\n  styleUrls: ['app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  defaultLang: string;\r\n  countries: any;\r\n  navLinksArray = []; // store route links as the user navigates the app\r\n  currentLang: CurrentLanguage[];\r\n  constructor(\r\n    private platform: Platform,\r\n    private splashScreen: SplashScreen,\r\n    private userService: UserService,\r\n    private googleAnalytic: GoogleAnalytics,\r\n    private auth: AuthService,\r\n    private contribution: ContributionService,\r\n    private statusBar: StatusBar,\r\n    private translate: TranslateService,\r\n    private location: LocationService,\r\n    private router: Router,\r\n    private oneSignal: OneSignal,\r\n    private error: ErrorService,\r\n    private localStorage: LocalStorageService\r\n  ) {\r\n\r\n    // set the token state\r\n    this.localStorage.setItem('startRefreshToken', 'false');\r\n    this.contribution.getTypeContributionTontine(true);\r\n\r\n    // Update the current language posistion\r\n    this.getLanguages(false);\r\n\r\n    // set the user language\r\n    this.setDefaultUserLang();\r\n   \r\n    // Subcribe routes\r\n    this.router.events.subscribe(event => {\r\n      const url = this.router.url\r\n      if (url === '/dashboard') {\r\n        this.navLinksArray = [];\r\n      } else {\r\n        if (event instanceof NavigationEnd) {\r\n          const isCurrentUrlSaved = this.navLinksArray.find((item) => { return item === url });\r\n          if (!isCurrentUrlSaved) this.navLinksArray.push(url);\r\n        }\r\n      }\r\n    });\r\n    // Listen the hardware back button\r\n    this.hardwareBackButton();\r\n\r\n    // Get loctation data\r\n    this.getCountries(true);\r\n    this.getWordCountries(true);\r\n\r\n    // Set app sesion timer\r\n    const currentDate = new Date();\r\n    this.auth.removeAppLastSession();\r\n    this.auth.setAppLastSession(currentDate.getTime());\r\n    this.initializeApp();\r\n    this.platform.ready().then(() => {\r\n      // Register to push notification on OneSignal\r\n      this.oneSignal.startInit('0089a799-c464-46bd-b92d-a40cd6a7d5b8', '627103336519');\r\n      this.oneSignal.inFocusDisplaying(this.oneSignal.OSInFocusDisplayOption.InAppAlert);\r\n      this.oneSignal.handleNotificationReceived().subscribe(() => {\r\n        // do something when notification is received\r\n      });\r\n      this.oneSignal.handleNotificationOpened().subscribe(() => {\r\n        // do something when a notification is opened\r\n      });\r\n      this.oneSignal.endInit();  \r\n\r\n       // add the google analytics\r\n       this.googleAnalytic.startTrackerWithId('app-analytics-30260')\r\n      .then(() => {\r\n       this.googleAnalytic.trackView('Toupesu app');\r\n       alert('Google Analytic ok');\r\n       // Tracker is ready\r\n       // You can now track pages or set additional information such as AppVersion or UserId\r\n      })\r\n      .catch(e =>{});\r\n     \r\n      });\r\n\r\n  }\r\n\r\n  // set the default user language\r\n  setDefaultUserLang() {\r\n    this.translate.setDefaultLang('en');\r\n    let currentLang = this.location.getCurrentUserLanguage();\r\n    currentLang = currentLang && currentLang.code_langue ? currentLang.code_langue.toLocaleLowerCase() : '';\r\n    let sessionLang = '';\r\n    sessionLang =  this.userService.getCurrentUserSessionLanguage();\r\n    let browserLang = this.translate.getBrowserLang();\r\n    browserLang = browserLang.toLocaleLowerCase();\r\n    this.defaultLang = sessionLang ?  sessionLang : currentLang ? currentLang : browserLang;   \r\n    this.translate.use(this.defaultLang && this.defaultLang.match('en|fr|en_sa') ? this.defaultLang : 'en');\r\n\r\n    // set the default language of the user\r\n    if (!sessionLang && this.userService.getUserToken()) {\r\n      this.error.updateLang(this.defaultLang);\r\n    } \r\n  }\r\n\r\n  // Get the list of language of the current location\r\n  getLanguages(refresher: boolean) {\r\n    this.location.getLanguages(refresher).then((languagesData: any) => {\r\n      const currentLang = this.location.getCurrentUserLanguage();\r\n      const hasCurrentLang = currentLang && currentLang.code_langue ? true : false;\r\n      this.currentLang = [];\r\n      if (languagesData) {\r\n        languagesData.forEach(data => {\r\n          if (data && data.langue) {\r\n            this.currentLang.push({\r\n              lang: data.langue.code_langue,\r\n              name: data.langue.name,\r\n              active: hasCurrentLang && data.langue.code_langue === currentLang.code_langue ?\r\n                true : !hasCurrentLang && data.langue.default_langue === 'yes' ? true : false,\r\n              countryId: data.langue.country_id,\r\n              langueData: data.langue,\r\n              translationData: data.keywords,\r\n              index: languagesData.indexOf(data)\r\n            });\r\n          }\r\n        });\r\n        this.currentLang.forEach(data => {\r\n          if (data && data.active) {\r\n            this.location.setCurrentUserLanguage(data.langueData);\r\n          }\r\n        });\r\n      } else {\r\n        this.currentLang = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  // Listen hardware back button\r\n  hardwareBackButton() {\r\n    this.platform.backButton.subscribe(() => {\r\n      if (this.navLinksArray.length > 1) {\r\n        this.navLinksArray.pop();\r\n        const index = this.navLinksArray.length + 1;\r\n        const url = this.navLinksArray[index];\r\n        this.router.navigate([url])\r\n      }\r\n    });\r\n  }\r\n\r\n  // Initialize the app\r\n  initializeApp() {\r\n    this.platform.ready().then(() => {\r\n      this.statusBar.styleDefault();\r\n      this.splashScreen.hide();\r\n      // Kill all background services when the app exit\r\n      setTimeout(() => {\r\n        this.updateDeviceToken();\r\n      }, 3000);\r\n    });\r\n  }\r\n\r\n  // Get the list of countries\r\n  getCountries(refresher: boolean) {\r\n    this.location.getAllCountries(refresher).then((countries: any) => {});\r\n  }\r\n\r\n  // Get all the word countries\r\n  getWordCountries(refresh) {\r\n    this.location.getWordCountries(refresh).then((countries: any) => {});\r\n  }\r\n\r\n  // update the device token if a user a connection\r\n  updateDeviceToken() {\r\n    if (this.userService.getUserToken()) {\r\n      this.oneSignal.getIds().then(ids => {\r\n        if (ids && ids.userId) {\r\n          this.userService.saveDevice({ device_phone: ids.userId });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';import { UserService } from 'src/app/dashboard/user/service/user.service';\r\n;\r\n\r\n\r\ninterface PaymentMethod {\r\n  id: number;\r\n  logo: string;\r\n  currency: string;\r\n  country_id: number;\r\n  name: string;\r\n  placeholder ?: string;\r\n  label?: string;\r\n  handling_fees?: number;\r\n  type_handling_fees?: string;\r\n  type ?: string\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PaymentGlobalDataService {\r\n\r\n  states: any;\r\n\r\n  constructor(\r\n    private translate: TranslateService,\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  // get the default payment method\r\n  getDefaultPaymentMethod() {\r\n    const userPayment = this.userService.getUserpaymentMethod();\r\n    let currentPayment = null;\r\n    if (userPayment && userPayment.length > 0) {\r\n      userPayment.forEach(payment => {\r\n        if (payment.isActive === 1) {\r\n          currentPayment = payment;\r\n        }\r\n      });\r\n    }\r\n\r\n    return currentPayment;\r\n  }\r\n\r\n  // remove space\r\n  removeInputSpace(formValue: any) {\r\n    const input = String(formValue);\r\n    return input.replace(/\\s/g, \"\");\r\n  }\r\n\r\n  // check if it is mobile operator\r\n  isMobileOperator(paymentData: any) {\r\n    let isMobile = false;\r\n    if (paymentData && paymentData.name && paymentData.name !== 'PAYPAL' && paymentData.name !== 'OZOW' && paymentData.name !== 'WALLET') {\r\n      isMobile = true;\r\n    }\r\n    return isMobile;\r\n  }\r\n\r\n  // check if paypal message is define\r\n  hasPaypalMessage(paypalMessage: string, paymentData: any) {\r\n    let canShow = false;\r\n    if (paypalMessage && paymentData && paymentData.name && paymentData.name === 'PAYPAL') {\r\n      canShow = true;\r\n    }\r\n    return canShow;\r\n  }\r\n\r\n  // check if can show paypal button\r\n  hasPaypalButton(paypal_initialized: boolean, paymentData: any) {\r\n    let canShow = false;\r\n    if (!paypal_initialized || paymentData && paymentData.name && paymentData.name === 'PAYPAL') {\r\n      canShow = true;\r\n    }\r\n    return canShow;\r\n  }\r\n\r\n  // can make payment \r\n  canShowPayment(formValid: boolean, paymentData: any, phone: string, hasPhoneError: boolean) {\r\n    let canpay = false;\r\n    if (formValid && paymentData && paymentData.name && (paymentData.name === 'WALLET' || paymentData.name === 'OZOW' || (phone && !hasPhoneError && (paymentData.name === 'ORANGE MONEY' || paymentData.name === 'MTN MOBILE MONEY')))) {\r\n      canpay = true;\r\n    }\r\n    return canpay;\r\n  }\r\n\r\n  // can make recharge\r\n  canMakeRecharge(formValid: boolean, paymentData: any, phone: string, hasPhoneError: boolean) {\r\n    let canpay = false;\r\n    if ((formValid && paymentData && paymentData.name &&\r\n      (paymentData.name !== 'PAYPAL' || (phone && !hasPhoneError && (paymentData.name === 'ORANGE MONEY' || paymentData.name === 'MTN MOBILE MONEY'))))) {\r\n      canpay = true;\r\n    }\r\n    return canpay;\r\n  }\r\n\r\n  // Format payment method response\r\n  formatPaymentMethodResponseContribution(paymentMethodsData: any) {\r\n    const paymentMethods: PaymentMethod[] = [];\r\n\r\n    paymentMethodsData.forEach(payment => {\r\n\r\n      if (payment.active === 1) {\r\n        switch (payment.name) {\r\n\r\n          case 'ORANGE MONEY':\r\n            this.translate.get('REGISTER_MPHONE').subscribe(value => {\r\n              paymentMethods.push({\r\n                id: payment.id, country_id: payment.country_id, logo: 'assets/orange.jpg',\r\n                currency: payment.currency, name: payment.name, placeholder: value,\r\n                handling_fees: payment.handling_fees,\r\n                type_handling_fees: payment.type_handling_fees,\r\n                type: 'OPERATOR'\r\n              });\r\n            });\r\n            break;\r\n\r\n          case 'MTN MOBILE MONEY':\r\n            this.translate.get('REGISTER_MPHONE').subscribe(value => {\r\n              paymentMethods.push({\r\n                id: payment.id, country_id: payment.country_id, logo: 'assets/mtn.jpg',\r\n                currency: payment.currency, name: payment.name, placeholder: value,\r\n                handling_fees: payment.handling_fees,\r\n                type_handling_fees: payment.type_handling_fees\r\n              });\r\n            });\r\n            break;\r\n\r\n          case 'PAYPAL':\r\n            this.translate.get('EMAIL_TEXT').subscribe(value => {\r\n              paymentMethods.push({\r\n                id: payment.id, country_id: payment.country_id, logo: 'assets/paypal.jpg',\r\n                currency: payment.currency, name: payment.name, placeholder: value,\r\n                handling_fees: payment.handling_fees,\r\n                type_handling_fees: payment.type_handling_fees,\r\n                type: 'OPERATOR'\r\n              });\r\n            });\r\n            break;\r\n\r\n          case 'OZOW':\r\n            this.translate.get('EMAIL_TEXT').subscribe(value => {\r\n              paymentMethods.push({\r\n                id: payment.id, country_id: payment.country_id, logo: 'assets/ozow.png',\r\n                currency: payment.currency, name: payment.name, placeholder: value,\r\n                handling_fees: payment.handling_fees,\r\n                type_handling_fees: payment.type_handling_fees,\r\n                type: 'OPERATOR'\r\n              });\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    });\r\n\r\n    return paymentMethods;\r\n  }\r\n\r\n  // Format the payment response for debt\r\n  formatPaymentMethodForDebt(paymentMethodsData: any) {\r\n    const paymentMethods: PaymentMethod[] = [];\r\n    \r\n    paymentMethodsData.forEach(payment => {\r\n\r\n      if (payment.active === 1) {\r\n        \r\n        switch (payment.name) {\r\n\r\n          case 'ORANGE MONEY':\r\n            this.translate.get('REGISTER_MPHONE').subscribe(value => {\r\n              paymentMethods.push({\r\n                id: payment.id, country_id: payment.country_id, logo: 'assets/orange.jpg',\r\n                currency: payment.currency, name: payment.name, placeholder: value,\r\n                handling_fees :  payment.handling_fees,\r\n                type_handling_fees : payment.type_handling_fees\r\n              });\r\n            });\r\n            break;\r\n\r\n          case 'MTN MOBILE MONEY':\r\n            this.translate.get('REGISTER_MPHONE').subscribe(value => {\r\n              paymentMethods.push({\r\n                id: payment.id, country_id: payment.country_id, logo: 'assets/mtn.jpg',\r\n                currency: payment.currency, name: payment.name, placeholder: value,\r\n                handling_fees :  payment.handling_fees,\r\n                type_handling_fees : payment.type_handling_fees\r\n              });\r\n            });\r\n            break;\r\n\r\n          case 'PAYPAL':\r\n            this.translate.get('EMAIL_TEXT').subscribe(value => {\r\n              paymentMethods.push({\r\n                id: payment.id, country_id: payment.country_id, logo: 'assets/paypal.jpg',\r\n                currency: payment.currency, name: payment.name, placeholder: value,\r\n                handling_fees :  payment.handling_fees,\r\n                type_handling_fees : payment.type_handling_fees\r\n              });\r\n            });\r\n            break;\r\n\r\n          case 'OZOW':\r\n            this.translate.get('EMAIL_TEXT').subscribe(value => {\r\n              paymentMethods.push({\r\n                id: payment.id, country_id: payment.country_id, logo: 'assets/ozow.png',\r\n                currency: payment.currency, name: payment.name, placeholder: value,\r\n                handling_fees :  payment.handling_fees,\r\n                type_handling_fees : payment.type_handling_fees\r\n              });\r\n            });\r\n            break;\r\n\r\n            case 'CASH':\r\n              paymentMethods.push({\r\n                id: payment.id, country_id: payment.country_id, logo: 'assets/wallet-icon.svg',\r\n                currency: payment.currency, name: payment.name, placeholder: '',\r\n                handling_fees :  payment.handling_fees,\r\n                type_handling_fees : payment.type_handling_fees\r\n              });\r\n              break;    \r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    });\r\n\r\n    return paymentMethods;\r\n  }\r\n\r\n\r\n  // format payment method for recharge\r\n  formatPaymentMethodRecharge(paymentMethodsData: any, tontine: any) {\r\n    const paymentMethods: PaymentMethod[] = [];\r\n    \r\n    paymentMethodsData.forEach(payment => {\r\n\r\n      if (payment.active === 1) {\r\n        switch (payment.name) {\r\n\r\n          case 'ORANGE MONEY':\r\n            this.translate.get('REGISTER_MPHONE').subscribe(value => {\r\n              paymentMethods.push({\r\n                id: payment.id, country_id: payment.country_id, logo: 'assets/orange.jpg',\r\n                currency: payment.currency, name: payment.name, placeholder: value,\r\n                handling_fees: payment.handling_fees,\r\n                type_handling_fees: payment.type_handling_fees,\r\n                type: 'OPERATOR'\r\n              });\r\n            });\r\n            break;\r\n\r\n          case 'MTN MOBILE MONEY':\r\n            this.translate.get('REGISTER_MPHONE').subscribe(value => {\r\n              paymentMethods.push({\r\n                id: payment.id, country_id: payment.country_id, logo: 'assets/mtn.jpg',\r\n                currency: payment.currency, name: payment.name, placeholder: value,\r\n                handling_fees: payment.handling_fees,\r\n                type_handling_fees: payment.type_handling_fees,\r\n                type: 'OPERATOR'\r\n              });\r\n            });\r\n            break;\r\n\r\n          case 'PAYPAL':\r\n            this.translate.get('EMAIL_TEXT').subscribe(value => {\r\n              paymentMethods.push({\r\n                id: payment.id, country_id: payment.country_id, logo: 'assets/paypal.jpg',\r\n                currency: payment.currency, name: payment.name, placeholder: value,\r\n                handling_fees: payment.handling_fees,\r\n                type_handling_fees: payment.type_handling_fees,\r\n                type: 'OPERATOR'\r\n              });\r\n            });\r\n            break;\r\n\r\n          case 'OZOW':\r\n            this.translate.get('EMAIL_TEXT').subscribe(value => {\r\n              paymentMethods.push({\r\n                id: payment.id, country_id: payment.country_id, logo: 'assets/ozow.png',\r\n                currency: payment.currency, name: payment.name, placeholder: value,\r\n                handling_fees: payment.handling_fees,\r\n                type_handling_fees: payment.type_handling_fees,\r\n                type: 'OPERATOR'\r\n              });\r\n            });\r\n            break;\r\n\r\n          case 'CASH':\r\n            if (tontine && tontine.tontine && tontine.tontine.tontine_payment_type_id === 1) {\r\n              paymentMethods.push({\r\n                id: payment.id, country_id: payment.country_id, logo: 'assets/wallet-icon.svg',\r\n                currency: payment.currency, name: payment.name, placeholder: '',\r\n                handling_fees: payment.handling_fees,\r\n                type_handling_fees: payment.type_handling_fees,\r\n                type: 'CASH'\r\n              });\r\n            }\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    });\r\n\r\n    return paymentMethods;\r\n  }\r\n\r\n\r\n  // format withdraw data\r\n  formatWithdrawData(paymentData: any) {\r\n    const paymentMethods: PaymentMethod[] = [];\r\n    paymentData.forEach(payment => {\r\n      if (payment.active === 1) {\r\n        switch (payment.name) {\r\n\r\n          case 'MTN MOBILE MONEY':\r\n            paymentMethods.push({\r\n              id: payment.id, country_id: payment.country_id,\r\n              logo: 'assets/mtn.jpg', name: payment.name, label: payment.name, currency: payment.currency\r\n            });\r\n            break;\r\n\r\n          case 'ORANGE MONEY':\r\n            paymentMethods.push({\r\n              id: payment.id, country_id: payment.country_id,\r\n              logo: 'assets/orange.jpg', name: payment.name, label: payment.name, currency: payment.currency\r\n            });\r\n            break;\r\n\r\n          case 'PAYPAL':\r\n            paymentMethods.push({\r\n              id: payment.id, country_id: payment.country_id,\r\n              logo: 'assets/paypal.jpg', name: payment.name, label: `${payment.name}(${payment.currency})`, currency: payment.currency\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    });\r\n    return paymentMethods;\r\n  }\r\n\r\n  // Format countries data \r\n  formatCountriesData(countriesData: any, hasAll ?: boolean ) {\r\n    const states = [];\r\n    countriesData.forEach(country => {\r\n      if (country.active === 1 || hasAll) {\r\n        const countryLabel = `COUNTRY_${country.code_country}`;\r\n        this.translate.get(countryLabel).subscribe(value => {\r\n          states.push({\r\n            country_id: country.country_id,\r\n            country_name: country.country_name,\r\n            handling_fees: country.handling_fees,\r\n            type_handling_fees: country.type_handling_fees,\r\n            device_id: country.device_id,\r\n            device_name: country.device_name,\r\n            created_at: country.created_at,\r\n            currency_label: country.currency_label,\r\n            country_flag: country.country_flag,\r\n            country_prefixe: country.country_prefixe,\r\n            code_country: country.code_country,\r\n            default_country: country.default_country,\r\n            country_label: value,\r\n            country_key: countryLabel\r\n          });\r\n        });\r\n      }\r\n    });\r\n\r\n    return states;\r\n  }\r\n\r\n  // Calucalte the payment with handlfees\r\n  getHandleFeesWithDevise(amountShare: any, devise: string, handleFees: any, handleFeesType: string) {\r\n    let amount = 0;\r\n    amount = parseFloat(amountShare) > 0 ? parseFloat(amountShare) : 0;\r\n    if (handleFees !== 0) {\r\n      const handlefees = handleFees ? parseFloat(handleFees) : 1;\r\n      if (handleFeesType === 'pourcentage') {\r\n        amount = amount * (1 + (handlefees / 100));\r\n      } else {\r\n        amount = amount + handlefees;\r\n      }\r\n    }\r\n\r\n    if (devise === 'XAF' || devise === 'ZAR' || devise === 'XOF') {\r\n      return Math.ceil(amount);\r\n    } else {\r\n      return parseFloat(Number(amount).toFixed(2));\r\n    }\r\n  }\r\n\r\n  \r\n  notIn(paymentMethods: any[], paymentName: any) {\r\n    let methodNotIn = true;\r\n    paymentMethods.forEach(pay => {\r\n      if (`${pay.name}${pay.currency}` === `${paymentName.name}${paymentName.currency}`) {\r\n        methodNotIn = false;\r\n      }\r\n    });\r\n    return methodNotIn;\r\n  }\r\n\r\n  // filter the payment method by currency\r\n  filterPaymentMethodByCurrency(allPaymentMethods: any[], userWallet: any[]) {\r\n    let i = 0;\r\n    const paymentMethods = [];\r\n    while (i < userWallet.length) {\r\n      allPaymentMethods.forEach(payment => {\r\n        if (payment.currency === userWallet[i].device_name && this.notIn(paymentMethods, payment)) {\r\n          paymentMethods.push(payment);\r\n        }\r\n      });\r\n      i++;\r\n    }\r\n    return paymentMethods;\r\n  }\r\n\r\n    // filter the payment method by currency\r\n    filterPaymentMethodByDevise(allPaymentMethods: any[], userWallet: any[]) {\r\n      let i = 0;\r\n      const paymentMethods = [];\r\n      while (i < userWallet.length) {\r\n        allPaymentMethods.forEach(payment => {\r\n          if ( payment.currency === userWallet[i].currency_name && this.notIn(paymentMethods, payment)) {\r\n            paymentMethods.push(payment);\r\n          }\r\n        });\r\n        i++;\r\n      }\r\n      return paymentMethods;\r\n    }\r\n\r\n      // Get the payment name\r\n  getPaymentName(paymentMethods:any[],paymentId: number) {\r\n    let paymentName = '';\r\n    paymentMethods.forEach(method => {\r\n      if (method && method.id === paymentId) {\r\n        paymentName = method.name;\r\n      }\r\n    });\r\n    return paymentName;\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UserService } from 'src/app/dashboard/user/service/user.service';\r\nimport { ApiService } from 'src/app/shared/service/api.service';\r\nimport { EventService } from 'src/app/shared/service/events.service';\r\nimport { LocalStorageService } from 'src/app/shared/service/local-storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoanService {\r\n\r\n  token: string;\r\n\r\n  constructor(\r\n    public api: ApiService,\r\n    private userService: UserService,\r\n    private event: EventService,\r\n    private localStorage: LocalStorageService\r\n  ) {\r\n    this.token = this.userService.getUserToken();\r\n    this.event.subscribe('new-token', token => {\r\n      this.token = token;\r\n    });\r\n  }\r\n\r\n  // send loan data\r\n  sendLoanData(data: any) {\r\n    this.localStorage.setItem('loan-data', data);\r\n  }\r\n\r\n  // get loan data\r\n  getLoanData() {\r\n    const data = this.localStorage.getItem('loan-data');\r\n    if (data) { return data } else return [];\r\n  }\r\n\r\n  // send loan data\r\n  RemoveLoanData() {\r\n    this.localStorage.removeItem('loan-data');\r\n  }\r\n\r\n  // Edit the loans request\r\n  editLoanRequest(data: any) {\r\n    return this.api.post('loan/v1/edit/params/' + this.token, data);\r\n  }\r\n\r\n  // Get loan dashbord informations\r\n  getLoansInformations(data: any) {\r\n    return this.api.post('loan/v1/get/dashboard/' + this.token, data);\r\n  }\r\n\r\n  // Get loan cash available and  maximum current cash for loan\r\n  getCashAvalaible() {\r\n    return this.api.get('loan/v1/get/cash/and/current/maximum/loan/' + this.token);\r\n  }\r\n\r\n  // Make a loan request\r\n  makeLoanRequest(data: any) {\r\n    return this.api.post('loan/v1/request/' + this.token, data);\r\n  }\r\n\r\n  // Get a loan \r\n  getLoanRequest(data: any) {\r\n    return this.api.post('loan/v1/get/all/requests/' + this.token, data);\r\n  }\r\n\r\n  // Approve a loan request \r\n  approveLoanRequest(data: any) {\r\n    return this.api.post('loan/v1/approve/request/' + this.token, data);\r\n  }\r\n\r\n  //Reject a loan request\r\n  rejectLoanRequest(data: any) {\r\n    return this.api.post('loan/v1/reject/request/' + this.token, data);\r\n  }\r\n\r\n  // Get memeber loan information for a seance\r\n  getMemberLoanDashBordSeance(data: any) {\r\n    return this.api.post('loan/v1/get/detail/seance/loan/user/' + this.token, data);\r\n  }\r\n\r\n  // Get memeber loan information for a cycle\r\n  getMemberLoanDashBordCycle(data: any) {\r\n    return this.api.post('loan/v1/get/detail/cycle/loan/user/' + this.token, data);\r\n  }\r\n\r\n  // Get loan history\r\n  getLoanHistory(cycleId: any) {\r\n    return this.api.get('loan/v1/get/history/loan/user/' + cycleId + '/' + this.token);\r\n  }\r\n\r\n  // pay loan and interest's with wallet\r\n  payloanAndInterest(data: any) {\r\n    return this.api.post('loan/v1/repay/with/wallet/' + this.token, data);\r\n  }\r\n\r\n  // pay loan Interest with wallet\r\n  payloanInterest(data: any) {\r\n    return this.api.post('loan/v1/repay/just/interest/with/wallet/' + this.token, data);\r\n  }\r\n\r\n  // pay loan and interest's with wallet\r\n  payManyloanAndInterestWithWallet(data: any) {\r\n    return this.api.post('loan/v1/repay/many/loan/with/wallet/' + this.token, data);\r\n  }\r\n\r\n  // pay loan Interest with wallet\r\n  payManyloanInterestWithWallet(data: any) {\r\n    return this.api.post('loan/v1/repay/many/interest/with/wallet/' + this.token, data);\r\n  }\r\n\r\n  /* Pay loan and Interest's with operator without conversion */\r\n  payloanAndInterestWithOperatorWithoutConversion(data: any) {\r\n    return this.api.post('loan/v1/repay/with/payment/method/withoutConversion/' + this.token, data);\r\n  }\r\n\r\n    /* Pay loan and Interest's with operator without conversion */\r\n    payloanAndInterestWithOperatorWithConversion(data: any) {\r\n      return this.api.post('loan/v1/repay/with/payment/method/withConversion/' + this.token, data);\r\n    }\r\n  \r\n\r\n  /* Pay loan Interest with operator without conversion */\r\n  payloanInterestWithOperatorWithoutConversion(data: any) {\r\n    return this.api.post('loan/v1/repay/just/interest/with/payment/method/withoutConversion/' + this.token, data);\r\n  }\r\n\r\n\r\n  /* Pay loan Interest with operator without conversion */\r\n  payloanInterestWithOperatorWithConversion(data: any) {\r\n    return this.api.post('loan/v1/repay/just/interest/with/payment/method/withConversion/' + this.token, data);\r\n  }\r\n\r\n\r\n  /* Pay many loans and Interest's with operator without conversion */\r\n  payManyloanAndInterestWithOperatorWithoutConversion(data: any) {\r\n    return this.api.post('loan/v1/repay/many/with/payment/method/withoutConversion/' + this.token, data);\r\n  }\r\n\r\n  /* Pay many loans and Interests with operator without conversion */\r\n  payManyloanAndInterestWithOperatorWithConversion(data: any) {\r\n    return this.api.post('loan/v1/repay/many/with/payment/method/withConversion/' + this.token, data);\r\n  }\r\n\r\n  /* Pay many loans Interest with operator without conversion */\r\n  payManyloanInterestWithOperatorWithoutConversion(data: any) {\r\n    return this.api.post('loan/v1/repay/many/just/interest/with/payment/method/withoutConversion/' + this.token, data);\r\n  }\r\n\r\n\r\n\r\n  /* Pay many loans Interest with operator without conversion */\r\n  payManyloanInterestWithOperatorWithConversion(data: any) {\r\n    return this.api.post('loan/v1/repay/many/just/interest/with/payment/method/withConversion/' + this.token, data);\r\n  }\r\n\r\n  /* Pay many loans and Interests with bank traditionnel */\r\n  payManyLoanAndInterestWithBankTradi(data: any) {\r\n    return this.api.post('loan/v1/repay/many/loan/with/traditional/' + this.token, data);\r\n  }\r\n\r\n  /* Pay many loans Interest  with bank traditionnel */\r\n  payManyLoanInterestWithBankTradi(data: any) {\r\n    return this.api.post('loan/v1/repay/many/interest/with/traditional/' + this.token, data);\r\n  }\r\n\r\n  /* Pay many loans and Interests with cash */\r\n  payManyLoanAndInterestWithCash(data: any) {\r\n    return this.api.post('loan/v1/repay/many/loan/with/cash/' + this.token, data);\r\n  }\r\n\r\n  /* Pay many loans Interest  with cash */\r\n  payManyLoanInterestWithCash(data: any) {\r\n    return this.api.post('loan/v1/repay/many/interest/with/cash/' + this.token, data);\r\n  }\r\n\r\n  /* Get the list of loans refund for a stokvel cycle*/\r\n  getLoanRefundList(data: any) {\r\n    return this.api.post('loan/v1/repay/get/all/requests/' + this.token, data);\r\n  }\r\n\r\n  /* Get the list of interest refund for a stokvel cycle */\r\n  getInterestRefundList(data: any) {\r\n    return this.api.post('loan/v1/repay/get/all/requests/interests/' + this.token, data);\r\n  }\r\n\r\n  /* validate a loan refund*/\r\n  validateLoanRefund(data: any) {\r\n    return this.api.post('loan/v1/validate/repay/loan/' + this.token, data);\r\n  }\r\n\r\n  /* Validate an interest refund*/\r\n  validateInterestRefund(data: any) {\r\n    return this.api.post('loan/v1/validate/repay/interest/' + this.token, data);\r\n  }\r\n\r\n  /* Reject a loan refund*/\r\n  rejectLoanRefund(data: any) {\r\n    return this.api.post('loan/v1/refuse/repay/loan/' + this.token, data);\r\n  }\r\n\r\n  /* Reject a interest refund*/\r\n  rejectInterestRefund(data: any) {\r\n    return this.api.post('loan/v1/refuse/repay/interest/' + this.token, data);\r\n  }\r\n\r\n  getPercentage(data: number) {\r\n    if (data > 0 && data <= 10) {\r\n      return 'donut donut10';\r\n    } else if (data >= 11 && data <= 20) {\r\n      return 'donut donut20';\r\n    } else if (data >= 21 && data <= 30) {\r\n      return 'donut donut30';\r\n    } else if (data >= 31 && data <= 40) {\r\n      return 'donut donut40';\r\n    } else if (data >= 41 && data <= 50) {\r\n      return 'donut donut50';\r\n    } else if (data >= 51 && data <= 60) {\r\n      return 'donut donut60';\r\n    } else if (data >= 61 && data <= 70) {\r\n      return 'donut donut70';\r\n    } else if (data >= 71 && data <= 80) {\r\n      return 'donut donut80';\r\n    } else if (data >= 81 && data <= 90) {\r\n      return 'donut donut90';\r\n    } else if (data >= 91 && data <= 99) {\r\n      return 'donut donut90';\r\n    } else if (data === 100) {\r\n      return 'donut donut100';\r\n    } else {\r\n      return 'donut donut0';\r\n    }\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYWlkbW9kZS10b250aW5lLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { UserService } from 'src/app/dashboard/user/service/user.service';\r\nimport { AuthService } from 'src/app/auth/service/auth.service';\r\nimport { UiService } from './ui.service';\r\nimport { LocalStorageService } from './local-storage.service';\r\nimport { EventService } from './events.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorService {\r\n\r\n  constructor(\r\n    private ui: UiService,\r\n    private userService: UserService,\r\n    private auth: AuthService,\r\n    private translate: TranslateService,\r\n    private event: EventService,\r\n    private localStorage: LocalStorageService\r\n  ) { }\r\n\r\n  // update the user lang\r\n  updateLang(lang: string) {\r\n    this.userService.updateUserLang({langue_user: lang}).subscribe((data: any) => {\r\n      // set the user lang\r\n      if (data && data.message === \"success\") {\r\n        this.userService.setCurrentUserSessionLanguage(lang);\r\n      }\r\n    }, error => {\r\n      if (error && error.error && error.error.user_not_found) {\r\n        this.renewSession().then((data: any) => {\r\n          if (data && data.result === \"OK\") {\r\n            this.updateLang(lang);\r\n          }\r\n        });\r\n      } else {\r\n        this.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  // Renew the user session\r\n  renewSession(showMessage?: boolean) {\r\n    return new Promise((resolve) => {\r\n      if (this.localStorage.getItem('startRefreshToken') === 'false') {\r\n        const credentials = this.userService.getUserSecret();\r\n        if (credentials) {\r\n          this.localStorage.setItem('startRefreshToken', 'true');\r\n          this.auth.authentication(credentials).subscribe(\r\n            (reponse: any) => {\r\n              if (reponse && reponse.message === 'success') {\r\n                this.event.publish('new-token', reponse.token);\r\n                setTimeout(() => {\r\n                  this.userService.setUserToken(reponse.token);\r\n                  this.userService.setUserRole(reponse.role);\r\n                  this.userService.setUserData(reponse.user);\r\n                  this.userService.setUserBadge(reponse.badge_name);\r\n\r\n                  // Get the current user lang\r\n                  this.userService.setCurrentUserSessionLanguage(reponse.user.langue_user ? reponse.user.langue_user : '');\r\n\r\n                  if (showMessage) {\r\n                    this.translate.get('TRY_AGAIN_MSG').subscribe(value => {\r\n                      this.ui.presentToast(value);\r\n                    });\r\n                  }\r\n                  this.localStorage.setItem('startRefreshToken', 'false');\r\n                  resolve({ result: 'OK' });\r\n                }, 4000);\r\n\r\n              }\r\n            }, error => {\r\n\r\n              if (error && error.error && error.error.user_not_found) {\r\n                this.auth.logoutMember();\r\n              } else {\r\n                if (error.status === 0) {\r\n                  this.translate.get('ERROR_MGS3').subscribe(value => {\r\n                    this.ui.presentToast(value);\r\n                  });\r\n                }\r\n              }\r\n              resolve({ result: 'ERROR' });\r\n            });\r\n        } else {\r\n          this.auth.logoutMember();\r\n          resolve({ result: 'ERROR' });\r\n        }\r\n      } else {\r\n        setTimeout(() => {\r\n          resolve({ result: 'OK' });\r\n        }, 6000);\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n  // Manage system error\r\n  manageError(error) {\r\n    if (error.status === 0) {\r\n      this.translate.get('ERROR_MGS3').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    } else if (error.status === 400) {\r\n      this.renewSession();\r\n    } else if (error.status === 401) {\r\n      this.auth.logoutMember();\r\n    } else if (error.status === 500) {\r\n      this.translate.get('ERROR_MGS6').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    } else {\r\n      this.translate.get('ERROR_MGS6').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJiYW5rbW9kZS1sb2FuLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\r\nimport { ApiService } from 'src/app/shared/service/api.service';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { UserService } from '../../user/service/user.service';\r\nimport { LocalStorageService } from 'src/app/shared/service/local-storage.service';\r\nimport { EventService } from 'src/app/shared/service/events.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContributionService {\r\n\r\n  private subject = new Subject<any>();\r\n  token: string;\r\n\r\n  constructor(\r\n    private api: ApiService,\r\n    private userService: UserService,\r\n    private error: ErrorService,\r\n    private event: EventService,\r\n    private localStorage: LocalStorageService\r\n  ) {\r\n    this.token = this.userService.getUserToken();\r\n    this.event.subscribe('new-token', token => {\r\n      this.token = token;\r\n    });\r\n  }\r\n\r\n  sendMessageContribute(message: any) {\r\n    this.subject.next({ contribute: message });\r\n  }\r\n\r\n  getMessageContribute(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  // send the contribution Data\r\n  sendContributionData(data) {\r\n    this.localStorage.setItem('contrib-data', data);\r\n  }\r\n\r\n  // Get the contribution Data\r\n  getContributionData() {\r\n    return this.localStorage.getItem('contrib-data');\r\n  }\r\n\r\n  // Get all the currenies\r\n  getCurrencies() {\r\n    return this.api.get('contribution/v1/getAll/device');\r\n  }\r\n\r\n  // Show the user wallet\r\n  getUserWallet() {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get(`contribution/v1/affiche/portemonnaie/${this.token}`);\r\n  }\r\n\r\n\r\n  // save the conversion of a currency\r\n  saveCurrencyConversion() {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('contribution/v1/convert/device/' + this.token);\r\n  }\r\n\r\n  // Get all contributions of tontines\r\n  getTypeContributionTontine(refresh) {\r\n    return new Promise((resolve) => {\r\n      let typeContributions = this.localStorage.getItem('type-contribution');\r\n      typeContributions = typeContributions ? typeContributions: [];\r\n      if (refresh || typeContributions.length === 0) {\r\n        this.api.get('contribution/v1/getAll/typecontribution').subscribe((reponse: any) => {\r\n          this.localStorage.setItem('type-contribution', reponse.typecontribution);\r\n          resolve(reponse.typecontribution);\r\n        }, error => {\r\n          resolve(typeContributions);\r\n        });\r\n      } else {\r\n        resolve(typeContributions);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Get the seances that a member does not contribute\r\n  getSeancesNotContribute(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    if (this.token) {\r\n      return this.api.post('contribution/v1/get/seances/to/contribute/' + this.token, data);\r\n    }\r\n  }\r\n\r\n  // Get the seances that has not contribute or that have penalties\r\n  getSeancesContributeOrPenalties(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('contribution/v1/get/seances/to/contribute/and/penalties/ofAMember/' + this.token, data);\r\n  }\r\n\r\n  // get Seances where has unpaid penalties\r\n  getSeanceUnpaidPenality(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('contribution/v1/get/seances/with/penalties/ofAMember/' + this.token, data);\r\n  }\r\n\r\n  // Permit to the user to contribute with wallet add pin\r\n  contributeWithWallet(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('contribution/v2/contribue/avec/portemonnaie/' + this.token, data);\r\n  }\r\n\r\n  // Contribute without make a conversion and without wallet\r\n  contributeWithoutWalletAndConversion(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('contribution/v2/contribue/sans/portemonnaie/NotConvertDevice/'\r\n      + this.token, data);\r\n  }\r\n\r\n  // Contribute and convert without wallet\r\n  contributeAndconvertWithoutWallet(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('contribution/v2/contribue/sans/portemonnaie/WithConvertDevice/'\r\n      + this.token, data);\r\n  }\r\n\r\n\r\n  // Contribute without make a conversion and without wallet\r\n  contributeWithoutWalletAndConversionAllshare(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('contribution/v2/contribue/toutes/ses/parts/sans/portemonnaie/NotConvertDevice/'\r\n      + this.token, data);\r\n  }\r\n\r\n  // Contribute and convert without wallet\r\n  contributeAndconvertWithoutWalletAllshare(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('contribution/v2/contribue/toutes/ses/parts/sans/portemonnaie/WithConvertDevice/'\r\n      + this.token, data);\r\n  }\r\n\r\n  // Contribute  with wallet after conversion\r\n  contributeAndconvertWithWallet(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('contribution/v2/charger/portemonnaie/afterConvertDevice/'\r\n      + this.token, data);\r\n  }\r\n\r\n  // Convert a member wallet to another currency\r\n  convertMemberWallet(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('contribution/v1/convertDevice/Portemonnaie/'\r\n      + this.token, data);\r\n  }\r\n\r\n  // Convert the currency automaticcaly before paid with the member wallet\r\n  convertMemberWalletAutomatically(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('contribution/v1/convertDevice/ToContribueWithPortemonnaie/'\r\n      + this.token, data);\r\n  }\r\n\r\n\r\n  // Get the list of tontines  seances\r\n  getSeanceTontine(tontineId: number) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('contribution/v1/getAll/seance/' + tontineId + '/' + this.token);\r\n  }\r\n\r\n  // Get the current seance of a tontine\r\n  getSeanceCurrentTontine(tontineId: number) {\r\n    return this.api.get('contribution/v1/seance/courante/' + tontineId);\r\n  }\r\n\r\n\r\n  // Get level of member's contributions for a tontine seance\r\n  getNiveauContributionMembreTontineForAseance(tontineId: number, seanceId: number) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('contribution/v1/getAllMember/withContribution/' + tontineId + '/' + seanceId +\r\n      '/' + this.token);\r\n  }\r\n\r\n  // Get level of member's contributions for all tontine seances\r\n  getNiveauContributionMembreTontineForAllseance(tontineId: number, seanceId: number) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('contribution/v1/getAllMemberTontine/withContribution/' + tontineId + '/' + seanceId +\r\n      '/' + this.token);\r\n  }\r\n\r\n  // Save the seance of a tontine\r\n  saveTontineSeance(seance: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('contribution/v1/save/seance/tontine/' +\r\n      '/' + this.token, seance);\r\n  }\r\n\r\n  // Get users tontines with members contribution by seance\r\n  getMyTontineWithMembersContributionBySeance() {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('contribution/v1/getAllTontineUser/WithContributionMember' + this.token);\r\n  }\r\n\r\n\r\n  // Get the percentage of contributions for tontine seance\r\n  getPercentageContributionTontineSeance(tontineId, seanceId) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('contribution/v1/getPourcentageContributionTontine/' + tontineId + '/' + seanceId + '/' +\r\n      this.token);\r\n  }\r\n\r\n  // Get the remaind amount contributions of member for a seance with token\r\n  getRemaindContributionMemberForSeance(seanceId) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('contribution/v1/getMontantRestantAContribuer/' + seanceId + '/' + this.token);\r\n  }\r\n\r\n  // Get the remaind amount contributions of member for a seance with user_id\r\n  getEtatContributionUserTontine(seanceId, userId) {\r\n    return this.api.get('contribution/v1/getMontantRestantAContribuerAvecUserId/' + seanceId + '/' + userId);\r\n  }\r\n\r\n  // Get the state of contribution of a user part\r\n  getEtatContributionPartUserTontine(seanceId, userId, numeroPart) {\r\n    return this.api.get('contribution/v1/getMontantRestantAContribuerPourUnePartAvecUserId/' + seanceId + '/' +\r\n      numeroPart + '/' + userId);\r\n  }\r\n\r\n  // Get the amount that remaind for a contribution of a part WITH TOKEN\r\n  remaindAmountForPartForAseance(seanceId, numeroPart, userId) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('contribution/v1/getMontantRestantAContribuerPourUnePart/' + seanceId + '/' +\r\n      numeroPart + '/' + this.token);\r\n  }\r\n\r\n  // confirm the contribution with wallet with negative balance\r\n  confirmContributionWithWallet(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('contribution/v1/confirm/contribue/avec/portemonnaie/' + this.token, data);\r\n  }\r\n\r\n  // confirm the contribution with wallet with without conversion\r\n  confirmContributionWithWalletWithoutConversion(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('contribution/v1/confirm/contribue/sans/portemonnaie/NotConvertDevice/'\r\n      + this.token, data);\r\n  }\r\n\r\n  // confirm the contribution with wallet with  conversion\r\n  confirmContributionWithWalletWithConversion(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('contribution/v1/confirm/contribue/sans/portemonnaie/WithConvertDevice/'\r\n      + this.token, data);\r\n  }\r\n\r\n  // confirm the contribution with wallet with after conversion\r\n  confirmContributionWithWalletAfterConversion(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('contribution/v1/confirm/convertDevice/ToContribueWithPortemonnaie/'\r\n      + this.token, data);\r\n  }\r\n\r\n  // Get all level of  contribution of tontine  not ended\r\n  getNiveauContributionNotEndMembreTontineSeances(tontineId): Observable<any> {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('contribution/v2/getAllMemberTontine/withContribution/' +\r\n      tontineId + '/' + this.token);\r\n  }\r\n\r\n  // Get all level of  contribution of tontine seance not ended\r\n  getNiveauContributionNotEndForAMembreTontineSeances(tontineId, seanceId): Observable<any> {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('contribution/v2/getAllMember/withContribution/' +\r\n      tontineId + seanceId + '/' + this.token);\r\n  }\r\n\r\n  // contribute with wallet all part\r\n  contributionAllShareWithWallet(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('contribution/v2/contribue/toutes/parts/avec/portemonnaie/'\r\n      + this.token, data);\r\n  }\r\n\r\n  // Get the list of members invite in a tontine\r\n  getInvitationMembre() {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('tontine/invitation/v1/getAllTontineUserInvited/' + this.token);\r\n  }\r\n\r\n  // Get the list of member that has take seance\r\n  getmembreJackpotSeance(seanceId) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('bouffe/v1/getMemberAyantBouffe/' + seanceId + '/' + this.token);\r\n  }\r\n\r\n\r\n  // Get the cycle of current tontine\r\n  getCycleCurrentTontine(tontineId: number) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('bouffe/v1/getCycleCourantTontine/' + tontineId + '/' + this.token);\r\n  }\r\n\r\n\r\n  // Get the  cycle of the tontine\r\n  getSeancesCycleTontine(cycleId) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('bouffe/v1/getAllSeanceCycle/' + cycleId + '/' + this.token);\r\n  }\r\n\r\n  // Get the members that doesn't take the tontine\r\n  getMembresPasBouffe(cycleId, tontineId) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('bouffe/v1/getAllMemberNayantPasBouffePourUnCycle/' + tontineId + '/' + cycleId +\r\n      '/' + this.token);\r\n  }\r\n\r\n  // Get the members that take the tontine\r\n  getMembresAyantBouffe(cycleId: any, tontineId: number) {\r\n    this.token = this.userService.getUserToken();\r\n    if (this.token) {\r\n      return this.api.get('bouffe/v1/getAllMemberAyantBouffePourUnCycle/' + tontineId + '/' + cycleId + '/' + this.token);\r\n    }\r\n\r\n  }\r\n\r\n  // Get member who are already beneficiate\r\n  getDataMembresAyantBouffe(cycleId, tontineId: number, tontineData?: any, index?: number): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      this.getMembresAyantBouffe(cycleId, tontineId).subscribe(data => {\r\n        resolve({ ans: data, tontine: tontineData, index: index });\r\n      }, error => {\r\n\r\n        if (error && error.error && error.error.user_not_found) {\r\n          this.error.renewSession().then((data: any) => {\r\n            if (data && data.result === 'OK') {\r\n              this.getDataMembresAyantBouffe(cycleId, tontineId, tontineData, index);\r\n            } else {\r\n              resolve([]);\r\n            }\r\n          });\r\n        } else {\r\n          resolve([]);\r\n          this.error.manageError(error);\r\n        }\r\n\r\n      });\r\n    });\r\n  }\r\n\r\n  // Get the penalities of the seance\r\n  getPenaliteSeance(seanceId, tontineId: number) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('penalite/v1/getPenaliteSeanceTontine/' + tontineId + '/' + seanceId + '/' +\r\n      this.token);\r\n  }\r\n\r\n  // Get the list of penality not paid\r\n  getPenalitesImpayeMembre(tontineId) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('penalite/v1/getPenaliteMember/' + tontineId + '/' + this.token);\r\n  }\r\n\r\n  // Get the list of penality  paid\r\n  getPenalitesPayeMembre(tontineId) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('penalite/v1/getPenalitePayeByMember/' + tontineId + '/' + this.token);\r\n  }\r\n\r\n\r\n  // Get the seance penality of cycle\r\n  getSeanceById(seanceId) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('penalite/v1/getSeanceWithCycle/' + seanceId + '/' + this.token);\r\n  }\r\n\r\n\r\n  // Get all past seance contribution of a user\r\n  getContributionSeancesPasseesPourAjoutPart(userId, numeroPart) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('part/v1/seancePasseeTocContribueWithUserId/' + this.token + '/' +\r\n      numeroPart + '/' + userId);\r\n  }\r\n\r\n  // Get all past seance contribution of a user\r\n  getContributionSeancesPasseesPourAjoutPartUserCurrent(numeroPart, tontineId) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('part/v1/seancePasseeTocContribue/' + tontineId + '/' + numeroPart + '/' +\r\n      this.token);\r\n  }\r\n\r\n\r\n  // History of user transaction\r\n  historiqueTransactionUtilsateurFromToken() {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('trace/v1/getAllTransactionPorteMonnaieUserWithToken/' + this.token);\r\n  }\r\n\r\n  // Get the amount of cotisation of a user\r\n  getMontantCotisationSeance(seanceId) {\r\n    return this.api.get('bouffe/v1/montant_total/byseance/' + seanceId);\r\n  }\r\n\r\n  // History of tontine transaction\r\n  historiqueTransactionTontine(tontineId: number) {\r\n    return this.api.get('trace/v1/getAllTransactionPorteMonnaieTontine/' + tontineId);\r\n  }\r\n\r\n\r\n  // Contribute without make a conversion and without wallet for event\r\n  contributeWithoutWalletAndConversionForEvent(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('contribution/v1/contribue/pour/un/event/sans/portemonnaie/NotConvertDevice/'\r\n      + this.token, data);\r\n  }\r\n\r\n  // Contribute and convert without wallet for event\r\n  contributeAndConvertWithoutWalletForEvent(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('contribution/v1/contribue/pour/un/event/sans/portemonnaie/WithConvertDevice/'\r\n      + this.token, data);\r\n  }\r\n\r\n  // contribute with wallet for event\r\n  contributeEventWithWallet(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('contribution/v1/contribue/pour/un/event/avec/portemonnaie/'\r\n      + this.token, data);\r\n  }\r\n\r\n  /* Contribute for past seance  */\r\n\r\n  // contribute with wallet \r\n  contributeWithWalletPastSeance(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('contribution/v2/contribue/toutes/parts/avec/portemonnaie/old/seance/'\r\n      + this.token, data);\r\n  }\r\n\r\n  // contribute with OPERATOR (Orange/ MTN / PAYPAL / OZOW) without conversion\r\n  contributeWithOperatorWithoutConversionPastSeance(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('contribution/v2/contribue/toutes/ses/parts/sans/portemonnaie/NotConvertDevice/old/seance/'\r\n      + this.token, data);\r\n  }\r\n\r\n  // contribute with OPERATOR (Orange/ MTN / PAYPAL / OZOW) with conversion\r\n  contributeWithOperatorWithConversionPastSeance(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('contribution/v2/contribue/toutes/ses/parts/sans/portemonnaie/WithConvertDevice/old/seance/'\r\n      + this.token, data);\r\n  }\r\n\r\n\r\n  /* Caution management */\r\n\r\n  // Add caution member\r\n  payMemberCaution(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('caution/member/pay/' + this.token, data);\r\n  }\r\n\r\n  // get members who have paid partial cautions\r\n  paidOldSessionTontineCautionWithWallet(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`caution/contribute/all/share/withWallet/oldSeance/` + this.token, data);\r\n  }\r\n\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { LocalStorageService } from 'src/app/shared/service/local-storage.service';\r\nimport { UserService } from '../../user/service/user.service';\r\nimport { UiService } from 'src/app/shared/service/ui.service';\r\nimport { ApiService } from 'src/app/shared/service/api.service';\r\nimport { EventService } from 'src/app/shared/service/events.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SwapService {\r\n\r\n  token: string;\r\n\r\n  constructor(\r\n    private api: ApiService,\r\n    public ui: UiService,\r\n    private userService: UserService,\r\n    private event: EventService,\r\n    private localStorage: LocalStorageService,\r\n  ) {\r\n    this.token = this.userService.getUserToken();\r\n    this.event.subscribe('new-token', token => {\r\n      this.token = token;\r\n    });\r\n  }\r\n\r\n  // Get the current swap data\r\n  getCurrentSwapData() {\r\n    const data = this.localStorage.getItem('swap-data');\r\n    if (data) { return data } else return [];\r\n  }\r\n\r\n  // Set the current swap data\r\n  setCurrentSwapData(swapData: any) {\r\n    this.localStorage.setItem('swap-data', swapData);\r\n  }\r\n\r\n  // Get the swap rate of Toupesu\r\n  getSwapRate() {\r\n    return this.api.get('pesu/swap/get/toupesu/rate');\r\n  }\r\n\r\n  // Get all the currencies available on user wallet  \r\n  getAllWalletCurrenies() {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get(`pesu/swap/get/currencies/user/${this.token}`);\r\n  }\r\n\r\n  // Get all the currencies available on the system\r\n  getAllSystemCurrenies() {\r\n    return this.api.get(`pesu/swap/get/currencies/system`);\r\n  }\r\n\r\n  // Get all type of swap\r\n  getAllSwapType() {\r\n    return this.api.get('pesu/swap/get/all/type/swap');\r\n  }\r\n\r\n  // make a swap request\r\n  makeSwapRequest(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`pesu/swap/make/request/${this.token}`, data);\r\n  }\r\n\r\n  // Get all users swap request\r\n  getAllUserSwapRequest() {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get(`pesu/swap/get/own/requests/user/${this.token}`);\r\n  }\r\n\r\n  getAllUserSwapRequestV2() {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get(`pesu/swap/v2/get/own/requests/user/${this.token}`);\r\n  }\r\n\r\n  // Get all reverse request \r\n  getReverseRequest(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`pesu/swap/get/inverse/requests/${this.token}`, data);\r\n  }\r\n\r\n  getReverseRequestV2(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`pesu/swap/v2/get/inverse/requests/${this.token}`, data);\r\n  }\r\n\r\n  // Get all request without filter \r\n  getRequestWithoutFilter() {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get(`pesu/swap/get/all/requests/without/filter/currency/${this.token}`);\r\n  }\r\n\r\n  getRequestWithoutFilterV2() {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get(`pesu/swap/v2/get/all/requests/without/filter/currency/${this.token}`);\r\n  }\r\n\r\n  // Disable edition\r\n  disableSwapEdition(swapRequestId: any, statusEdit: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get(`pesu/swap/update/field/status/edit/swap/request/${swapRequestId}/${statusEdit}/${this.token}`);\r\n  }\r\n\r\n  // update swap request\r\n  updateSwapRequest(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`pesu/swap/update/request/${this.token}`, data);\r\n  }\r\n\r\n  // Delete swap request\r\n  deleteSwapRequest(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`pesu/swap/delete/request/${this.token}`, data);\r\n  }\r\n\r\n  // matches swap request\r\n  mathSwapRequest(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`pesu/swap/match/request/${this.token}`, data);\r\n  }\r\n\r\n  // Get the swap in pending payment\r\n  getSwapPendingRequest() {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get(`pesu/swap/get/request/pending/waiting/to/pay/${this.token}`);\r\n  }\r\n\r\n  // Get the request that match the currencies\r\n  getRequestMatchingCurrencies(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`pesu/swap/get/requests/inverses/with/amount/combinaisons/${this.token}`, data);\r\n  }\r\n\r\n  getRequestMatchingCurrenciesV2(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`pesu/swap/v2/get/requests/inverses/with/amount/combinaisons/${this.token}`, data);\r\n  }\r\n\r\n  // Paid pending swap request with wallet\r\n  paidPendingSwapRequest(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`pesu/swap/pay/amount/swap/with/wallet/${this.token}`, data);\r\n  }\r\n\r\n  /* Make swap payment with operator without conversion */\r\n  paySwapRequestWithOperatorWithoutConversion(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`pesu/swap/pay/amount/swap/without/wallet/withoutConversion/${this.token}`, data);\r\n  }\r\n\r\n  /* Make swap payment with operator with conversion */\r\n  paySwapRequestWithOperatorWithConversion(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`pesu/swap/pay/amount/swap/without/wallet/withConversion/${this.token}`, data);\r\n  }\r\n\r\n  /* Make swap notifications with toke */\r\n  getSwapNotificationsWithToken() {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get(`notification/v2/pesuSwap/getAllNotificationWithToken/${this.token}`);\r\n  }\r\n\r\n  /* Make swap notifications with toke */\r\n  getSwapNotificationsWithId(userId: any) {\r\n    return this.api.get(`notification/v2/pesuSwap/getAllNotificationWithUserId/${userId}`);\r\n  }\r\n\r\n  /* Archive swap data */\r\n  archiveSwapData(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`pesu/swap/archived/swap/user/${this.token}`, data);\r\n  }\r\n\r\n}\r\n","export default \"<ion-app>\\n  <ion-router-outlet></ion-router-outlet>\\n</ion-app>\\n\";","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title class=\\\"ion-text-center\\\">{{'DEBT_MAKE_PAYMENT' | translate }}</ion-title>\\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar class=\\\"ion-text-left\\\">\\r\\n    <ion-segment  (ionChange)=\\\"segmentChanged($event)\\\" value=\\\"0\\\">\\r\\n      <ion-segment-button value=\\\"0\\\">\\r\\n        <ion-label class=\\\"ion-text-capitalize\\\">{{ 'ONLINE_TEXT' | translate }}</ion-label>\\r\\n      </ion-segment-button>\\r\\n\\r\\n      <ion-segment-button value=\\\"1\\\">\\r\\n        <ion-label class=\\\"ion-text-capitalize\\\">{{ 'CASH_PAYMENT' | translate }}</ion-label>\\r\\n      </ion-segment-button> \\r\\n\\r\\n      <ion-segment-button value=\\\"2\\\">\\r\\n        <ion-label class=\\\"ion-text-capitalize\\\">{{ 'BANK_TEXT' | translate }}</ion-label>\\r\\n      </ion-segment-button>\\r\\n    </ion-segment>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"tontine-contribute\\\">\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <p class=\\\"ion-no-margin\\\">\\r\\n          {{ 'MAKING_PAYMENT_TEXT' | translate }} <b>{{ tontineName }}</b>.         \\r\\n        </p>\\r\\n        <h4 class=\\\"ion-no-margin\\\">\\r\\n          <small>\\r\\n            {{ 'LOAN_AMOUNT_TEXT' | translate }}: {{ (amountPay | commadumper)}} {{currency}} (<b class=\\\"text-danger\\\">{{ 'CURRENT_BALANCE' | translate }}:  {{ (balance | commadumper) }}  {{currency}}</b>)\\r\\n          </small>\\r\\n        </h4>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n\\r\\n        <div class=\\\"mobile\\\" *ngIf=\\\"isModeSelected[0]\\\">\\r\\n          <app-paidmode-loan [amountPay]=\\\"amountPay\\\" [type]=\\\"type\\\" [balance]=\\\"balance\\\"  ></app-paidmode-loan>\\r\\n        </div>\\r\\n  \\r\\n        <div class=\\\"bank\\\" *ngIf=\\\"isModeSelected[1]\\\">\\r\\n          <app-cashmode-loan [amountPay]=\\\"amountPay\\\" [type]=\\\"type\\\" [balance]=\\\"balance\\\"></app-cashmode-loan>\\r\\n        </div> \\r\\n\\r\\n        <div class=\\\"bank\\\" *ngIf=\\\"isModeSelected[2]\\\">\\r\\n          <app-bankmode-loan [amountPay]=\\\"amountPay\\\" [type]=\\\"type\\\" [balance]=\\\"balance\\\"></app-bankmode-loan>\\r\\n        </div>\\r\\n     \\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid> \\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"ion-padding ion-text-center\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n            <ion-button expand=\\\"full\\\" \\r\\n                  fill=\\\"outline\\\"\\r\\n                  color=\\\"warning\\\" \\r\\n                  class=\\\"ion-text-uppercase\\\"\\r\\n                  shape=\\\"round\\\" (click)=\\\"closeContribute('cancel')\\\">\\r\\n              {{ 'CANCEL_TEXT' | translate }}\\r\\n            </ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n</ion-footer>\\r\\n\";","export default \"<ion-grid>\\r\\n  <ion-row>\\r\\n    <ion-col size=\\\"12\\\">\\r\\n      <ion-card class=\\\"mber-invited\\\">\\r\\n        <ion-card-content>\\r\\n            <form [formGroup]=\\\"formInvited\\\">\\r\\n              <ion-row>\\r\\n                <ion-col size=\\\"12\\\">\\r\\n                  <ion-item>\\r\\n                    <ion-label>{{ 'M_SEND_METHOD' | translate }}</ion-label>\\r\\n                    <ion-select  (ionChange)=\\\"validateFields(formInvited.value.sendMode)\\\" formControlName=\\\"sendMode\\\">\\r\\n                      <ion-select-option [value]=\\\"'sms'\\\">{{ 'M_SMS_TEXT' | translate }}</ion-select-option>      \\r\\n                      <ion-select-option [value]=\\\"'email'\\\">{{ 'EMAIL_TEXT' | translate }}</ion-select-option>     \\r\\n                    </ion-select>\\r\\n                  </ion-item> \\r\\n\\r\\n                  <ion-item *ngIf=\\\"formInvited.value.sendMode === 'sms'\\\" (click)=\\\"showCountries()\\\">\\r\\n                    <ion-label>{{'COUNTRY_TEXT' | translate}} : </ion-label>\\r\\n                    <p><strong> {{ formInvited.value.countryName }} </strong> </p>          \\r\\n                    <ion-icon name=\\\"chevron-down-outline\\\" slot=\\\"end\\\"></ion-icon>\\r\\n                  </ion-item>  \\r\\n                  <div class=\\\"validation-errors\\\">\\r\\n                    <ng-container *ngFor=\\\"let validation of validationMessages.sendMode\\\">\\r\\n                      <div class=\\\"error-message\\\" *ngIf=\\\"sendMode.hasError(validation.type) && (sendMode.dirty || sendMode.touched)\\\">\\r\\n                        <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                        {{ validation.message }}\\r\\n                      </div>\\r\\n                    </ng-container>\\r\\n                  </div>   \\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"12\\\">\\r\\n                    <ul>\\r\\n                        <li *ngFor=\\\"let sendTo of sendList.controls\\\">\\r\\n                            {{ sendTo.value }} \\r\\n                            <ion-button fill=\\\"clear\\\" color=\\\"warning\\\" (click)=\\\"removeContact(sendTo)\\\">\\r\\n                                <ion-icon name=\\\"remove-circle-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\r\\n                            </ion-button>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"9\\\">\\r\\n                  <ion-item lines=\\\"none\\\">\\r\\n                    <ion-label>{{ 'TONTINE_INVITED_TEXT1' | translate }}</ion-label>\\r\\n                  </ion-item> \\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"3\\\">\\r\\n                  <ion-button fill=\\\"clear\\\" [disabled]=\\\"canAddMember()\\\" color=\\\"warning\\\" (click)=\\\"addMberContact(mberContact)\\\">\\r\\n                      <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\r\\n                  </ion-button>                  \\r\\n              </ion-col>\\r\\n                <ion-col size=\\\"4\\\"  *ngIf=\\\"formInvited.value.sendMode === 'sms'\\\">\\r\\n                  <ion-item>\\r\\n                    <ion-label>+</ion-label>\\r\\n                    <ion-input   type=\\\"text\\\" placeholder=\\\"{{formInvited.value.phoneid}}\\\"></ion-input>\\r\\n                  </ion-item>\\r\\n                </ion-col>\\r\\n                <ion-col>\\r\\n                  <ion-item>\\r\\n                    <ion-input  (ionChange)=\\\"validateFields(formInvited.value.sendMode)\\\" formControlName=\\\"emailOrPhone\\\" [type]=\\\"formInvited.value.sendMode === 'sms'? 'tel' : 'email'\\\" placeholder=\\\"{{formInvited.value.sendMode === 'sms'  ? ('REGISTER_MPHONE' | translate) : ('M_EMAIL_MSG' | translate)}}\\\" \\r\\n                    #mberContact></ion-input>\\r\\n                  </ion-item> \\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"12\\\" *ngIf=\\\"formInvited.value.emailOrPhone\\\">  \\r\\n                  <p *ngIf=\\\"canShowContactMessage()\\\">{{'M_MEMBER_CONTACT' | translate}} {{ 'TONTINE_INVITED_TEXT4' | translate }}.</p>\\r\\n                </ion-col >\\r\\n              </ion-row>\\r\\n              <ion-row>\\r\\n                <ion-col>\\r\\n                    <ion-button expand=\\\"full\\\" \\r\\n                          color=\\\"warning\\\" \\r\\n                          class=\\\"ion-text-uppercase\\\"\\r\\n                          shape=\\\"round\\\" [disabled]=\\\"canSendInvitation()\\\" (click)=\\\"sendInvitation()\\\">\\r\\n                          {{ 'TONTINE_INVITE_TEXT2' | translate }}\\r\\n                    </ion-button>\\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n            </form>\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-grid>\";","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouteReuseStrategy } from '@angular/router';\r\n\r\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\r\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\r\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\r\nimport { TranslateModule, TranslateService, TranslateLoader} from '@ngx-translate/core';\r\nimport { TranslateHttpLoader} from '@ngx-translate/http-loader';\r\nimport { OneSignal } from '@ionic-native/onesignal/ngx';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faFrown, faGrin } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { Camera } from '@ionic-native/camera/ngx';\r\nimport { UniqueDeviceID } from '@ionic-native/unique-device-id/ngx';\r\nimport { Device } from '@ionic-native/device/ngx';\r\nimport { SocialSharing } from '@ionic-native/social-sharing/ngx';\r\nimport { IonicStorageModule } from '@ionic/storage';\r\nimport { GoogleAnalytics } from '@ionic-native/google-analytics/ngx';\r\n\r\n\r\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\r\nconst config: SocketIoConfig = { url: 'https://dev.toupesu.com:8080', options: {} };\r\n\r\nexport function createTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\nlibrary.add(faFrown, faGrin);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  entryComponents: [],\r\n  imports: [\r\n    HttpClientModule,\r\n    SocketIoModule.forRoot(config),\r\n    BrowserModule,\r\n    FontAwesomeModule,\r\n    IonicModule.forRoot(),\r\n    IonicStorageModule.forRoot({\r\n      name: '__toupesudb',\r\n      driverOrder: ['indexeddb', 'sqlite', 'websql']\r\n    }),\r\n    TranslateModule.forRoot({loader : {\r\n      provide: TranslateLoader,\r\n      useFactory: (createTranslateLoader),\r\n      deps: [HttpClient]\r\n    }}),\r\n    AppRoutingModule,\r\n    SharedModule,\r\n  ],\r\n  providers: [\r\n    StatusBar,\r\n    SplashScreen,\r\n    Device,\r\n    UniqueDeviceID,\r\n    SocialSharing,\r\n    GoogleAnalytics,\r\n    OneSignal,\r\n    Camera,\r\n    TranslateService,\r\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"<form [formGroup]=\\\"userPayMethodForm\\\">\\r\\n  <p class=\\\"ion-text-center\\\"  *ngIf=\\\"loadingOperator\\\">\\r\\n    <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n  </p>\\r\\n<ion-grid>\\r\\n  <ion-row>\\r\\n    <ion-col size=\\\"12\\\">\\r\\n      <ion-card class=\\\"paidmode\\\">\\r\\n        <ion-card-content class=\\\"ion-text-center\\\">    \\r\\n          <ion-row>\\r\\n            <ion-col size=\\\"12\\\">\\r\\n              <ion-item>\\r\\n                <ion-label>{{'COUNTRY_TEXT' | translate}}</ion-label>\\r\\n                <ion-select (ionChange)=\\\"updateCurrencyCountry(userPayMethodForm.value.country_id)\\\" formControlName=\\\"country_id\\\">\\r\\n                  <ion-select-option [value]=\\\"country.country_id\\\" *ngFor=\\\"let country of states\\\">{{ country.country_label }}</ion-select-option>          \\r\\n                </ion-select>\\r\\n              </ion-item>   \\r\\n              <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.country_id\\\">\\r\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"country.hasError(validation.type) && (country.dirty || country.touched)\\\">\\r\\n                    <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                    {{ validation.message }}\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>     \\r\\n            </ion-col>\\r\\n          </ion-row>       \\r\\n            <ion-row class=\\\"ion-justify-content-end\\\" *ngIf=\\\"userPayMethodForm.value.country_id && paymentMethods && paymentMethods.length > 0\\\">\\r\\n              <ion-col size=\\\"4\\\">\\r\\n                <ion-img [src]=\\\"paymentMethods&&paymentMethods[userPayMethodForm.value.typePaymentIndex] ? paymentMethods[userPayMethodForm.value.typePaymentIndex].logo : ' '\\\" class=\\\"logooperator\\\"></ion-img>\\r\\n              </ion-col>\\r\\n            </ion-row>  \\r\\n            <ion-row *ngIf=\\\"userPayMethodForm.value.country_id && paymentMethods && paymentMethods.length > 0\\\">\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label>{{ 'USER_PROFILE_TEXT4' | translate }}</ion-label>\\r\\n                  <ion-select (ionChange)=\\\"updatePaymentMethod(userPayMethodForm.value.typePaymentIndex)\\\" formControlName=\\\"typePaymentIndex\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let operator of paymentMethods; let operatorId = index\\\" [value]=\\\"operatorId\\\">{{ operator.name }}</ion-select-option>           \\r\\n                  </ion-select>\\r\\n                </ion-item>   \\r\\n                <div class=\\\"validation-errors\\\">\\r\\n                  <ng-container *ngFor=\\\"let validation of validationMessages.payementtype\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"payementtype.hasError(validation.type) && (payementtype.dirty || payementtype.touched)\\\">\\r\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                      {{ validation.message }}\\r\\n                    </div>\\r\\n                  </ng-container>\\r\\n                </div>   \\r\\n              </ion-col>\\r\\n            </ion-row> \\r\\n            <ion-row  *ngIf=\\\"checkMobileOperator()\\\">\\r\\n              <ion-col size=\\\"4\\\">\\r\\n                <ion-item  >\\r\\n                  <ion-label position=\\\"floating\\\">+</ion-label>\\r\\n                  <ion-input placeholder=\\\"{{userPayMethodForm.value.country_prefix}}\\\" type=\\\"text\\\"></ion-input>\\r\\n                </ion-item>        \\r\\n              </ion-col>\\r\\n              <ion-col size=\\\"8\\\">\\r\\n                <ion-item >\\r\\n                  <ion-label position=\\\"floating\\\">{{ 'REGISTER_MPHONE' | translate }}</ion-label>\\r\\n                  <ion-input (ionChange)=\\\"checckEmailOrPhone(userPayMethodForm.value.phone,userPayMethodForm.value.typePaymentIndex)\\\" type=\\\"tel\\\" formControlName=\\\"phone\\\"></ion-input>\\r\\n                </ion-item> \\r\\n              </ion-col>\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <div class=\\\"validation-errors\\\" *ngIf=\\\"errorPhone\\\">\\r\\n                  <div class=\\\"error-message\\\">\\r\\n                    <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                    <span [innerHTML]=\\\"'USER_DETAIL_TEXT11' | translate\\\"></span>\\r\\n                  </div>\\r\\n                </div>          \\r\\n              </ion-col>\\r\\n            </ion-row> \\r\\n            <ion-row class=\\\"ion-padding-bottom\\\">\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\" >{{ 'AMOUNT_TEXT' | translate }}</ion-label>\\r\\n                  <ion-input  (ionChange)=\\\"updatePaypalAmount()\\\" type=\\\"number\\\" formControlName=\\\"montant\\\"></ion-input>\\r\\n                  <span slot=\\\"end\\\" class=\\\"slot-prefix ion-no-margin\\\"> {{ contributionData.device_name }} </span>\\r\\n                </ion-item> \\r\\n                <div class=\\\"validation-errors\\\">\\r\\n                  <ng-container *ngFor=\\\"let validation of validationMessages.amount\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"montantContributeError.hasError(validation.type) && (montantContributeError.dirty || montantContributeError.touched)\\\">\\r\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                      {{ validation.message }}\\r\\n                    </div>\\r\\n                  </ng-container>\\r\\n                </div>          \\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row   *ngIf=\\\"canShowPaypalMessage()\\\">\\r\\n              <ion-col>\\r\\n                <div class=\\\"padding\\\">\\r\\n                  <p style=\\\"color: red\\\">{{paypalMessage}}</p>\\r\\n              </div>\\r\\n              </ion-col>\\r\\n            </ion-row>                        \\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>      \\r\\n  </ion-row>\\r\\n  <ion-row>\\r\\n    <svg height=\\\"0\\\" width=\\\"0\\\" viewBox=\\\"0 0 27.7 28.93\\\">\\r\\n      <defs>\\r\\n        <clipPath id=\\\"pay-btn-shape1\\\" >\\r\\n          <path d=\\\"M2.57,17.21A11.18,11.18,0,0,1,9.17,5.77h.06l.17-.22.11-.23c-1-.73-1.56-1.42-1.39-2,.42-1.32,5-1.17,10.22.33S27.43,7.47,27,8.81c-.16.48-.86.76-1.88.86h0v.1a5,5,0,0,0,.08.66,3.77,3.77,0,0,0,.1.46l.07.23c2,4,1.7,8.37-1.73,12.53a12.23,12.23,0,0,1-18.42-.1A11.55,11.55,0,0,1,2.57,17.21Z\\\" />            \\r\\n        </clipPath>        \\r\\n      </defs>\\r\\n    </svg>\\r\\n    <ion-col size=\\\"12\\\" class=\\\"ion-text-center wrap-pay-btn\\\" *ngIf=\\\"canPay()\\\"  (click)=\\\"showPayment(userPayMethodForm.value)\\\">\\r\\n      <svg id=\\\"pay-btn1\\\" preserveAspectRatio=\\\"xMidYMid slice\\\" viewBox=\\\"0 0 27.7 28.93\\\">\\r\\n        <path  class=\\\"arc-part\\\" d=\\\"M5.91,6.89a12.25,12.25,0,0,0-4.14,9.27,11.14,11.14,0,0,0,.16,1.7,12.82,12.82,0,0,0,.42,1.66c.08.27.19.54.29.8A8.24,8.24,0,0,0,3,21.1a14.85,14.85,0,0,0,.82,1.5,12.25,12.25,0,0,0,3.5,3.62,13.49,13.49,0,0,0,8,2.21,15.81,15.81,0,0,0,1.7-.17,13.74,13.74,0,0,0,1.69-.37,12.79,12.79,0,0,0,5.65-3.5,11.63,11.63,0,0,0,1.88-2.83,12.11,12.11,0,0,0,1.06-3.27,11,11,0,0,0-.94-6.84A10.42,10.42,0,0,1,27.23,13a10.65,10.65,0,0,1,.63,1.71,11.3,11.3,0,0,1,.22,3.64,12.78,12.78,0,0,1-.94,3.56,12.11,12.11,0,0,1-1.88,3.17,12.84,12.84,0,0,1-1.31,1.33,13.32,13.32,0,0,1-1.49,1.12,14,14,0,0,1-3.37,1.59,13,13,0,0,1-1.82.43,17.17,17.17,0,0,1-1.88.21,14.31,14.31,0,0,1-3.77-.27,14.55,14.55,0,0,1-5.12-2.19,11.53,11.53,0,0,1-1.41-1.17A13.92,13.92,0,0,1,.92,18a10.3,10.3,0,0,1-.08-1.88A12.36,12.36,0,0,1,3.31,9.34,10.42,10.42,0,0,1,5.91,6.89ZM7.27,3.35a1.52,1.52,0,0,1-.08-.78,1.82,1.82,0,0,1,.32-.76A2.29,2.29,0,0,1,9,1,6.31,6.31,0,0,1,9.78.89h2.36a25.76,25.76,0,0,1,6.19,1,23.94,23.94,0,0,1,5.74,2.5,20.58,20.58,0,0,1,2.56,1.83,3.84,3.84,0,0,1,1,1.27,1.29,1.29,0,0,1,.08.84,1.24,1.24,0,0,1-.47.64,1.21,1.21,0,0,0,.29-.67,1,1,0,0,0-.21-.65,3.64,3.64,0,0,0-1.07-.94c-.86-.53-1.75-1-2.66-1.47A34.29,34.29,0,0,0,18,3.06,38.16,38.16,0,0,0,12,1.84c-.5-.06-1-.11-1.52-.15l-.73-.13a6.42,6.42,0,0,0-.73,0A1.88,1.88,0,0,0,7.77,2,1.57,1.57,0,0,0,7.27,3.35Z\\\" />\\r\\n        <g class=\\\"pay-btn-border\\\">\\r\\n          <rect x=\\\"1.35\\\" y=\\\"0.56\\\" width=\\\"25.09\\\" height=\\\"26.44\\\" class=\\\"inner-pot\\\" />\\r\\n        </g>\\r\\n        <path class=\\\"pot-entry\\\" d=\\\"M22,6.27c-1.13-.38-2.45-.85-3.86-1.22-1-.28-2.17-.57-3.11-.75-2.64-.47-4.52-.57-4.62-.09-.09.19.19.57.75.85A24.19,24.19,0,0,0,17.46,7.4a22.19,22.19,0,0,0,7.07,1.13c.38-.09.66-.19.66-.28C25.32,7.9,24.05,7.15,22,6.27Z\\\" />\\r\\n        <text class=\\\"pay-text\\\"><tspan style=\\\"letter-spacing: -0.05859375em\\\">P</tspan><tspan x=\\\"4.94\\\" y=\\\"0\\\" style=\\\"letter-spacing: -0.087890625em\\\">A</tspan><tspan x=\\\"10.56\\\" y=\\\"0\\\">Y</tspan></text>\\r\\n      </svg>     \\r\\n      <div class=\\\"glow-wrap\\\">\\r\\n        <i class=\\\"glow\\\"></i>\\r\\n      </div>          \\r\\n    </ion-col>\\r\\n  </ion-row> \\r\\n  <ion-row  *ngIf=\\\"paypalLoading\\\">\\r\\n    <ion-col>\\r\\n      <p class=\\\"ion-text-center ion-padding\\\">\\r\\n        <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n      </p>\\r\\n    </ion-col>\\r\\n  </ion-row> \\r\\n  <ion-row *ngIf=\\\"canShowPaypalButton()\\\">\\r\\n    <ion-col class=\\\"ion-padding\\\" size=\\\"12\\\">\\r\\n      <div #paypalbuttoncontainer id=\\\"paypal-button-container\\\"></div> \\r\\n    </ion-col>\\r\\n  </ion-row>  \\r\\n</ion-grid>\\r\\n</form> \\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb250cmlidXRpb24tbG9hbi5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { TontineService } from 'src/app/dashboard/my-tontines/services/tontine.service';\r\nimport { EventService } from '../service/events.service';\r\n\r\n@Component({\r\n  selector: 'app-contribution',\r\n  templateUrl: './contribution.component.html',\r\n  styleUrls: ['./contribution.component.scss'],\r\n})\r\nexport class ContributionComponent implements OnInit {\r\n\r\n  @Input() tontineName: string;\r\n  @Input() amountPay: number;\r\n  @Input() balance: number;\r\n  @Input() currency: string;\r\n\r\n  isModeSelected: boolean[];\r\n  currentTontine: any;\r\n\r\n  constructor(\r\n    private modatCtrl: ModalController,\r\n    private tontine: TontineService,\r\n    private event: EventService\r\n  ) { \r\n      this.event.subscribe('modal-close', data => {\r\n        if (data && data.result){\r\n          this.closeContribute(data.result);\r\n        } \r\n      });\r\n      this.initSelect();\r\n      this.currentTontine = this.tontine.getCurrentTontineData();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isModeSelected[0] = true;\r\n  }\r\n\r\n  // init select mode\r\n  initSelect() {\r\n    this.isModeSelected = [];\r\n    for(let i = 0; i < 3; i++) {\r\n      this.isModeSelected.push(false);\r\n    }\r\n  }\r\n\r\n  segmentChanged(event) {\r\n    let i = 0;\r\n    while(i < this.isModeSelected.length) {\r\n      if (i === parseInt(event.detail.value)) {\r\n        this.isModeSelected[i] = true;\r\n      } else {\r\n        this.isModeSelected[i] = false;\r\n      }\r\n      i++;\r\n    }\r\n  }\r\n\r\n  closeContribute(ans: any) {\r\n    this.modatCtrl.dismiss(ans, 'cancel');\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ErrorService } from '../service/error.service';\r\nimport { TontineService } from 'src/app/dashboard/my-tontines/services/tontine.service';\r\nimport { PaymentErrorService } from '../service/payment-error.service';\r\nimport { LoanService } from 'src/app/dashboard/my-tontines/tontine-detail/loans/service/loan.service';\r\nimport { EventService } from '../service/events.service';\r\nimport { UiService } from '../service/ui.service';\r\n\r\n@Component({\r\n  selector: 'app-cashmode-loan',\r\n  templateUrl: './cashmode-loan.component.html',\r\n  styleUrls: ['./cashmode-loan.component.scss'],\r\n})\r\nexport class CashmodeLoanComponent implements OnInit {\r\n\r\n  @Input() amountPay: number;\r\n  @Input() balance: number;\r\n  @Input() type: string;\r\n\r\n  paymentForm: FormGroup;\r\n  validationMessages: any;\r\n  loadingPay: boolean;\r\n  currentTontine: any;\r\n  contributionData: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private translate: TranslateService,\r\n    private events: EventService,\r\n    private tontine: TontineService,\r\n    private error: ErrorService,\r\n    private loanService: LoanService,\r\n    private ui: UiService,\r\n    private paymentError: PaymentErrorService\r\n  ) {\r\n\r\n    this.loadingPay = false;\r\n    this.currentTontine = this.tontine.getCurrentTontineData();\r\n    this.contributionData = this.loanService.getLoanData();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initFomMessage();\r\n    this.initCashPayment();\r\n  }\r\n\r\n  // Getters\r\n  get amount() {\r\n    return this.paymentForm.get('montant_total');\r\n  }\r\n\r\n  // Init xash payment\r\n  initCashPayment() {\r\n    this.paymentForm = this.fb.group({\r\n      currency: [this.contributionData.currency_name],\r\n      montant_total: [{ value: this.amountPay, disabled: this.type === 'interest' ? true : false }, Validators.compose([Validators.required, Validators.min(1), Validators.max(this.amountPay)])],\r\n      proofMessage: [''],\r\n      receipt: [''],\r\n      liste_proof: [[]]\r\n    });\r\n  }\r\n\r\n  // Init the form message\r\n  initFomMessage() {\r\n    this.translate.get(['REGISTER_PHONE_REQUIRED', 'AMOUNT_REQUIRED', 'PAID_MODE_REQUIRED', 'M_COUNTRY_REQUIRED'])\r\n      .subscribe(value => {\r\n        this.validationMessages = {\r\n          payementtype: [\r\n            { type: 'required', message: value.PAID_MODE_REQUIRED }\r\n          ],\r\n          phone: [\r\n            { type: 'required', message: value.REGISTER_PHONE_REQUIRED },\r\n          ],\r\n          amount: [\r\n            { type: 'required', message: value.AMOUNT_REQUIRED }\r\n          ],\r\n          country_id: [\r\n            { type: 'required', message: value.M_COUNTRY_REQUIRED }\r\n          ]\r\n        };\r\n      });\r\n  }\r\n\r\n  // update parameters\r\n  updateParameters(data: any) {\r\n    let amountToPay = parseFloat(this.paymentForm.value.montant_total);\r\n    const itemList = data.list_loan;\r\n    let currentAmount = 0;\r\n    const itemUpdates = [];\r\n    itemList.forEach(loan => {\r\n      currentAmount = amountToPay - parseFloat(loan.amount);\r\n      if (currentAmount >= 0) {\r\n        itemUpdates.push(loan);\r\n        amountToPay = currentAmount;\r\n      } else {\r\n        if (amountToPay > 0) {\r\n          itemUpdates.push({ loan_request_id: loan.loan_request_id, amount: amountToPay });\r\n        }\r\n        amountToPay = 0;\r\n      }\r\n    });\r\n    data.list_loan = itemUpdates;\r\n    return data;\r\n  }\r\n\r\n  // paid loan with cash\r\n  paidWithCash(contributionData: any) {\r\n    this.paymentForm.get('liste_proof').setValue([{\r\n      montant: contributionData.type === 'loan-interest' ? this.paymentForm.value.montant_total : this.amountPay,\r\n      description: this.paymentForm.value.proofMessage,\r\n      receipt: this.paymentForm.value.receipt\r\n    }]);\r\n    switch (contributionData.type) {\r\n      case 'loan-interest':\r\n        const param1 = this.updateParameters(contributionData);\r\n        param1.liste_proof = this.paymentForm.value.liste_proof;\r\n        param1.montant_total = this.paymentForm.value.montant_total;\r\n        this.paidWithCashLoanAndInterest(param1);\r\n        break;\r\n      case 'interest':\r\n        const param2 = contributionData;\r\n        param2.liste_proof = this.paymentForm.value.liste_proof;\r\n        param2.montant_total = this.amountPay;\r\n        this.paidWithCashInterest(param2);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // Paid the contribution with cash\r\n  paidWithCashLoanAndInterest(contributionData: any) {\r\n    this.loadingPay = true;\r\n    this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n      this.ui.presentLoading(value);\r\n    });\r\n    this.loanService.payManyLoanAndInterestWithCash(contributionData)\r\n      .subscribe((reponse: any) => {\r\n        this.loadingPay = false;\r\n        this.ui.dismissLoading();\r\n        if (reponse && reponse.message === 'success') {\r\n          this.translate.get('CONFIRM_PAY_CONTRIBUTION_MSG1').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n          this.initCashPayment();\r\n          this.events.publish('modal-close', { result: 'complete' });\r\n        }\r\n      }, error => {\r\n        this.loadingPay = false;\r\n        if (error && error.error && error.error.message === 'error') {\r\n          if (error.error.user_not_found) {\r\n            this.loadingPay = true;\r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.ui.dismissLoading();\r\n                this.paidWithCashLoanAndInterest(contributionData);\r\n              } else {\r\n                this.ui.dismissLoading();\r\n                this.loadingPay = false;\r\n              }\r\n            });\r\n          } else {\r\n            this.ui.dismissLoading();\r\n            this.paymentError.managePaymentOnlineError(error);\r\n          }\r\n\r\n        } else {\r\n          this.ui.dismissLoading();\r\n          this.error.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  paidWithCashInterest(contributionData: any) {\r\n    this.loadingPay = true;\r\n    this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n      this.ui.presentLoading(value);\r\n    });\r\n    this.loanService.payManyLoanInterestWithCash(contributionData)\r\n      .subscribe((reponse: any) => {\r\n        this.loadingPay = false;\r\n        this.ui.dismissLoading();\r\n        if (reponse && reponse.message === 'success') {\r\n          this.translate.get('CONFIRM_PAY_CONTRIBUTION_MSG1').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n          this.initCashPayment();\r\n          this.events.publish('modal-close', { result: 'complete' });\r\n        }\r\n      }, error => {\r\n        \r\n        this.loadingPay = false;\r\n        if (error && error.error && error.error.message === 'error') {\r\n          if (error.error.user_not_found) {\r\n            this.loadingPay = true;\r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.ui.dismissLoading();\r\n                this.paidWithCashInterest(contributionData);\r\n              } else {\r\n                this.ui.dismissLoading();\r\n                this.loadingPay = false;\r\n              }\r\n            });\r\n          } else {\r\n            this.ui.dismissLoading();\r\n            this.paymentError.managePaymentOnlineError(error);\r\n          }\r\n        } else {\r\n          this.ui.dismissLoading();\r\n          this.error.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYWlkbW9kZS1zZWFuY2UtY2F1dGlvbi5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<form [formGroup]=\\\"userPayMethodForm\\\">\\r\\n  <p class=\\\"ion-text-center\\\"  *ngIf=\\\"loadingOperator\\\">\\r\\n    <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n  </p>\\r\\n<ion-grid>\\r\\n  <ion-row>\\r\\n    <ion-col size=\\\"12\\\">\\r\\n      <ion-card class=\\\"paidmode\\\">\\r\\n        <ion-card-content class=\\\"ion-text-center\\\">    \\r\\n          <ion-row>\\r\\n            <ion-col size=\\\"12\\\">\\r\\n              <ion-item>\\r\\n                <ion-label>{{'COUNTRY_TEXT' | translate}}</ion-label>\\r\\n                <ion-select (ionChange)=\\\"updateCurrencyCountry(userPayMethodForm.value.country_id)\\\" name=\\\"country_id\\\" formControlName=\\\"country_id\\\">\\r\\n                  <ion-select-option [value]=\\\"country.country_id\\\" *ngFor=\\\"let country of states\\\">{{ country.country_label }}</ion-select-option>          \\r\\n                </ion-select>\\r\\n              </ion-item>   \\r\\n              <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.country_id\\\">\\r\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"country.hasError(validation.type) && (country.dirty || country.touched)\\\">\\r\\n                    <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                    {{ validation.message }}\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>     \\r\\n            </ion-col>\\r\\n          </ion-row>       \\r\\n            <ion-row class=\\\"ion-justify-content-end\\\" *ngIf=\\\"userPayMethodForm.value.country_id && paymentMethods && paymentMethods.length > 0\\\">\\r\\n              <ion-col size=\\\"4\\\">\\r\\n                <ion-img [src]=\\\"paymentMethods && paymentMethods[userPayMethodForm.value.typePaymentIndex] ? paymentMethods[userPayMethodForm.value.typePaymentIndex].logo : ' '\\\" class=\\\"logooperator\\\"></ion-img>\\r\\n              </ion-col>\\r\\n            </ion-row>  \\r\\n            <ion-row  *ngIf=\\\"userPayMethodForm.value.country_id && paymentMethods && paymentMethods.length > 0\\\">\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label>{{ 'USER_PROFILE_TEXT4' | translate }}</ion-label>\\r\\n                  <ion-select (ionChange)=\\\"updatePaymentMethod(userPayMethodForm.value.typePaymentIndex)\\\" name=\\\"typePaymentIndex\\\" formControlName=\\\"typePaymentIndex\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let operator of paymentMethods; let operatorId = index\\\"\\r\\n                    [value]=\\\"operatorId\\\">{{ operator.name }}</ion-select-option>           \\r\\n                  </ion-select>\\r\\n                </ion-item>   \\r\\n                <div class=\\\"validation-errors\\\">\\r\\n                  <ng-container *ngFor=\\\"let validation of validationMessages.payementtype\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"payementtype.hasError(validation.type) && (payementtype.dirty || payementtype.touched)\\\">\\r\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                      {{ validation.message }}\\r\\n                    </div>\\r\\n                  </ng-container>\\r\\n                </div>   \\r\\n              </ion-col>\\r\\n            </ion-row> \\r\\n            <ion-row  *ngIf=\\\"checkMobileOperator()\\\">\\r\\n              <ion-col size=\\\"4\\\">\\r\\n                <ion-item >\\r\\n                  <ion-label position=\\\"floating\\\">+</ion-label>\\r\\n                  <ion-input placeholder=\\\"{{userPayMethodForm.value.country_prefix}}\\\" type=\\\"text\\\"></ion-input>\\r\\n                </ion-item>        \\r\\n              </ion-col>\\r\\n              <ion-col size=\\\"8\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">{{ 'REGISTER_MPHONE' | translate }}</ion-label>\\r\\n                  <ion-input (ionChange)=\\\"checckEmailOrPhone(userPayMethodForm.value.phone,userPayMethodForm.value.typePaymentIndex)\\\" type=\\\"tel\\\" formControlName=\\\"phone\\\"></ion-input>\\r\\n                </ion-item> \\r\\n              </ion-col>\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <div class=\\\"validation-errors\\\">\\r\\n                  <ng-container *ngFor=\\\"let validation of validationMessages.phone\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"phone.hasError(validation.type) && (phone.dirty || phone.touched)\\\">\\r\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                      {{ validation.message }}\\r\\n                    </div>\\r\\n                  </ng-container>\\r\\n                </div>\\r\\n                <div class=\\\"validation-errors\\\" *ngIf=\\\"errorPhone\\\">\\r\\n                    <div class=\\\"error-message\\\">\\r\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                      <span [innerHTML]=\\\"'USER_DETAIL_TEXT11' | translate\\\"></span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                     \\r\\n              </ion-col>\\r\\n            </ion-row> \\r\\n            <ion-row>\\r\\n              <ion-col>\\r\\n                <div class=\\\"padding\\\"\\r\\n                *ngIf=\\\"canShowPaypalMessage()\\\">\\r\\n                <p style=\\\"color: red\\\">{{paypalMessage}}</p>\\r\\n              </div>\\r\\n              </ion-col>\\r\\n            </ion-row>                           \\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>      \\r\\n  </ion-row>\\r\\n  <ion-row>\\r\\n    <svg height=\\\"0\\\" width=\\\"0\\\" viewBox=\\\"0 0 27.7 28.93\\\">\\r\\n      <defs>\\r\\n        <clipPath id=\\\"pay-btn-shape\\\" >\\r\\n          <path d=\\\"M2.57,17.21A11.18,11.18,0,0,1,9.17,5.77h.06l.17-.22.11-.23c-1-.73-1.56-1.42-1.39-2,.42-1.32,5-1.17,10.22.33S27.43,7.47,27,8.81c-.16.48-.86.76-1.88.86h0v.1a5,5,0,0,0,.08.66,3.77,3.77,0,0,0,.1.46l.07.23c2,4,1.7,8.37-1.73,12.53a12.23,12.23,0,0,1-18.42-.1A11.55,11.55,0,0,1,2.57,17.21Z\\\" />            \\r\\n        </clipPath>        \\r\\n      </defs>\\r\\n    </svg>\\r\\n    <ion-col size=\\\"12\\\" class=\\\"ion-text-center wrap-pay-btn\\\" *ngIf=\\\"canPay()\\\"  (click)=\\\"showPayment(userPayMethodForm.value)\\\">\\r\\n      <svg id=\\\"pay-btn\\\" preserveAspectRatio=\\\"xMidYMid slice\\\" viewBox=\\\"0 0 27.7 28.93\\\">\\r\\n        <path  class=\\\"arc-part\\\" d=\\\"M5.91,6.89a12.25,12.25,0,0,0-4.14,9.27,11.14,11.14,0,0,0,.16,1.7,12.82,12.82,0,0,0,.42,1.66c.08.27.19.54.29.8A8.24,8.24,0,0,0,3,21.1a14.85,14.85,0,0,0,.82,1.5,12.25,12.25,0,0,0,3.5,3.62,13.49,13.49,0,0,0,8,2.21,15.81,15.81,0,0,0,1.7-.17,13.74,13.74,0,0,0,1.69-.37,12.79,12.79,0,0,0,5.65-3.5,11.63,11.63,0,0,0,1.88-2.83,12.11,12.11,0,0,0,1.06-3.27,11,11,0,0,0-.94-6.84A10.42,10.42,0,0,1,27.23,13a10.65,10.65,0,0,1,.63,1.71,11.3,11.3,0,0,1,.22,3.64,12.78,12.78,0,0,1-.94,3.56,12.11,12.11,0,0,1-1.88,3.17,12.84,12.84,0,0,1-1.31,1.33,13.32,13.32,0,0,1-1.49,1.12,14,14,0,0,1-3.37,1.59,13,13,0,0,1-1.82.43,17.17,17.17,0,0,1-1.88.21,14.31,14.31,0,0,1-3.77-.27,14.55,14.55,0,0,1-5.12-2.19,11.53,11.53,0,0,1-1.41-1.17A13.92,13.92,0,0,1,.92,18a10.3,10.3,0,0,1-.08-1.88A12.36,12.36,0,0,1,3.31,9.34,10.42,10.42,0,0,1,5.91,6.89ZM7.27,3.35a1.52,1.52,0,0,1-.08-.78,1.82,1.82,0,0,1,.32-.76A2.29,2.29,0,0,1,9,1,6.31,6.31,0,0,1,9.78.89h2.36a25.76,25.76,0,0,1,6.19,1,23.94,23.94,0,0,1,5.74,2.5,20.58,20.58,0,0,1,2.56,1.83,3.84,3.84,0,0,1,1,1.27,1.29,1.29,0,0,1,.08.84,1.24,1.24,0,0,1-.47.64,1.21,1.21,0,0,0,.29-.67,1,1,0,0,0-.21-.65,3.64,3.64,0,0,0-1.07-.94c-.86-.53-1.75-1-2.66-1.47A34.29,34.29,0,0,0,18,3.06,38.16,38.16,0,0,0,12,1.84c-.5-.06-1-.11-1.52-.15l-.73-.13a6.42,6.42,0,0,0-.73,0A1.88,1.88,0,0,0,7.77,2,1.57,1.57,0,0,0,7.27,3.35Z\\\" />\\r\\n        <g class=\\\"pay-btn-border\\\">\\r\\n          <rect x=\\\"1.35\\\" y=\\\"0.56\\\" width=\\\"25.09\\\" height=\\\"26.44\\\" class=\\\"inner-pot\\\" />\\r\\n        </g>\\r\\n        <path class=\\\"pot-entry\\\" d=\\\"M22,6.27c-1.13-.38-2.45-.85-3.86-1.22-1-.28-2.17-.57-3.11-.75-2.64-.47-4.52-.57-4.62-.09-.09.19.19.57.75.85A24.19,24.19,0,0,0,17.46,7.4a22.19,22.19,0,0,0,7.07,1.13c.38-.09.66-.19.66-.28C25.32,7.9,24.05,7.15,22,6.27Z\\\" />\\r\\n        <text class=\\\"pay-text\\\"><tspan style=\\\"letter-spacing: -0.05859375em\\\">P</tspan><tspan x=\\\"4.94\\\" y=\\\"0\\\" style=\\\"letter-spacing: -0.087890625em\\\">A</tspan><tspan x=\\\"10.56\\\" y=\\\"0\\\">Y</tspan></text>\\r\\n      </svg>       \\r\\n      <div class=\\\"glow-wrap\\\">\\r\\n        <i class=\\\"glow\\\"></i>\\r\\n      </div>          \\r\\n    </ion-col>\\r\\n  </ion-row> \\r\\n  <ion-row  *ngIf=\\\"paypalLoading\\\">\\r\\n    <ion-col>\\r\\n      <p class=\\\"ion-text-center ion-padding\\\">\\r\\n        <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n      </p>\\r\\n    </ion-col>\\r\\n  </ion-row> \\r\\n  <ion-row *ngIf=\\\"canShowPaypalButton()\\\">\\r\\n    <ion-col class=\\\"ion-padding\\\" size=\\\"12\\\">\\r\\n      <div #paypalbuttoncontainer id=\\\"paypal-button-container\\\"></div> \\r\\n    </ion-col>\\r\\n  </ion-row> \\r\\n</ion-grid>\\r\\n</form> \\r\\n\";","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'stringTruncate'\r\n})\r\nexport class StringTruncatePipe implements PipeTransform {\r\n\r\n  transform(value: any, param: number): any {\r\n    if (value) {\r\n      const currentString = String(value);\r\n      return currentString &&  currentString.length  <  param ? currentString : currentString.substring(0,param) + '...';\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { LanguageData, Language } from '../models/language';\r\nimport { States } from '../models/countries';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LocalStorageService } from './local-storage.service';\r\nimport { UtilService } from './util.service';\r\nimport { ApiService } from './api.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocationService {\r\n\r\n  baseUrl = 'https://restcountries.eu/rest/v2/';\r\n  private subject = new Subject<any>();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private api: ApiService,\r\n    private translate: TranslateService,\r\n    private localStorage: LocalStorageService,\r\n    private util: UtilService\r\n  ) {\r\n\r\n  }\r\n\r\n\r\n  sendTranslation(dataTranslation: any) {\r\n    this.subject.next({ translation: dataTranslation });\r\n  }\r\n\r\n  getTranslation(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  // set the current country code\r\n  setAllCountriesData(countries: any) {\r\n    this.localStorage.setItem('countries', countries);\r\n  }\r\n\r\n  // Get the currentCounty code\r\n  getAllCountriesData() {\r\n    const countries = this.localStorage.getItem('countries');\r\n    return countries ? countries : [];\r\n  }\r\n\r\n  // set the current country code\r\n  setCurrentCountryPrefix(code: string) {\r\n    this.localStorage.setItem('country_code', code);\r\n  }\r\n\r\n  // Get the currentCounty code\r\n  getCurrentCountyPrefix() {\r\n\r\n    return this.localStorage.getItem('country_code');\r\n  }\r\n\r\n  // Get the current user country\r\n  getAllCountry() {\r\n    const countries = this.localStorage.getItem('all-countries');\r\n    return countries ? countries : [];\r\n  }\r\n\r\n  // Set the current user country\r\n  setAllCountry(countryData: any) {\r\n    this.localStorage.setItem('all-countries',countryData);\r\n  }\r\n\r\n  // Get the current user country\r\n  removeAllCountry() {\r\n    this.localStorage.removeItem('all-countries');\r\n  }\r\n\r\n  // Get the current user country\r\n  getCurrentUserCountry() {\r\n    return this.localStorage.getItem('user-country');\r\n  }\r\n\r\n  // Set the current user country\r\n  setCurrentUserCountry(countryData: any) {\r\n    this.localStorage.setItem('user-country',countryData);\r\n  }\r\n\r\n  // get the current user country\r\n  removeCurrentUserCountry() {\r\n    this.localStorage.removeItem('user-country');\r\n  }\r\n\r\n  // Get the current user Language\r\n  getCurrentUserLanguage() {\r\n    return this.localStorage.getItem('user-language');\r\n  }\r\n\r\n  // Set the current user Language\r\n  setCurrentUserLanguage(countryData: any) {\r\n    this.localStorage.setItem('user-language', countryData);\r\n  }\r\n\r\n  // get the current user Language\r\n  removeCurrentUserLanguage() {\r\n    this.localStorage.removeItem('user-language');\r\n  }\r\n\r\n  // Get the current user Language translation\r\n  getCurrentLanguageTranslation() {\r\n    return this.localStorage.getItem('language-translation');\r\n  }\r\n\r\n  // Set the current user Language translation\r\n  setCurrentLanguageTranslation(countryData: any) {\r\n    this.localStorage.setItem('language-translation', countryData);\r\n  }\r\n\r\n  // get the current user Language translation\r\n  removeCurrentLanguageTranslation() {\r\n    this.localStorage.removeItem('language-translation');\r\n  }\r\n\r\n  // Get the current user Language translation\r\n  getAllCurrentCountryLanguages() {\r\n    return this.localStorage.getItem('all-country-languages');\r\n  }\r\n\r\n  // Set the current user Language translation\r\n  setAllCurrentCountryLanguages(countryData: any) {\r\n    this.localStorage.setItem('all-country-languages', countryData);\r\n  }\r\n\r\n  // get the current user Language translation\r\n  removeAllCurrentCountryLanguages() {\r\n    this.localStorage.removeItem('all-country-languages');\r\n  }\r\n\r\n  // Get the current user country Language\r\n  getACurrentCountryLanguages() {\r\n    return this.localStorage.getItem('current-country-languages');\r\n  }\r\n\r\n  // Set the current user country Language\r\n  setCurrentCountryLanguages(languageData: any) {\r\n    this.localStorage.setItem('current-country-languages', languageData);\r\n  }\r\n\r\n  // get the current user  country Language\r\n  removeCurrentCountryLanguages() {\r\n    this.localStorage.removeItem('current-country-languages');\r\n  }\r\n\r\n  // get the default country language\r\n  getDefaultCountryLanguageData() {\r\n    return this.localStorage.getItem('default-country-languages');\r\n  }\r\n\r\n  // Set the default country language\r\n  setDefaultCountryLanguageData(languageData: any) {\r\n    this.localStorage.setItem('default-country-languages', languageData);\r\n  }\r\n\r\n  // remove the default country language\r\n  removeDefaultCountryLanguageData() {\r\n    return this.localStorage.getItem('default-country-languages');\r\n  }\r\n\r\n    // Get all word counytries\r\n    getwordCountriesData() {\r\n      return this.localStorage.getItem('word-countries');\r\n    }\r\n  \r\n    // Set all word countries\r\n    setwordCountriesData(countries: any) {\r\n      this.localStorage.setItem('word-countries', countries);\r\n    }\r\n  \r\n    // Set all word countries\r\n    removewordCountriesData() {\r\n      this.localStorage.removeItem('word-countries');\r\n    }\r\n\r\n  // Get all country\r\n  getAllCountriesInfos(refresher: boolean) {\r\n    return new Promise((resolve) => {\r\n      const countries = this.getAllCountriesData();\r\n      if (refresher || countries.length === 0) {\r\n        this.api.get('setting/v1/country').subscribe(data => {\r\n          if (data && data.liste_country && data.liste_country.length > 0) {\r\n            const countries = this.util.orderByPosition(data.liste_country);\r\n            const countriesList = [];\r\n            countries.forEach(country => {\r\n              // filter by active  && country.settings.active === 1\r\n              if (country && country.settings) {\r\n                countriesList.push(country);\r\n              }\r\n            });\r\n            this.setAllCountriesData(countriesList);\r\n            resolve(countriesList);\r\n          } else {\r\n            resolve(this.getAllCountriesData());\r\n          }\r\n        }, error => {\r\n          resolve(this.getAllCountriesData());\r\n        });\r\n      } else {\r\n        resolve(this.getAllCountriesData());\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  // Get country information\r\n  getLastVersion() {\r\n    return this.api.get(`version/get`);\r\n  }\r\n\r\n  // check if app is the last version\r\n  checkVersion(type: string) {\r\n    return new Promise((resolve) => {\r\n      this.getLastVersion().subscribe(reponse => {\r\n        if (reponse && reponse.message === 'success') {\r\n          switch (type) {\r\n            case 'android':\r\n               resolve({version: 'DOWN', data: reponse.version_android});\r\n              break;\r\n            case 'ios':\r\n              resolve({version: 'DOWN', data: reponse.version_ios});\r\n              break;\r\n            default:\r\n              resolve({version: 'OK' });\r\n              break;\r\n          }\r\n\r\n        } else {\r\n          resolve({ version: 'OK' });\r\n        }\r\n      }, error => {\r\n        resolve({ version: 'OK' });\r\n      });\r\n    });\r\n  }\r\n\r\n  // Get country information\r\n  getInfoCountry(countryId: any) {\r\n    return this.api.get(`setting/v1/forAcountry/${countryId}`);\r\n  }\r\n\r\n  // Get current user position\r\n  getPositionUser() {\r\n    return this.http.get('https://pro.ip-api.com/json/?key=OTLs8gHCV0rJyYz');\r\n  }\r\n\r\n\r\n  // Get the currency country data informations of word\r\n  getCurrentWordCountryInfo(refresher: boolean) {\r\n    return new Promise((resolve) => {\r\n      this.getPositionUser().subscribe((position: any) => {\r\n        this.getWordCountries(refresher).then((countries: any) => {\r\n          if (countries && countries.length > 0) {\r\n            let currentCountryData = null;\r\n            countries.forEach(country => {\r\n              if (position.countryCode === country.code_country) {\r\n                currentCountryData = country;\r\n              }\r\n            });\r\n            resolve(currentCountryData);\r\n          } else {\r\n            resolve(null);\r\n          }\r\n        });\r\n      }, error => {\r\n        resolve(null);\r\n      });\r\n    });\r\n  }\r\n\r\n  // get all countries\r\n  getAllcountriesData() {\r\n    return new Observable((observer) => {\r\n    this.http.get(`${this.baseUrl}all`).subscribe((countries: any) => {\r\n        observer.next(countries);\r\n      }, error => {\r\n        this.http.get(`assets/json/countries.json`).subscribe((countries: any) => { observer.next(countries); });\r\n      }); \r\n    });\r\n  }\r\n\r\n  // Get all the word countries\r\n  getWordCountries(refresh: boolean) {\r\n    return new Promise((resolve) => {\r\n      const countries = this.getwordCountriesData();\r\n      if (countries && countries.length === 0 || refresh) {\r\n        this.getAllcountriesData().subscribe((countries: any) => {\r\n          if (countries && countries.length > 0) {\r\n            this.api.get('setting/v1/country').subscribe(data => {\r\n              if (data && data.liste_country && data.liste_country.length > 0) {\r\n                const states = [];\r\n                countries.forEach(country => {\r\n                  const countryLabel = `COUNTRY_${country.alpha2Code}`;\r\n                  let countryId = 0;\r\n                  let defaultCountry = 'no';\r\n                  let active = 0;\r\n                  data.liste_country.forEach(currentCountry => {\r\n                    if (currentCountry.settings.active === 1 && currentCountry.settings.code_country === country.alpha2Code) {\r\n                      countryId = currentCountry.settings.country_id;\r\n                      active = 1;\r\n                    }\r\n                    if (currentCountry.settings.default_country === 'yes') {\r\n                      defaultCountry = currentCountry.settings.default_country;\r\n                    }\r\n                  });\r\n\r\n                  this.translate.get(countryLabel).subscribe(value => {\r\n                    states.push({\r\n                      country_id: countryId,\r\n                      country_name: country.name,\r\n                      active: active,\r\n                      country_flag: country.flag,\r\n                      country_prefixe: country.callingCodes[0],\r\n                      code_country: country.alpha2Code,\r\n                      default_country: defaultCountry,\r\n                      country_label: value,\r\n                      country_key: countryLabel\r\n                    });\r\n                  });\r\n                });\r\n                this.setwordCountriesData(states);\r\n                resolve(states);\r\n              } else {\r\n                resolve(this.getwordCountriesData());\r\n              }\r\n\r\n            }, error => {\r\n              resolve(this.getwordCountriesData());\r\n            });\r\n\r\n          } else {\r\n\r\n            resolve(this.getwordCountriesData());\r\n          }\r\n\r\n        });\r\n      } else {\r\n        resolve(countries);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Get all countries\r\n  getAllCountries(refresher: boolean) {\r\n    return new Promise((resolve) => {\r\n      this.getAllCountriesInfos(refresher).then((countries: any) => {\r\n        const countriesData: States[] = [];\r\n        if (countries && countries.length > 0) {\r\n          countries.forEach(country => {\r\n            countriesData.push(country.settings);\r\n          });\r\n          this.setAllCountry(countriesData);\r\n          resolve(countriesData);\r\n        } else {\r\n          const countriesList = this.getAllCountry();\r\n          if (countriesList && countriesList.length > 0) {\r\n            resolve(countriesList);\r\n          } else {\r\n            resolve([]);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // Get the default country\r\n  getDefaultCountry(refresher: boolean) {\r\n    return new Promise((resolve) => {\r\n      this.getAllCountries(refresher).then((countries: any) => {\r\n        if (countries && countries.length > 0) {\r\n          countries.forEach(country => {\r\n            if (country && country.default_country === 'yes') {\r\n              this.setCurrentUserCountry(country);\r\n              resolve(country);\r\n            }\r\n          });\r\n        } else {\r\n          resolve(this.getCurrentUserCountry());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // Get the currency country data informations\r\n  getCurrentCountryInfo(refresher: boolean) {\r\n    return new Promise((resolve) => {\r\n      this.getPositionUser().subscribe((position: any) => {\r\n        this.getAllCountriesInfos(refresher).then((countries: any) => {\r\n          if (countries && countries.length > 0) {\r\n            let currentCountryData = null;\r\n            countries.forEach(country => {\r\n              if (position.countryCode === country.settings.code_country) {\r\n                currentCountryData = country;\r\n              }\r\n            });\r\n            if (currentCountryData) {\r\n              this.setCurrentUserCountry(currentCountryData.settings);\r\n              resolve(currentCountryData);\r\n            } else {\r\n              resolve(currentCountryData);\r\n            }\r\n\r\n          } else {\r\n            resolve(this.getCurrentUserCountry());\r\n          }\r\n        });\r\n      }, error => {\r\n        resolve(this.getCurrentUserCountry());\r\n      });\r\n    });\r\n  }\r\n\r\n  // Get all languages\r\n  getACountryLanguages(countryCode: string, refresher: boolean) {\r\n    return new Promise((resolve) => {\r\n      this.getAllCountriesInfos(refresher).then((countries: any) => {\r\n        let languagesData: Language[] = [];\r\n        if (countries && countries.length > 0) {\r\n          countries.forEach(country => {\r\n            if (country.settings.code_country === countryCode) {\r\n              languagesData = country.langues_country;\r\n            }\r\n          });\r\n          this.setAllCurrentCountryLanguages(languagesData);\r\n          resolve(languagesData);\r\n        } else {\r\n          const languages = this.getAllCurrentCountryLanguages();\r\n          if (languages && languages.length > 0) {\r\n            resolve(languages);\r\n          } else {\r\n            resolve([]);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // Get the default country Languages\r\n  getDefaultCountryLanguage(countryCode: string, refresher: boolean) {\r\n    return new Promise((resolve) => {\r\n      this.getACountryLanguages(countryCode, refresher).then((langues: any) => {\r\n        if (langues && langues.length > 0) {\r\n          langues.forEach(langueData => {\r\n            if (langueData && langueData.langue && langueData.langue.default_langue === 'yes') {\r\n              this.setDefaultCountryLanguageData(langueData);\r\n              resolve(langueData);\r\n            }\r\n          });\r\n        } else {\r\n          const userLanguage = this.getDefaultCountryLanguageData();\r\n          if (userLanguage) {\r\n            resolve(userLanguage);\r\n          } else {\r\n            resolve(null);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // Get Languages data Translation\r\n  getDataTranslate(language: Language[], lang: string) {\r\n    let langueData: LanguageData[] = [];\r\n    language.forEach(langue => {\r\n      if (langue.langue.code_langue === lang) {\r\n        langueData = langue.keywords;\r\n      }\r\n    });\r\n    return langueData;\r\n  }\r\n\r\n  // Get the language data\r\n  getLanguages(refresher: boolean) {\r\n    return new Promise((resolve) => {\r\n      // step 1 :  Get all session Languages\r\n      const languagesData = this.getAllCurrentCountryLanguages();\r\n      if (languagesData && languagesData.length > 0 && !refresher) {\r\n        resolve(languagesData);\r\n      } else {\r\n\r\n        // step 2  Get the user country languages\r\n        const userCountry = this.getCurrentUserCountry();\r\n        if (userCountry && userCountry.code_country) {\r\n          this.getACountryLanguages(userCountry.code_country, refresher).then((languages: any) => {\r\n            if (languages) {\r\n              this.setAllCurrentCountryLanguages(languages);\r\n              resolve(languages);\r\n            } else {\r\n              resolve([]);\r\n            }\r\n          });\r\n        } else {\r\n\r\n          // step 3 the current country languages\r\n          this.getCurrentCountryInfo(refresher).then((country: any) => {\r\n            if (country && country.settings && country.settings.code_country) {\r\n              this.getACountryLanguages(country.settings.code_country, refresher).then((languages: any) => {\r\n                if (languages) {\r\n                  this.setAllCurrentCountryLanguages(languages);\r\n                  resolve(languages);\r\n                } else {\r\n                  resolve([]);\r\n                }\r\n              });\r\n            } else {\r\n              // step 4  Get the default country languages\r\n              this.getDefaultCountry(refresher).then((countryDatas: any) => {\r\n                if (countryDatas) {\r\n                  this.getACountryLanguages(countryDatas.code_country, refresher).then((languages: any) => {\r\n                    if (languages) {\r\n                      this.setAllCurrentCountryLanguages(languages);\r\n                      resolve(languages);\r\n                    } else {\r\n                      resolve([]);\r\n                    }\r\n                  });\r\n                }\r\n              });\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  // Get the value of a keyword\r\n  getValueTranslation(key: string, translationDta: LanguageData[], params?: string[]): string {\r\n    const langueData: LanguageData[] = translationDta;\r\n    let translation = '';\r\n    if (langueData) {\r\n      langueData.forEach(data => {\r\n        if (data && data.keyword === key) {\r\n          if (data && data.params && params && params.length > 0) {\r\n            const tempTranslation = data.value;\r\n            let formatParams: string[] = [];\r\n            formatParams = data.params.split(';');\r\n            formatParams.forEach(keyParam => {\r\n              tempTranslation.replace(keyParam, params[formatParams.indexOf(keyParam)]);\r\n            });\r\n            translation = tempTranslation;\r\n          } else {\r\n            translation = data.value;\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    return translation;\r\n  }\r\n\r\n  // Get the list of value of keywords\r\n  getTranslationsData(keys: string[]): Observable<any> {\r\n    const langueData: LanguageData[] = this.getCurrentLanguageTranslation();\r\n    let i = 0;\r\n    let found = false;\r\n    const translation = [];\r\n\r\n    return new Observable(subscriber => {\r\n\r\n      keys.forEach(key => {\r\n        found = false;\r\n        i = 0;\r\n        while (langueData && i < langueData.length && !found) {\r\n          if (langueData[i] && langueData[i].keyword === key) {\r\n            translation[key] = langueData[i].value;\r\n          }\r\n          i++;\r\n        }\r\n      });\r\n      subscriber.next(translation);\r\n    });\r\n  }\r\n\r\n  // Get the value of a keyword\r\n  getTranslationData(key: string, params?: string[]): Observable<any> {\r\n    const langueData: LanguageData[] = this.getCurrentLanguageTranslation();\r\n    let i = 0;\r\n    let found = false;\r\n    let translation = {};\r\n    return new Observable(subscriber => {\r\n      found = false;\r\n      while (langueData && i < langueData.length && !found) {\r\n        if (langueData[i] && langueData[i].keyword === key) {\r\n          if (langueData[i] && langueData[i].params && params && params.length > 0) {\r\n            const tempTranslation = langueData[i].value;\r\n            let formatParams: string[] = [];\r\n            formatParams = langueData[i].params.split(';');\r\n            formatParams.forEach(keyParam => {\r\n              tempTranslation.replace(keyParam, params[formatParams.indexOf(keyParam)]);\r\n            });\r\n            translation = { [key]: tempTranslation };\r\n          } else {\r\n            translation = { [key]: langueData[i].value };\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n\r\n      subscriber.next(translation);\r\n\r\n    });\r\n  }\r\n\r\n  // Set the current country of the user\r\n  setUserCountry(countryId: number) {\r\n    const countries = this.getAllCountriesData();\r\n    countries.forEach(country => {\r\n      if (country.settings.country_id === countryId) {\r\n        this.setCurrentUserCountry(country.settings);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Get current counries Languages\r\n  getCountryLanguages(countryCode: string, refresher: boolean) {\r\n    this.getACountryLanguages(countryCode, refresher).then((languages: any) => {\r\n      if (languages) {\r\n        this.setAllCurrentCountryLanguages(languages);\r\n      }\r\n    });\r\n  }\r\n\r\n  // get default country Language\r\n  getDefaultcountrylanguage(country: any, refresher: boolean) {\r\n    this.getDefaultCountryLanguage(country.code_country, refresher).then((languages: any) => {\r\n      if (languages) {\r\n        this.setCurrentUserLanguage(languages.langues);\r\n        this.setCurrentLanguageTranslation(languages.keywords);\r\n        this.sendTranslation(languages.keywords);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Get the defaultf country, languages and Translation\r\n  getDefaultCountryLanguagesAndTranslation(refresher: boolean) {\r\n    this.getDefaultCountry(refresher).then((country: any) => {\r\n      if (country && country.settings) {\r\n        this.setCurrentUserCountry(country.settings);\r\n        this.getCountryLanguages(country.settings.code_country, refresher);\r\n        this.getDefaultcountrylanguage(country.settings, refresher);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  // Get the current country, languages and Translation\r\n  getCurrentCountryLanguagesAndTranslation(refresher: boolean) {\r\n    const currentCountry = this.getCurrentUserCountry();\r\n    if (currentCountry) {\r\n      this.setCurrentUserCountry(currentCountry);\r\n      this.getCountryLanguages(currentCountry.code_country, refresher);\r\n      this.getDefaultcountrylanguage(currentCountry, refresher);\r\n    } else {\r\n      this.getCurrentCountryInfo(refresher).then((country: any) => {\r\n        if (country) {\r\n          this.setCurrentUserCountry(country.settings);\r\n          this.getCountryLanguages(country.settings.code_country, refresher);\r\n          this.getDefaultcountrylanguage(country.settings, refresher);\r\n        } else {\r\n          this.getDefaultCountryLanguagesAndTranslation(refresher);\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { ApiService } from 'src/app/shared/service/api.service';\r\nimport { EventService } from 'src/app/shared/service/events.service';\r\nimport { LocalStorageService } from 'src/app/shared/service/local-storage.service';\r\nimport { UserService } from '../../user/service/user.service';\r\n\r\nexport interface TontineEvent {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  country: string;\r\n  currency: string;\r\n  imgUrl: string;\r\n  startOn: string;\r\n  endOn: string;\r\n  budget: number;\r\n  visibility: string;\r\n  status: string;\r\n  contribution: number;\r\n  members?: EventMember[];\r\n}\r\n\r\nexport interface EventMember {\r\n  id: number;\r\n  name: string;\r\n  tel: string;\r\n  email: string;\r\n  isAnonym: boolean;\r\n  gift: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TontinesEventsService {\r\n  typeTontineName: string;\r\n  private subject = new Subject<any>();\r\n  token: string;\r\n\r\n  constructor(\r\n    public api: ApiService,\r\n    private userService: UserService,\r\n    private event: EventService,\r\n    private localStorage: LocalStorageService\r\n  ) {\r\n    this.typeTontineName = '';\r\n    this.token = this.userService.getUserToken();\r\n    this.event.subscribe('new-token', token => {\r\n      this.token = token;\r\n    });\r\n  }\r\n\r\n\r\n  sendMessageInvitation(message: any) {\r\n    this.subject.next({ isInvitation: message });\r\n  }\r\n\r\n  getMessageInvitationEvent(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  // Get the current user\r\n  getCurrentTontineEventData(): any {\r\n    return this.localStorage.getItem('tontine-data-event');\r\n  }\r\n\r\n  // Get the current user\r\n  setCurrentTontineEventData(tontineEventData: any) {\r\n    this.localStorage.setItem('tontine-data-event', tontineEventData);\r\n  }\r\n\r\n  // Create the tontine\r\n  createTontineEventPost(tontine) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('tontine_event/v1/create/' + this.token, JSON.stringify(tontine));\r\n  }\r\n\r\n  // Edit the tontine\r\n  editTontineEventPost(tontine) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('tontine_event/v1/edit/' + this.token, tontine);\r\n  }\r\n\r\n  // Get the user tontine default\r\n  getMyTontineEventDefault() {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('tontine_event/v1/user/all_by_default/' + this.token);\r\n  }\r\n\r\n  // Get the user tontine\r\n  getMyTontineEvent(idCountry: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('tontine_event/v1/user/all/' + this.token + '/' + idCountry);\r\n  }\r\n\r\n  // Get all tontine events for a country\r\n  getAllTontineEvent(idCountry: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('tontine_event/v1/all/' + this.token + '/' + idCountry);\r\n  }\r\n\r\n  // Get all tontine events for a country\r\n  getAllCountriesTontineEvent() {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('tontine_event/v1/all_events/' + this.token);\r\n  }\r\n\r\n\r\n  // Get the  tontine information\r\n  getTontineDetail(tontineId: number) {\r\n    return this.api.get('tontine_event/v1/detail/' + tontineId);\r\n  }\r\n\r\n  // Get the  tontine information\r\n  deleteTontine(tontineId: number) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('tontine_event/v1/delete/' + this.token, tontineId);\r\n  }\r\n\r\n  // Send the tontine invitation\r\n  sendInvitation(invitation: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('tontine_event/v1/invitation/participants/' + this.token, invitation);\r\n  }\r\n\r\n\r\n  // Get the tontine invitation code\r\n  resendInvitationEvent(invitation: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('tontine_event/v1/invitation/resendCode/' + this.token, invitation);\r\n  }\r\n\r\n  // send a notification message to TOUPESU TEAM\r\n  sendNotification(notification: any) {\r\n    return this.api.post('tontine_event/v1/send/notification', notification);\r\n  }\r\n\r\n  getMessagingEvent(tontineId: number) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get('tontine_event/v1/get/notifications/' + tontineId + '/' +\r\n      this.token);\r\n  }\r\n\r\n  // Get all events for invitations\r\n  getAllEventsForInvitations() {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get(`tontine_event/v1/events/for/invitation/${this.token}`);\r\n  }\r\n\r\n  // ========================== Manage User Invitation ========================================= //\r\n\r\n  // Get all invitations\r\n  getAllEventsInvitations(eventId: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get(`tontine_event/v1/invitation/participants/all/${this.token}/${eventId}`);\r\n  }\r\n\r\n\r\n  // Get all userss events invitations \r\n  getAllEventsInvitation() {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.get(`tontine_event/v1/my/invitation/member/all/${this.token}`);\r\n  }\r\n\r\n  // Accept the request event invitation by admin\r\n  declineEventInvitationAdmin(invitation: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('tontine_event/v1/invitation/admin_event/refuseJoin/' + this.token, invitation);\r\n  }\r\n\r\n  // Decline the request event invitation by admin\r\n  AcceptEventInvitationAdmin(invitation: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('tontine_event/v1/invitation/admin_event/acceptJoin/' + this.token, invitation);\r\n  }\r\n\r\n  // Decline admin invitation by user\r\n  declineEventInvitation(invitation: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post('tontine_event/v1/invitation/participant/refuseJoinEvent/' + this.token, invitation);\r\n  }\r\n\r\n  // Join an event by a user\r\n  acceptInvitationEvent(invitation: any) {\r\n    return this.api.post('tontine_event/v1/invitation/participant/acceptJoinEvent', invitation);\r\n  }\r\n\r\n  // Accept the admin  invitation to join an event with token \r\n  acceptInvitationEventWithToken(invitation: any) {\r\n    const token = this.userService.getUserToken();\r\n    return this.api.post(`tontine_event/v1/invitation/participant/acceptJoinEventToken/${token}`, invitation);\r\n  }\r\n  \r\n}\r\n","export default \"<form [formGroup]=\\\"paymentForm\\\">\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"12\\\">        \\r\\n        <ion-card class=\\\"paidmode\\\">\\r\\n          <ion-card-content class=\\\"ion-text-center\\\">\\r\\n              <ion-row class=\\\"ion-padding-bottom\\\">\\r\\n                <ion-col size=\\\"12\\\">\\r\\n                  <ion-item>\\r\\n                    <ion-label position=\\\"floating\\\">{{ 'AMOUNT_PAY_TEXT' | translate }}</ion-label>\\r\\n                    <ion-input type=\\\"number\\\" formControlName=\\\"montant\\\"></ion-input>\\r\\n                  </ion-item> \\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"12\\\">\\r\\n                  <ion-item>\\r\\n                    <ion-label position=\\\"floating\\\">{{ 'REASON_TEXT' | translate }}</ion-label>\\r\\n                    <ion-textarea  type=\\\"text\\\"  formControlName=\\\"reason\\\"></ion-textarea>\\r\\n                  </ion-item> \\r\\n                  <div class=\\\"validation-errors\\\">\\r\\n                    <ng-container *ngFor=\\\"let validation of validationMessages.reason\\\">\\r\\n                      <div class=\\\"error-message\\\" *ngIf=\\\"reason.hasError(validation.type) && (reason.dirty || reason.touched)\\\">\\r\\n                        <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                        {{ validation.message }}\\r\\n                      </div>\\r\\n                    </ng-container>\\r\\n                  </div>          \\r\\n                </ion-col>\\r\\n              </ion-row>                            \\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n      </ion-col>      \\r\\n    </ion-row>\\r\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\r\\n      <ion-col size=\\\"auto\\\">\\r\\n        <ion-button expand=\\\"full\\\" [disabled]=\\\"paymentForm.invalid || loadingPay\\\"\\r\\n              (click)=\\\"makePayment()\\\"\\r\\n              color=\\\"warning\\\" \\r\\n              class=\\\"ion-text-uppercase\\\"\\r\\n              shape=\\\"round\\\"\\r\\n              >\\r\\n         {{ 'DEBT_MAKE_PAYMENT' | translate }}\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>  \\r\\n    <ion-row *ngIf=\\\"loadingPay\\\">\\r\\n      <p class=\\\"ion-text-center\\\" >\\r\\n        <ion-spinner  name=\\\"circles\\\"></ion-spinner> \\r\\n      </p>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n  </form> \\r\\n  \";","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'toDateObj'\n})\nexport class ToDateObjPipe implements PipeTransform {\n\n  transform(value: any): any {\n\n    if (value) {\n        const temp = value.toString().replace(' ', 'T');\n        return new Date(temp);\n    } else {\n        return null;\n    }\n}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYWlkbW9kZS1zd2FwLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb250cmlidXRpb24tb3JkZXIuY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { UiService } from 'src/app/shared/service/ui.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SwapErrorService {\r\n\r\n  constructor(\r\n    private translate: TranslateService,\r\n    private ui: UiService\r\n  ) { }\r\n\r\n  manageWalletError(error: any) {\r\n\r\n    if (error.error.remplir_tous_les_champs) {\r\n      this.translate.get('CONFIRM_PAY_CONTRIBUTION_MSG3').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.user_not_exist) {\r\n      this.translate.get('USER_NOT_EXIST').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.currency_from_not_exist) {\r\n      this.translate.get('CURRENCY_FROM_NOT_EXIST').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.currency_to_not_exist) {\r\n      this.translate.get('CURRENCY_TO_NOT_EXIST').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.type_swap_id_not_exist) {\r\n      this.translate.get('TYPE_SWAP_TO_NOT_EXIST').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.solde_wallet_is_not_sufficient) {\r\n      this.translate.get('SOLDE_WALLET_IS_NOT_SUFFICIENT').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.swap_request_id_not_exist) {\r\n      this.translate.get('SWAP_REQUEST_ID_NOT_EXIST').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.swap_request_id_already_matched) {\r\n      this.translate.get('SWAP_REQUEST_ALREADY_MATCHED').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.insufficient_balance) {\r\n      this.translate.get('SWAP_INSUFFICIENT_BALANCE',{amount: error.error.amount_to_recharge, currency: error.error.currency}).subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    if (error.error.swap_request_id_is_still_pending) {\r\n      this.translate.get('CAN_ARCHIVE_SWAP_TEXT').subscribe(trans => {\r\n        this.ui.presentToast(trans);\r\n      });\r\n    }\r\n\r\n    \r\n\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, NgZone } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ErrorService } from '../service/error.service';\r\nimport {  AlertController, NavController } from '@ionic/angular';\r\nimport { LocationService } from '../service/location.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TontineService } from 'src/app/dashboard/my-tontines/services/tontine.service';\r\nimport { ApiService } from '../service/api.service';\r\nimport { DebtsManagerService } from 'src/app/dashboard/my-tontines/services/debts-manager.service';\r\nimport { Router } from '@angular/router';\r\nimport { PaymentErrorService } from '../service/payment-error.service';\r\nimport { PaymentGlobalDataService } from '../service/payment-global-data.service';\r\nimport { EventService } from '../service/events.service';\r\nimport { UserService } from 'src/app/dashboard/user/service/user.service';\r\nimport { UiService } from '../service/ui.service';\r\nimport { PluginService } from '../service/plugin.service';\r\n\r\n\r\ninterface PaymentMethod {\r\n  id: number;\r\n  logo: string;\r\n  currency: string;\r\n  country_id: number;\r\n  name: string;\r\n  placeholder ?: string;\r\n  handling_fees?: number ;\r\n  type_handling_fees ?: string; \r\n}\r\n\r\n@Component({\r\n  selector: 'app-paidmode-debt-order',\r\n  templateUrl: './paidmode-debt-order.component.html',\r\n  styleUrls: ['./paidmode-debt-order.component.scss'],\r\n})\r\nexport class PaidmodeDebtOrderComponent implements OnInit {\r\n\r\n  paymentMethods: PaymentMethod[];\r\n  paypalMessage: string;\r\n  userPayMethodForm: FormGroup;\r\n  currentCountryId: number;\r\n  states: any;\r\n  loadingOperator: boolean;\r\n  tontineData: any;\r\n  contributionData: any;\r\n  errorPhone: boolean;\r\n  loading: boolean;\r\n  cron: any;\r\n  timeOut: any;\r\n  contributionDataParams: any;\r\n  pin: string;\r\n  spinner: any;\r\n  browser: any;\r\n  allPaymentMethods: any;\r\n  userData:any;\r\n  currentDebtData: any;\r\n  paymentForm: FormGroup;\r\n  reference: string;\r\n  validationMessages: any;\r\n  paypalLoading: boolean;\r\n  paypal_initialized: boolean;\r\n\r\n  @Input() amountPay: number;\r\n  @Input() balance: number;\r\n\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private tontine: TontineService,\r\n    private events: EventService,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private debt:DebtsManagerService,\r\n    private paymentData: PaymentGlobalDataService,\r\n    private navController: NavController,\r\n    private alertController: AlertController,\r\n    private errorService: ErrorService,\r\n    private location: LocationService,\r\n    private translate: TranslateService,\r\n    private paymentError: PaymentErrorService,\r\n    private zone: NgZone,\r\n    private ui: UiService,\r\n    private plugin: PluginService\r\n  ) {\r\n    this.cron = null;\r\n    this.timeOut = null;\r\n    this.loadingOperator = false;\r\n    this.loading = false;\r\n    this.errorPhone = false;\r\n    this.states = [];\r\n    this.paymentMethods = [];\r\n    this.paypalMessage = '';\r\n    this.tontineData = this.tontine.getCurrentTontineData();\r\n    this.userData = this.userService.getUserData();\r\n    this.allPaymentMethods = [];\r\n    this.currentDebtData = this.debt.getDebtsData();\r\n    this.contributionData =  this.currentDebtData;\r\n\r\n    this.paypalLoading = false;\r\n    this.paypal_initialized = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAllMethodPaymentType();\r\n    this.initFormMessage();\r\n    this.initPaymentForm();\r\n  }\r\n\r\n  // Form getters\r\n  get amountError() {\r\n    return this.userPayMethodForm.get('montantRef');\r\n  }\r\n\r\n  get country() {\r\n    return this.userPayMethodForm.get('country_id');\r\n  }\r\n\r\n  get device_name() {\r\n    return this.userPayMethodForm.get('device_name');\r\n  }\r\n\r\n  get payementtype() {\r\n    return this.userPayMethodForm.get('typePaymentIndex');\r\n  }\r\n\r\n  get montantContributeError() {\r\n    return this.userPayMethodForm.get('montant');\r\n  }\r\n\r\n  get reason() {\r\n    return this.userPayMethodForm.get('reason');\r\n  }\r\n\r\n  get proof() {\r\n    return this.userPayMethodForm.get('receipt');\r\n  }\r\n\r\n\r\n  // form init message\r\n  initFormMessage() {\r\n    this.translate.get(['REGISTER_PHONE_REQUIRED', 'AMOUNT_REQUIRED', 'PAID_MODE_REQUIRED','M_COUNTRY_REQUIRED','DEBT_REASON_MSG_REQUIRED_TEXT'])\r\n      .subscribe(value => {\r\n        this.validationMessages = {\r\n          payementtype: [\r\n            { type: 'required', message: value.PAID_MODE_REQUIRED }\r\n          ],\r\n          phone: [\r\n            { type: 'required', message: value.REGISTER_PHONE_REQUIRED },\r\n          ],\r\n          amount: [\r\n            { type: 'required', message: value.AMOUNT_REQUIRED }\r\n          ],\r\n          country_id: [\r\n            { type: 'required', message: value.M_COUNTRY_REQUIRED }\r\n          ],\r\n          \r\n        reason: [\r\n          { type: 'required', message: value.DEBT_REASON_MSG_REQUIRED_TEXT }\r\n        ]\r\n        };\r\n      });\r\n  }\r\n\r\n  // Init form\r\n  initPaymentForm() {\r\n    const currentPayment = this.paymentData.getDefaultPaymentMethod();\r\n    this.userPayMethodForm = this.fb.group({\r\n      country_id: ['', Validators.required],\r\n      country_prefix: [''],\r\n      countryId: [''],\r\n      device_name: [''],\r\n      currency: [''],\r\n      currencyLabel: [''],\r\n      user_id:[ this.userData.id, Validators.required],\r\n      bouffe_id:[this.currentDebtData ? this.currentDebtData.bouffe_id : '', Validators.required],\r\n      device_id:[this.currentDebtData ? this.currentDebtData.device_id : '', Validators.required],\r\n      reason:[''],\r\n      receipt:[''],\r\n      liste_proof:[''],\r\n      montant: [this.balance, Validators.compose([Validators.required,Validators.min(1),Validators.max(this.balance)])],\r\n      type_payment_id: [currentPayment ? currentPayment.typepaiement_id : ''],\r\n      type_payment_name: [currentPayment ? currentPayment.name : ''],\r\n      typePaymentIndex: [0, Validators.required]\r\n    });\r\n  }\r\n\r\n  // Get the payment proofs\r\n   getProof() {\r\n      this.plugin.getPicture().subscribe((picture : any) => {\r\n          if (picture) {\r\n            setTimeout(() => {\r\n              this.userPayMethodForm.get('receipt').setValue(picture);\r\n            }, 200);\r\n          } \r\n      });\r\n  }\r\n\r\n  // get all payment method\r\n  getAllMethodPaymentType() {\r\n    this.loadingOperator = true;\r\n    this.userService.getAllMethodPaymentType().subscribe((reponse: any) => {\r\n      this.paymentMethods = [];\r\n      this.loadingOperator = false;\r\n      if (reponse && reponse.typePayment && reponse.typePayment.length > 0) {\r\n        this.paymentMethods = this.paymentData.formatPaymentMethodForDebt(reponse.typePayment);\r\n      }\r\n      const defaultMethod: PaymentMethod[] = [{\r\n        id: 0, country_id: 0, logo: 'assets/wallet-icon.svg',\r\n        currency: this.contributionData.device_name, name: 'BANK TRANSFERT', placeholder: '',\r\n        handling_fees :  0,\r\n        type_handling_fees : 'valeur'\r\n      }];\r\n      this.paymentMethods = defaultMethod.concat(this.paymentMethods);\r\n      this.allPaymentMethods = this.paymentMethods;\r\n      this.getCountries(false);\r\n    }, error => {\r\n      this.loadingOperator = false;\r\n      this.paymentMethods.push({\r\n        id: 0, country_id: 0, logo: 'assets/wallet-icon.svg',\r\n        currency: this.contributionData.device_name, name: 'BANK TRANSFERT', placeholder: '',\r\n        handling_fees :  0,\r\n        type_handling_fees : 'valeur'\r\n      });\r\n      this.allPaymentMethods = this.paymentMethods;\r\n      this.getCountries(false);\r\n      this.errorService.manageError(error);\r\n    });\r\n  }\r\n\r\n  // Get all countries\r\n  getCountries(refresher: boolean) {\r\n    this.location.getAllCountries(refresher).then((countries: any) => {\r\n      this.states = this.paymentData.formatCountriesData(countries);\r\n      // Set the country of the tontine\r\n      if (this.states && this.states.length > 0) {\r\n        setTimeout(()  => {\r\n          this.states.forEach(country => {\r\n            if (country.country_key === this.tontineData.tontine.country_key) {\r\n              this.updateFormData(country);\r\n            }\r\n          });\r\n        }, 200);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  // update the form data\r\n  updateFormData(country: any) {\r\n    if (country) {\r\n      this.userPayMethodForm.get('countryId').setValue(country.country_id);\r\n      this.userPayMethodForm.get('currency').setValue(country.device_name);\r\n      this.userPayMethodForm.get('currencyLabel').setValue(country.currency_label);\r\n      this.zone.run(() => {\r\n        this.userPayMethodForm.get('country_id').setValue(country.country_id);\r\n      });\r\n      this.updatePaymentsMethods(country.country_id);\r\n    }\r\n  }\r\n\r\n  // Update the payment method\r\n  updatePaymentMethod(index) {\r\n    if (this.paymentMethods[index]) {\r\n      this.userPayMethodForm.get('type_payment_id').setValue(this.paymentMethods[index].id);\r\n      this.userPayMethodForm.get('type_payment_name').setValue(this.paymentMethods[index].name);\r\n      this.userPayMethodForm.get('device_name').setValue(this.paymentMethods[index].currency);\r\n      this.zone.run(() => {\r\n        this.userPayMethodForm.get('typePaymentIndex').setValue(index);\r\n      });\r\n    }\r\n  }\r\n\r\n  updatePaymentsMethods(countryId: number) {\r\n    // update the payment method\r\n    const paymentsMethods = [];\r\n    this.paymentMethods = [];\r\n    this.allPaymentMethods.forEach(payment => {\r\n      if (payment.country_id === countryId || payment.country_id === 0) {\r\n        paymentsMethods.push(payment);\r\n      }\r\n    });\r\n    this.paymentMethods = paymentsMethods;\r\n    if (this.paymentMethods && this.paymentMethods.length > 0) {\r\n      this.updatePaymentMethod(0);\r\n    }\r\n  }\r\n\r\n  // Update the country info country prfix\r\n  updateCurrencyCountry(countryId: number) {\r\n    this.zone.run(() => {\r\n      this.paymentMethods = [];\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.states.forEach(state => {\r\n        if (state.country_id === countryId) {\r\n          this.updateFormData(state);\r\n        }\r\n      });\r\n    }, 300);\r\n  }\r\n\r\n  // make the payment\r\n  async paymentWalletConfirm(dataMessage: any, translation: string[]) {\r\n    const alert = await this.alertController.create({\r\n      header: `${translation[4]}`,\r\n      message: `${translation[0]} ${dataMessage.montant}\r\n      ${dataMessage.device_name} ${translation[1]}`,\r\n      buttons: [\r\n        {\r\n          text: `${translation[2]}`,\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n\r\n          }\r\n        }, {\r\n          text: `${translation[3]}`,\r\n          handler: () => {\r\n            switch(dataMessage.type_payment_name) {\r\n            \r\n              case 'BANK TRANSFERT': \r\n                this.bankPayment();\r\n                break;\r\n  \r\n              default : \r\n              this.paidWithOperatorWallet();\r\n              break;  \r\n            }\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n\r\n  // Show the payment mode\r\n  showPayment(data: any) {\r\n        const translation = [];\r\n        this.translate.get(['BENEFICIARY_PAY_TEXT', 'CONFIRM_PAY_CONTRIBUTION_SUBTEXT2', 'CANCEL_TEXT', 'YES_TEXT','BENEFICIARY_PAMENT']).subscribe(trans => {\r\n          translation.push(trans.BENEFICIARY_PAY_TEXT);\r\n          translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT2);\r\n          translation.push(trans.CANCEL_TEXT);\r\n          translation.push(trans.YES_TEXT);\r\n          translation.push(trans.BENEFICIARY_PAMENT);\r\n          this.paymentWalletConfirm(data, translation);\r\n        });\r\n  }\r\n\r\n\r\n  /******************************** START OPERATOR PAYMENT *********************************************/\r\n\r\n  // Paid the contribution with wallet\r\n  paidWithOperatorWallet() {\r\n    this.userPayMethodForm.get('liste_proof').setValue([{\r\n      montant: this.userPayMethodForm.value.montant, \r\n      typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n      receipt : this.userPayMethodForm.value.receipt\r\n    }]);\r\n    this.loading = true;\r\n    this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n      this.ui.presentLoading(value);\r\n    });\r\n    this.debt.makePaymentOperatorWallet(this.userPayMethodForm.value)\r\n      .subscribe((reponse: any) => {\r\n        this.loading = false;\r\n        this.ui.dismissLoading();\r\n        if (reponse && reponse.message === 'success') {\r\n          this.translate.get('DEBT_PAYMENT_BENEFICIAL_SUCCES_MSG').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n          this.events.publish('modal-close');\r\n          this.navController.setDirection('root');\r\n          this.router.navigate(['/', 'dashboard', 'my-tontines', this.tontineData.tontine.tontine_id]);\r\n        }\r\n      }, error => {\r\n       \r\n       \r\n        if (error && error.error && error.error.message === 'error') {\r\n          if (error.error.user_not_found) {\r\n      \r\n            this.errorService.renewSession().then((data: any) => {\r\n                if (data && data.result === \"OK\") {\r\n                    this.ui.dismissLoading();\r\n                    this.paidWithOperatorWallet();\r\n                } else {\r\n                  this.loading = false;\r\n                  this.ui.dismissLoading();\r\n                }\r\n            });\r\n          } else {\r\n            this.loading = false;\r\n            this.ui.dismissLoading();\r\n            this.paymentError.managePaymentOnlineError(error);\r\n          }\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.errorService.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  /******************************** START BANK PAYMENT *********************************************/\r\n  // bank paiement\r\n      bankPayment() {\r\n        this.userPayMethodForm.get('liste_proof').setValue([{\r\n          montant: this.userPayMethodForm.value.montant, \r\n          description: this.userPayMethodForm.value.reason, \r\n          receipt: this.userPayMethodForm.value.receipt   \r\n        }]);\r\n        this.loading = true;\r\n        this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        this.debt.makePaymentTradiBank(this.userPayMethodForm.value).subscribe((reponse: any) => {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          if (reponse && reponse.message === 'success') {\r\n              this.translate.get('DEBT_PAYMENT_BENEFICIAL_SUCCES_MSG').subscribe(trans => {\r\n                this.ui.presentToast(trans);\r\n              });\r\n            this.events.publish('modal-close');\r\n            this.navController.setDirection('root');\r\n            this.router.navigate(['/', 'dashboard', 'my-tontines', this.tontineData.tontine.tontine_id,'session-no-paid']);\r\n          }\r\n        }, error => {\r\n          \r\n            if (error && error.error) {\r\n              if (error.error.user_not_found) {\r\n        \r\n                this.errorService.renewSession().then((data: any) => {\r\n                    if (data && data.result === \"OK\") {\r\n                        this.ui.dismissLoading();\r\n                        this.bankPayment();\r\n                    } else {\r\n                      this.loading = false;\r\n                      this.ui.dismissLoading();\r\n                    }\r\n                });\r\n              } else {\r\n                this.loading = false;\r\n                this.ui.dismissLoading();\r\n                this.paymentError.managePaymentOnlineError(error);\r\n              }\r\n            } else {\r\n              this.loading = false;\r\n              this.ui.dismissLoading();\r\n              this.errorService.manageError(error);\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button slot=\\\"icon-only\\\" (click)=\\\"closeModal()\\\">\\r\\n        <ion-icon color=\\\"warning\\\" name=\\\"close\\\" ></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title class=\\\"ion-text-center subtitle\\\">\\r\\n      {{ 'TONTINE_LIST_TEXT1' | translate }}\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar>\\r\\n      <ion-searchbar placeholder=\\\"{{ 'M_NAME_TEXT' | translate }}\\\" type=\\\"text\\\" debounce=\\\"500\\\" (ionChange)=\\\"searchForInvitation($event)\\\" type=\\\"text\\\"></ion-searchbar>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  \\r\\n  <ion-grid *ngIf=\\\"listData && listData.length > 0 \\\">\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"12\\\">\\r\\n        <ion-radio-group (ionChange)=\\\"selectData($event)\\\">\\r\\n          <ion-item *ngIf=\\\"type==='notification'\\\">\\r\\n            <ion-label>{{ 'ALL_TONTINE' | translate}}</ion-label>\\r\\n            <ion-radio slot=\\\"end\\\" [value]=\\\"{id: -1, name: ('ALL_TONTINE' | translate) }\\\"></ion-radio>\\r\\n          </ion-item>\\r\\n          <ion-item  *ngFor=\\\"let data of listData\\\">\\r\\n            <ion-label>{{ data && data.name ? data.name : '' }}</ion-label>\\r\\n            <ion-radio slot=\\\"end\\\" [value]=\\\"data\\\"></ion-radio>\\r\\n          </ion-item>\\r\\n        </ion-radio-group>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n  <ion-infinite-scroll threshold=\\\"250px\\\" (ionInfinite)=\\\"infinteScrollData($event)\\\">\\r\\n    <ion-infinite-scroll-content\\r\\n      loadingSpinner=\\\"bubbles\\\"\\r\\n      loadingText=\\\"{{ 'M_LOADING_MORE_DATA' | translate }}\\\">\\r\\n    </ion-infinite-scroll-content>\\r\\n  </ion-infinite-scroll>\\r\\n</ion-content>\";","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { TontineService } from 'src/app/dashboard/my-tontines/services/tontine.service';\r\nimport { EventService } from '../service/events.service';\r\n\r\n@Component({\r\n  selector: 'app-contribution-loan',\r\n  templateUrl: './contribution-loan.component.html',\r\n  styleUrls: ['./contribution-loan.component.scss'],\r\n})\r\nexport class ContributionLoanComponent implements OnInit {\r\n\r\n  @Input() tontineName: string;\r\n  @Input() amountPay: number;\r\n  @Input() balance: number;\r\n  @Input() currency: string;\r\n  @Input() type: string;\r\n\r\n  isModeSelected: boolean[];\r\n  currentTontine: any;\r\n\r\n  constructor(\r\n    private modatCtrl: ModalController,\r\n    private tontine: TontineService,\r\n    private event: EventService\r\n  ) { \r\n      this.event.subscribe('modal-close', data => {\r\n        if (data && data.result){\r\n          this.closeContribute(data.result);\r\n        } \r\n      });\r\n      this.initSegmentControls();\r\n      this.currentTontine = this.tontine.getCurrentTontineData();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isModeSelected[0] = true;\r\n  }\r\n\r\n  // init the segment controls\r\n  initSegmentControls() {\r\n    this.isModeSelected = [];\r\n    for (let i = 0; i < 3; i++) {\r\n      this.isModeSelected.push(false);\r\n    }\r\n  }\r\n\r\n  // check segment action\r\n  segmentChanged(event) {\r\n    let i = 0;\r\n    while(i < this.isModeSelected.length) {\r\n      if (i === parseInt(event.detail.value)) {\r\n        this.isModeSelected[i] = true;\r\n      } else {\r\n        this.isModeSelected[i] = false;\r\n      }\r\n      i++;\r\n    }\r\n  }\r\n\r\n  // Close the contribution modal\r\n  closeContribute(ans: any) {\r\n    this.modatCtrl.dismiss(ans, 'cancel');\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYXNobW9kZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\r\nimport { ApiService } from 'src/app/shared/service/api.service';\r\nimport { UserService } from '../../user/service/user.service';\r\nimport { EventService } from 'src/app/shared/service/events.service';\r\nimport { LocalStorageService } from 'src/app/shared/service/local-storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DebtsManagerService {\r\n\r\n  token: string;\r\n  constructor(\r\n    private userService: UserService,\r\n    private api: ApiService,\r\n    private event: EventService,\r\n    private localStorage: LocalStorageService\r\n  ) {\r\n    this.token = this.userService.getUserToken();\r\n    this.event.subscribe('new-token', token => {\r\n      this.token = token;\r\n    });\r\n  }\r\n\r\n  // send the debts Data\r\n  sendDebtsData(data) {\r\n    this.localStorage.setItem('debts-data', data);\r\n  }\r\n\r\n  // Get the debts Data\r\n  getDebtsData() {\r\n    return this.localStorage.getItem('debts-data');\r\n  }\r\n\r\n  removeDebtsData() {\r\n    this.localStorage.removeItem('debts-data');\r\n  }\r\n\r\n  // Get the list of bills to approve by admin\r\n  getBillsToApproveByAdmin(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`contribution/v1/get/receipt/to/approve/${this.token}`, data);\r\n  }\r\n\r\n  // get member bill rejected by admin\r\n  getMembreBillRejected(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`contribution/v1/get/refuse/receipt/for/a/member/${this.token}`, data);\r\n  }\r\n\r\n  // Delete a proof rejected by a user\r\n  deleteProofRejetected(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`contribution/v1/get/delete/proof/for/a/member/${this.token}`, data);\r\n  }\r\n\r\n  // get member bill in approval by admin\r\n  getMembreBillInapproval(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`contribution/v1/get/receipt/withStatus/pending/forAMember/${this.token}`, data);\r\n  }\r\n\r\n  // get member bill in approval by admin\r\n  getMembreBillComplete(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`contribution/v1/get/complete/receipt/forA/member/${this.token}`, data);\r\n  }\r\n\r\n  // Get bill infromations with payment detail done by admin\r\n  getBillPaymentAdmin(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`contribution/v1/get/infos/receipt/with/payment/for/admin/${this.token}`, data);\r\n  }\r\n\r\n  // Get a member bill in progress with status \"created\"\r\n  getMemberBillInProgress(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`contribution/v1/get/receipt/in/progress/${this.token}`, data);\r\n  }\r\n\r\n  // Get bill information with payment done\r\n  getBillInformationWithPayment(data: any) {\r\n    return this.api.post(`contribution/v1/get/infos/receipt/with/payment/${this.token}`, data);\r\n  }\r\n\r\n  // Validate a bill by admin\r\n  validateBill(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`contribution/v1/validate/receipt/by/admin/${this.token}`, data);\r\n  }\r\n\r\n  // Cancel a bill by admin\r\n  cancelBill(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`contribution/v1/refuse/receipt/by/admin/${this.token}`, data);\r\n  }\r\n\r\n  // Get bill ready for validation \r\n  getBillReadyForValidation(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`contribution/v1/get/complete/receipt/${this.token}`, data);\r\n  }\r\n\r\n  // Get bill that refusal is completed\r\n  getBillRefusalComplete(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`contribution/v1/get/refuse/receipt/${this.token}`, data);\r\n  }\r\n\r\n  // Save a member bill\r\n  saveMemberBill(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`contribution/v1/save/receipt/${this.token}`, data);\r\n  }\r\n\r\n  // Delete a proof of payment by admin\r\n  deleteProofPayment(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`contribution/v1/get/delete/proof/${this.token}`, data);\r\n  }\r\n\r\n  /* Wallet payment */\r\n\r\n  // Paid member contribution/penalties/ bill with Traditionnal Banking\r\n  paidMemberBillTradiBanking(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`contribution/v1/pay/receipt/with/payment/mode/traditional/${this.token}`, data);\r\n  }\r\n\r\n  // Paid member contribution/penalties/ bill with Online wallet\r\n  paidMemberBillOnlineWallet(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`contribution/v1/pay/receipt/with/wallet/${this.token}`, data);\r\n  }\r\n\r\n\r\n  /* MTN / OZOW / ORANGE / PAYPAL  payment */\r\n\r\n  // Paid member contribution/penalties/ bill with Online payment (MTN/OZOW/PAYPAL/ORANGE) without conversion\r\n  paidMemberBillOnlineWithoutConversion(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`contribution/v1/pay/receipt/with/payment/mode/online/NotConvertCurrency/${this.token}`, data);\r\n  }\r\n\r\n  // Paid member contribution/penalties/ bill with Online payment (MTN/OZOW/PAYPAL/ORANGE) with conversion\r\n  paidMemberBillOnlineWithConversion(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`contribution/v1/pay/receipt/with/payment/mode/online/WithConvertCurrency/${this.token}`, data);\r\n  }\r\n\r\n\r\n  /* withdrawal management */\r\n\r\n  // Validate a withdrawal by an admin with traditional banking\r\n  validateWithdrawalTBank(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`bouffe/v1/validate/bouffe/withTraditional/Banking/${this.token}`, data);\r\n  }\r\n\r\n  // Validate a withdrawal by an admin with online banking\r\n  validateWithdrawalOBank(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`bouffe/v1/validate/bouffe/withOnline/Wallet/${this.token}`, data);\r\n  }\r\n\r\n  // cancel a withdrawal by admin with the reason\r\n  cancelWithdrawal(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`bouffe/v1/refuse/bouffe/${this.token}`, data);\r\n  }\r\n\r\n  // Get the list of accepted withdrawal for a tontine\r\n  getAcceptedWithdrawalOfTontine(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`bouffe/v1/get/list/approval/bouffe/to/a/tontine/${this.token}`, data);\r\n  }\r\n\r\n  // Get the list of accepted withdrawal for a seance\r\n  getAcceptedWithdrawalOfSeance(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`bouffe/v1/get/list/approval/bouffe/to/a/seance/${this.token}`, data);\r\n  }\r\n\r\n  // Get the list of cancel withdrawal for a tontine\r\n  getListWithdrawalCancelTontine(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`bouffe/v1/get/list/refusal/bouffe/to/a/tontine/${this.token}`, data);\r\n  }\r\n\r\n  // Get the list of cancel withdrawal for a seance\r\n  getListWithdrawalCancelSeance(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`bouffe/v1/get/list/refusal/bouffe/to/a/seance/${this.token}`, data);\r\n  }\r\n\r\n  // Get all the proof of withdrawal\r\n  getWithdrawalProof(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`bouffe/v1/get/all/proof/OfABouffe/${this.token}`, data);\r\n  }\r\n\r\n  // Cancel a withdrawal cancel\r\n  reCancelWithdrawal(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`bouffe/v1/cancel/a/reject/bouffe/${this.token}`, data);\r\n  }\r\n\r\n  /**  Get list of proof of a member*/\r\n  getListOfProofMember(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`statistique/v1/get/proof/of/a/member/${this.token}`, data);\r\n  }\r\n\r\n  /* Confirm that the user receive the money*/\r\n  confirmMemberPayment(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`statistique/v1/confirm/receipt/by/aMember/${this.token}`, data);\r\n  }\r\n\r\n  // Get the list of pending beneficiaries not initiate by admin  for a seance \r\n  getPendingWithdrawal(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`bouffe/v1/getListBouffage/withStatus/pending/${this.token}`, data);\r\n  }\r\n\r\n  // Get the list of pending beneficiaries not initiate by admin  for a seance \r\n  getPendingInitiateWithdrawal(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`bouffe/v1/getListInitiate/validation/bouffage/withStatus/pending/${this.token}`, data);\r\n  }\r\n\r\n  /* Get the list of pending beneficiaries not initiate by admin  for a tontine */\r\n  getPendingBeneficiariesNotInitiate(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`bouffe/v1/getListBouffage/tontine/withStatus/pending/${this.token}`, data);\r\n  }\r\n\r\n  /* Get the list of pending beneficiaries  initiate by admin  for a tontine */\r\n  getPendingBeneficiariesInitiate(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`bouffe/v1/getListInitiate/validation/bouffage/tontine/withStatus/pending/${this.token}`, data);\r\n  }\r\n\r\n\r\n  /* Initiate the payment */\r\n  initiatePayment(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`bouffe/v1/initiate/bouffage/payment/toComplete/after/${this.token}`, data);\r\n  }\r\n\r\n  /* Get the detail of payment initiation */\r\n  getPaymentInitiateInformations(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`bouffe/v1/get/infos/fund/repartition/${this.token}`, data);\r\n  }\r\n\r\n  /* Validate the initiate payment by the admin */\r\n  validateInitiatePayment(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`bouffe/v1/validate/initiate/bouffage/byAdmin/${this.token}`, data);\r\n  }\r\n\r\n  /* Make payment with traditionnal banking */\r\n  makePaymentTradiBank(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`bouffe/v1/pay/bouffe/withTraditional/Banking/${this.token}`, data);\r\n  }\r\n\r\n  /* make the payment with Tontine wallet*/\r\n  makePaymentTontineWallet(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`bouffe/v1/pay/bouffe/withTontine/Wallet/${this.token}`, data);\r\n  }\r\n\r\n  /*Make paiement with operator (MTN, ORANGE, OZOW)*/\r\n  makePaymentOperatorWallet(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`bouffe/v1/pay/bouffe/withOnline/Wallet/${this.token}`, data);\r\n  }\r\n\r\n  /* List of Confirm the payment of jackpot for a tontine*/\r\n  confirmJackpotPaiementTontine(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`bouffe/v1/get/list/approval/bouffe/to/a/tontine/${this.token}`, data);\r\n  }\r\n\r\n  /* List of  Confirm a jackpot payment for a seance */\r\n  confirmJackpotPaiementSeance(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`bouffe/v1/get/list/approval/bouffe/to/a/seance/${this.token}`, data);\r\n  }\r\n\r\n  /* Confirm the payment by the user */\r\n  confirmPaymentByUser(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`bouffe/v1/confirm/receipt/${this.token}`, data);\r\n  }\r\n\r\n  /* Pay the due with cash */\r\n  PayDueWithCash(data: any) {\r\n    this.token = this.userService.getUserToken();\r\n    return this.api.post(`contribution/v1/pay/receipt/with/payment/mode/cash/${this.token}`, data);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder, FormArray, FormControl } from '@angular/forms';\r\nimport { TontineService } from 'src/app/dashboard/my-tontines/services/tontine.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { States } from '../models/countries';\r\nimport { LocationService } from '../service/location.service';\r\nimport { InvitationsService } from 'src/app/dashboard/invitations/service/invitations.service';\r\nimport { ErrorService } from '../service/error.service';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { CountriesComponent } from '../countries/countries.component';\r\nimport { FormUtilsService } from '../service/form-utils.service';\r\nimport { InivitationErrorService } from '../../dashboard/invitations/service/inivitation-error.service';\r\nimport { SelectDataComponent } from '../select-data/select-data.component';\r\nimport { UserService } from 'src/app/dashboard/user/service/user.service';\r\nimport { EventService } from '../service/events.service';\r\nimport { UiService } from '../service/ui.service';\r\nimport { UtilService } from '../service/util.service';\r\nimport { AuthService } from 'src/app/auth/service/auth.service';\r\n\r\ninterface Invitations {\r\n  emailOrPhone: string;\r\n  PhoneOnly?: any;\r\n  platform: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-tontine-invited',\r\n  templateUrl: './tontine-invited.component.html',\r\n  styleUrls: ['./tontine-invited.component.scss'],\r\n})\r\nexport class TontineInvitedComponent implements OnInit {\r\n\r\n  formInvited: FormGroup;\r\n  validationMessages: any;\r\n  tontines: any;\r\n  states: States[];\r\n  errorPhone: boolean;\r\n  errorEmail: boolean;\r\n  loading: boolean;\r\n  sendListContact: Invitations[];\r\n  spinner: any;\r\n  curentTontine: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private tontine: TontineService,\r\n    private zone: NgZone,\r\n    private translate: TranslateService,\r\n    private modatCtrl: ModalController,\r\n    private invitation: InvitationsService,\r\n    private formUtil: FormUtilsService,\r\n    private errorService: ErrorService,\r\n    private locate: LocationService,\r\n    private ui: UiService,\r\n    private util: UtilService,\r\n    private userService: UserService,\r\n    private authService: AuthService,\r\n    private inviteError: InivitationErrorService,\r\n    private event: EventService\r\n  ) {\r\n    this.tontines = [];\r\n    this.states = [];\r\n    this.errorPhone = false;\r\n    this.errorEmail = false;\r\n    this.loading = false;\r\n    this.sendListContact = [];\r\n    this.curentTontine = this.tontine.getCurrentTontineData();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initFormInvitation();\r\n    this.getListOftontines();\r\n    this.getValidationsMessage();\r\n    this.getWordCountries(false);\r\n  }\r\n\r\n  // Form getters\r\n  get sendMode() {\r\n    return this.formInvited.get('sendMode');\r\n  }\r\n\r\n  get sendList() {\r\n    return this.formInvited.get('sendList') as FormArray;\r\n  }\r\n\r\n  get emailOrPhone() {\r\n    return this.formInvited.get('emailOrPhone');\r\n  }\r\n\r\n  get phoneId() {\r\n    return this.formInvited.get('phoneid');\r\n  }\r\n\r\n  get countryId() {\r\n    return this.formInvited.get('country_id');\r\n  }\r\n\r\n  // Init the form \r\n  initFormInvitation() {\r\n    this.formInvited = this.fb.group({\r\n      tontine_id: ['', Validators.required],\r\n      tontineName:[''],\r\n      members: [[]],\r\n      sendMode: ['sms', Validators.required],\r\n      emailOrPhone: [''],\r\n      sendList: new FormArray([]),\r\n      phoneid: [''],\r\n      country_id: [''],\r\n      countryName: ['']\r\n    });\r\n  }\r\n\r\n  // Remove space\r\n  removeSpace() {\r\n    this.formInvited.get('emailOrPhone').setValue(this.formUtil.removeSpace(this.formInvited.value.emailOrPhone));\r\n  }\r\n\r\n  // Truncate the name\r\n  truncateName(value: any, nbCar: number) {\r\n    return this.formUtil.troncateName(value,nbCar);\r\n  }\r\n\r\n  // can add new member\r\n  canAddNewMember() {\r\n    return !this.formInvited.value.phoneid \r\n           || !this.formInvited.value.emailOrPhone \r\n           || this.formInvited.value.emailOrPhone && ((!this.errorPhone && this.sendMode.value === 'sms') || (!this.errorEmail && this.sendMode.value === 'email'));\r\n  }\r\n\r\n  // can show contact member\r\n  canShowContactMember() {\r\n    return this.formInvited.value.emailOrPhone && (!this.errorPhone && (this.sendMode.value === 'sms') || !this.errorEmail && (this.sendMode.value === 'email'));\r\n  }\r\n\r\n  // Can invite member\r\n  canInviteMember() {\r\n    return this.formInvited.invalid \r\n           || this.loading \r\n           || this.formInvited.value.emailOrPhone && (!this.errorPhone && !this.errorEmail) \r\n           || (!this.formInvited.value.emailOrPhone && this.sendList.length === 0);\r\n  }\r\n\r\n  // Get validations messages\r\n  getValidationsMessage() {\r\n    this.translate.get(['M_SEND_MODE_ERROR_MSG']).subscribe(trans => {\r\n      this.validationMessages = {\r\n        sendMode: [\r\n          { type: 'required', message: trans.M_SEND_MODE_ERROR_MSG }\r\n        ]\r\n      };\r\n    });\r\n  }\r\n\r\n  // Validate the field\r\n  validateFields(mode: string) {\r\n    this.removeSpace();\r\n    this.errorPhone = false;\r\n    this.errorEmail = false;\r\n    if (mode === 'sms') {\r\n      this.errorPhone = this.formUtil.validatePhone(this.formInvited.value.emailOrPhone);\r\n    } else if (mode === 'email') {\r\n      this.errorEmail = this.formUtil.validateEmail(this.formInvited.value.emailOrPhone);\r\n    }\r\n  }\r\n\r\n  // Update the country\r\n  updateCountryPrefix(currentCountry: any) {\r\n    this.states.forEach(state => {\r\n      if (state.country_id === currentCountry) {\r\n        this.formInvited.get('phoneid').setValue(state.country_prefixe);\r\n        this.formInvited.get('country_id').setValue(state.country_id);\r\n        this.formInvited.get('countryName').setValue(state.country_label);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Get all the word countries\r\n  getWordCountries(refresh) {\r\n    this.locate.getWordCountries(refresh).then((countries: any) => {\r\n      if (countries && countries.length > 0) {\r\n        this.states = countries;\r\n        this.getCurrentCountry(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Set the default country\r\n  getCurrentCountry(refresher: boolean) {\r\n    this.locate.getCurrentWordCountryInfo(refresher).then((country: any) => {\r\n      if (country) {\r\n        this.updateCountryPrefix(country.country_id);\r\n      }\r\n    }).catch(error => {\r\n    });\r\n  }\r\n\r\n  // open the countries modal\r\n  showCountries() {\r\n    this.modatCtrl\r\n      .create({\r\n        component: CountriesComponent\r\n      })\r\n      .then(modalEl => {\r\n        modalEl.present();\r\n        modalEl.onDidDismiss().then((ans) => {\r\n          if (ans && ans.role === 'select') {\r\n            this.states.forEach(state => {\r\n              if (state.code_country === ans.data) {\r\n                this.formInvited.get('countryName').setValue(state.country_label);\r\n                this.formInvited.get('phoneid').setValue(state.country_prefixe);\r\n                this.formInvited.get('country_id').setValue(state.country_id);\r\n              }\r\n            });\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  // Add a member\r\n  addMberContact(mberContact: HTMLInputElement) {\r\n    if (this.formUtil.validatePhone(mberContact.value)) {\r\n      const phoneNumber = this.formInvited.value.phoneid + mberContact.value;\r\n      this.sendList.push(new FormControl(phoneNumber));\r\n      this.sendListContact.push({ emailOrPhone: phoneNumber, PhoneOnly: mberContact.value, platform: 'mobile' });\r\n    } else {\r\n      this.sendList.push(new FormControl(mberContact.value));\r\n      this.sendListContact.push({ emailOrPhone: mberContact.value, PhoneOnly: null, platform: 'mobile' });\r\n    }\r\n    mberContact.value = '';\r\n    this.formInvited.value.emailOrPhone = '';\r\n  }\r\n\r\n  // Remove contact\r\n  removeContact(contact: FormControl) {\r\n    const index = this.sendList.controls.indexOf(contact);\r\n    this.sendList.removeAt(index);\r\n    const objIndex = this.sendListContact.findIndex(o => o.emailOrPhone === contact.value);\r\n    if (objIndex > -1) {\r\n      this.sendListContact.splice(objIndex, 1);\r\n    }\r\n  }\r\n\r\n   // show the tontine modal\r\n   showTontines() {\r\n    this.modatCtrl\r\n      .create({\r\n        component: SelectDataComponent,\r\n        componentProps: {\r\n          tontine: this.tontines,\r\n          type: 'tontine'\r\n        }\r\n      })\r\n      .then(modalEl => {\r\n        modalEl.present();\r\n        modalEl.onDidDismiss().then((ans) => {\r\n          if (ans && ans.role === 'select') {\r\n            this.formInvited.get('tontine_id').setValue(ans.data.id);\r\n            this.formInvited.get('tontineName').setValue(ans.data.name);\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  // Get the list of tontines\r\n  getListOftontines() {\r\n    this.tontine.getMyTontine().subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'success') {\r\n        if (reponse.liste_tontine && reponse.liste_tontine.length > 0) {\r\n          this.zone.run(() => {\r\n            reponse.liste_tontine = this.util.oderByTontineDate(reponse.liste_tontine);\r\n            this.tontines =  reponse.liste_tontine.filter(data => { return data.tontine.administrator === 1});\r\n          });\r\n\r\n          if (this.tontines &&  this.tontines.length) {\r\n            setTimeout(() => {\r\n              if (this.curentTontine && this.curentTontine.tontine && this.curentTontine.tontine.tontine_id) {\r\n                const currentTontine = this.tontines.filter(data => { return data.tontine.tontine_id === this.curentTontine.tontine.tontine_id});\r\n                if (currentTontine && currentTontine.length > 0) {\r\n                  this.formInvited.get('tontine_id').setValue(currentTontine[0].tontine.tontine_id);\r\n                  this.formInvited.get('tontineName').setValue(currentTontine[0].tontine.name);\r\n                } else {\r\n                  this.formInvited.get('tontine_id').setValue(this.tontines[0].tontine.tontine_id);\r\n                  this.formInvited.get('tontineName').setValue(this.tontines[0].tontine.name);\r\n                }\r\n              } else {\r\n                this.formInvited.get('tontine_id').setValue(this.tontines[0].tontine.tontine_id);\r\n                this.formInvited.get('tontineName').setValue(this.tontines[0].tontine.name);\r\n              }\r\n            }, 500);\r\n          }\r\n     \r\n        }\r\n      }\r\n    }, error => {\r\n      if (error && error.error && error.error.user_not_found) {\r\n        this.errorService.renewSession().then((data:any) => {\r\n            if (data && data.result === \"OK\") {\r\n                this.getListOftontines();\r\n            }\r\n        });\r\n      } else {\r\n        this.errorService.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // send invitations to the user\r\n  sendInvitation() {\r\n    this.loading = true;\r\n    this.translate.get('SENDING_INVITATION').subscribe(trans => {\r\n      this.ui.presentLoading(trans);\r\n    });\r\n    const user = this.userService.getUserData();\r\n\r\n    if (this.formInvited.value.emailOrPhone) {\r\n      if (this.formInvited.value.sendMode === 'sms') {\r\n        const phoneNumber = this.formInvited.value.phoneid + this.formInvited.value.emailOrPhone;\r\n        this.sendListContact.push({ emailOrPhone: phoneNumber, PhoneOnly: this.formInvited.value.emailOrPhone, platform: 'mobile' });\r\n      } else {\r\n        this.sendListContact.push({ emailOrPhone: this.formInvited.value.emailOrPhone, PhoneOnly: null, platform: 'mobile' });\r\n      }\r\n    }\r\n    // Remove double\r\n    this.sendListContact = this.sendListContact.filter((elem, index, self) => self.findIndex(\r\n      (t) => { return (t.emailOrPhone === elem.emailOrPhone && t.PhoneOnly === elem.PhoneOnly) }) === index);\r\n    this.formInvited.get('members').setValue(this.sendListContact);\r\n    this.invitation.sendInvitationTontine(this.formInvited.value, user.id)\r\n      .subscribe((reponse: any) => {\r\n        this.ui.dismissLoading();\r\n        this.loading = false;\r\n        this.initFormInvitation();\r\n        this.getListOftontines();\r\n        this.getWordCountries(false);\r\n        this.translate.get('TONTINE_INVITED_TEXT5').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n        const currentDate = new Date();\r\n        this.authService.setAppLastSession(currentDate.getTime());\r\n        this.event.publish('new-invitation');\r\n      }, error => {\r\n        this.ui.dismissLoading();\r\n        this.loading = false;\r\n        if (error && error.error && !error.error.success) {\r\n            this.inviteError.manageInviteError(error);\r\n        } else {\r\n            this.errorService.manageError(error);\r\n        }\r\n      });\r\n  }\r\n}\r\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t\"dUtr\",\n\t\t\"common\",\n\t\t0\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t\"Q8AI\",\n\t\t\"common\",\n\t\t1\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t\"hgI1\",\n\t\t\"common\",\n\t\t2\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t\"CfoV\",\n\t\t\"common\",\n\t\t3\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t\"Nt02\",\n\t\t\"common\",\n\t\t4\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t\"Q2Bp\",\n\t\t5\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t\"0Pbj\",\n\t\t\"common\",\n\t\t6\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t\"ydQj\",\n\t\t\"common\",\n\t\t7\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t\"4fMi\",\n\t\t\"common\",\n\t\t8\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t\"czK9\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"/CAe\",\n\t\t10\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t\"WgF3\",\n\t\t\"common\",\n\t\t11\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t\"uQcF\",\n\t\t\"common\",\n\t\t12\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"wHD8\",\n\t\t13\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t\"2lz6\",\n\t\t14\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t\"ercB\",\n\t\t\"common\",\n\t\t15\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t\"MGMP\",\n\t\t\"common\",\n\t\t16\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t\"9bur\",\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t\"cABk\",\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t\"kyFE\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t\"TvZU\",\n\t\t\"common\",\n\t\t20\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"vnES\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t\"qCuA\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t\"0tOe\",\n\t\t\"common\",\n\t\t23\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t\"h11V\",\n\t\t\"common\",\n\t\t24\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t\"XGij\",\n\t\t\"common\",\n\t\t25\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t\"nYbb\",\n\t\t\"common\",\n\t\t26\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t\"smMY\",\n\t\t\"common\",\n\t\t27\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"STjf\",\n\t\t28\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"k5eQ\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t\"OR5t\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t\"fSgp\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t\"lfGF\",\n\t\t\"common\",\n\t\t32\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t\"5xYT\",\n\t\t33\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"nI0H\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t\"NAQR\",\n\t\t35\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t\"knkW\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"TpdJ\",\n\t\t\"common\",\n\t\t37\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"ISmu\",\n\t\t\"common\",\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t\"U7LX\",\n\t\t\"common\",\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t\"L3sA\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t\"IUOf\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"8Mb5\",\n\t\t42\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"kLfG\";\nmodule.exports = webpackAsyncContext;","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYWlkbW9kZS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ2aWV3LXByb29mLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ErrorService } from '../service/error.service';\r\nimport { DebtsManagerService } from 'src/app/dashboard/my-tontines/services/debts-manager.service';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { TontineService } from 'src/app/dashboard/my-tontines/services/tontine.service';\r\nimport {  NavController } from '@ionic/angular';\r\nimport { PaymentErrorService } from '../service/payment-error.service';\r\nimport { UserService } from 'src/app/dashboard/user/service/user.service';\r\nimport { UiService } from '../service/ui.service';\r\nimport { EventService } from '../service/events.service';\r\n\r\n@Component({\r\n  selector: 'app-wallet-order',\r\n  templateUrl: './wallet-order.component.html',\r\n  styleUrls: ['./wallet-order.component.scss'],\r\n})\r\nexport class WalletOrderComponent implements OnInit {\r\n\r\n  @Input() amountPay: number;\r\n  @Input() balance: number;\r\n\r\n  paymentForm: FormGroup;\r\n  validationMessages: any;\r\n  loadingPay: boolean;\r\n  currentTontine: any;\r\n  loading: boolean;\r\n  currentUser: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private translate: TranslateService,\r\n    private event: EventService,\r\n    private user: UserService,\r\n    private tontine: TontineService,\r\n    private navController: NavController,\r\n    private router: Router,\r\n    private error: ErrorService,\r\n    private debt: DebtsManagerService,\r\n    private ui: UiService,\r\n    private paymentError: PaymentErrorService\r\n  ) {\r\n    this.loadingPay = false;\r\n    this.currentTontine = this.tontine.getCurrentTontineData();\r\n    this.loading = false;\r\n    this.currentUser = this.user.getUserData();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initFormMessage();\r\n    this.initTradionnalPayment();\r\n  }\r\n\r\n  // Getters\r\n  get montant() {\r\n    return this.paymentForm.get('montantValue');\r\n  }\r\n\r\n  get receipt() {\r\n    return this.paymentForm.get('receipt');\r\n  }\r\n\r\n  get reason() {\r\n    return this.paymentForm.get('reason');\r\n  }\r\n\r\n  // Init traditional banking payment\r\n  initTradionnalPayment() {\r\n    const params = this.debt.getDebtsData();\r\n    this.paymentForm = this.fb.group({\r\n      user_id: [this.currentUser.id, Validators.required],\r\n      bouffe_id: [params ? params.bouffe_id : '', Validators.required],\r\n      device_id: [params ? params.device_id : '', Validators.required],\r\n      reason: [''],\r\n      montantValue: [{ value: this.balance, disabled: true }, Validators.compose([Validators.min(1)])],\r\n      montant: [this.balance, Validators.compose([Validators.required, Validators.min(1), Validators.max(this.balance)])]\r\n    });\r\n  }\r\n\r\n  // Init form message\r\n  initFormMessage() {\r\n    this.translate.get(['DEBT_AMOUNT_REQUIRED_TEXT', 'DEBT_PROOF_MSG_REQUIRED_TEXT', 'DEBT_REASON_MSG_REQUIRED_TEXT', 'ERROR_MIN_AMOUNT', 'ERROR_MAX_AMOUNT'])\r\n      .subscribe(trans => {\r\n        this.validationMessages = {\r\n          montant: [\r\n            { type: 'required', message: trans.DEBT_AMOUNT_REQUIRED_TEXT },\r\n            { type: 'min', message: `${trans.ERROR_MIN_AMOUNT} ${1}` },\r\n            { type: 'max', message: `${trans.ERROR_MAX_AMOUNT} ${this.balance}` }\r\n          ],\r\n          description: [\r\n            { type: 'required', message: trans.DEBT_PROOF_MSG_REQUIRED_TEXT }\r\n          ],\r\n          reason: [\r\n            { type: 'required', message: trans.DEBT_REASON_MSG_REQUIRED_TEXT }\r\n          ]\r\n        };\r\n      });\r\n  }\r\n\r\n  // Make the payment with wallet\r\n  makePayment() {\r\n    this.loadingPay = true;\r\n    this.debt.makePaymentTontineWallet(this.paymentForm.value).subscribe((reponse: any) => {\r\n      this.loadingPay = false;\r\n      if (reponse && reponse.message === 'success') {\r\n        this.translate.get('DEBT_PAYMENT_BENEFICIAL_SUCCES_MSG').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n        });\r\n        this.event.publish('modal-close');\r\n        this.navController.setDirection('root');\r\n        this.router.navigate(['/', 'dashboard', 'my-tontines', this.currentTontine.tontine.tontine_id, 'session-no-paid']);\r\n      }\r\n    }, error => {\r\n \r\n      if (error && error.error) {\r\n        if (error.error.user_not_found) {\r\n          this.error.renewSession().then((data: any) => {\r\n            if (data && data.result === \"OK\") {\r\n              this.makePayment();\r\n            } else {\r\n              this.loadingPay = false;\r\n            }\r\n          });\r\n        } else {\r\n          this.loadingPay = false;\r\n          this.paymentError.managePaymentOfflineError(error);\r\n        }\r\n      } else {\r\n        this.loadingPay = false;\r\n        this.error.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"<form [formGroup]=\\\"userPayMethodForm\\\">\\r\\n  <p class=\\\"ion-text-center\\\"  *ngIf=\\\"loadingOperator\\\">\\r\\n    <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n  </p>\\r\\n<ion-grid>\\r\\n  <ion-row>\\r\\n    <ion-col size=\\\"12\\\">\\r\\n      <ion-card class=\\\"paidmode\\\">\\r\\n        <ion-card-content class=\\\"ion-text-center\\\">    \\r\\n          <ion-row>\\r\\n            <ion-col size=\\\"12\\\">\\r\\n              <ion-item>\\r\\n                <ion-label>{{'COUNTRY_TEXT' | translate}}</ion-label>\\r\\n                <ion-select (ionChange)=\\\"updateCurrencyCountry(userPayMethodForm.value.country_id)\\\" name=\\\"country_id\\\" formControlName=\\\"country_id\\\">\\r\\n                  <ion-select-option [value]=\\\"country.country_id\\\" *ngFor=\\\"let country of states\\\">{{ country.country_label }}</ion-select-option>          \\r\\n                </ion-select>\\r\\n              </ion-item>   \\r\\n              <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.country_id\\\">\\r\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"country.hasError(validation.type) && (country.dirty || country.touched)\\\">\\r\\n                    <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                    {{ validation.message }}\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>     \\r\\n            </ion-col>\\r\\n          </ion-row>       \\r\\n            <ion-row class=\\\"ion-justify-content-end\\\" *ngIf=\\\"userPayMethodForm.value.country_id && paymentMethods && paymentMethods.length > 0\\\">\\r\\n              <ion-col size=\\\"4\\\">\\r\\n                <ion-img [src]=\\\"paymentMethods && paymentMethods[userPayMethodForm.value.typePaymentIndex] ? paymentMethods[userPayMethodForm.value.typePaymentIndex].logo : ' '\\\" class=\\\"logooperator\\\"></ion-img>\\r\\n              </ion-col>\\r\\n            </ion-row>  \\r\\n            <ion-row  *ngIf=\\\"userPayMethodForm.value.country_id && paymentMethods && paymentMethods.length > 0\\\">\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label>{{ 'USER_PROFILE_TEXT4' | translate }}</ion-label>\\r\\n                  <ion-select (ionChange)=\\\"updatePaymentMethod(userPayMethodForm.value.typePaymentIndex)\\\" name=\\\"typePaymentIndex\\\" formControlName=\\\"typePaymentIndex\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let operator of paymentMethods; let operatorId = index\\\"\\r\\n                    [value]=\\\"operatorId\\\">{{ operator.name }}</ion-select-option>           \\r\\n                  </ion-select>\\r\\n                </ion-item>   \\r\\n                <div class=\\\"validation-errors\\\">\\r\\n                  <ng-container *ngFor=\\\"let validation of validationMessages.payementtype\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"payementtype.hasError(validation.type) && (payementtype.dirty || payementtype.touched)\\\">\\r\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                      {{ validation.message }}\\r\\n                    </div>\\r\\n                  </ng-container>\\r\\n                </div>   \\r\\n              </ion-col>\\r\\n            </ion-row> \\r\\n            <ion-row  *ngIf=\\\"checkMobileOperator()\\\">\\r\\n              <ion-col size=\\\"4\\\">\\r\\n                <ion-item >\\r\\n                  <ion-label position=\\\"floating\\\">+</ion-label>\\r\\n                  <ion-input placeholder=\\\"{{userPayMethodForm.value.country_prefix}}\\\" type=\\\"text\\\"></ion-input>\\r\\n                </ion-item>        \\r\\n              </ion-col>\\r\\n              <ion-col size=\\\"8\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">{{ 'REGISTER_MPHONE' | translate }}</ion-label>\\r\\n                  <ion-input (ionChange)=\\\"checckEmailOrPhone(userPayMethodForm.value.phone,userPayMethodForm.value.typePaymentIndex)\\\" type=\\\"tel\\\" formControlName=\\\"phone\\\"></ion-input>\\r\\n                </ion-item> \\r\\n              </ion-col>\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <div class=\\\"validation-errors\\\">\\r\\n                  <ng-container *ngFor=\\\"let validation of validationMessages.phone\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"phone.hasError(validation.type) && (phone.dirty || phone.touched)\\\">\\r\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                      {{ validation.message }}\\r\\n                    </div>\\r\\n                  </ng-container>\\r\\n                </div>\\r\\n                <div class=\\\"validation-errors\\\" *ngIf=\\\"errorPhone\\\">\\r\\n                    <div class=\\\"error-message\\\">\\r\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                      <span [innerHTML]=\\\"'USER_DETAIL_TEXT11' | translate\\\"></span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                     \\r\\n              </ion-col>\\r\\n            </ion-row> \\r\\n            <ion-row>\\r\\n              <ion-col>\\r\\n                <div class=\\\"padding\\\"\\r\\n                *ngIf=\\\"canShowPaypalMessage()\\\">\\r\\n                <p style=\\\"color: red\\\">{{paypalMessage}}</p>\\r\\n              </div>\\r\\n              </ion-col>\\r\\n            </ion-row>                           \\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>      \\r\\n  </ion-row>\\r\\n  <ion-row>\\r\\n    <svg height=\\\"0\\\" width=\\\"0\\\" viewBox=\\\"0 0 27.7 28.93\\\">\\r\\n      <defs>\\r\\n        <clipPath id=\\\"pay-btn-shape\\\" >\\r\\n          <path d=\\\"M2.57,17.21A11.18,11.18,0,0,1,9.17,5.77h.06l.17-.22.11-.23c-1-.73-1.56-1.42-1.39-2,.42-1.32,5-1.17,10.22.33S27.43,7.47,27,8.81c-.16.48-.86.76-1.88.86h0v.1a5,5,0,0,0,.08.66,3.77,3.77,0,0,0,.1.46l.07.23c2,4,1.7,8.37-1.73,12.53a12.23,12.23,0,0,1-18.42-.1A11.55,11.55,0,0,1,2.57,17.21Z\\\" />            \\r\\n        </clipPath>        \\r\\n      </defs>\\r\\n    </svg>\\r\\n    <ion-col size=\\\"12\\\" class=\\\"ion-text-center wrap-pay-btn\\\" *ngIf=\\\"canPay()\\\"  (click)=\\\"showPayment(userPayMethodForm.value)\\\">\\r\\n      <svg id=\\\"pay-btn\\\" preserveAspectRatio=\\\"xMidYMid slice\\\" viewBox=\\\"0 0 27.7 28.93\\\">\\r\\n        <path  class=\\\"arc-part\\\" d=\\\"M5.91,6.89a12.25,12.25,0,0,0-4.14,9.27,11.14,11.14,0,0,0,.16,1.7,12.82,12.82,0,0,0,.42,1.66c.08.27.19.54.29.8A8.24,8.24,0,0,0,3,21.1a14.85,14.85,0,0,0,.82,1.5,12.25,12.25,0,0,0,3.5,3.62,13.49,13.49,0,0,0,8,2.21,15.81,15.81,0,0,0,1.7-.17,13.74,13.74,0,0,0,1.69-.37,12.79,12.79,0,0,0,5.65-3.5,11.63,11.63,0,0,0,1.88-2.83,12.11,12.11,0,0,0,1.06-3.27,11,11,0,0,0-.94-6.84A10.42,10.42,0,0,1,27.23,13a10.65,10.65,0,0,1,.63,1.71,11.3,11.3,0,0,1,.22,3.64,12.78,12.78,0,0,1-.94,3.56,12.11,12.11,0,0,1-1.88,3.17,12.84,12.84,0,0,1-1.31,1.33,13.32,13.32,0,0,1-1.49,1.12,14,14,0,0,1-3.37,1.59,13,13,0,0,1-1.82.43,17.17,17.17,0,0,1-1.88.21,14.31,14.31,0,0,1-3.77-.27,14.55,14.55,0,0,1-5.12-2.19,11.53,11.53,0,0,1-1.41-1.17A13.92,13.92,0,0,1,.92,18a10.3,10.3,0,0,1-.08-1.88A12.36,12.36,0,0,1,3.31,9.34,10.42,10.42,0,0,1,5.91,6.89ZM7.27,3.35a1.52,1.52,0,0,1-.08-.78,1.82,1.82,0,0,1,.32-.76A2.29,2.29,0,0,1,9,1,6.31,6.31,0,0,1,9.78.89h2.36a25.76,25.76,0,0,1,6.19,1,23.94,23.94,0,0,1,5.74,2.5,20.58,20.58,0,0,1,2.56,1.83,3.84,3.84,0,0,1,1,1.27,1.29,1.29,0,0,1,.08.84,1.24,1.24,0,0,1-.47.64,1.21,1.21,0,0,0,.29-.67,1,1,0,0,0-.21-.65,3.64,3.64,0,0,0-1.07-.94c-.86-.53-1.75-1-2.66-1.47A34.29,34.29,0,0,0,18,3.06,38.16,38.16,0,0,0,12,1.84c-.5-.06-1-.11-1.52-.15l-.73-.13a6.42,6.42,0,0,0-.73,0A1.88,1.88,0,0,0,7.77,2,1.57,1.57,0,0,0,7.27,3.35Z\\\" />\\r\\n        <g class=\\\"pay-btn-border\\\">\\r\\n          <rect x=\\\"1.35\\\" y=\\\"0.56\\\" width=\\\"25.09\\\" height=\\\"26.44\\\" class=\\\"inner-pot\\\" />\\r\\n        </g>\\r\\n        <path class=\\\"pot-entry\\\" d=\\\"M22,6.27c-1.13-.38-2.45-.85-3.86-1.22-1-.28-2.17-.57-3.11-.75-2.64-.47-4.52-.57-4.62-.09-.09.19.19.57.75.85A24.19,24.19,0,0,0,17.46,7.4a22.19,22.19,0,0,0,7.07,1.13c.38-.09.66-.19.66-.28C25.32,7.9,24.05,7.15,22,6.27Z\\\" />\\r\\n        <text class=\\\"pay-text\\\"><tspan style=\\\"letter-spacing: -0.05859375em\\\">P</tspan><tspan x=\\\"4.94\\\" y=\\\"0\\\" style=\\\"letter-spacing: -0.087890625em\\\">A</tspan><tspan x=\\\"10.56\\\" y=\\\"0\\\">Y</tspan></text>\\r\\n      </svg>       \\r\\n      <div class=\\\"glow-wrap\\\">\\r\\n        <i class=\\\"glow\\\"></i>\\r\\n      </div>          \\r\\n    </ion-col>\\r\\n  </ion-row> \\r\\n  <ion-row  *ngIf=\\\"paypalLoading\\\">\\r\\n    <ion-col>\\r\\n      <p class=\\\"ion-text-center ion-padding\\\">\\r\\n        <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n      </p>\\r\\n    </ion-col>\\r\\n  </ion-row> \\r\\n  <ion-row *ngIf=\\\"canShowPaypalButton()\\\">\\r\\n    <ion-col class=\\\"ion-padding\\\" size=\\\"12\\\">\\r\\n      <div #paypalbuttoncontainer id=\\\"paypal-button-container\\\"></div> \\r\\n    </ion-col>\\r\\n  </ion-row> \\r\\n</ion-grid>\\r\\n</form> \\r\\n\";","export default \"<form [formGroup]=\\\"paymentForm\\\">\\r\\n<ion-grid>\\r\\n  <ion-row>\\r\\n    <ion-col size=\\\"12\\\">      \\r\\n      <ion-card class=\\\"paidmode\\\">\\r\\n        <ion-card-content class=\\\"ion-text-center\\\">   \\r\\n            <ion-row>\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label>{{ 'DESTINATION_TEXT' | translate }}</ion-label>\\r\\n                  <ion-select (ionChange)=\\\"updateCheckout(paymentForm.value.checkoutName)\\\" formControlName=\\\"checkoutName\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let checkout of typesCaisses\\\" [value]=\\\"checkout.index\\\">{{ checkout.name }}</ion-select-option>          \\r\\n                  </ion-select>\\r\\n                </ion-item>   \\r\\n                <div class=\\\"validation-errors\\\">\\r\\n                  <ng-container *ngFor=\\\"let validation of validationMessages.checkoutName\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"checkoutName.hasError(validation.type) && (checkoutName.dirty || checkoutName.touched)\\\">\\r\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                      {{ validation.message }}\\r\\n                    </div>\\r\\n                  </ng-container>\\r\\n                </div>   \\r\\n              </ion-col>\\r\\n            </ion-row>   \\r\\n            <ion-row>\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label>{{'COUNTRY_TEXT' | translate}}</ion-label>\\r\\n                  <ion-select (ionChange)=\\\"updateCurrencyCountry(paymentForm.value.country_id)\\\" name=\\\"country_id\\\" formControlName=\\\"country_id\\\">\\r\\n                    <ion-select-option [value]=\\\"country.country_id\\\" *ngFor=\\\"let country of states\\\">{{ country.country_label }}</ion-select-option>          \\r\\n                  </ion-select>\\r\\n                </ion-item>   \\r\\n                <div class=\\\"validation-errors\\\">\\r\\n                  <ng-container *ngFor=\\\"let validation of validationMessages.country_id\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"country.hasError(validation.type) && (country.dirty || country.touched)\\\">\\r\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                      {{ validation.message }}\\r\\n                    </div>\\r\\n                  </ng-container>\\r\\n                </div>     \\r\\n              </ion-col>\\r\\n            </ion-row>    \\r\\n            <ion-row class=\\\"ion-justify-content-end\\\" *ngIf=\\\"paymentForm.value.country_id && paymentMethods && paymentMethods.length > 0\\\">\\r\\n              <ion-col size=\\\"4\\\">\\r\\n                <ion-img [src]=\\\"paymentMethods && paymentMethods[paymentForm.value.typePaymentIndex] ? paymentMethods[paymentForm.value.typePaymentIndex].logo : ' '\\\" class=\\\"logooperator\\\"></ion-img>\\r\\n              </ion-col>\\r\\n            </ion-row>   \\r\\n            <ion-row  *ngIf=\\\"paymentForm.value.country_id && paymentMethods && paymentMethods.length > 0\\\">\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label>{{ 'SOURCE_FOUND_TEXT' | translate }}</ion-label>\\r\\n                  <ion-select (ionChange)=\\\"updatePaymentMethod(paymentForm.value.typePaymentIndex)\\\" name=\\\"typePaymentIndex\\\" formControlName=\\\"typePaymentIndex\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let operator of paymentMethods; let operatorId = index\\\"\\r\\n                    [value]=\\\"operatorId\\\">{{ operator.name | uppercase }}</ion-select-option>           \\r\\n                  </ion-select>\\r\\n                </ion-item>   \\r\\n                <div class=\\\"validation-errors\\\">\\r\\n                  <ng-container *ngFor=\\\"let validation of validationMessages.payementtype\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"payementtype.hasError(validation.type) && (payementtype.dirty || payementtype.touched)\\\">\\r\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                      {{ validation.message }}\\r\\n                    </div>\\r\\n                  </ng-container>\\r\\n                </div>   \\r\\n              </ion-col>\\r\\n            </ion-row>           \\r\\n            <ion-row *ngIf=\\\"checkCaisse()\\\">\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label>{{'WALLET_TYPE' | translate }}</ion-label>\\r\\n                  <ion-select formControlName=\\\"checkoutType\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let walletType of walletTypes\\\" [value]=\\\"walletType\\\">{{ walletType }}</ion-select-option>          \\r\\n                  </ion-select>\\r\\n                </ion-item>   \\r\\n                <div class=\\\"validation-errors\\\">\\r\\n                  <ng-container *ngFor=\\\"let validation of validationMessages.payementtype\\\">\\r\\n                    <div class=\\\"error-message\\\"  *ngIf=\\\"checkoutType.hasError(validation.type) && (checkoutType.dirty || checkoutType.touched)\\\" >\\r\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                      {{ validation.message }}\\r\\n                    </div>\\r\\n                  </ng-container>\\r\\n                </div>   \\r\\n              </ion-col>\\r\\n            </ion-row>    \\r\\n            <ion-row *ngIf=\\\"checkMobileOperator()\\\">\\r\\n            <ion-col size=\\\"4\\\">\\r\\n              <ion-item >\\r\\n                <ion-label position=\\\"floating\\\">+</ion-label>\\r\\n                <ion-input placeholder=\\\"{{paymentForm.value.country_prefix}}\\\" type=\\\"text\\\"></ion-input>\\r\\n              </ion-item>        \\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"8\\\">\\r\\n              <ion-item  >\\r\\n                <ion-label position=\\\"floating\\\">{{ 'REGISTER_MPHONE' | translate }}</ion-label>\\r\\n                <ion-input (ionChange)=\\\"checckEmailOrPhone(paymentForm.value.phone,paymentForm.value.typePaymentIndex)\\\" type=\\\"tel\\\" formControlName=\\\"phone\\\"></ion-input>\\r\\n              </ion-item> \\r\\n            </ion-col>  \\r\\n            <ion-col size=\\\"12\\\"> \\r\\n                <div class=\\\"validation-errors\\\" *ngIf=\\\"errorPhone\\\">\\r\\n                  <div class=\\\"error-message\\\">\\r\\n                    <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                    <span [innerHTML]=\\\"'USER_DETAIL_TEXT11' | translate\\\"></span>\\r\\n                  </div>\\r\\n              </div>        \\r\\n            </ion-col>\\r\\n            </ion-row> \\r\\n            <ion-row class=\\\"ion-padding-bottom\\\">\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\" >{{ 'AMOUNT_TEXT' | translate }}</ion-label>\\r\\n                  <ion-input  (ionChange)=\\\"updatePaypalAmount(); removeSpaceAmount()\\\" type=\\\"number\\\" formControlName=\\\"amount\\\"></ion-input>\\r\\n                  <span slot=\\\"end\\\" class=\\\"slot-prefix ion-no-margin\\\"> {{ currentTontine.tontine.monnaie }} </span>\\r\\n                </ion-item> \\r\\n                <div class=\\\"validation-errors\\\">\\r\\n                  <ng-container *ngFor=\\\"let validation of validationMessages.amount\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"amount.hasError(validation.type) && (amount.dirty || amount.touched)\\\">\\r\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                      {{ validation.message }}\\r\\n                    </div>\\r\\n                  </ng-container>\\r\\n                </div>         \\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-col size=\\\"12\\\">\\r\\n              <ion-item  >\\r\\n                <ion-input type=\\\"text\\\" placeholder=\\\"{{ 'M_INVITE_DELETE_PLACEHOLDER' | translate }}\\\" formControlName=\\\"reason\\\"></ion-input>\\r\\n              </ion-item> \\r\\n            </ion-col> \\r\\n            <ion-row  *ngIf=\\\"canShowPaypalMessage()\\\">\\r\\n              <ion-col>\\r\\n                <div class=\\\"padding\\\">\\r\\n                <p style=\\\"color: red\\\">{{paypalMessage}}</p>\\r\\n              </div>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row *ngIf=\\\"canGetProof()\\\">\\r\\n              <ion-col class=\\\"ion-text-end\\\">\\r\\n                <ion-button color=\\\"primary\\\" size=\\\"medium\\\" class=\\\"ion-text-capitalize\\\" (click)=\\\"getProof()\\\"> {{\\r\\n                  'UPLOAD_PROOF' | translate\\r\\n                }}\\r\\n                  <ion-icon name=\\\"camera\\\"></ion-icon>\\r\\n                </ion-button>\\r\\n              </ion-col>\\r\\n            </ion-row>                          \\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>      \\r\\n  </ion-row>\\r\\n  <ion-row>\\r\\n    <svg height=\\\"0\\\" width=\\\"0\\\" viewBox=\\\"0 0 27.7 28.93\\\">\\r\\n      <defs>\\r\\n        <clipPath id=\\\"pay-btn-shape\\\" >\\r\\n          <path d=\\\"M2.57,17.21A11.18,11.18,0,0,1,9.17,5.77h.06l.17-.22.11-.23c-1-.73-1.56-1.42-1.39-2,.42-1.32,5-1.17,10.22.33S27.43,7.47,27,8.81c-.16.48-.86.76-1.88.86h0v.1a5,5,0,0,0,.08.66,3.77,3.77,0,0,0,.1.46l.07.23c2,4,1.7,8.37-1.73,12.53a12.23,12.23,0,0,1-18.42-.1A11.55,11.55,0,0,1,2.57,17.21Z\\\" />            \\r\\n        </clipPath>        \\r\\n      </defs>\\r\\n    </svg>\\r\\n    <ion-col size=\\\"12\\\" class=\\\"ion-text-center wrap-pay-btn\\\" *ngIf=\\\"canRecharge()\\\"  (click)=\\\"showPayment(paymentForm.value)\\\">\\r\\n      <svg id=\\\"pay-btn\\\" preserveAspectRatio=\\\"xMidYMid slice\\\" viewBox=\\\"0 0 27.7 28.93\\\">\\r\\n        <path  class=\\\"arc-part\\\" d=\\\"M5.91,6.89a12.25,12.25,0,0,0-4.14,9.27,11.14,11.14,0,0,0,.16,1.7,12.82,12.82,0,0,0,.42,1.66c.08.27.19.54.29.8A8.24,8.24,0,0,0,3,21.1a14.85,14.85,0,0,0,.82,1.5,12.25,12.25,0,0,0,3.5,3.62,13.49,13.49,0,0,0,8,2.21,15.81,15.81,0,0,0,1.7-.17,13.74,13.74,0,0,0,1.69-.37,12.79,12.79,0,0,0,5.65-3.5,11.63,11.63,0,0,0,1.88-2.83,12.11,12.11,0,0,0,1.06-3.27,11,11,0,0,0-.94-6.84A10.42,10.42,0,0,1,27.23,13a10.65,10.65,0,0,1,.63,1.71,11.3,11.3,0,0,1,.22,3.64,12.78,12.78,0,0,1-.94,3.56,12.11,12.11,0,0,1-1.88,3.17,12.84,12.84,0,0,1-1.31,1.33,13.32,13.32,0,0,1-1.49,1.12,14,14,0,0,1-3.37,1.59,13,13,0,0,1-1.82.43,17.17,17.17,0,0,1-1.88.21,14.31,14.31,0,0,1-3.77-.27,14.55,14.55,0,0,1-5.12-2.19,11.53,11.53,0,0,1-1.41-1.17A13.92,13.92,0,0,1,.92,18a10.3,10.3,0,0,1-.08-1.88A12.36,12.36,0,0,1,3.31,9.34,10.42,10.42,0,0,1,5.91,6.89ZM7.27,3.35a1.52,1.52,0,0,1-.08-.78,1.82,1.82,0,0,1,.32-.76A2.29,2.29,0,0,1,9,1,6.31,6.31,0,0,1,9.78.89h2.36a25.76,25.76,0,0,1,6.19,1,23.94,23.94,0,0,1,5.74,2.5,20.58,20.58,0,0,1,2.56,1.83,3.84,3.84,0,0,1,1,1.27,1.29,1.29,0,0,1,.08.84,1.24,1.24,0,0,1-.47.64,1.21,1.21,0,0,0,.29-.67,1,1,0,0,0-.21-.65,3.64,3.64,0,0,0-1.07-.94c-.86-.53-1.75-1-2.66-1.47A34.29,34.29,0,0,0,18,3.06,38.16,38.16,0,0,0,12,1.84c-.5-.06-1-.11-1.52-.15l-.73-.13a6.42,6.42,0,0,0-.73,0A1.88,1.88,0,0,0,7.77,2,1.57,1.57,0,0,0,7.27,3.35Z\\\" />\\r\\n        <g class=\\\"pay-btn-border\\\">\\r\\n          <rect x=\\\"1.35\\\" y=\\\"0.56\\\" width=\\\"25.09\\\" height=\\\"26.44\\\" class=\\\"inner-pot\\\" />\\r\\n        </g>\\r\\n        <path class=\\\"pot-entry\\\" d=\\\"M22,6.27c-1.13-.38-2.45-.85-3.86-1.22-1-.28-2.17-.57-3.11-.75-2.64-.47-4.52-.57-4.62-.09-.09.19.19.57.75.85A24.19,24.19,0,0,0,17.46,7.4a22.19,22.19,0,0,0,7.07,1.13c.38-.09.66-.19.66-.28C25.32,7.9,24.05,7.15,22,6.27Z\\\" />\\r\\n        <text class=\\\"pay-text\\\"><tspan style=\\\"letter-spacing: -0.05859375em\\\">P</tspan><tspan x=\\\"4.94\\\" y=\\\"0\\\" style=\\\"letter-spacing: -0.087890625em\\\">A</tspan><tspan x=\\\"10.56\\\" y=\\\"0\\\">Y</tspan></text>\\r\\n      </svg>      \\r\\n      <div class=\\\"glow-wrap\\\">\\r\\n        <i class=\\\"glow\\\"></i>\\r\\n      </div>          \\r\\n    </ion-col>\\r\\n  </ion-row>  \\r\\n  <ion-row  *ngIf=\\\"paypalLoading\\\">\\r\\n    <ion-col>\\r\\n      <p class=\\\"ion-text-center ion-padding\\\">\\r\\n        <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n      </p>\\r\\n    </ion-col>\\r\\n  </ion-row> \\r\\n  <ion-row *ngIf=\\\"canShowPaypalButton()\\\">\\r\\n    <ion-col class=\\\"ion-padding\\\" size=\\\"12\\\">\\r\\n      <div #paypalbuttoncontainer id=\\\"paypal-button-container\\\"></div> \\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-grid>\\r\\n</form> \\r\\n\";","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title class=\\\"ion-text-center\\\">{{'DEBT_MAKE_PAYMENT' | translate }}</ion-title>\\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar class=\\\"ion-text-center\\\">\\r\\n    <ion-segment (ionChange)=\\\"segmentChanged()\\\" value=\\\"bank\\\">\\r\\n      <ion-segment-button *ngIf=\\\"balanceOnlineAmount > 0\\\" value=\\\"bank\\\">\\r\\n        <ion-label class=\\\"ion-text-capitalize\\\">{{ 'TYPE_PAYMENT_ID2' | translate }}</ion-label>\\r\\n      </ion-segment-button>\\r\\n      <ion-segment-button *ngIf=\\\"balanceOfflineAmount > 0\\\"  value=\\\"phone\\\">\\r\\n        <ion-label class=\\\"ion-text-capitalize\\\">{{ 'OFFLINE_PAYMENT' | translate }}</ion-label>\\r\\n      </ion-segment-button>\\r\\n    </ion-segment>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"tontine-contribute\\\">\\r\\n  <p class=\\\"ion-text-center\\\" *ngIf=\\\"loading\\\">\\r\\n    <ion-spinner  name=\\\"circles\\\"></ion-spinner> \\r\\n  </p>\\r\\n  <ion-grid *ngIf=\\\"balanceOnlineAmount > 0 || balanceOfflineAmount > 0\\\">\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <p class=\\\"ion-no-margin\\\">\\r\\n          {{ 'PAY_BENEFICIARY_TEXT' | translate }} <b>{{ tontineName }}</b>.         \\r\\n        </p>\\r\\n        <h4 class=\\\"ion-no-margin\\\" *ngIf=\\\"isModeSelected === true\\\">\\r\\n          <small>\\r\\n            {{ 'AMOUNT_TEXT' | translate }}: {{ (totalOnlineAmount | commadumper)}} {{currency}} (<b class=\\\"text-danger\\\">{{ 'REMAIN_OTHER_TEXT' | translate }}:  {{ (balanceOnlineAmount | commadumper) }}  {{currency}}</b>)\\r\\n          </small>\\r\\n        </h4>\\r\\n        <h4 class=\\\"ion-no-margin\\\" *ngIf=\\\"isModeSelected === false\\\">\\r\\n          <small>\\r\\n            {{ 'AMOUNT_TEXT' | translate }}: {{ (totalOfflineAmount | commadumper)}} {{currency}} (<b class=\\\"text-danger\\\">{{ 'REMAIN_OTHER_TEXT' | translate }}:  {{ (balanceOfflineAmount | commadumper) }}  {{currency}}</b>)\\r\\n          </small>\\r\\n        </h4>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <div class=\\\"bank\\\" *ngIf=\\\"isModeSelected === true && balanceOnlineAmount > 0\\\">\\r\\n          <app-wallet-order [amountPay]=\\\"totalOnlineAmount\\\" [balance]=\\\"balanceOnlineAmount\\\"></app-wallet-order>\\r\\n        </div>\\r\\n        <div class=\\\"mobile\\\" *ngIf=\\\"isModeSelected === false && balanceOfflineAmount > 0\\\">\\r\\n          <app-paidmode-debt-order [balance]=\\\"balanceOfflineAmount\\\" [amountPay]=\\\"totalOfflineAmount\\\" ></app-paidmode-debt-order>\\r\\n        </div>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid> \\r\\n\\r\\n  <div *ngIf=\\\"balanceOnlineAmount <= 0 && balanceOfflineAmount <= 0  && !loading\\\">\\r\\n    <p class=\\\"ion-padding\\\">{{ 'INTIATE_AMOUNT_COMPLETE_PAY_TEXT' | translate }}</p>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"ion-padding ion-text-center\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n            <ion-button expand=\\\"full\\\" \\r\\n                  fill=\\\"outline\\\"\\r\\n                  color=\\\"warning\\\" \\r\\n                  class=\\\"ion-text-uppercase\\\"\\r\\n                  shape=\\\"round\\\" (click)=\\\"closeContribute('close')\\\">\\r\\n              {{ 'CANCEL_TEXT' | translate }}\\r\\n            </ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n</ion-footer>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb3VudHJpZXMuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ3YWxsZXQtb3JkZXIuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<form [formGroup]=\\\"userPayMethodForm\\\">\\r\\n  <p class=\\\"ion-text-center\\\"  *ngIf=\\\"loadingOperator\\\">\\r\\n    <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n  </p>\\r\\n<ion-grid>\\r\\n  <ion-row>\\r\\n    <ion-col size=\\\"12\\\">\\r\\n      <ion-card class=\\\"paidmode\\\">\\r\\n        <ion-card-content class=\\\"ion-text-center\\\">    \\r\\n          <ion-row>\\r\\n            <ion-col size=\\\"12\\\">\\r\\n              <ion-item>\\r\\n                <ion-label>{{'COUNTRY_TEXT' | translate}}</ion-label>\\r\\n                <ion-select (ionChange)=\\\"updateCurrencyCountry(userPayMethodForm.value.country_id)\\\" formControlName=\\\"country_id\\\">\\r\\n                  <ion-select-option [value]=\\\"country.country_id\\\" *ngFor=\\\"let country of states\\\">{{ country.country_label }}</ion-select-option>          \\r\\n                </ion-select>\\r\\n              </ion-item>   \\r\\n              <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.country_id\\\">\\r\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"country.hasError(validation.type) && (country.dirty || country.touched)\\\">\\r\\n                    <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                    {{ validation.message }}\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>     \\r\\n            </ion-col>\\r\\n          </ion-row>       \\r\\n            <ion-row class=\\\"ion-justify-content-end\\\" *ngIf=\\\"userPayMethodForm.value.country_id && paymentMethods && paymentMethods.length > 0\\\">\\r\\n              <ion-col size=\\\"4\\\">\\r\\n                <ion-img [src]=\\\"paymentMethods&&paymentMethods[userPayMethodForm.value.typePaymentIndex] ? paymentMethods[userPayMethodForm.value.typePaymentIndex].logo : ' '\\\" class=\\\"logooperator\\\"></ion-img>\\r\\n              </ion-col>\\r\\n            </ion-row>  \\r\\n            <ion-row *ngIf=\\\"userPayMethodForm.value.country_id && paymentMethods && paymentMethods.length > 0\\\">\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label>{{ 'USER_PROFILE_TEXT4' | translate }}</ion-label>\\r\\n                  <ion-select (ionChange)=\\\"updatePaymentMethod(userPayMethodForm.value.typePaymentIndex)\\\" formControlName=\\\"typePaymentIndex\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let operator of paymentMethods; let operatorId = index\\\" [value]=\\\"operatorId\\\">{{ operator.name }}</ion-select-option>           \\r\\n                  </ion-select>\\r\\n                </ion-item>   \\r\\n                <div class=\\\"validation-errors\\\">\\r\\n                  <ng-container *ngFor=\\\"let validation of validationMessages.payementtype\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"payementtype.hasError(validation.type) && (payementtype.dirty || payementtype.touched)\\\">\\r\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                      {{ validation.message }}\\r\\n                    </div>\\r\\n                  </ng-container>\\r\\n                </div>   \\r\\n              </ion-col>\\r\\n            </ion-row> \\r\\n            <ion-row  *ngIf=\\\"checkMobileOperator()\\\">\\r\\n              <ion-col size=\\\"4\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">+</ion-label>\\r\\n                  <ion-input placeholder=\\\"{{userPayMethodForm.value.country_prefix}}\\\" type=\\\"text\\\"></ion-input>\\r\\n                </ion-item>        \\r\\n              </ion-col>\\r\\n              <ion-col size=\\\"8\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">{{ 'REGISTER_MPHONE' | translate }}</ion-label>\\r\\n                  <ion-input (ionChange)=\\\"checckEmailOrPhone(userPayMethodForm.value.phone,userPayMethodForm.value.typePaymentIndex)\\\" type=\\\"tel\\\" formControlName=\\\"phone\\\"></ion-input>\\r\\n                </ion-item> \\r\\n              </ion-col>\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <div class=\\\"validation-errors\\\" *ngIf=\\\"errorPhone\\\">\\r\\n                  <div class=\\\"error-message\\\">\\r\\n                    <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                    <span [innerHTML]=\\\"'USER_DETAIL_TEXT11' | translate\\\"></span>\\r\\n                  </div>\\r\\n              </div>          \\r\\n              </ion-col>\\r\\n            </ion-row> \\r\\n            <ion-row class=\\\"ion-padding-bottom\\\">\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\" >{{ 'AMOUNT_TEXT' | translate }}</ion-label>\\r\\n                  <ion-input (ionChange)=\\\"updatePaypalAmount()\\\" type=\\\"number\\\" formControlName=\\\"montant\\\"></ion-input>\\r\\n                  <span slot=\\\"end\\\" class=\\\"slot-prefix ion-no-margin\\\"> {{ contributionData.currency }} </span>\\r\\n                </ion-item> \\r\\n                <div class=\\\"validation-errors\\\">\\r\\n                  <ng-container *ngFor=\\\"let validation of validationMessages.amount\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"montantContributeError.hasError(validation.type) && (montantContributeError.dirty || montantContributeError.touched)\\\">\\r\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                      {{ validation.message }}\\r\\n                    </div>\\r\\n                  </ng-container>\\r\\n                </div>          \\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row   *ngIf=\\\"canShowPaypalMessage()\\\">\\r\\n              <ion-col>\\r\\n                <div class=\\\"padding\\\">\\r\\n                <p style=\\\"color: red\\\">{{paypalMessage}}</p>\\r\\n              </div>\\r\\n              </ion-col>\\r\\n            </ion-row>                        \\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>      \\r\\n  </ion-row>\\r\\n  <ion-row>\\r\\n    <svg height=\\\"0\\\" width=\\\"0\\\" viewBox=\\\"0 0 27.7 28.93\\\">\\r\\n      <defs>\\r\\n        <clipPath id=\\\"pay-btn-shape1\\\" >\\r\\n          <path d=\\\"M2.57,17.21A11.18,11.18,0,0,1,9.17,5.77h.06l.17-.22.11-.23c-1-.73-1.56-1.42-1.39-2,.42-1.32,5-1.17,10.22.33S27.43,7.47,27,8.81c-.16.48-.86.76-1.88.86h0v.1a5,5,0,0,0,.08.66,3.77,3.77,0,0,0,.1.46l.07.23c2,4,1.7,8.37-1.73,12.53a12.23,12.23,0,0,1-18.42-.1A11.55,11.55,0,0,1,2.57,17.21Z\\\" />            \\r\\n        </clipPath>        \\r\\n      </defs>\\r\\n    </svg>\\r\\n    <ion-col size=\\\"12\\\" class=\\\"ion-text-center wrap-pay-btn\\\" *ngIf=\\\"canPay()\\\"  (click)=\\\"showPayment(userPayMethodForm.value)\\\">\\r\\n      <svg id=\\\"pay-btn1\\\" preserveAspectRatio=\\\"xMidYMid slice\\\" viewBox=\\\"0 0 27.7 28.93\\\">\\r\\n        <path  class=\\\"arc-part\\\" d=\\\"M5.91,6.89a12.25,12.25,0,0,0-4.14,9.27,11.14,11.14,0,0,0,.16,1.7,12.82,12.82,0,0,0,.42,1.66c.08.27.19.54.29.8A8.24,8.24,0,0,0,3,21.1a14.85,14.85,0,0,0,.82,1.5,12.25,12.25,0,0,0,3.5,3.62,13.49,13.49,0,0,0,8,2.21,15.81,15.81,0,0,0,1.7-.17,13.74,13.74,0,0,0,1.69-.37,12.79,12.79,0,0,0,5.65-3.5,11.63,11.63,0,0,0,1.88-2.83,12.11,12.11,0,0,0,1.06-3.27,11,11,0,0,0-.94-6.84A10.42,10.42,0,0,1,27.23,13a10.65,10.65,0,0,1,.63,1.71,11.3,11.3,0,0,1,.22,3.64,12.78,12.78,0,0,1-.94,3.56,12.11,12.11,0,0,1-1.88,3.17,12.84,12.84,0,0,1-1.31,1.33,13.32,13.32,0,0,1-1.49,1.12,14,14,0,0,1-3.37,1.59,13,13,0,0,1-1.82.43,17.17,17.17,0,0,1-1.88.21,14.31,14.31,0,0,1-3.77-.27,14.55,14.55,0,0,1-5.12-2.19,11.53,11.53,0,0,1-1.41-1.17A13.92,13.92,0,0,1,.92,18a10.3,10.3,0,0,1-.08-1.88A12.36,12.36,0,0,1,3.31,9.34,10.42,10.42,0,0,1,5.91,6.89ZM7.27,3.35a1.52,1.52,0,0,1-.08-.78,1.82,1.82,0,0,1,.32-.76A2.29,2.29,0,0,1,9,1,6.31,6.31,0,0,1,9.78.89h2.36a25.76,25.76,0,0,1,6.19,1,23.94,23.94,0,0,1,5.74,2.5,20.58,20.58,0,0,1,2.56,1.83,3.84,3.84,0,0,1,1,1.27,1.29,1.29,0,0,1,.08.84,1.24,1.24,0,0,1-.47.64,1.21,1.21,0,0,0,.29-.67,1,1,0,0,0-.21-.65,3.64,3.64,0,0,0-1.07-.94c-.86-.53-1.75-1-2.66-1.47A34.29,34.29,0,0,0,18,3.06,38.16,38.16,0,0,0,12,1.84c-.5-.06-1-.11-1.52-.15l-.73-.13a6.42,6.42,0,0,0-.73,0A1.88,1.88,0,0,0,7.77,2,1.57,1.57,0,0,0,7.27,3.35Z\\\" />\\r\\n        <g class=\\\"pay-btn-border\\\">\\r\\n          <rect x=\\\"1.35\\\" y=\\\"0.56\\\" width=\\\"25.09\\\" height=\\\"26.44\\\" class=\\\"inner-pot\\\" />\\r\\n        </g>\\r\\n        <path class=\\\"pot-entry\\\" d=\\\"M22,6.27c-1.13-.38-2.45-.85-3.86-1.22-1-.28-2.17-.57-3.11-.75-2.64-.47-4.52-.57-4.62-.09-.09.19.19.57.75.85A24.19,24.19,0,0,0,17.46,7.4a22.19,22.19,0,0,0,7.07,1.13c.38-.09.66-.19.66-.28C25.32,7.9,24.05,7.15,22,6.27Z\\\" />\\r\\n        <text class=\\\"pay-text\\\"><tspan style=\\\"letter-spacing: -0.05859375em\\\">P</tspan><tspan x=\\\"4.94\\\" y=\\\"0\\\" style=\\\"letter-spacing: -0.087890625em\\\">A</tspan><tspan x=\\\"10.56\\\" y=\\\"0\\\">Y</tspan></text>\\r\\n      </svg>     \\r\\n      <div class=\\\"glow-wrap\\\">\\r\\n        <i class=\\\"glow\\\"></i>\\r\\n      </div>          \\r\\n    </ion-col>\\r\\n  </ion-row> \\r\\n  <ion-row  *ngIf=\\\"paypalLoading\\\">\\r\\n    <ion-col>\\r\\n      <p class=\\\"ion-text-center ion-padding\\\">\\r\\n        <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n      </p>\\r\\n    </ion-col>\\r\\n  </ion-row> \\r\\n  <ion-row *ngIf=\\\"canShowPaypalButton()\\\">\\r\\n    <ion-col class=\\\"ion-padding\\\" size=\\\"12\\\">\\r\\n      <div #paypalbuttoncontainer id=\\\"paypal-button-container\\\"></div> \\r\\n    </ion-col>\\r\\n  </ion-row>  \\r\\n</ion-grid>\\r\\n</form> \\r\\n\";","export default \"<form [formGroup]=\\\"userPayMethodForm\\\">\\r\\n  <p class=\\\"ion-text-center\\\"  *ngIf=\\\"loadingOperator\\\">\\r\\n    <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n  </p>\\r\\n<ion-grid>\\r\\n  <ion-row>\\r\\n    <ion-col size=\\\"12\\\">\\r\\n      <ion-card class=\\\"paidmode\\\">\\r\\n        <ion-card-content class=\\\"ion-text-center\\\">    \\r\\n          <ion-row>\\r\\n            <ion-col size=\\\"12\\\">\\r\\n              <ion-item>\\r\\n                <ion-label>{{'COUNTRY_TEXT' | translate}}</ion-label>\\r\\n                <ion-select (ionChange)=\\\"updateCurrencyCountry(userPayMethodForm.value.country_id)\\\" formControlName=\\\"country_id\\\">\\r\\n                  <ion-select-option [value]=\\\"country.country_id\\\" *ngFor=\\\"let country of states\\\">{{ country.country_label }}</ion-select-option>          \\r\\n                </ion-select>\\r\\n              </ion-item>   \\r\\n              <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.country_id\\\">\\r\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"country.hasError(validation.type) && (country.dirty || country.touched)\\\">\\r\\n                    <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                    {{ validation.message }}\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>     \\r\\n            </ion-col>\\r\\n          </ion-row>       \\r\\n            <ion-row class=\\\"ion-justify-content-end\\\" *ngIf=\\\"userPayMethodForm.value.country_id && paymentMethods && paymentMethods.length > 0\\\">\\r\\n              <ion-col size=\\\"4\\\">\\r\\n                <ion-img [src]=\\\"paymentMethods&&paymentMethods[userPayMethodForm.value.typePaymentIndex] ? paymentMethods[userPayMethodForm.value.typePaymentIndex].logo : ' '\\\" class=\\\"logooperator\\\"></ion-img>\\r\\n              </ion-col>\\r\\n            </ion-row>  \\r\\n            <ion-row *ngIf=\\\"userPayMethodForm.value.country_id && paymentMethods && paymentMethods.length > 0\\\">\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label>{{ 'USER_PROFILE_TEXT4' | translate }}</ion-label>\\r\\n                  <ion-select (ionChange)=\\\"updatePaymentMethod(userPayMethodForm.value.typePaymentIndex)\\\" formControlName=\\\"typePaymentIndex\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let operator of paymentMethods; let operatorId = index\\\" [value]=\\\"operatorId\\\">{{ operator.name }}</ion-select-option>           \\r\\n                  </ion-select>\\r\\n                </ion-item>   \\r\\n                <div class=\\\"validation-errors\\\">\\r\\n                  <ng-container *ngFor=\\\"let validation of validationMessages.payementtype\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"payementtype.hasError(validation.type) && (payementtype.dirty || payementtype.touched)\\\">\\r\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                      {{ validation.message }}\\r\\n                    </div>\\r\\n                  </ng-container>\\r\\n                </div>   \\r\\n              </ion-col>\\r\\n            </ion-row> \\r\\n            <ion-row  *ngIf=\\\"checkMobileOperator()\\\">\\r\\n              <ion-col size=\\\"4\\\">\\r\\n                <ion-item  >\\r\\n                  <ion-label position=\\\"floating\\\">+</ion-label>\\r\\n                  <ion-input placeholder=\\\"{{userPayMethodForm.value.country_prefix}}\\\" type=\\\"text\\\"></ion-input>\\r\\n                </ion-item>        \\r\\n              </ion-col>\\r\\n              <ion-col size=\\\"8\\\">\\r\\n                <ion-item >\\r\\n                  <ion-label position=\\\"floating\\\">{{ 'REGISTER_MPHONE' | translate }}</ion-label>\\r\\n                  <ion-input (ionChange)=\\\"checckEmailOrPhone(userPayMethodForm.value.phone,userPayMethodForm.value.typePaymentIndex)\\\" type=\\\"tel\\\" formControlName=\\\"phone\\\"></ion-input>\\r\\n                </ion-item> \\r\\n              </ion-col>\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <div class=\\\"validation-errors\\\" *ngIf=\\\"errorPhone\\\">\\r\\n                  <div class=\\\"error-message\\\">\\r\\n                    <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                    <span [innerHTML]=\\\"'USER_DETAIL_TEXT11' | translate\\\"></span>\\r\\n                  </div>\\r\\n              </div>          \\r\\n              </ion-col>\\r\\n            </ion-row> \\r\\n            <ion-row class=\\\"ion-padding-bottom\\\">\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\" >{{ 'AMOUNT_TEXT' | translate }}</ion-label>\\r\\n                  <ion-input (ionChange)=\\\"updatePaypalAmount()\\\" type=\\\"number\\\" formControlName=\\\"montant\\\"></ion-input>\\r\\n                  <span slot=\\\"end\\\" class=\\\"slot-prefix ion-no-margin\\\"> {{ contributionData.currency_name }} </span>\\r\\n                </ion-item> \\r\\n                <div class=\\\"validation-errors\\\">\\r\\n                  <ng-container *ngFor=\\\"let validation of validationMessages.amount\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"montantContributeError.hasError(validation.type) && (montantContributeError.dirty || montantContributeError.touched)\\\">\\r\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                      {{ validation.message }}\\r\\n                    </div>\\r\\n                  </ng-container>\\r\\n                </div>          \\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row *ngIf=\\\"canShowPaypalMessage()\\\">\\r\\n              <ion-col>\\r\\n                <div class=\\\"padding\\\">\\r\\n                <p style=\\\"color: red\\\">{{paypalMessage}}</p>\\r\\n              </div>\\r\\n              </ion-col>\\r\\n            </ion-row>                        \\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>      \\r\\n  </ion-row>\\r\\n  <ion-row>\\r\\n    <svg height=\\\"0\\\" width=\\\"0\\\" viewBox=\\\"0 0 27.7 28.93\\\">\\r\\n      <defs>\\r\\n        <clipPath id=\\\"pay-btn-shape1\\\" >\\r\\n          <path d=\\\"M2.57,17.21A11.18,11.18,0,0,1,9.17,5.77h.06l.17-.22.11-.23c-1-.73-1.56-1.42-1.39-2,.42-1.32,5-1.17,10.22.33S27.43,7.47,27,8.81c-.16.48-.86.76-1.88.86h0v.1a5,5,0,0,0,.08.66,3.77,3.77,0,0,0,.1.46l.07.23c2,4,1.7,8.37-1.73,12.53a12.23,12.23,0,0,1-18.42-.1A11.55,11.55,0,0,1,2.57,17.21Z\\\" />            \\r\\n        </clipPath>        \\r\\n      </defs>\\r\\n    </svg>\\r\\n    <ion-col size=\\\"12\\\" class=\\\"ion-text-center wrap-pay-btn\\\" *ngIf=\\\"canPay()\\\"  (click)=\\\"showPayment(userPayMethodForm.value)\\\">\\r\\n      <svg id=\\\"pay-btn1\\\" preserveAspectRatio=\\\"xMidYMid slice\\\" viewBox=\\\"0 0 27.7 28.93\\\">\\r\\n        <path  class=\\\"arc-part\\\" d=\\\"M5.91,6.89a12.25,12.25,0,0,0-4.14,9.27,11.14,11.14,0,0,0,.16,1.7,12.82,12.82,0,0,0,.42,1.66c.08.27.19.54.29.8A8.24,8.24,0,0,0,3,21.1a14.85,14.85,0,0,0,.82,1.5,12.25,12.25,0,0,0,3.5,3.62,13.49,13.49,0,0,0,8,2.21,15.81,15.81,0,0,0,1.7-.17,13.74,13.74,0,0,0,1.69-.37,12.79,12.79,0,0,0,5.65-3.5,11.63,11.63,0,0,0,1.88-2.83,12.11,12.11,0,0,0,1.06-3.27,11,11,0,0,0-.94-6.84A10.42,10.42,0,0,1,27.23,13a10.65,10.65,0,0,1,.63,1.71,11.3,11.3,0,0,1,.22,3.64,12.78,12.78,0,0,1-.94,3.56,12.11,12.11,0,0,1-1.88,3.17,12.84,12.84,0,0,1-1.31,1.33,13.32,13.32,0,0,1-1.49,1.12,14,14,0,0,1-3.37,1.59,13,13,0,0,1-1.82.43,17.17,17.17,0,0,1-1.88.21,14.31,14.31,0,0,1-3.77-.27,14.55,14.55,0,0,1-5.12-2.19,11.53,11.53,0,0,1-1.41-1.17A13.92,13.92,0,0,1,.92,18a10.3,10.3,0,0,1-.08-1.88A12.36,12.36,0,0,1,3.31,9.34,10.42,10.42,0,0,1,5.91,6.89ZM7.27,3.35a1.52,1.52,0,0,1-.08-.78,1.82,1.82,0,0,1,.32-.76A2.29,2.29,0,0,1,9,1,6.31,6.31,0,0,1,9.78.89h2.36a25.76,25.76,0,0,1,6.19,1,23.94,23.94,0,0,1,5.74,2.5,20.58,20.58,0,0,1,2.56,1.83,3.84,3.84,0,0,1,1,1.27,1.29,1.29,0,0,1,.08.84,1.24,1.24,0,0,1-.47.64,1.21,1.21,0,0,0,.29-.67,1,1,0,0,0-.21-.65,3.64,3.64,0,0,0-1.07-.94c-.86-.53-1.75-1-2.66-1.47A34.29,34.29,0,0,0,18,3.06,38.16,38.16,0,0,0,12,1.84c-.5-.06-1-.11-1.52-.15l-.73-.13a6.42,6.42,0,0,0-.73,0A1.88,1.88,0,0,0,7.77,2,1.57,1.57,0,0,0,7.27,3.35Z\\\" />\\r\\n        <g class=\\\"pay-btn-border\\\">\\r\\n          <rect x=\\\"1.35\\\" y=\\\"0.56\\\" width=\\\"25.09\\\" height=\\\"26.44\\\" class=\\\"inner-pot\\\" />\\r\\n        </g>\\r\\n        <path class=\\\"pot-entry\\\" d=\\\"M22,6.27c-1.13-.38-2.45-.85-3.86-1.22-1-.28-2.17-.57-3.11-.75-2.64-.47-4.52-.57-4.62-.09-.09.19.19.57.75.85A24.19,24.19,0,0,0,17.46,7.4a22.19,22.19,0,0,0,7.07,1.13c.38-.09.66-.19.66-.28C25.32,7.9,24.05,7.15,22,6.27Z\\\" />\\r\\n        <text class=\\\"pay-text\\\"><tspan style=\\\"letter-spacing: -0.05859375em\\\">P</tspan><tspan x=\\\"4.94\\\" y=\\\"0\\\" style=\\\"letter-spacing: -0.087890625em\\\">A</tspan><tspan x=\\\"10.56\\\" y=\\\"0\\\">Y</tspan></text>\\r\\n      </svg>     \\r\\n      <div class=\\\"glow-wrap\\\">\\r\\n        <i class=\\\"glow\\\"></i>\\r\\n      </div>          \\r\\n    </ion-col>\\r\\n  </ion-row> \\r\\n  <ion-row  *ngIf=\\\"paypalLoading\\\">\\r\\n    <ion-col>\\r\\n      <p class=\\\"ion-text-center ion-padding\\\">\\r\\n        <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n      </p>\\r\\n    </ion-col>\\r\\n  </ion-row> \\r\\n  <ion-row *ngIf=\\\"canShowPaypalButton()\\\">\\r\\n    <ion-col class=\\\"ion-padding\\\" size=\\\"12\\\">\\r\\n      <div #paypalbuttoncontainer id=\\\"paypal-button-container\\\"></div> \\r\\n    </ion-col>\\r\\n  </ion-row>  \\r\\n</ion-grid>\\r\\n</form> \\r\\n\";","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ErrorService } from '../service/error.service';\r\nimport { DebtsManagerService } from 'src/app/dashboard/my-tontines/services/debts-manager.service';\r\nimport { TontineService } from 'src/app/dashboard/my-tontines/services/tontine.service';\r\nimport { PaymentErrorService } from '../service/payment-error.service';\r\nimport { EventService } from '../service/events.service';\r\nimport { UiService } from '../service/ui.service';\r\nimport { PluginService } from '../service/plugin.service';\r\n\r\n@Component({\r\n  selector: 'app-bankmode',\r\n  templateUrl: './bankmode.component.html',\r\n  styleUrls: ['./bankmode.component.scss'],\r\n})\r\nexport class BankmodeComponent implements OnInit {\r\n\r\n  @Input() amountPay: number;\r\n  @Input() balance: number;\r\n\r\n  paymentForm: FormGroup;\r\n  validationMessages: any;\r\n  loadingPay: boolean;\r\n  currentTontine: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private translate: TranslateService,\r\n    private event: EventService,\r\n    private tontine: TontineService,\r\n    private error: ErrorService,\r\n    private debt: DebtsManagerService,\r\n    private ui: UiService,\r\n    private paymentError: PaymentErrorService,\r\n    private plugin: PluginService\r\n  ) {\r\n\r\n    this.loadingPay = false;\r\n    this.currentTontine = this.tontine.getCurrentTontineData();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initFormMessage();\r\n    this.initTradionnalPayment();\r\n  }\r\n\r\n\r\n  // Getters\r\n  get amount() {\r\n    return this.paymentForm.get('amount');\r\n  }\r\n\r\n  get proofMessage() {\r\n    return this.paymentForm.get('proofMessage');\r\n  }\r\n\r\n  get proof() {\r\n    return this.paymentForm.get('receipt');\r\n  }\r\n\r\n  // Init the form message\r\n  initFormMessage() {\r\n    this.translate.get(['DEBT_AMOUNT_REQUIRED_TEXT', 'DEBT_PROOF_MSG_REQUIRED_TEXT']).subscribe(trans => {\r\n      this.validationMessages = {\r\n        amount: [\r\n          { type: 'required', message: trans.DEBT_AMOUNT_REQUIRED_TEXT }\r\n        ],\r\n        proofMessage: [\r\n          { type: 'required', message: trans.DEBT_PROOF_MSG_REQUIRED_TEXT }\r\n        ]\r\n      };\r\n    });\r\n  }\r\n\r\n  // Init traditional banking payment\r\n  initTradionnalPayment() {\r\n    const params = this.debt.getDebtsData();\r\n    const items = params.items;\r\n    const itemsParams = [];\r\n    items.forEach(item => {\r\n      itemsParams.push({ seance_id: item.seance_id, numero_part: item.numero_part, montant: item.montant, typecontribution_id: item.typecontribution_id });\r\n    });\r\n    this.paymentForm = this.fb.group({\r\n      reference_facture: [params.facture ? params.facture.reference : ''],\r\n      device_id: [params.facture ? params.facture.device_id : ''],\r\n      montant_total_facture: [params.facture ? params.facture.montant : 0],\r\n      currency: [params.facture ? params.facture.device_name : 0],\r\n      amount: [this.balance, Validators.compose([Validators.required, Validators.min(1)])],\r\n      liste_item: [itemsParams, Validators.required],\r\n      proofMessage: [''],\r\n      receipt: [''],\r\n      liste_proof: [[]],\r\n      tontine_id: [params.facture ? params.facture.tontine_id : '']\r\n    });\r\n  }\r\n\r\n\r\n  // Get the payment proofs\r\n  getProof() {\r\n    this.plugin.getPicture().subscribe((picture: any) => {\r\n      if (picture) {\r\n        setTimeout(() => {\r\n          this.paymentForm.get('receipt').setValue(picture);\r\n        }, 200);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Make the payment\r\n  makePayment() {\r\n    this.paymentForm.get('liste_proof').setValue([{\r\n      montant: this.paymentForm.value.amount,\r\n      description: this.paymentForm.value.proofMessage,\r\n      receipt: this.paymentForm.value.receipt\r\n    }]);\r\n    this.loadingPay = true;\r\n    this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n      this.ui.presentLoading(value);\r\n    });\r\n    this.debt.paidMemberBillTradiBanking(this.paymentForm.value).subscribe((reponse: any) => {\r\n      this.loadingPay = false;\r\n      this.ui.dismissLoading();\r\n      if (reponse && reponse.message === 'success') {\r\n        this.translate.get('DEBT_PAYMENT_SUCCES_MSG').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n        });\r\n\r\n        if (this.balance - this.paymentForm.value.amount === 0) {\r\n          this.event.publish('modal-close', { result: 'complete' });\r\n        } else {\r\n          this.event.publish('modal-close', { result: 'partial' });\r\n        }\r\n      }\r\n    }, error => {\r\n      this.loadingPay = false;\r\n      if (error && error.error) {\r\n        if (error.error.user_not_found) {\r\n          this.loadingPay = true;\r\n          this.error.renewSession().then((data: any) => {\r\n            if (data && data.result === \"OK\") {\r\n              this.ui.dismissLoading();\r\n              this.makePayment();\r\n            } else {\r\n              this.loadingPay = false;\r\n              this.ui.dismissLoading();\r\n            }\r\n          });\r\n        } else {\r\n          this.ui.dismissLoading();\r\n          this.paymentError.managePaymentOfflineError(error);\r\n        }\r\n      } else {\r\n        this.ui.dismissLoading();\r\n        this.error.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, NgZone, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ErrorService } from '../service/error.service';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController, NavController, Platform } from '@ionic/angular';\r\nimport { LocationService } from '../service/location.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ContributionService } from 'src/app/dashboard/my-tontines/services/contribution.service';\r\nimport { CurrencyService } from '../service/currency.service';\r\nimport { WalletService } from 'src/app/dashboard/my-wallet/service/wallet.service';\r\nimport { TontinesEventsService } from 'src/app/dashboard/tontines-events/services/tontines-events.service';\r\nimport { FormUtilsService } from '../service/form-utils.service';\r\nimport { PaymentErrorService } from '../service/payment-error.service';\r\nimport { PaymentGlobalDataService } from '../service/payment-global-data.service';\r\nimport { UserService } from 'src/app/dashboard/user/service/user.service';\r\nimport { EventService } from '../service/events.service';\r\nimport { UiService } from '../service/ui.service';\r\nimport { AuthService } from 'src/app/auth/service/auth.service';\r\nimport { ApiService } from '../service/api.service';\r\ndeclare var paypal: any;\r\n\r\ninterface PaymentMethod {\r\n  id: number;\r\n  logo: string;\r\n  currency: string;\r\n  country_id: number;\r\n  name: string;\r\n  placeholder ?: string;\r\n  handling_fees?: number;\r\n  type_handling_fees?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-paidmode-event',\r\n  templateUrl: './paidmode-event.component.html',\r\n  styleUrls: ['./paidmode-event.component.scss'],\r\n})\r\nexport class PaidmodeEventComponent implements OnInit {\r\n\r\n  paymentMethods: PaymentMethod[];\r\n  paypalMessage: string;\r\n  userPayMethodForm: FormGroup;\r\n  currentCountryId: number;\r\n  states: any;\r\n  loadingOperator: boolean;\r\n  tontineData: any;\r\n  contributionData: any;\r\n  errorPhone: boolean;\r\n  loading: boolean;\r\n  cron: any;\r\n  timeOut: any;\r\n  contributionDataParams: any;\r\n  pin: string;\r\n  spinner: any;\r\n  allPaymentMethods: any;\r\n  paymentForm: FormGroup;\r\n  reference: string;\r\n  validationMessages: any;\r\n  paypalLoading: boolean;\r\n  paypal_initialized: boolean;\r\n  refernceId: string;\r\n\r\n  @Input() amountPay: number;\r\n  @ViewChild('paypalbuttoncontainer', { static: false }) paypalbuttoncontainer: ElementRef;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private platform: Platform,\r\n    private event: TontinesEventsService,\r\n    private paymentData: PaymentGlobalDataService,\r\n    private events: EventService,\r\n    private api: ApiService,\r\n    private ui: UiService,\r\n    private currency: CurrencyService,\r\n    private contribution: ContributionService,\r\n    private alertController: AlertController,\r\n    private wallet: WalletService,\r\n    private errorService: ErrorService,\r\n    private location: LocationService,\r\n    private translate: TranslateService,\r\n    private formUtil: FormUtilsService,\r\n    private router: Router,\r\n    private zone: NgZone,\r\n    private navController: NavController,\r\n    private paymentError: PaymentErrorService,\r\n    private auth: AuthService\r\n  ) {\r\n    this.cron = null;\r\n    this.timeOut = null;\r\n    this.loadingOperator = false;\r\n    this.loading = false;\r\n    this.errorPhone = false;\r\n    this.states = [];\r\n    this.paymentMethods = [];\r\n    this.paypalMessage = '';\r\n    this.reference = this.formUtil.getRandomId();\r\n    this.tontineData = this.event.getCurrentTontineEventData();\r\n    this.allPaymentMethods = [];\r\n    this.contributionData = this.contribution.getContributionData();\r\n    this.paypalLoading = false;\r\n    this.paypal_initialized = false;\r\n    this.refernceId = '';\r\n    this.hardwareBackButton();\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.getAllMethodPaymentType();\r\n    this.initFormMessage();\r\n    this.initPaymentForm();\r\n  }\r\n\r\n\r\n  /******************************** END FORM SERVICES *********************************************/\r\n\r\n\r\n  // Form getters\r\n  get phone() {\r\n    return this.userPayMethodForm.get('phone');\r\n  }\r\n\r\n  get amountError() {\r\n    return this.userPayMethodForm.get('montantAvecFees');\r\n  }\r\n\r\n  get country() {\r\n    return this.userPayMethodForm.get('country_id');\r\n  }\r\n\r\n  get device_name() {\r\n    return this.userPayMethodForm.get('device_name');\r\n  }\r\n\r\n  get payementtype() {\r\n    return this.userPayMethodForm.get('typePaymentIndex');\r\n  }\r\n\r\n\r\n  get montantContributeError() {\r\n    return this.userPayMethodForm.get('montant');\r\n  }\r\n\r\n\r\n  // Init Form\r\n  initPaymentForm() {\r\n    const currentPayment = this.paymentData.getDefaultPaymentMethod();\r\n    this.userPayMethodForm = this.fb.group({\r\n      country_id: ['', Validators.required],\r\n      country_prefix: [''],\r\n      countryId: [''],\r\n      handleFees: [''],\r\n      handleFeesType: [''],\r\n      device_name: [''],\r\n      currency: [''],\r\n      currencyLabel: [''],\r\n      pay_token: [''],\r\n      url: [''],\r\n      montant: ['', Validators.compose([Validators.required, Validators.min(1)])],\r\n      montantAvecFees: ['0'],\r\n      montantTotal: ['0'],\r\n      type_payment_id: [currentPayment ? currentPayment.typepaiement_id : ''],\r\n      type_payment_name: [currentPayment ? currentPayment.name : ''],\r\n      typePaymentIndex: [0, Validators.required],\r\n      phone: [currentPayment  && this.formUtil.validatePhone(currentPayment.numero_compte) ? currentPayment.numero_compte : ''],\r\n      anonym: false,\r\n      numero: ['']\r\n    });\r\n  }\r\n\r\n\r\n  // init form message\r\n  initFormMessage() {\r\n    this.translate.get(['REGISTER_PHONE_REQUIRED', 'M_COUNTRY_REQUIRED', 'AMOUNT_REQUIRED', 'PAID_MODE_REQUIRED'])\r\n      .subscribe(value => {\r\n        this.validationMessages = {\r\n          payementtype: [\r\n            { type: 'required', message: value.PAID_MODE_REQUIRED }\r\n          ],\r\n          phone: [\r\n            { type: 'required', message: value.REGISTER_PHONE_REQUIRED },\r\n          ],\r\n          amount: [\r\n            { type: 'required', message: value.AMOUNT_REQUIRED }\r\n          ],\r\n          country_id: [\r\n            { type: 'required', message: value.M_COUNTRY_REQUIRED }\r\n          ]\r\n        };\r\n      });\r\n  }\r\n\r\n  // Remove space\r\n  removeSpace() {\r\n    this.userPayMethodForm.get('phone').setValue(this.paymentData.removeInputSpace(this.userPayMethodForm.value.phone));\r\n  }\r\n\r\n  // check if it is not  mobile operator\r\n  checkMobileOperator() {\r\n    return this.paymentData.isMobileOperator(this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex]);\r\n  }\r\n\r\n  // can show paypal message\r\n  canShowPaypalMessage() {\r\n    return this.userPayMethodForm.value.montant && this.paymentData.hasPaypalMessage(this.paypalMessage,this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex]);\r\n  }\r\n\r\n  // can show paypal button\r\n  canShowPaypalButton() {\r\n    return this.paymentData.hasPaypalButton(this.paypal_initialized,this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex]);\r\n  }\r\n\r\n\r\n  // can pay with paypal\r\n  canPayWithPaypal() {\r\n    return this.paymentData.canShowPayment(this.userPayMethodForm.valid,this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex],this.userPayMethodForm.value.phone,this.errorPhone);\r\n  }\r\n\r\n\r\n\r\n  // check if emial or phone is valid\r\n  checckEmailOrPhone(inputValue: string, index: number) {\r\n    this.removeSpace();\r\n    this.userPayMethodForm.get('type_payment_id').setValue(this.paymentMethods[index].id);\r\n    switch (this.paymentMethods[index].name) {\r\n      case 'ORANGE MONEY':\r\n        this.errorPhone = !this.formUtil.validatePhone(inputValue);\r\n        if (!this.errorPhone) {\r\n          this.userPayMethodForm.get('numero').setValue(this.userPayMethodForm.value.country_prefix +\r\n            '' + this.userPayMethodForm.value.phone);\r\n        }\r\n        break;\r\n\r\n      case 'MTN MOBILE MONEY':\r\n        this.errorPhone = !this.formUtil.validatePhone(inputValue);\r\n        if (!this.errorPhone) {\r\n          this.userPayMethodForm.get('numero').setValue(this.userPayMethodForm.value.country_prefix +\r\n            '' + this.userPayMethodForm.value.phone);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // get all payment method\r\n  getAllMethodPaymentType() {\r\n    this.loadingOperator = true;\r\n    this.userService.getAllMethodPaymentType().subscribe((reponse: any) => {\r\n      this.paymentMethods = [];\r\n      this.loadingOperator = false;\r\n      if (reponse && reponse.typePayment && reponse.typePayment.length > 0) {\r\n        this.paymentMethods =  this.paymentData.formatPaymentMethodResponseContribution(reponse.typePayment);\r\n      }\r\n\r\n      const defaultMethod: PaymentMethod[] = [{\r\n        id: 0, country_id: 0, logo: 'assets/pesuwallet.jpg',\r\n        currency: this.tontineData.currency, name: 'WALLET', placeholder: '',\r\n        handling_fees: 0,\r\n        type_handling_fees: 'valeur'\r\n      }];\r\n      this.paymentMethods = defaultMethod.concat(this.paymentMethods);\r\n      this.allPaymentMethods = this.paymentMethods;\r\n      this.getCountries(false);\r\n    }, error => {\r\n      this.loadingOperator = false;\r\n      this.paymentMethods.push({\r\n        id: 0, country_id: 0, logo: 'assets/pesuwallet.jpg',\r\n        currency: this.tontineData.currency, name: 'WALLET', placeholder: '',\r\n        handling_fees: 0,\r\n        type_handling_fees: 'valeur'\r\n      });\r\n      this.allPaymentMethods = this.paymentMethods;\r\n      this.getCountries(false);\r\n      this.errorService.manageError(error);\r\n    });\r\n  }\r\n\r\n  // Get all countries\r\n  getCountries(refresher: boolean) {\r\n    this.location.getAllCountries(refresher).then((countries: any) => {\r\n      this.states = this.paymentData.formatCountriesData(countries);\r\n      // Set the country of the tontine\r\n      if (this.states && this.states.length > 0) {\r\n        setTimeout(() => {\r\n          this.states.forEach(country => {\r\n            if (country.country_key === this.tontineData.code_country) {\r\n              this.updateFormData(country);\r\n            }\r\n          });\r\n        }, 200);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  // update the form data\r\n  updateFormData(country: any) {\r\n    if (country) {\r\n      this.userPayMethodForm.get('countryId').setValue(country.country_id);\r\n      this.userPayMethodForm.get('country_prefix').setValue(country.country_prefixe);\r\n      this.userPayMethodForm.get('currency').setValue(country.device_name);\r\n      this.userPayMethodForm.get('handleFeesType').setValue(country.type_handling_fees);\r\n      this.userPayMethodForm.get('handleFees').setValue(country.handling_fees);\r\n      this.userPayMethodForm.get('currencyLabel').setValue(country.currency_label);\r\n      this.zone.run(() => {\r\n        this.userPayMethodForm.get('country_id').setValue(country.country_id);\r\n      });\r\n      this.updatePaymentsMethods(country.country_id);\r\n    }\r\n  }\r\n\r\n  // Update the payment method\r\n  updatePaymentMethod(index) {\r\n    if (this.paymentMethods[index]) {\r\n      this.userPayMethodForm.get('type_payment_id').setValue(this.paymentMethods[index].id);\r\n      this.userPayMethodForm.get('type_payment_name').setValue(this.paymentMethods[index].name);\r\n      this.userPayMethodForm.get('device_name').setValue(this.paymentMethods[index].currency);\r\n      this.userPayMethodForm.get('handleFeesType').setValue(this.paymentMethods[index].type_handling_fees);\r\n      this.userPayMethodForm.get('handleFees').setValue(this.paymentMethods[index].handling_fees);\r\n      this.zone.run(() => {\r\n        this.userPayMethodForm.get('typePaymentIndex').setValue(index);\r\n      });\r\n    }\r\n    if (this.paymentMethods && this.paymentMethods[index] &&\r\n      this.paymentMethods[index].name === 'PAYPAL') {\r\n      this.paypal_initialized = false;\r\n      this.updatePaypalAmount();\r\n    }\r\n  }\r\n\r\n  // update the payment method\r\n  updatePaymentsMethods(countryId: number) {\r\n    const paymentsMethods = [];\r\n    this.paymentMethods = [];\r\n    this.allPaymentMethods.forEach(payment => {\r\n      if (payment.country_id === countryId || payment.country_id === 0) {\r\n        paymentsMethods.push(payment);\r\n      }\r\n    });\r\n    this.paymentMethods = paymentsMethods;\r\n    if (this.paymentMethods && this.paymentMethods.length > 0) {\r\n      this.updatePaymentMethod(0);\r\n    }\r\n  }\r\n\r\n  // Calucalte the payment with handlfees\r\n  getAmountWithFees(amountShare: any, devise: string) {\r\n    return this.paymentData.getHandleFeesWithDevise(amountShare, devise,this.userPayMethodForm.value.handleFees,this.userPayMethodForm.value.handleFeesType);\r\n  }\r\n\r\n  // Update the country info country prfix\r\n  updateCurrencyCountry(countryId: number) {\r\n    this.zone.run(() => {\r\n      this.paymentMethods = [];\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.states.forEach(state => {\r\n        if (state.country_id === countryId) {\r\n          this.updateFormData(state);\r\n        }\r\n      });\r\n    }, 300);\r\n  }\r\n\r\n\r\n  // Show the payment mode\r\n  showPayment(mode: any) {\r\n\r\n    switch (mode.type_payment_name) {\r\n\r\n      case 'ORANGE MONEY':\r\n        this.updateParametersOrange();\r\n        break;\r\n\r\n      case 'OZOW':\r\n        this.updateParametersOzow();\r\n        break;\r\n\r\n      case 'MTN MOBILE MONEY':\r\n        this.updateParametersMtn();\r\n        break;\r\n\r\n      case 'WALLET':\r\n        this.updateParametersWallet();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  /******************************** END FORM SERVICES *********************************************/\r\n\r\n\r\n  /******************************** START WALLET PAYMENT *********************************************/\r\n\r\n  async paymentWalletConfirm(dataMessage: any, translation: string[]) {\r\n    const alert = await this.alertController.create({\r\n      header: `${dataMessage.title}`,\r\n      message: `${translation[0]} ${dataMessage.montant}\r\n      ${dataMessage.device_name} ${translation[1]}`,\r\n      buttons: [\r\n        {\r\n          text: `${translation[2]}`,\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n\r\n          }\r\n        }, {\r\n          text: `${translation[3]}`,\r\n          handler: () => {\r\n            this.paidWithWallet(dataMessage);\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  // Update the wallet parameters\r\n  updateParametersWallet() {\r\n    const translation = [];\r\n    this.translate.get(['CONFIRM_PAY_CONTRIBUTION_SUBTEXT1', 'CONFIRM_PAY_CONTRIBUTION_SUBTEXT2', 'CANCEL_TEXT', 'YES_TEXT']).subscribe(trans => {\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT1);\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT2);\r\n      translation.push(trans.CANCEL_TEXT);\r\n      translation.push(trans.YES_TEXT);\r\n      const params = {\r\n        typecontribution_id: 6,\r\n        tontine_event_id: this.tontineData.id,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        device_name: this.tontineData.currency,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        montant: this.userPayMethodForm.value.montant,\r\n        anonym: this.userPayMethodForm.value.anonym,\r\n        sens_contribution: 'entrant',\r\n        title: this.contributionData.title\r\n      };\r\n      this.paymentWalletConfirm(params, translation);\r\n    });\r\n  }\r\n\r\n  // Send the user contribution\r\n  paidWithWallet(contributionData: any) {\r\n    this.loading = true;\r\n    this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n      this.ui.presentLoading(value);\r\n    });\r\n    this.contribution.contributeEventWithWallet(contributionData)\r\n      .subscribe((reponse: any) => {\r\n        this.loading = false;\r\n        this.ui.dismissLoading();\r\n        if (reponse && reponse.message === 'success') {\r\n          this.translate.get('CONFIRM_PAY_CONTRIBUTION_MSG1').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n          // this.modalCtrl.dismiss();\r\n          this.initPaymentForm();\r\n          this.router.navigate(['dashboard/tontines-events', this.contributionData.idEvent]);\r\n        }\r\n      }, error => {\r\n\r\n    \r\n        if (error && error.error && error.error.message === 'error') {\r\n          if (error.error.user_not_found) {\r\n            this.errorService.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.ui.dismissLoading();\r\n                this.paidWithWallet(contributionData);\r\n              } else {\r\n                this.exitPayment();\r\n              }\r\n            });\r\n          } else {\r\n            this.loading = false;\r\n            this.ui.dismissLoading();\r\n            this.paymentError.managePaymentOnlineError(error);\r\n          }\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.errorService.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n  /******************************** START WALLET PAYMENT *********************************************/\r\n\r\n\r\n  /******************************** START PAYPAL PAYMENT *********************************************/\r\n\r\n  // update the paypal total amount\r\n  updatePaypalAmount() {\r\n    if (this.userPayMethodForm.value.montant) {\r\n    if (this.userPayMethodForm.value.type_payment_name === 'PAYPAL') {\r\n      const amount = this.getAmountWithFees(this.userPayMethodForm.value.montant, this.contributionData.device_name);\r\n      this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n      if (this.contributionData.device_name !== this.userPayMethodForm.value.device_name) {\r\n        this.currency.convert(this.contributionData.device_name, this.userPayMethodForm.value.device_name, this.userPayMethodForm.value.montant)\r\n          .then(montatSansFees => {\r\n            if (montatSansFees) {\r\n              const amountAvecFees = this.getAmountWithFees(montatSansFees, this.userPayMethodForm.value.device_name);\r\n              this.userPayMethodForm.get('montantTotal').setValue(amountAvecFees);\r\n              this.translate.get('PAIDMODE_MSG2').subscribe(value => {\r\n                this.paypalMessage = `${value} ${this.userPayMethodForm.value.montantAvecFees}\r\n                 ${this.contributionData.device_name} =\r\n                ${this.userPayMethodForm.value.montantTotal}\r\n                ${this.userPayMethodForm.value.device_name}`;\r\n                this.setupPayPay();\r\n              });\r\n\r\n            } else {\r\n              this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n                this.paypalMessage = value;\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        this.userPayMethodForm.get('montantTotal').setValue(this.userPayMethodForm.value.montantAvecFees);\r\n        this.translate.get('PAIDMODE_MSG2').subscribe(value => {\r\n          this.paypalMessage = `${value}  ${this.userPayMethodForm.value.montantTotal}\r\n            ${this.userPayMethodForm.value.device_name}`;\r\n          this.setupPayPay();\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n  }\r\n\r\n\r\n  setupPayPay() {\r\n    if (!this.paypal_initialized) {\r\n      this.initPayPal();\r\n    }\r\n  }\r\n\r\n  initPayPal() {\r\n\r\n    if (this.userPayMethodForm.value.montantTotal > 0) {\r\n      this.paypalLoading = true;\r\n      this.paypal_initialized = true;\r\n      let paypalbuttoncontainer = this.paypalbuttoncontainer.nativeElement as HTMLDivElement\r\n      let _this = this;\r\n\r\n      paypal.Button.render({\r\n        env: 'production', // sandbox | production\r\n        style: {\r\n          size: 'responsive',\r\n          color: 'gold',\r\n          shape: 'pill',\r\n          label: 'checkout', //label: checkout, buynow, credit, pay, paypal\r\n          tagline: false\r\n        },\r\n\r\n        client: {\r\n          sandbox: 'ARIMcMamksC74CLp7Zavgn62RsKK0XDfjePxjU9gsWmcdzyI3AYz3PwADIktvUgCdhAwWCXPaBzCckOC',\r\n          production: 'AVdCN0ymBsPer15VtLbeNoZ3vkjkhap6vXoxwsWF3B0H4GM_mVQ5GVpJ2h4-G_AlVVIsBYWx4JpVVxLT'\r\n        },\r\n        // Show the buyer a 'Pay Now' button in the checkout flow\r\n        commit: true,\r\n\r\n        payment: function (data, actions) {\r\n          return actions.payment.create({\r\n            payment: {\r\n              transactions: [\r\n                {\r\n                  amount: {\r\n                    total: _this.userPayMethodForm.value.montantTotal,\r\n                    currency: _this.userPayMethodForm.value.device_name\r\n                  },\r\n                  description: 'Toupesu'\r\n                }\r\n              ]\r\n            }\r\n          });\r\n\r\n        },\r\n        // onAuthorize() is called when the buyer approves the payment\r\n        onAuthorize: function (data, actions, error) {\r\n\r\n          if (error) {\r\n            _this.exitPayment();\r\n          }\r\n\r\n          if (error === 'INSTRUMENT_DECLINED') {\r\n            _this.exitPayment();\r\n          }\r\n\r\n          // Make a call to the REST ui to execute the payment\r\n          return actions.payment.execute().then(function () {\r\n            const params: any = {\r\n              refID: _this.reference,\r\n              amount: _this.userPayMethodForm.value.montantTotal,\r\n              moneyCode: _this.userPayMethodForm.value.device_name,\r\n              product: 'Toupesu',\r\n              paypalID: data.paymentToken.split('-')[1]\r\n            };\r\n            // Save and check the payment result\r\n            _this.userPayMethodForm.get('pay_token').setValue(data.paymentToken.split('-')[1]);\r\n            _this.api.post('livepaygateway/paypal/savePayRequest', JSON.stringify(params)).subscribe(\r\n              (ans: any) => {\r\n                if (ans && ans.success) {\r\n                  _this.updateParametersPaypal(data.paymentToken.split('-')[1]);\r\n                }\r\n              }, error => {\r\n                _this.updateParametersPaypal(data.paymentToken.split('-')[1]);\r\n              });\r\n          });\r\n        },\r\n        onCancel: function (data, actions) {\r\n          _this.exitPayment();\r\n        },\r\n        onClick: (data, actions) => {\r\n          _this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n            _this.ui.presentToast(value);\r\n          });\r\n        }\r\n      }, paypalbuttoncontainer);\r\n\r\n      setTimeout(() => {\r\n        this.paypalLoading = false;\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  // Update parameters PAYPAL\r\n  updateParametersPaypal(payToken) {\r\n    const amount = this.getAmountWithFees(this.userPayMethodForm.value.montant, this.contributionData.device_name);\r\n    this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n    if (this.contributionData.device_name === this.userPayMethodForm.value.device_name) {\r\n      const params = {\r\n        tontine_event_id: this.contributionData.idEvent,\r\n        typecontribution_id: 6,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        montant_d_une_part_sans_handing_fees: this.userPayMethodForm.value.montant,\r\n        montant_d_une_part_avec_handling_fees: this.userPayMethodForm.value.montantAvecFees,\r\n        device_name: this.contributionData.device_name,\r\n        sens_contribution: 'entrant',\r\n        anonym: this.userPayMethodForm.value.anonym,\r\n        pay_token: payToken,\r\n        operator: 'paypal'\r\n      };\r\n      this.paidWithoutConversionOperator(params);\r\n    } else {\r\n      this.currency.convert(this.contributionData.device_name, this.userPayMethodForm.value.device_name, this.userPayMethodForm.value.montant)\r\n        .then(montSansFees => {\r\n\r\n          if (montSansFees) {\r\n            const params = {\r\n              tontine_event_id: this.contributionData.idEvent,\r\n              typecontribution_id: 6,\r\n              country_id: this.userPayMethodForm.value.countryId,\r\n              typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n              device_depart: this.userPayMethodForm.value.device_name,\r\n              device_arrivee: this.contributionData.device_name,\r\n              montant_device_depart_d_une_part_sans_handling_fees: montSansFees ? montSansFees : 0,\r\n              montant_device_depart_d_une_part_avec_handling_fees: this.getAmountWithFees(montSansFees, this.userPayMethodForm.value.device_name),\r\n              montant_device_arrivee_d_une_part_sans_handling_fees: this.userPayMethodForm.value.montant,\r\n              montant_device_arrivee_d_une_part_avec_handling_fees: this.userPayMethodForm.value.montantAvecFees,\r\n              sens_contribution: 'entrant',\r\n              anonym: this.userPayMethodForm.value.anonym,\r\n              pay_token: payToken,\r\n              operator: 'paypal'\r\n            };\r\n            this.paidWithConversionOperator(params);\r\n\r\n\r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  /******************************** END PAYPAL PAYMENT *********************************************/\r\n\r\n\r\n  /******************************** START MTN PAYMENT *********************************************/\r\n\r\n\r\n  // Update parameters  Mtn payment\r\n  updateParametersMtn() {\r\n    const amount = this.getAmountWithFees(this.userPayMethodForm.value.montant, this.contributionData.device_name);\r\n    this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n\r\n    if (this.contributionData.device_name !== this.userPayMethodForm.value.device_name) {\r\n      this.currency.convert(this.contributionData.device_name, this.userPayMethodForm.value.device_name,\r\n        this.userPayMethodForm.value.montant).then(montantSansFees => {\r\n          if (montantSansFees) {\r\n            const params = {\r\n              tontine_event_id: this.contributionData.idEvent,\r\n              typecontribution_id: 6,\r\n              typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n              country_id: this.userPayMethodForm.value.countryId,\r\n              device_depart: this.userPayMethodForm.value.device_name,\r\n              device_arrivee: this.contributionData.device_name,\r\n              montant_device_depart_d_une_part_sans_handling_fees: montantSansFees ? montantSansFees : 0,\r\n              montant_device_depart_d_une_part_avec_handling_fees: this.getAmountWithFees(montantSansFees, this.userPayMethodForm.value.device_name),\r\n              montant_device_arrivee_d_une_part_sans_handling_fees: this.userPayMethodForm.value.montant,\r\n              montant_device_arrivee_d_une_part_avec_handling_fees: this.userPayMethodForm.value.montantAvecFees,\r\n              sens_contribution: 'entrant',\r\n              anonym: this.userPayMethodForm.value.anonym,\r\n              numero: this.userPayMethodForm.value.numero,\r\n              operator: 'MTN'\r\n            };\r\n            this.contributionDataParams = params;\r\n            const messageConfirmation = {\r\n              title: this.contributionData.title, contribution: this.contributionDataParams.montant_device_depart_d_une_part_avec_handling_fees,\r\n              device_name: this.userPayMethodForm.value.device_name, type: 'converted'\r\n            };\r\n            this.showConfirmationMesaage(messageConfirmation, this.contributionDataParams);\r\n\r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n\r\n        });\r\n    } else {\r\n\r\n      const params = {\r\n        tontine_event_id: this.contributionData.idEvent,\r\n        typecontribution_id: 6,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        device_name: this.contributionData.device_name,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        montant_d_une_part_sans_handing_fees: this.userPayMethodForm.value.montant,\r\n        montant_d_une_part_avec_handling_fees: this.userPayMethodForm.value.montantAvecFees,\r\n        sens_contribution: 'entrant',\r\n        anonym: this.userPayMethodForm.value.anonym,\r\n        numero: this.userPayMethodForm.value.numero,\r\n        operator: 'MTN'\r\n      };\r\n      this.contributionDataParams = params;\r\n      const messageConfirmation = {\r\n        title: this.contributionData.title, contribution: this.userPayMethodForm.value.montantAvecFees,\r\n        device_name: this.contributionData.device_name, type: 'notconverted'\r\n      };\r\n      this.showConfirmationMesaage(messageConfirmation, this.contributionDataParams);\r\n    }\r\n  }\r\n\r\n  /******************************** END MTN PAYMENT *********************************************/\r\n\r\n\r\n  /******************************** START ORANGE PAYMENT *********************************************/\r\n\r\n\r\n  // Update parameters  Orange payment\r\n  updateParametersOrange() {\r\n    const amount = this.getAmountWithFees(this.userPayMethodForm.value.montant, this.contributionData.device_name);\r\n    this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n\r\n    if (this.contributionData.device_name !== this.userPayMethodForm.value.device_name) {\r\n      this.currency.convert(this.contributionData.device_name, this.userPayMethodForm.value.device_name,\r\n        this.userPayMethodForm.value.montant).then(montantSansFees => {\r\n\r\n          if (montantSansFees) {\r\n            const params = {\r\n              tontine_event_id: this.contributionData.idEvent,\r\n              typecontribution_id: 6,\r\n              typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n              country_id: this.userPayMethodForm.value.countryId,\r\n              device_depart: this.userPayMethodForm.value.device_name,\r\n              device_arrivee: this.contributionData.device_name,\r\n              montant_device_depart_d_une_part_sans_handling_fees: montantSansFees ? montantSansFees : 0,\r\n              montant_device_depart_d_une_part_avec_handling_fees: this.getAmountWithFees(montantSansFees, this.userPayMethodForm.value.device_name),\r\n              montant_device_arrivee_d_une_part_sans_handling_fees: this.userPayMethodForm.value.montant,\r\n              montant_device_arrivee_d_une_part_avec_handling_fees: this.userPayMethodForm.value.montantAvecFees,\r\n              sens_contribution: 'entrant',\r\n              numero: this.userPayMethodForm.value.numero,\r\n              anonym: this.userPayMethodForm.value.anonym,\r\n              operator: 'orange'\r\n            };\r\n            this.contributionDataParams = params;\r\n            const messageConfirmation = {\r\n              title: this.contributionData.title, contribution: this.contributionDataParams.montant_device_depart_d_une_part_avec_handling_fees,\r\n              device_name: this.userPayMethodForm.value.device_name, type: 'converted'\r\n            };\r\n            this.showConfirmationMesaage(messageConfirmation, this.contributionDataParams);\r\n\r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n        });\r\n\r\n    } else {\r\n\r\n      const params = {\r\n        tontine_event_id: this.contributionData.idEvent,\r\n        typecontribution_id: 6,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        device_name: this.contributionData.device_name,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        montant_d_une_part_sans_handing_fees: this.userPayMethodForm.value.montant,\r\n        montant_d_une_part_avec_handling_fees: this.userPayMethodForm.value.montantAvecFees,\r\n        sens_contribution: 'entrant',\r\n        numero: this.userPayMethodForm.value.numero,\r\n        anonym: this.userPayMethodForm.value.anonym,\r\n        operator: 'orange'\r\n      };\r\n      this.contributionDataParams = params;\r\n      const messageConfirmation = {\r\n        title: this.contributionData.title, contribution: this.userPayMethodForm.value.montantAvecFees,\r\n        device_name: this.contributionData.device_name, type: 'notconverted'\r\n      };\r\n      this.showConfirmationMesaage(messageConfirmation, this.contributionDataParams);\r\n    }\r\n  }\r\n\r\n  /******************************** END ORANGE PAYMENT *********************************************/\r\n\r\n\r\n\r\n  /******************************** START OZOW PAYMENT *********************************************/\r\n\r\n  // Update parameters OZOW payment\r\n  updateParametersOzow() {\r\n    const amount = this.getAmountWithFees(this.userPayMethodForm.value.montant, this.contributionData.device_name);\r\n    this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n\r\n    if (this.contributionData.device_name !== this.userPayMethodForm.value.device_name) {\r\n      this.currency.convert(this.contributionData.device_name, this.userPayMethodForm.value.device_name,\r\n        this.userPayMethodForm.value.montant).then(montantSansFees => {\r\n          if (montantSansFees) {\r\n            const params = {\r\n              tontine_event_id: this.contributionData.idEvent,\r\n              typecontribution_id: 6,\r\n              typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n              country_id: this.userPayMethodForm.value.countryId,\r\n              device_depart: this.userPayMethodForm.value.device_name,\r\n              device_arrivee: this.contributionData.device_name,\r\n              montant_device_depart_d_une_part_sans_handling_fees: montantSansFees ? montantSansFees : 0,\r\n              montant_device_depart_d_une_part_avec_handling_fees: this.getAmountWithFees(montantSansFees, this.userPayMethodForm.value.device_name),\r\n              montant_device_arrivee_d_une_part_avec_handling_fees: this.userPayMethodForm.value.montantAvecFees,\r\n              montant_device_arrivee_d_une_part_sans_handling_fees: this.userPayMethodForm.value.montant,\r\n              sens_contribution: 'entrant',\r\n              anonym: this.userPayMethodForm.value.anonym,\r\n              numero: this.userPayMethodForm.value.numero,\r\n              operator: 'ozow'\r\n            };\r\n            this.contributionDataParams = params;\r\n            const messageConfirmation = {\r\n              title: this.contributionData.title, contribution: this.contributionDataParams.montant_device_depart_d_une_part_avec_handling_fees,\r\n              device_name: this.userPayMethodForm.value.device_name, type: 'converted'\r\n            };\r\n            this.showConfirmationMesaage(messageConfirmation, this.contributionDataParams);\r\n\r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n\r\n      const params = {\r\n        tontine_event_id: this.contributionData.idEvent,\r\n        typecontribution_id: 6,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        device_name: this.contributionData.device_name,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        montant_d_une_part_sans_handing_fees: this.userPayMethodForm.value.montant,\r\n        montant_d_une_part_avec_handling_fees: this.userPayMethodForm.value.montantAvecFees,\r\n        sens_contribution: 'entrant',\r\n        anonym: this.userPayMethodForm.value.anonym,\r\n        numero: this.userPayMethodForm.value.numero,\r\n        operator: 'ozow'\r\n      };\r\n      this.contributionDataParams = params;\r\n      const messageConfirmation = {\r\n        title: this.contributionData.title, contribution: this.userPayMethodForm.value.montantAvecFees,\r\n        device_name: this.contributionData.device_name, type: 'notconverted'\r\n      };\r\n      this.showConfirmationMesaage(messageConfirmation, this.contributionDataParams);\r\n    }\r\n  }\r\n\r\n  /******************************** END OZOW PAYMENT *********************************************/\r\n\r\n\r\n\r\n  /******************************** START COMMON PAYMENT SERVICES *********************************************/\r\n\r\n  showConfirmationMesaage(messageConfirmation: any, contributionDataParams: any) {\r\n    const translation = [];\r\n    this.translate.get(['CONFIRM_PAY_CONTRIBUTION_SUBTEXT1', 'CONFIRM_PAY_CONTRIBUTION_SUBTEXT2', 'CANCEL_TEXT', 'YES_TEXT']).subscribe(trans => {\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT1);\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT2);\r\n      translation.push(trans.CANCEL_TEXT);\r\n      translation.push(trans.YES_TEXT);\r\n      this.paymentOperatorConfirm(messageConfirmation, contributionDataParams, translation);\r\n    });\r\n\r\n  }\r\n\r\n\r\n  async paymentOperatorConfirm(dataMessage: any, contributionDataParams: any, translation: string[]) {\r\n    const alert = await this.alertController.create({\r\n      header: `${dataMessage.title}`,\r\n      message: `${translation[0]} ${dataMessage.contribution}\r\n    ${dataMessage.device_name}  ${translation[1]}`,\r\n      buttons: [\r\n        {\r\n          text: `${translation[2]}`,\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n\r\n          }\r\n        }, {\r\n          text: `${translation[3]}`,\r\n          handler: () => {\r\n            if (dataMessage.type === 'converted') {\r\n              this.paidWithConversionOperator(contributionDataParams);\r\n            } else if (dataMessage.type === 'notconverted') {\r\n              this.paidWithoutConversionOperator(contributionDataParams);\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  // Paid the user contribution with operator after conversion\r\n  paidWithConversionOperator(contributionData: any) {\r\n    this.loading = true;\r\n    this.showLoadingMessage(contributionData);\r\n\r\n    this.contribution.contributeAndConvertWithoutWalletForEvent(contributionData).subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'success') {\r\n        this.sendResponsePerOperator(reponse, contributionData.operator);\r\n      }\r\n    }, error => {\r\n      if (error && error.error && error.error.message === 'error') {\r\n        if (error.error.user_not_found) {\r\n          this.errorService.renewSession().then((data: any) => {\r\n            if (data && data.result === \"OK\") {\r\n              this.ui.dismissLoading();\r\n              this.paidWithConversionOperator(contributionData);\r\n            } else {\r\n              this.exitPayment();\r\n            }\r\n          });\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.paymentError.managePaymentOnlineError(error);\r\n        }\r\n      } else {\r\n        this.loading = false;\r\n        this.ui.dismissLoading();\r\n        this.errorService.manageError(error);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n  // Paid the user contribution with operator without conversion\r\n  paidWithoutConversionOperator(contributionData: any) {\r\n    this.loading = true;\r\n    this.showLoadingMessage(contributionData);\r\n    this.contribution.contributeWithoutWalletAndConversionForEvent(contributionData).subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'success') {\r\n        this.sendResponsePerOperator(reponse, contributionData.operator);\r\n      }\r\n    }, error => {\r\n\r\n      if (error && error.error && error.error.message === 'error') {\r\n        if (error.error.user_not_found) {\r\n          this.errorService.renewSession().then((data: any) => {\r\n            if (data && data.result === \"OK\") {\r\n              this.ui.dismissLoading();\r\n              this.paidWithoutConversionOperator(contributionData);\r\n            } else {\r\n              this.exitPayment();\r\n            }\r\n          });\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.paymentError.managePaymentOnlineError(error);\r\n        }\r\n      } else {\r\n        this.loading = false;\r\n        this.ui.dismissLoading();\r\n        this.errorService.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  // Send message per operator\r\n  sendResponsePerOperator(data: any, operator: string) {\r\n    this.checkPaymentStatusOperator(data.pay_token, operator);\r\n    const reference = data && data.refID ? data.refID : '';\r\n    this.refernceId = reference;\r\n    this.cancelPaymentResult(reference);\r\n    switch (operator) {\r\n      case 'ozow':\r\n        window.open(data.url, '_blank');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  // show the loading message\r\n  showLoadingMessage(data: any) {\r\n    switch (data.operator) {\r\n      case 'orange':\r\n        this.translate.get('ORANGE_PAYMENT_MESSAGE').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'MTN':\r\n        this.translate.get('MTN_PAYMENT_MESSAGE').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'paypal':\r\n        this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'ozow':\r\n        this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  // step 2 :  Check the status via Ozow\r\n  checkPaymentStatusOperator(payToken: string, operator: string) {\r\n    this.cron = setInterval(() => {\r\n      this.checkPaymentStatusOperatorServer(payToken, operator);\r\n    }, 20000);\r\n  }\r\n\r\n\r\n  // SHOW THE SUCCES MESSAGE\r\n  showSuccesMessage() {\r\n    this.translate.get('TONTINE_EVENT_SUCCESS1').subscribe(value => {\r\n      this.ui.presentToast(value);\r\n    });\r\n    this.contribution.sendMessageContribute(true);\r\n  }\r\n\r\n  // clear the time out\r\n  clearTimeoutData() {\r\n    if (this.timeOut) {\r\n      clearTimeout(this.timeOut);\r\n      this.timeOut = null;\r\n    }\r\n  }\r\n\r\n  // clear the set interval\r\n  clearSetIntervalData() {\r\n    if (this.cron) {\r\n      clearInterval(this.cron);\r\n    }\r\n    this.cron = null;\r\n    for (let i = 0; i < 1000; i++) {\r\n      clearInterval(i);\r\n    }\r\n  }\r\n\r\n\r\n  // Check the payment Status\r\n  checkPaymentStatusOperatorServer(payToken: string, operator: string) {\r\n    this.wallet.getStatusPaymentEventOperator(payToken, operator).subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'OK') {\r\n        this.showPaymentResult();\r\n        this.showSuccesMessage();\r\n      }\r\n    }, error => {\r\n\r\n      if (error && error.error && error.error.message === 'FAIL') {\r\n        this.exitPayment();\r\n        this.translate.get('TONTINE_EVENT_ERROR2').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n      } else {\r\n        this.exitPayment();\r\n        this.translate.get('TONTINE_EVENT_ERROR2').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n        this.errorService.manageError(error);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n\r\n  // Show payment confirmation dialog\r\n  showPaymentResult() {\r\n    this.loading = false;\r\n    this.ui.dismissLoading();\r\n    this.initPaymentForm();\r\n    this.clearTimeoutData();\r\n    this.clearSetIntervalData();\r\n\r\n    const currentDate = new Date();\r\n    this.auth.setAppLastSession(currentDate.getTime());\r\n\r\n    this.events.publish('new-event');\r\n    this.events.publish('modal-close');\r\n    this.navController.setDirection('root');\r\n    this.router.navigate(['dashboard/tontines-events']);\r\n  }\r\n\r\n  // Cancel the payment\r\n  cancelPaymentResult(refence?: string) {\r\n    this.timeOut = setTimeout(() => {\r\n      this.exitPayment();\r\n      this.translate.get(['TRANSACTION_CANCEL', 'TOPUP_MSG9']).subscribe(trans => {\r\n        this.ui.presentAlert(`${trans.TRANSACTION_CANCEL}`, `${trans.TOPUP_MSG9} ${refence}`);\r\n      });\r\n    }, 300000);\r\n  }\r\n\r\n  // exit the payment directly\r\n  exitPayment() {\r\n    this.loading = false;\r\n    this.ui.dismissLoading();\r\n    this.getAllMethodPaymentType();\r\n    this.initFormMessage();\r\n    this.initPaymentForm();\r\n    this.clearTimeoutData();\r\n    this.clearSetIntervalData();\r\n\r\n    this.events.publish('modal-close');\r\n  }\r\n\r\n  \r\n  ionicViewDidLeave() {\r\n    if (this.loading) {\r\n      this.exitPayment();\r\n    }\r\n  }\r\n\r\n  // listen to back button\r\n  hardwareBackButton() {\r\n    this.platform.backButton.subscribe(() => {\r\n      const url = this.router.url;\r\n      if (url === '/dashboard/tontines-events/' + this.tontineData.id) {\r\n        if (this.refernceId) {\r\n          this.cancelPaymentResult(this.refernceId);\r\n        } else {\r\n          this.exitPayment();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /******************************** END COMMON PAYMENT SERVICES *********************************************/\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbml0aWF0ZS1wYXkuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { DebtsManagerService } from 'src/app/dashboard/my-tontines/services/debts-manager.service';\r\nimport { ErrorService } from '../service/error.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ApiService } from '../service/api.service';\r\nimport { EventService } from '../service/events.service';\r\nimport { UiService } from '../service/ui.service';\r\n\r\n@Component({\r\n  selector: 'app-contribution-order',\r\n  templateUrl: './contribution-order.component.html',\r\n  styleUrls: ['./contribution-order.component.scss'],\r\n})\r\nexport class ContributionOrderComponent implements OnInit {\r\n\r\n  @Input() tontineName: string;\r\n  @Input() amountPay: number;\r\n  @Input() balance: number;\r\n  @Input() currency: string;\r\n  \r\n  isModeSelected: boolean;\r\n  loading: boolean;\r\n  totalOfflineAmount: number;\r\n  totalOnlineAmount: number;\r\n  balanceOfflineAmount: number;\r\n  balanceOnlineAmount: number;\r\n\r\n  constructor(\r\n    private modatCtrl: ModalController,\r\n    private debt: DebtsManagerService,\r\n    private translate: TranslateService,\r\n    private ui: UiService,\r\n    private error: ErrorService,\r\n    private event: EventService\r\n  ) {\r\n\r\n    this.event.subscribe('modal-close', () => {\r\n      this.closeContribute('OK');\r\n    });\r\n\r\n    this.totalOfflineAmount = 0;\r\n    this.totalOnlineAmount = 0;\r\n    this.balanceOfflineAmount = 0;\r\n    this.balanceOnlineAmount = 0;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isModeSelected = true;\r\n    this.getInitiatePaymentData();\r\n  }\r\n\r\n  // check segment\r\n  segmentChanged() {\r\n    this.isModeSelected = !this.isModeSelected;\r\n  }\r\n\r\n  // Get the initiate payment data\r\n  getInitiatePaymentData() {\r\n    const params = this.debt.getDebtsData();\r\n    const param = { bouffe_id: params.bouffe_id };\r\n    this.loading = true;\r\n    let montantOfflinePayer = 0;\r\n    let montantOnlinePayer = 0;\r\n\r\n    if (params.proof[0] && params.proof[0].liste_traditional_banking_proof) {\r\n      params.proof[0].liste_traditional_banking_proof.forEach(proof => {\r\n        montantOfflinePayer += proof.montant ? parseFloat(proof.montant) : 0;\r\n      });\r\n    }\r\n\r\n    if (params.proof[0] && params.proof[0].liste_online_wallet_proof) {\r\n      params.proof[0].liste_online_wallet_proof.forEach(proof => {\r\n        montantOfflinePayer += proof.montant ? parseFloat(proof.montant) : 0;\r\n      });\r\n    }\r\n\r\n    if (params.proof[0] && params.proof[0].liste_pay_with_caisse_tontine_proof) {\r\n      params.proof[0].liste_pay_with_caisse_tontine_proof.forEach(proof => {\r\n        montantOnlinePayer += proof.montant ? parseFloat(proof.montant) : 0;\r\n      });\r\n    }\r\n\r\n    this.debt.getPaymentInitiateInformations(param).subscribe((reponse: any) => {\r\n      this.loading = false;\r\n      if (reponse && reponse.message === 'success') {\r\n        this.totalOfflineAmount = 0;\r\n        this.totalOnlineAmount = 0;\r\n        reponse.infos_fund_repartition.forEach(caisse => {\r\n          this.totalOfflineAmount += caisse.montant_offline ? parseFloat(caisse.montant_offline) : 0;\r\n          this.totalOnlineAmount += caisse.montant_online ? parseFloat(caisse.montant_online) : 0;\r\n        });\r\n\r\n        this.balanceOfflineAmount = this.totalOfflineAmount - montantOfflinePayer;\r\n        this.balanceOnlineAmount = this.totalOnlineAmount - montantOnlinePayer;\r\n        this.balanceOnlineAmount > 0 ? this.isModeSelected = true : this.isModeSelected = false;\r\n      }\r\n    }, error => {\r\n      this.loading = false;\r\n      if (error && error.error && error.error.message === 'error') {\r\n        if (error.error.tontine_id_not_exist) {\r\n          this.translate.get('ADD_SHARE_MSG4').subscribe(trans => {\r\n            this.ui.presentToast(trans);\r\n          });\r\n        }\r\n        if (error.error.user_not_found) {\r\n          this.loading = true;\r\n          this.error.renewSession().then((data: any) => {\r\n            if (data && data.result == 'OK') {\r\n              this.getInitiatePaymentData();\r\n            } else {\r\n              this.loading = false;\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // close the modal\r\n  closeContribute(message?: any) {\r\n    this.modatCtrl.dismiss(message, 'cancel');\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class EventService {\n\n  private channels: { [key: string]: Subject<any>; } = {};\n\n  /**\n   * Subscribe to a topic and provide a single handler/observer.\n   * @param topic The name of the topic to subscribe to.\n   * @param observer The observer or callback function to listen when changes are published.\n   *\n   * @returns Subscription from which you can unsubscribe to release memory resources and to prevent memory leak.\n   */\n  subscribe(topic: string, observer: (data ?: any) => void): Subscription {\n      if (!this.channels[topic]) {\n          // You can also use ReplaySubject with one concequence\n          this.channels[topic] = new Subject<any>();\n      }\n\n      return this.channels[topic].subscribe(observer);\n  }\n\n  /**\n   * Publish some data to the subscribers of the given topic.\n   * @param topic The name of the topic to emit data to.\n   * @param data data in any format to pass on.\n   */\n  publish(topic: string, data?: any): void {\n      const subject = this.channels[topic];\n      if (!subject) {\n          // Or you can create a new subject for future subscribers\n          return;\n      }\n\n      subject.next(data);\n  }\n\n  /**\n   * When you are sure that you are done with the topic and the subscribers no longer needs to listen to a particular topic, you can\n   * destroy the observable of the topic using this method.\n   * @param topic The name of the topic to destroy.\n   */\n  destroy(topic: string): null {\n      const subject = this.channels[topic];\n      if (!subject) {\n          return;\n      }\n\n      subject.complete();\n      delete this.channels[topic];\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'removecurrency'\r\n})\r\nexport class RemoveCurrencyPipe implements PipeTransform {\r\n\r\n  transform(items: any[], value: string): any {\r\n    let itemsList = [];\r\n    if (!value) {\r\n       return items;\r\n    } \r\n     \r\n    itemsList = items.filter(data => { return data.currency_name !== value });\r\n\r\n    return itemsList;\r\n}\r\n\r\n}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title class=\\\"ion-text-center\\\">{{'DEBT_MAKE_PAYMENT' | translate }}</ion-title>\\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar class=\\\"ion-text-left\\\">\\r\\n    <ion-segment  (ionChange)=\\\"segmentChanged($event)\\\" value=\\\"0\\\">\\r\\n  \\r\\n      <ion-segment-button value=\\\"0\\\">\\r\\n        <ion-label class=\\\"ion-text-capitalize\\\">{{ 'ONLINE_TEXT' | translate }}</ion-label>\\r\\n      </ion-segment-button>\\r\\n      <ion-segment-button value=\\\"1\\\">\\r\\n        <ion-label class=\\\"ion-text-capitalize\\\">{{ 'CASH_PAYMENT' | translate }}</ion-label>\\r\\n      </ion-segment-button>\\r\\n\\r\\n      <ion-segment-button value=\\\"2\\\">\\r\\n        <ion-label class=\\\"ion-text-capitalize\\\">{{ 'BANK_TEXT' | translate }}</ion-label>\\r\\n      </ion-segment-button>\\r\\n\\r\\n     \\r\\n    </ion-segment>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"tontine-contribute\\\">\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <p class=\\\"ion-no-margin\\\">\\r\\n          {{ 'MAKING_PAYMENT_TEXT' | translate }} <b>{{ tontineName }}</b>.         \\r\\n        </p>\\r\\n        <h4 class=\\\"ion-no-margin\\\">\\r\\n          <small>\\r\\n            {{ 'DEBT_AMOUNT_TEXT' | translate }}: {{ (amountPay | commadumper)}} {{currency}} (<b class=\\\"text-danger\\\">{{ 'CURRENT_BALANCE' | translate }}:  {{ (balance | commadumper) }}  {{currency}}</b>)\\r\\n          </small>\\r\\n        </h4>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <div class=\\\"bank\\\" *ngIf=\\\"isModeSelected[0]\\\">\\r\\n          <app-paidmode-debt [amountPay]=\\\"amountPay\\\"  [balance]=\\\"balance\\\" ></app-paidmode-debt>\\r\\n        </div>\\r\\n        <div class=\\\"bank\\\" *ngIf=\\\"isModeSelected[1]\\\">\\r\\n          <app-cashmode [amountPay]=\\\"amountPay\\\" [balance]=\\\"balance\\\"></app-cashmode>\\r\\n        </div>\\r\\n        <div class=\\\"mobile\\\" *ngIf=\\\"isModeSelected[2]\\\">\\r\\n          <app-bankmode [amountPay]=\\\"amountPay\\\" [balance]=\\\"balance\\\"></app-bankmode>\\r\\n        </div>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid> \\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"ion-padding ion-text-center\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n            <ion-button expand=\\\"full\\\" \\r\\n                  fill=\\\"outline\\\"\\r\\n                  color=\\\"warning\\\" \\r\\n                  class=\\\"ion-text-uppercase\\\"\\r\\n                  shape=\\\"round\\\" (click)=\\\"closeContribute('cancel')\\\">\\r\\n              {{ 'CANCEL_TEXT' | translate }}\\r\\n            </ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n</ion-footer>\\r\\n\";","import { Component, OnInit, Input, NgZone, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ErrorService } from '../service/error.service';\r\nimport { AlertController, Platform } from '@ionic/angular';\r\nimport { LocationService } from '../service/location.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TontineService } from 'src/app/dashboard/my-tontines/services/tontine.service';\r\nimport { ContributionService } from 'src/app/dashboard/my-tontines/services/contribution.service';\r\nimport { ApiService } from '../service/api.service';\r\nimport { CurrencyService } from '../service/currency.service';\r\nimport { WalletService } from 'src/app/dashboard/my-wallet/service/wallet.service';\r\nimport { FormUtilsService } from '../service/form-utils.service';\r\nimport { PaymentErrorService } from '../service/payment-error.service';\r\nimport { Router } from '@angular/router';\r\nimport { PaymentGlobalDataService } from '../service/payment-global-data.service';\r\nimport { UserService } from 'src/app/dashboard/user/service/user.service';\r\nimport { EventService } from '../service/events.service';\r\nimport { UiService } from '../service/ui.service';\r\ndeclare var paypal: any;\r\n\r\ninterface PaymentMethod {\r\n  id: number;\r\n  logo: string;\r\n  currency: string;\r\n  country_id: number;\r\n  name: string;\r\n  placeholder ?: string;\r\n  handling_fees?: number;\r\n  type_handling_fees?: string;\r\n  type ?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-paidmode-seance',\r\n  templateUrl: './paidmode-seance.component.html',\r\n  styleUrls: ['./paidmode-seance.component.scss'],\r\n})\r\nexport class PaidmodeSenceComponent implements OnInit {\r\n\r\n  paymentMethods: PaymentMethod[];\r\n  paypalMessage: string;\r\n  userPayMethodForm: FormGroup;\r\n  currentCountryId: number;\r\n  states: any;\r\n  loadingOperator: boolean;\r\n  tontineData: any;\r\n  contributionData: any;\r\n  errorPhone: boolean;\r\n  loading: boolean;\r\n  cron: any;\r\n  timeOut: any;\r\n  contributionDataParams: any;\r\n  pin: string;\r\n  spinner: any;\r\n  allPaymentMethods: any;\r\n  paymentForm: FormGroup;\r\n  reference: string;\r\n  validationMessages: any;\r\n  paypalLoading: boolean;\r\n  paypal_initialized: boolean;\r\n  refernceId: string;\r\n\r\n  @Input() amountPay: number;\r\n  @ViewChild('paypalbuttoncontainer', { static: false }) paypalbuttoncontainer: ElementRef;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private platform: Platform,\r\n    private paymentData: PaymentGlobalDataService,\r\n    private router: Router,\r\n    private api: ApiService,\r\n    private currency: CurrencyService,\r\n    private events: EventService,\r\n    private contribution: ContributionService,\r\n    private alertController: AlertController,\r\n    private wallet: WalletService,\r\n    private tontine: TontineService,\r\n    private errorService: ErrorService,\r\n    private location: LocationService,\r\n    private translate: TranslateService,\r\n    private formUtil: FormUtilsService,\r\n    private zone: NgZone,\r\n    private paymentError: PaymentErrorService,\r\n    private ui: UiService\r\n  ) {\r\n    this.cron = null;\r\n    this.timeOut = null;\r\n    this.loadingOperator = false;\r\n    this.loading = false;\r\n    this.errorPhone = false;\r\n    this.states = [];\r\n    this.paymentMethods = [];\r\n    this.paypalMessage = '';\r\n    this.reference = this.formUtil.getRandomId();\r\n    this.tontineData = this.tontine.getCurrentTontineData();\r\n    this.allPaymentMethods = [];\r\n    this.paypalLoading = false;\r\n    this.paypal_initialized = false;\r\n    this.contributionData = this.contribution.getContributionData();\r\n    this.refernceId = '';\r\n    this.hardwareBackButton();\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.getAllMethodPaymentType();\r\n    this.initPaymentForm();\r\n    this.initFormMessage();\r\n  }\r\n\r\n\r\n  /******************************** START FORM PAYMENT SERVICES*********************************************/\r\n\r\n\r\n  // Form getters\r\n  get phone() {\r\n    return this.userPayMethodForm.get('phone');\r\n  }\r\n\r\n  get amountError() {\r\n    return this.userPayMethodForm.get('montantAvecFees');\r\n  }\r\n\r\n  get country() {\r\n    return this.userPayMethodForm.get('country_id');\r\n  }\r\n\r\n  get device_name() {\r\n    return this.userPayMethodForm.get('device_name');\r\n  }\r\n\r\n  get payementtype() {\r\n    return this.userPayMethodForm.get('typePaymentIndex');\r\n  }\r\n\r\n\r\n  // Init Form \r\n  initPaymentForm() {\r\n    const currentPayment = this.paymentData.getDefaultPaymentMethod();\r\n    this.userPayMethodForm = this.fb.group({\r\n      country_id: ['', Validators.required],\r\n      country_prefix: [''],\r\n      countryId: [''],\r\n      handleFees: [''],\r\n      handleFeesType: [''],\r\n      device_name: [''],\r\n      currency: [''],\r\n      currencyLabel: [''],\r\n      pay_token: [''],\r\n      url: [''],\r\n      montant: [''],\r\n      montantAvecFees: ['0'],\r\n      montantTotal: ['0'],\r\n      type_payment_id: [currentPayment ? currentPayment.typepaiement_id : ''],\r\n      type_payment_name: [currentPayment ? currentPayment.name : ''],\r\n      typePaymentIndex: [0, Validators.required],\r\n      phone: [currentPayment  && this.formUtil.validatePhone(currentPayment.numero_compte) ? currentPayment.numero_compte : ''],\r\n      numero: ['']\r\n    });\r\n  }\r\n\r\n  // Init form message\r\n  initFormMessage() {\r\n    this.translate.get(['REGISTER_PHONE_REQUIRED', 'AMOUNT_REQUIRED', 'PAID_MODE_REQUIRED'])\r\n      .subscribe(value => {\r\n        this.validationMessages = {\r\n          payementtype: [\r\n            { type: 'required', message: value.PAID_MODE_REQUIRED }\r\n          ],\r\n          phone: [\r\n            { type: 'required', message: value.REGISTER_PHONE_REQUIRED },\r\n          ],\r\n          amount: [\r\n            { type: 'required', message: value.AMOUNT_REQUIRED }\r\n          ],\r\n          country_id: [\r\n            { type: 'required', message: value.M_COUNTRY_REQUIRED }\r\n          ]\r\n        };\r\n      });\r\n  }\r\n\r\n  // Remove space\r\n  removeSpace() {\r\n    this.userPayMethodForm.get('phone').setValue(this.paymentData.removeInputSpace(this.userPayMethodForm.value.phone));\r\n  }\r\n\r\n  // check if it is not  mobile operator\r\n  checkMobileOperator() {\r\n    return this.paymentData.isMobileOperator(this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex]);\r\n  }\r\n\r\n  // can show paypal message\r\n  canShowPaypalMessage() {\r\n    return this.paymentData.hasPaypalMessage(this.paypalMessage, this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex]);\r\n  }\r\n\r\n\r\n  // can show  paypal button\r\n  canShowPaypalButton() {\r\n    return this.paymentData.hasPaypalButton(this.paypal_initialized, this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex]);\r\n  }\r\n\r\n  // can make payment \r\n  canPay() {\r\n    return this.paymentData.canShowPayment(this.userPayMethodForm.valid,this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex],this.userPayMethodForm.value.phone,this.errorPhone);\r\n  }\r\n\r\n\r\n\r\n  // check if emial or phone is valid\r\n  checckEmailOrPhone(inputValue: string, index: number) {\r\n    this.removeSpace();\r\n    this.userPayMethodForm.get('type_payment_id').setValue(this.paymentMethods[index].id);\r\n    switch (this.paymentMethods[index].name) {\r\n      case 'ORANGE MONEY':\r\n        this.errorPhone = !this.formUtil.validatePhone(inputValue);\r\n        if (!this.errorPhone) {\r\n          this.userPayMethodForm.get('numero').setValue(this.userPayMethodForm.value.country_prefix +\r\n            '' + this.userPayMethodForm.value.phone);\r\n        }\r\n        break;\r\n\r\n      case 'MTN MOBILE MONEY':\r\n        this.errorPhone = !this.formUtil.validatePhone(inputValue);\r\n        if (!this.errorPhone) {\r\n          this.userPayMethodForm.get('numero').setValue(this.userPayMethodForm.value.country_prefix +\r\n            '' + this.userPayMethodForm.value.phone);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // get all payment method\r\n  getAllMethodPaymentType() {\r\n    this.loadingOperator = true;\r\n    this.userService.getAllMethodPaymentType().subscribe((reponse: any) => {\r\n      this.loadingOperator = false;\r\n      this.paymentMethods = [];\r\n      if (reponse && reponse.typePayment && reponse.typePayment.length > 0) {\r\n        this.paymentMethods = this.paymentData.formatPaymentMethodResponseContribution(reponse.typePayment);\r\n      }\r\n\r\n      const defaultMethod: PaymentMethod[] = [{\r\n        id: 0, country_id: 0, logo: 'assets/pesuwallet.jpg',\r\n        currency: this.tontineData.tontine.monnaie, name: 'WALLET', placeholder: '',\r\n        handling_fees: 0,\r\n        type_handling_fees: 'valeur',\r\n        type: 'WALLET'\r\n      }];\r\n      this.paymentMethods = defaultMethod.concat(this.paymentMethods);\r\n      this.allPaymentMethods = this.paymentMethods;\r\n      this.getCountries(false);\r\n    }, error => {\r\n      this.loadingOperator = false;\r\n      this.paymentMethods.push({\r\n        id: 0, country_id: 0, logo: 'assets/pesuwallet.jpg',\r\n        currency: this.tontineData.tontine.monnaie, name: 'WALLET', placeholder: '',\r\n        handling_fees: 0,\r\n        type_handling_fees: 'valeur',\r\n        type: 'WALLET'\r\n      });\r\n      this.allPaymentMethods = this.paymentMethods;\r\n      this.getCountries(false);\r\n      this.errorService.manageError(error);\r\n    });\r\n  }\r\n\r\n  // Get all countries\r\n  getCountries(refresher: boolean) {\r\n    this.location.getAllCountries(refresher).then((countries: any) => {\r\n      this.states = this.paymentData.formatCountriesData(countries);\r\n      if (this.states && this.states.length > 0) {\r\n        setTimeout(() => {\r\n          this.states.forEach(country => {\r\n            if (country.country_key === this.tontineData.tontine.country_key) {\r\n              this.updateFormData(country);\r\n            }\r\n          });\r\n        }, 200);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  // update the form data\r\n  updateFormData(country: any) {\r\n    if (country) {\r\n      this.userPayMethodForm.get('countryId').setValue(country.country_id);\r\n      this.userPayMethodForm.get('country_prefix').setValue(country.country_prefixe);\r\n      this.userPayMethodForm.get('currency').setValue(country.device_name);\r\n      this.userPayMethodForm.get('handleFees').setValue(country.handling_fees);\r\n      this.userPayMethodForm.get('handleFeesType').setValue(country.type_handling_fees);\r\n      this.userPayMethodForm.get('currencyLabel').setValue(country.currency_label);\r\n      this.zone.run(() => {\r\n        this.userPayMethodForm.get('country_id').setValue(country.country_id);\r\n      });\r\n      this.updatePaymentsMethods(country.country_id);\r\n    }\r\n  }\r\n\r\n  // Update the payment method\r\n  updatePaymentMethod(index) {\r\n    if (this.paymentMethods[index]) {\r\n      this.userPayMethodForm.get('type_payment_id').setValue(this.paymentMethods[index].id);\r\n      this.userPayMethodForm.get('type_payment_name').setValue(this.paymentMethods[index].name);\r\n      this.userPayMethodForm.get('device_name').setValue(this.paymentMethods[index].currency);\r\n      this.userPayMethodForm.get('handleFees').setValue(this.paymentMethods[index].handling_fees);\r\n      this.userPayMethodForm.get('handleFeesType').setValue(this.paymentMethods[index].type_handling_fees);\r\n      this.zone.run(() => {\r\n        this.userPayMethodForm.get('typePaymentIndex').setValue(index);\r\n      });\r\n    }\r\n    if (this.paymentMethods && this.paymentMethods[index] &&\r\n      this.paymentMethods[index].name === 'PAYPAL') {\r\n      this.paypal_initialized = false;\r\n      this.updatePaypalAmount();\r\n    }\r\n  }\r\n\r\n\r\n  updatePaymentsMethods(countryId: number) {\r\n    // update the payment method\r\n    const paymentsMethods = [];\r\n    this.paymentMethods = [];\r\n    this.allPaymentMethods.forEach(payment => {\r\n      if (payment.country_id === countryId || payment.country_id === 0) {\r\n        paymentsMethods.push(payment);\r\n      }\r\n    });\r\n    this.paymentMethods = paymentsMethods;\r\n    if (this.paymentMethods && this.paymentMethods.length > 0) {\r\n      this.updatePaymentMethod(0);\r\n    }\r\n\r\n  }\r\n\r\n  // Calucalte the payment with handlfees\r\n  getAmountWithFees(amountShare: any, devise: string) {\r\n    return this.paymentData.getHandleFeesWithDevise(amountShare, devise, this.userPayMethodForm.value.handleFees, this.userPayMethodForm.value.handleFeesType);\r\n  }\r\n\r\n  // Update the country info country prfix\r\n  updateCurrencyCountry(countryId: number) {\r\n    this.zone.run(() => {\r\n      this.paymentMethods = [];\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.states.forEach(state => {\r\n        if (state.country_id === countryId) {\r\n          this.updateFormData(state);\r\n        }\r\n      });\r\n    }, 300);\r\n\r\n  }\r\n\r\n\r\n  selectOperator(data: any) {\r\n    const operator = this.paymentMethods[data.typePaymentIndex].name;\r\n    switch (operator) {\r\n      case 'ORANGE MONEY':\r\n        this.updateParametersOrange();\r\n        break;\r\n\r\n      case 'OZOW':\r\n        this.updateParametersOzow();\r\n        break;\r\n\r\n      case 'MTN MOBILE MONEY':\r\n        this.updateParametersMtn();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  // Show the payment mode\r\n  showPayment(data: any) {\r\n\r\n    const type = this.paymentMethods[data.typePaymentIndex].type;\r\n\r\n    switch (type) {\r\n\r\n      case 'OPERATOR':\r\n        this.selectOperator(data);\r\n        break;\r\n\r\n      case 'WALLET':\r\n        this.updateParametersWallet();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  /******************************** END FORM PAYMENT SERVICES*********************************************/\r\n\r\n\r\n  /******************************** START WALLET PAYMENT *********************************************/\r\n\r\n  async paymentWalletConfirm(dataMessage: any, translation: string[]) {\r\n    const alert = await this.alertController.create({\r\n      header: `${dataMessage.title}`,\r\n      message: `${translation[0]} ${dataMessage.contribution}\r\n        ${dataMessage.device_name} ${translation[1]}`,\r\n      buttons: [\r\n        {\r\n          text: `${translation[2]}`,\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n\r\n          }\r\n        }, {\r\n          text: `${translation[3]}`,\r\n          handler: () => {\r\n            this.paidWithWallet();\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  updateParametersWallet() {\r\n    const translation = [];\r\n    this.translate.get(['CONFIRM_PAY_CONTRIBUTION_SUBTEXT1', 'CONFIRM_PAY_CONTRIBUTION_SUBTEXT2', 'CANCEL_TEXT', 'YES_TEXT']).subscribe(trans => {\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT1);\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT2);\r\n      translation.push(trans.CANCEL_TEXT);\r\n      translation.push(trans.YES_TEXT);\r\n      this.paymentWalletConfirm(this.contributionData, translation);\r\n    });\r\n  }\r\n\r\n  // Send the user contribution\r\n  paidWithWallet() {\r\n    this.loading = true;\r\n    this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n      this.ui.presentLoading(value);\r\n    });\r\n    this.contribution.contributeWithWalletPastSeance(this.contributionData)\r\n      .subscribe((reponse: any) => {\r\n        this.loading = false;\r\n        this.ui.dismissLoading();\r\n        if (reponse && reponse.message === 'success') {\r\n          this.translate.get('CONFIRM_PAY_CONTRIBUTION_MSG1').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n          this.events.publish('modal-pay-seance');\r\n        }\r\n      }, error => {\r\n\r\n     \r\n        if (error && error.error && error.error.message === 'error') {\r\n\r\n          if (error.error.user_not_found) {\r\n            this.errorService.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.ui.dismissLoading();\r\n                this.paidWithWallet();\r\n              } else {\r\n                this.exitPayment();\r\n              }\r\n            });\r\n          } else {\r\n            this.loading = false;\r\n            this.ui.dismissLoading();\r\n            this.paymentError.managePaymentOnlineError(error);\r\n          }\r\n\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.errorService.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n  /******************************** START WALLET PAYMENT *********************************************/\r\n\r\n\r\n\r\n  /******************************** START PAYPAL PAYMENT *********************************************/\r\n\r\n\r\n  // update the paypal total amount\r\n  updatePaypalAmount() {\r\n    if (this.userPayMethodForm.value.type_payment_name === 'PAYPAL') {\r\n\r\n      const amount = this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name) * this.contributionData.liste_part.length;\r\n      this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n\r\n      if (this.contributionData.device_name !== this.userPayMethodForm.value.device_name) {\r\n        this.currency.convert(this.contributionData.device_name, this.userPayMethodForm.value.device_name, this.contributionData.montant).then(montantSansFees => {\r\n          if (montantSansFees) {\r\n            const amountFees = this.getAmountWithFees(montantSansFees, this.userPayMethodForm.value.device_name) * this.contributionData.liste_part.length;\r\n            this.userPayMethodForm.get('montantTotal').setValue(amountFees);\r\n\r\n            this.translate.get('PAIDMODE_MSG2').subscribe(value => {\r\n              this.paypalMessage = `${value} ${this.userPayMethodForm.value.montantAvecFees}\r\n                 ${this.contributionData.device_name} =\r\n                ${this.userPayMethodForm.value.montantTotal}\r\n                ${this.userPayMethodForm.value.device_name}`;\r\n              this.setupPayPay();\r\n            });\r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.paypalMessage = value;\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        this.userPayMethodForm.get('montantTotal').setValue(this.userPayMethodForm.value.montantAvecFees);\r\n        this.translate.get('PAIDMODE_MSG2').subscribe(value => {\r\n          this.paypalMessage = `${value}  ${this.userPayMethodForm.value.montantTotal}\r\n            ${this.userPayMethodForm.value.device_name}`;\r\n          this.setupPayPay();\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  setupPayPay() {\r\n    if (!this.paypal_initialized) {\r\n      this.initPayPal();\r\n    }\r\n  }\r\n\r\n  initPayPal() {\r\n\r\n    if (this.userPayMethodForm.value.montantTotal > 0) {\r\n      this.paypalLoading = true;\r\n      this.paypal_initialized = true;\r\n      let paypalbuttoncontainer = this.paypalbuttoncontainer.nativeElement as HTMLDivElement\r\n      let _this = this;\r\n\r\n      paypal.Button.render({\r\n        env: 'production', // sandbox | production\r\n        style: {\r\n          size: 'responsive',\r\n          color: 'gold',\r\n          shape: 'pill',\r\n          label: 'checkout', //label: checkout, buynow, credit, pay, paypal\r\n          tagline: false\r\n        },\r\n\r\n        client: {\r\n          sandbox: 'ARIMcMamksC74CLp7Zavgn62RsKK0XDfjePxjU9gsWmcdzyI3AYz3PwADIktvUgCdhAwWCXPaBzCckOC',\r\n          production: 'AVdCN0ymBsPer15VtLbeNoZ3vkjkhap6vXoxwsWF3B0H4GM_mVQ5GVpJ2h4-G_AlVVIsBYWx4JpVVxLT'\r\n        },\r\n        // Show the buyer a 'Pay Now' button in the checkout flow\r\n        commit: true,\r\n\r\n        payment: function (data, actions) {\r\n          return actions.payment.create({\r\n            payment: {\r\n              transactions: [\r\n                {\r\n                  amount: {\r\n                    total: _this.userPayMethodForm.value.montantTotal,\r\n                    currency: _this.userPayMethodForm.value.device_name\r\n                  },\r\n                  description: 'Toupesu'\r\n                }\r\n              ]\r\n            }\r\n          });\r\n\r\n        },\r\n        // onAuthorize() is called when the buyer approves the payment\r\n        onAuthorize: function (data, actions, error) {\r\n\r\n          if (error) {\r\n            _this.exitPayment();\r\n          }\r\n\r\n          if (error === 'INSTRUMENT_DECLINED') {\r\n            _this.exitPayment();\r\n          }\r\n\r\n          // Make a call to the REST ui to execute the payment\r\n          return actions.payment.execute().then(function () {\r\n            const params: any = {\r\n              refID: _this.reference,\r\n              amount: _this.userPayMethodForm.value.montantTotal,\r\n              moneyCode: _this.userPayMethodForm.value.device_name,\r\n              product: 'Toupesu',\r\n              paypalID: data.paymentToken.split('-')[1]\r\n            };\r\n            // Save and check the payment result\r\n            _this.userPayMethodForm.get('pay_token').setValue(data.paymentToken.split('-')[1]);\r\n            _this.api.post('livepaygateway/paypal/savePayRequest', JSON.stringify(params)).subscribe(\r\n              (ans: any) => {\r\n                if (ans && ans.success) {\r\n                  _this.updateParametersPaypal(data.paymentToken.split('-')[1]);\r\n                }\r\n              }, error => {\r\n                _this.updateParametersPaypal(data.paymentToken.split('-')[1]);\r\n              });\r\n          });\r\n        },\r\n        onCancel: function (data, actions) {\r\n          _this.exitPayment();\r\n        },\r\n        onClick: (data, actions) => {\r\n          _this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n            _this.ui.presentToast(value);\r\n          });\r\n        }\r\n      }, paypalbuttoncontainer);\r\n\r\n      setTimeout(() => {\r\n        this.paypalLoading = false;\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  // Update parameters PAYPAL\r\n  updateParametersPaypal(payToken) {\r\n    // Add the handlefees to the amount\r\n    if (this.contributionData.device_name === this.userPayMethodForm.value.device_name) {\r\n      const params = {\r\n        seance_id: this.contributionData.seance_id,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        typecontribution_id: this.contributionData.typecontribution_id,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        montant_d_une_part_sans_handing_fees: this.contributionData.montant,\r\n        montant_d_une_part_avec_handling_fees: this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name),\r\n        device_name: this.contributionData.device_name,\r\n        sens_contribution: 'entrant',\r\n        liste_part: this.contributionData.liste_part,\r\n        pay_token: payToken,\r\n        pin: this.contributionData.pin,\r\n        operator: 'paypal'\r\n      };\r\n      this.makeDepositOperatorWithoutConversion(params);\r\n    } else {\r\n      this.currency.convert(this.contributionData.device_name, this.userPayMethodForm.value.device_name, this.contributionData.montant).then(montantSansFees => {\r\n        if (montantSansFees) {\r\n          const params = {\r\n            seance_id: this.contributionData.seance_id,\r\n            country_id: this.userPayMethodForm.value.countryId,\r\n            typecontribution_id: this.contributionData.typecontribution_id,\r\n            typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n            device_depart: this.userPayMethodForm.value.device_name,\r\n            device_arrivee: this.contributionData.device_name,\r\n            montant_device_depart_d_une_part_sans_handling_fees: montantSansFees ? montantSansFees : 0,\r\n            montant_device_depart_d_une_part_avec_handling_fees: this.getAmountWithFees(montantSansFees, this.userPayMethodForm.value.device_name),\r\n            montant_device_arrivee_d_une_part_sans_handling_fees: this.contributionData.montant,\r\n            sens_contribution: 'entrant',\r\n            liste_part: this.contributionData.liste_part,\r\n            pay_token: payToken,\r\n            pin: this.contributionData.pin,\r\n            operator: 'paypal'\r\n          };\r\n          this.makeDepositOperatorWithConversion(params);\r\n        } else {\r\n          this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  /******************************** END PAYPAL PAYMENT *********************************************/\r\n\r\n\r\n  /******************************** START MTN PAYMENT *********************************************/\r\n\r\n  // Update parameters  Mtn payment\r\n  updateParametersMtn() {\r\n    const amount = this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name) * this.contributionData.liste_part.length;\r\n    this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n\r\n    if (this.contributionData.device_name !== this.userPayMethodForm.value.device_name) {\r\n      this.currency.convert(this.contributionData.device_name, this.userPayMethodForm.value.device_name,\r\n        this.contributionData.montant).then(montantSansFees => {\r\n          if (montantSansFees) {\r\n            const params = {\r\n              seance_id: this.contributionData.seance_id,\r\n              typecontribution_id: this.contributionData.typecontribution_id,\r\n              typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n              country_id: this.userPayMethodForm.value.countryId,\r\n              device_depart: this.userPayMethodForm.value.device_name,\r\n              device_arrivee: this.contributionData.device_name,\r\n              montant_device_depart_d_une_part_sans_handling_fees: montantSansFees ? montantSansFees : 0,\r\n              montant_device_depart_d_une_part_avec_handling_fees: this.getAmountWithFees(montantSansFees, this.userPayMethodForm.value.device_name),\r\n              montant_device_arrivee_d_une_part_sans_handling_fees: this.contributionData.montant,\r\n              sens_contribution: 'entrant',\r\n              numero: this.userPayMethodForm.value.country_prefix + this.userPayMethodForm.value.phone,\r\n              liste_part: this.contributionData.liste_part,\r\n              pin: this.contributionData.pin,\r\n              operator: 'MTN'\r\n            };\r\n            this.contributionDataParams = params;\r\n            const messageConfirmation = {\r\n              title: this.contributionData.title, contribution: this.contributionDataParams.montant_device_depart_d_une_part_avec_handling_fees * this.contributionData.liste_part.length,\r\n              device_name: this.userPayMethodForm.value.device_name, type: 'converted'\r\n            };\r\n            this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n\r\n        });\r\n\r\n    } else {\r\n\r\n      const params = {\r\n        seance_id: this.contributionData.seance_id,\r\n        typecontribution_id: this.contributionData.typecontribution_id,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        device_name: this.contributionData.device_name,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        montant_d_une_part_sans_handing_fees: this.contributionData.montant,\r\n        montant_d_une_part_avec_handling_fees: this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name),\r\n        sens_contribution: 'entrant',\r\n        numero: this.userPayMethodForm.value.country_prefix + this.userPayMethodForm.value.phone,\r\n        liste_part: this.contributionData.liste_part,\r\n        pin: this.contributionData.pin,\r\n        operator: 'MTN'\r\n      };\r\n      this.contributionDataParams = params;\r\n      const messageConfirmation = {\r\n        title: this.contributionData.title, contribution: this.userPayMethodForm.value.montantAvecFees,\r\n        device_name: this.contributionData.device_name, type: 'notconverted'\r\n      };\r\n      this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n    }\r\n  }\r\n\r\n  /******************************** END MTN PAYMENT *********************************************/\r\n\r\n\r\n  /******************************** START ORANGE PAYMENT *********************************************/\r\n\r\n  // Update parameters  Orange payment\r\n  updateParametersOrange() {\r\n    const amount = this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name) * this.contributionData.liste_part.length;\r\n    this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n\r\n    if (this.contributionData.device_name !== this.userPayMethodForm.value.device_name) {\r\n      this.currency.convert(this.contributionData.device_name, this.userPayMethodForm.value.device_name,\r\n        this.contributionData.montant).then(montantSansFees => {\r\n          if (montantSansFees) {\r\n            const params = {\r\n              seance_id: this.contributionData.seance_id,\r\n              typecontribution_id: this.contributionData.typecontribution_id,\r\n              typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n              country_id: this.userPayMethodForm.value.countryId,\r\n              device_depart: this.userPayMethodForm.value.device_name,\r\n              device_arrivee: this.contributionData.device_name,\r\n              montant_device_depart_d_une_part_sans_handling_fees: montantSansFees ? montantSansFees : 0,\r\n              montant_device_depart_d_une_part_avec_handling_fees: this.getAmountWithFees(montantSansFees, this.userPayMethodForm.value.device_name),\r\n              montant_device_arrivee_d_une_part_sans_handling_fees: this.contributionData.montant,\r\n              montant_device_arrivee_d_une_part_avec_handling_fees: this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name),\r\n              sens_contribution: 'entrant',\r\n              numero: this.userPayMethodForm.value.country_prefix + this.userPayMethodForm.value.phone,\r\n              liste_part: this.contributionData.liste_part,\r\n              pin: this.contributionData.pin,\r\n              operator: 'orange'\r\n            };\r\n            this.contributionDataParams = params;\r\n            const messageConfirmation = {\r\n              title: this.contributionData.title, contribution: this.contributionDataParams.montant_device_depart_d_une_part_avec_handling_fees * this.contributionData.liste_part.length,\r\n              device_name: this.userPayMethodForm.value.device_name, type: 'converted'\r\n            };\r\n            this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n\r\n      const params = {\r\n        seance_id: this.contributionData.seance_id,\r\n        typecontribution_id: this.contributionData.typecontribution_id,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        device_name: this.contributionData.device_name,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        montant_d_une_part_sans_handing_fees: this.contributionData.montant,\r\n        montant_d_une_part_avec_handling_fees: this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name),\r\n        sens_contribution: 'entrant',\r\n        numero: this.userPayMethodForm.value.country_prefix + this.userPayMethodForm.value.phone,\r\n        liste_part: this.contributionData.liste_part,\r\n        pin: this.contributionData.pin,\r\n        operator: 'orange'\r\n      };\r\n      this.contributionDataParams = params;\r\n      const messageConfirmation = {\r\n        title: this.contributionData.title, contribution: this.userPayMethodForm.value.montantAvecFees,\r\n        device_name: this.contributionData.device_name, type: 'notconverted'\r\n      };\r\n      this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n    }\r\n  }\r\n\r\n\r\n  /******************************** END ORANGE PAYMENT *********************************************/\r\n\r\n\r\n\r\n  /******************************** START OZOW PAYMENT *********************************************/\r\n\r\n  // Update parameters OZOW payment\r\n  updateParametersOzow() {\r\n    const amount = this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name) * this.contributionData.liste_part.length;\r\n    this.userPayMethodForm.get('montantAvecFees').setValue(amount);\r\n\r\n    if (this.contributionData.device_name !== this.userPayMethodForm.value.device_name) {\r\n      this.currency.convert(this.contributionData.device_name, this.userPayMethodForm.value.device_name,\r\n        this.contributionData.montant).then(montantSansFees => {\r\n          if (montantSansFees) {\r\n            const params = {\r\n              seance_id: this.contributionData.seance_id,\r\n              typecontribution_id: this.contributionData.typecontribution_id,\r\n              typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n              country_id: this.userPayMethodForm.value.countryId,\r\n              device_depart: this.userPayMethodForm.value.device_name,\r\n              device_arrivee: this.contributionData.device_name,\r\n              montant_device_depart_d_une_part_sans_handling_fees: montantSansFees ? montantSansFees : 0,\r\n              montant_device_depart_d_une_part_avec_handling_fees: this.getAmountWithFees(montantSansFees, this.userPayMethodForm.value.device_name),\r\n              montant_device_arrivee_d_une_part_sans_handling_fees: this.contributionData.montant,\r\n              sens_contribution: 'entrant',\r\n              numero: this.userPayMethodForm.value.country_prefix + this.userPayMethodForm.value.phone,\r\n              liste_part: this.contributionData.liste_part,\r\n              pin: this.contributionData.pin,\r\n              operator: 'ozow'\r\n            };\r\n            this.contributionDataParams = params;\r\n            const messageConfirmation = {\r\n              title: this.contributionData.title, contribution: this.contributionDataParams.montant_device_depart_d_une_part_avec_handling_fees * this.contributionData.liste_part.length,\r\n              device_name: this.userPayMethodForm.value.device_name, type: 'converted'\r\n            };\r\n            this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n\r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n        });\r\n\r\n    } else {\r\n\r\n      const params = {\r\n        seance_id: this.contributionData.seance_id,\r\n        typecontribution_id: this.contributionData.typecontribution_id,\r\n        typepaiement_id: this.userPayMethodForm.value.type_payment_id,\r\n        device_name: this.contributionData.device_name,\r\n        country_id: this.userPayMethodForm.value.countryId,\r\n        montant_d_une_part_sans_handing_fees: this.contributionData.montant,\r\n        montant_d_une_part_avec_handling_fees: this.getAmountWithFees(this.contributionData.montant, this.contributionData.device_name),\r\n        sens_contribution: 'entrant',\r\n        numero: this.userPayMethodForm.value.country_prefix + this.userPayMethodForm.value.phone,\r\n        liste_part: this.contributionData.liste_part,\r\n        pin: this.contributionData.pin,\r\n        operator: 'ozow'\r\n      };\r\n      this.contributionDataParams = params;\r\n      const messageConfirmation = {\r\n        title: this.contributionData.title, contribution: this.userPayMethodForm.value.montantAvecFees,\r\n        device_name: this.contributionData.device_name, type: 'notconverted'\r\n      };\r\n      this.showConfirmationMessage(messageConfirmation, this.contributionDataParams);\r\n    }\r\n  }\r\n\r\n\r\n  /******************************** END OZOW PAYMENT *********************************************/\r\n\r\n\r\n  /******************************** START FORM COMMON PAYMENT SERVICES *********************************************/\r\n\r\n  showConfirmationMessage(messageConfirmation: any, contributionDataParams: any) {\r\n    const translation = [];\r\n    this.translate.get(['CONFIRM_PAY_CONTRIBUTION_SUBTEXT1', 'CONFIRM_PAY_CONTRIBUTION_SUBTEXT2', 'CANCEL_TEXT', 'YES_TEXT']).subscribe(trans => {\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT1);\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT2);\r\n      translation.push(trans.CANCEL_TEXT);\r\n      translation.push(trans.YES_TEXT);\r\n      this.paymentOperatorConfirm(messageConfirmation, contributionDataParams, translation);\r\n    });\r\n  }\r\n\r\n  async paymentOperatorConfirm(dataMessage: any, contributionDataParams: any, translation: string[]) {\r\n    const alert = await this.alertController.create({\r\n      header: `${dataMessage.title}`,\r\n      message: `${translation[0]} ${dataMessage.contribution}\r\n    ${dataMessage.device_name}  ${translation[1]}`,\r\n      buttons: [\r\n        {\r\n          text: `${translation[2]}`,\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n\r\n          }\r\n        }, {\r\n          text: `${translation[3]}`,\r\n          handler: () => {\r\n            if (dataMessage.type === 'converted') {\r\n              this.makeDepositOperatorWithConversion(contributionDataParams);\r\n            } else if (dataMessage.type === 'notconverted') {\r\n              this.makeDepositOperatorWithoutConversion(contributionDataParams);\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n\r\n  // make deposit  with operator and conversion\r\n  makeDepositOperatorWithConversion(data: any) {\r\n    this.loading = true;\r\n    this.showLoadingMessage(data);\r\n    this.contribution.contributeWithOperatorWithConversionPastSeance(data)\r\n      .subscribe((reponse: any) => {\r\n        this.loading = false;\r\n        if (reponse && reponse.message === 'success') {\r\n          // Send the reponse per operator\r\n          this.sendResponsePerOperator(reponse, data.operator);\r\n\r\n        }\r\n      }, error => {\r\n      \r\n        if (error && error.error && error.error.message === 'error') {\r\n          if (error.error.user_not_found) {\r\n            this.errorService.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.ui.dismissLoading();\r\n                this.makeDepositOperatorWithConversion(data);\r\n              } else {\r\n                this.exitPayment();\r\n              }\r\n            });\r\n          } else {\r\n            this.loading = false;\r\n            this.ui.dismissLoading();\r\n            this.paymentError.managePaymentOnlineError(error);\r\n          }\r\n\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.errorService.manageError(error);\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  // make deposit  with operator without conversion\r\n  makeDepositOperatorWithoutConversion(data: any) {\r\n    this.loading = true;\r\n    this.showLoadingMessage(data);\r\n    this.contribution.contributeWithOperatorWithoutConversionPastSeance(data)\r\n      .subscribe((reponse: any) => {\r\n        this.loading = false;\r\n        if (reponse && reponse.message === 'success') {\r\n          // Send the reponse per operator\r\n          this.sendResponsePerOperator(reponse, data.operator);\r\n        }\r\n      }, error => {\r\n       \r\n        if (error && error.error && error.error.message === 'error') {\r\n\r\n          if (error.error.user_not_found) {\r\n            this.errorService.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.ui.dismissLoading();\r\n                this.makeDepositOperatorWithoutConversion(data);\r\n              } else {\r\n                this.exitPayment();\r\n              }\r\n            });\r\n          } else {\r\n            this.loading = false;\r\n            this.ui.dismissLoading();\r\n            this.paymentError.managePaymentOnlineError(error);\r\n          }\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.errorService.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n  // =======  Payment process result ===================\r\n\r\n  // Check the status througth operator\r\n  checkPaymentStatus(payToken: string, operator: string) {\r\n    this.cron = setInterval(() => {\r\n      this.checkPaymentStatusServer(payToken, operator);\r\n    }, 30000);\r\n  }\r\n\r\n  // Check the payment Status\r\n  checkPaymentStatusServer(payToken: string, operator: string) {\r\n    this.wallet.getStatusPaymentOperator(payToken, operator).subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'OK') {\r\n        this.showPaymentResult();\r\n        this.translate.get('CONFIRM_PAY_CONTRIBUTION_MSG1').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n      }\r\n    }, error => {\r\n      if (error && error.error && error.error.message === 'FAIL') {\r\n        this.exitPayment();\r\n        this.translate.get('ERROR_PAY_CONTRIBUTION_MSG').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n      } else {\r\n        this.exitPayment();\r\n        this.translate.get('ERROR_PAY_CONTRIBUTION_MSG').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n        this.errorService.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Send message per operator\r\n  sendResponsePerOperator(data: any, operator: string) {\r\n    this.checkPaymentStatus(data.pay_token, operator);\r\n    const reference = data && data.refID ? data.refID : '';\r\n    this.refernceId = reference;\r\n    this.cancelPaymentResult(reference);\r\n    switch (operator) {\r\n      case 'ozow':\r\n        window.open(data.url, '_blank');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // show the loading message\r\n  showLoadingMessage(data: any) {\r\n    switch (data.operator) {\r\n      case 'orange':\r\n        this.translate.get('ORANGE_PAYMENT_MESSAGE').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'MTN':\r\n        this.translate.get('MTN_PAYMENT_MESSAGE').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'paypal':\r\n        this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'ozow':\r\n        this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // clear the time out\r\n  clearTimeoutData() {\r\n    if (this.timeOut) {\r\n      clearTimeout(this.timeOut);\r\n      this.timeOut = null;\r\n    }\r\n  }\r\n\r\n  // clear the set interval\r\n  clearSetIntervalData() {\r\n    if (this.cron) {\r\n      clearInterval(this.cron);\r\n    }\r\n    this.cron = null;\r\n    for (let i = 0; i < 1000; i++) {\r\n      clearInterval(i);\r\n    }\r\n  }\r\n\r\n  // Show payment confirmation dialog\r\n  showPaymentResult() {\r\n    this.loading = false;\r\n    this.ui.dismissLoading();\r\n    this.initPaymentForm();\r\n    this.clearTimeoutData();\r\n    this.clearSetIntervalData();\r\n\r\n    this.events.publish('modal-pay-seance');\r\n  }\r\n\r\n  // Cancel the payment\r\n  cancelPaymentResult(refence?: string) {\r\n    this.timeOut = setTimeout(() => {\r\n      this.exitPayment();\r\n      this.translate.get(['TRANSACTION_CANCEL', 'TOPUP_MSG9']).subscribe(trans => {\r\n        this.ui.presentAlert(`${trans.TRANSACTION_CANCEL}`, `${trans.TOPUP_MSG9} ${refence}`);\r\n      });\r\n    }, 300000);\r\n  }\r\n\r\n  // exit the payment directly\r\n  exitPayment() {\r\n    this.loading = false;\r\n    this.ui.dismissLoading();\r\n    this.getAllMethodPaymentType();\r\n    this.initPaymentForm();\r\n    this.initFormMessage();\r\n    this.clearTimeoutData();\r\n    this.clearSetIntervalData();\r\n  }\r\n\r\n  ionicViewDidLeave() {\r\n    if (this.loading) {\r\n      this.exitPayment();\r\n    }\r\n  }\r\n\r\n  // listen to back button\r\n  hardwareBackButton() {\r\n    this.platform.backButton.subscribe(() => {\r\n      const url = this.router.url;\r\n      if (url === '/dashboard/my-tontines/' + this.tontineData.tontine.tontine_id + '/contrib-not-paid') {\r\n        if (this.refernceId) {\r\n          this.cancelPaymentResult(this.refernceId);\r\n        } else {\r\n          this.exitPayment();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /******************************** END FORM COMMON PAYMENT SERVICES *********************************************/\r\n\r\n}\r\n","export default \"<form [formGroup]=\\\"paymentForm\\\">\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"12\\\">        \\r\\n        <ion-card class=\\\"paidmode\\\">\\r\\n          <ion-card-content class=\\\"ion-text-center\\\">\\r\\n              <ion-row class=\\\"ion-padding-bottom\\\">\\r\\n                <ion-col size=\\\"12\\\">\\r\\n                  <ion-item>\\r\\n                    <ion-label position=\\\"floating\\\">{{ 'AMOUNT_PAY_TEXT' | translate }}</ion-label>\\r\\n                    <ion-input type=\\\"number\\\" formControlName=\\\"montant_total\\\"></ion-input>\\r\\n                    <span slot=\\\"end\\\" class=\\\"slot-prefix ion-no-margin\\\"> {{ paymentForm.value.currency }} </span>\\r\\n                  </ion-item> \\r\\n                  <div class=\\\"validation-errors\\\">\\r\\n                    <ng-container *ngFor=\\\"let validation of validationMessages.amount\\\">\\r\\n                      <div class=\\\"error-message\\\" *ngIf=\\\"amount.hasError(validation.type) && (amount.dirty || amount.touched)\\\">\\r\\n                        <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                        {{ validation.message }}\\r\\n                      </div>\\r\\n                    </ng-container>\\r\\n                  </div>          \\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"12\\\">\\r\\n                  <ion-item>\\r\\n                    <ion-label position=\\\"floating\\\">{{ 'LEAVE_COMMENT' | translate }}</ion-label>\\r\\n                    <ion-textarea  type=\\\"text\\\"  formControlName=\\\"proofMessage\\\"></ion-textarea>\\r\\n                  </ion-item> \\r\\n                  <div class=\\\"validation-errors\\\">\\r\\n                    <ng-container *ngFor=\\\"let validation of validationMessages.proofMessage\\\">\\r\\n                      <div class=\\\"error-message\\\" *ngIf=\\\"proofMessage.hasError(validation.type) && (proofMessage.dirty || proofMessage.touched)\\\">\\r\\n                        <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                        {{ validation.message }}\\r\\n                      </div>\\r\\n                    </ng-container>\\r\\n                  </div>          \\r\\n                </ion-col>\\r\\n                <ion-col  *ngIf=\\\"paymentForm.value.receipt\\\" size=\\\"12\\\" class=\\\"ion-padding\\\"> \\r\\n                  <ion-thumbnail>\\r\\n                    <img src=\\\"{{paymentForm.value.receipt}}\\\">\\r\\n                  </ion-thumbnail>\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"12\\\" class=\\\"ion-padding\\\">\\r\\n                  <ion-button  color=\\\"primary\\\" size=\\\"medium\\\" class=\\\"ion-text-capitalize\\\" (click)=\\\"getProof()\\\">\\r\\n                    <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n                    {{ 'PROF_PAYMENT' | translate }}\\r\\n                 </ion-button>\\r\\n                </ion-col>\\r\\n              </ion-row>                            \\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n      </ion-col>      \\r\\n    </ion-row>\\r\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\r\\n      <ion-col size=\\\"auto\\\">\\r\\n        <ion-button expand=\\\"full\\\" [disabled]=\\\"paymentForm.invalid || loadingPay\\\"\\r\\n              (click)=\\\"paidWithBank(contributionData)\\\"\\r\\n              color=\\\"warning\\\" \\r\\n              class=\\\"ion-text-uppercase\\\"\\r\\n              shape=\\\"round\\\"\\r\\n              [class.ion-hide]=\\\"amountPay - (type !== 'interest' ? paymentForm.value.montant_total : amountPay) === 0\\\"\\r\\n              >\\r\\n         {{ 'SAVE_PARTIAL_PAYMENT' | translate }}\\r\\n        </ion-button>\\r\\n        <ion-button expand=\\\"full\\\" [disabled]=\\\"paymentForm.invalid || loadingPay\\\"\\r\\n              (click)=\\\"paidWithBank(contributionData)\\\"\\r\\n              color=\\\"warning\\\" \\r\\n              class=\\\"ion-text-uppercase\\\"\\r\\n              shape=\\\"round\\\"\\r\\n              [class.ion-hide]=\\\"amountPay - (type !== 'interest' ? paymentForm.value.montant_total : amountPay)  !== 0\\\"\\r\\n              >\\r\\n         {{ 'SUBMIT_FOR_APPROVAL' | translate }}\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n      <p class=\\\"ion-text-center\\\" *ngIf=\\\"loadingPay\\\">\\r\\n        <ion-spinner  name=\\\"circles\\\"></ion-spinner> \\r\\n      </p>\\r\\n    </ion-row>  \\r\\n  </ion-grid>\\r\\n  </form> \\r\\n  \";","import { Component, OnInit, Input, NgZone, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { WalletTontineService } from 'src/app/dashboard/my-tontines/tontine-detail/wallet/services/wallet-tontine.service';\r\nimport { TontineService } from 'src/app/dashboard/my-tontines/services/tontine.service';\r\nimport { ErrorService } from '../service/error.service';\r\nimport { ApiService } from '../service/api.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AlertController, NavController, Platform } from '@ionic/angular';\r\nimport { CurrencyService } from '../service/currency.service';\r\nimport { LocationService } from '../service/location.service';\r\nimport { Router } from '@angular/router';\r\nimport { WalletService } from 'src/app/dashboard/my-wallet/service/wallet.service';\r\nimport { FormUtilsService } from '../service/form-utils.service';\r\nimport { PaymentErrorService } from '../service/payment-error.service';\r\nimport { PaymentGlobalDataService } from '../service/payment-global-data.service';\r\nimport { UserService } from 'src/app/dashboard/user/service/user.service';\r\nimport { EventService } from '../service/events.service';\r\nimport { UiService } from '../service/ui.service';\r\nimport { PluginService } from '../service/plugin.service';\r\ndeclare var paypal: any;\r\n\r\n@Component({\r\n  selector: 'app-paidmode-tontine',\r\n  templateUrl: './paidmode-tontine.component.html',\r\n  styleUrls: ['./paidmode-tontine.component.scss'],\r\n})\r\nexport class PaidmodeTontineComponent implements OnInit {\r\n\r\n  paymentForm: FormGroup;\r\n  walletTypes: any[] = [];\r\n  validationMessages: any;\r\n  typesCaisses: any;\r\n  currentTontine: any;\r\n  states: any;\r\n  paymentMethods: any;\r\n  allPaymentMethods: any;\r\n  paypal_initialized: boolean;\r\n  paypalMessage: string;\r\n  loadingOperator: boolean;\r\n  errorPhone: boolean;\r\n  paypalLoading: boolean\r\n  loading: boolean;\r\n  reference: string;\r\n  timeOut: any;\r\n  cron: any;\r\n  refernceId: string;\r\n\r\n  @Input() amountPay: number;\r\n  @Input() balance: number;\r\n  @ViewChild('paypalbuttoncontainer', { static: false }) paypalbuttoncontainer: ElementRef;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private walletTontine: WalletTontineService,\r\n    private wallet: WalletService,\r\n    private events: EventService,\r\n    private platform: Platform,\r\n    private formUtil: FormUtilsService,\r\n    private paymentData: PaymentGlobalDataService,\r\n    private zone: NgZone,\r\n    private tontine: TontineService,\r\n    private router: Router,\r\n    private userService: UserService,\r\n    private location: LocationService,\r\n    private error: ErrorService,\r\n    private api: ApiService,\r\n    private translate: TranslateService,\r\n    private alertController: AlertController,\r\n    private currency: CurrencyService,\r\n    private navController: NavController,\r\n    private paymentError: PaymentErrorService,\r\n    private ui: UiService,\r\n    private plugin: PluginService\r\n  ) {\r\n    this.typesCaisses = [];\r\n    this.currentTontine = this.tontine.getCurrentTontineData();\r\n    this.states = [];\r\n    this.paymentMethods = [];\r\n    this.paypalMessage = '';\r\n    this.loadingOperator = false;\r\n    this.errorPhone = false;\r\n    this.paypalLoading = false;\r\n    this.loading = false;\r\n    this.timeOut = null;\r\n    this.cron = null;\r\n    this.reference = this.formUtil.getRandomId();\r\n    if (this.currentTontine && this.currentTontine.tontine && this.currentTontine.tontine.tontine_payment_type_id === 1) {\r\n      this.walletTypes = ['offline', 'online'];\r\n    } else {\r\n      this.walletTypes = ['online'];\r\n    }\r\n    this.refernceId = '';\r\n    this.hardwareBackButton();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAllcashers();\r\n    this.initPaymentForm();\r\n    this.validationMessage();\r\n  }\r\n\r\n  /******************************** START FORM SERVICE *********************************************/\r\n\r\n\r\n  // Getters\r\n  get checkoutName() {\r\n    return this.paymentForm.get('checkoutName');\r\n  }\r\n\r\n  get checkoutType() {\r\n    return this.paymentForm.get('checkoutType');\r\n  }\r\n\r\n  get payementtype() {\r\n    return this.paymentForm.get('typePaymentIndex');\r\n  }\r\n\r\n  get country() {\r\n    return this.paymentForm.get('country_id');\r\n  }\r\n\r\n  get phone() {\r\n    return this.paymentForm.get('phone');\r\n  }\r\n\r\n  get amount() {\r\n    return this.paymentForm.get('amount');\r\n  }\r\n\r\n  get proof() {\r\n    return this.paymentForm.get('proof');\r\n  }\r\n\r\n  // Validations message\r\n  validationMessage() {\r\n    this.translate.get(['M_COUNTRY_REQUIRED', 'AMOUNT_REQUIRED', 'REGISTER_PHONE_REQUIRED', 'PAID_MODE_REQUIRED',\r\n      'CHECKOUT_TYPE_REQUIRED', 'DESTINATION_FUND_REQUIRED']).subscribe(trans => {\r\n        this.validationMessages = {\r\n          checkoutName: [\r\n            { type: 'required', message: trans.DESTINATION_FUND_REQUIRED }\r\n          ],\r\n          walletType: [\r\n            { type: 'required', message: trans.CHECKOUT_TYPE_REQUIRED }\r\n          ],\r\n          payementtype: [\r\n            { type: 'required', message: trans.PAID_MODE_REQUIRED }\r\n          ],\r\n          phone: [\r\n            { type: 'required', message: trans.REGISTER_PHONE_REQUIRED },\r\n          ],\r\n          amount: [\r\n            { type: 'required', message: trans.AMOUNT_REQUIRED }\r\n          ],\r\n          country_id: [\r\n            { type: 'required', message: trans.M_COUNTRY_REQUIRED }\r\n          ]\r\n        };\r\n      });\r\n  }\r\n\r\n  // Init the form\r\n  initPaymentForm() {\r\n    this.paymentForm = this.fb.group({\r\n      checkoutName: new FormControl('', Validators.required),\r\n      checkoutType: new FormControl('online'),\r\n      country_id: new FormControl('', Validators.required),\r\n      currency_name: new FormControl('', Validators.required),\r\n      country_prefix: new FormControl(''),\r\n      handleFees: new FormControl(''),\r\n      handleFeesType: new FormControl(''),\r\n      currencyLabel: new FormControl(''),\r\n      type_payment_id: new FormControl(''),\r\n      type_payment_name: new FormControl(''),\r\n      proof: new FormControl(''),\r\n      reason: new FormControl(''),\r\n      typePaymentIndex: new FormControl('', Validators.required),\r\n      phone: new FormControl(''),\r\n      amount: new FormControl('', Validators.compose([Validators.required, Validators.min(1), Validators.pattern('^[\\\\d]+$')])),\r\n      montantFees: new FormControl(''),\r\n      montantFinal: new FormControl(''),\r\n      numero: new FormControl('')\r\n    });\r\n  }\r\n\r\n  // can get bank proof\r\n  checkCaisse() {\r\n    let canGet = false;\r\n    if (this.paymentMethods && this.paymentMethods[this.paymentForm.value.typePaymentIndex] &&\r\n      this.paymentMethods[this.paymentForm.value.typePaymentIndex].type &&\r\n      this.paymentMethods[this.paymentForm.value.typePaymentIndex].type === 'CAISSE') {\r\n      canGet = true;\r\n    }\r\n    return canGet;\r\n  }\r\n\r\n  // Remove space\r\n  removeSpace() {\r\n    this.paymentForm.get('phone').setValue(this.paymentData.removeInputSpace(this.paymentForm.value.phone));\r\n  }\r\n\r\n  removeSpaceAmount() {\r\n    this.paymentForm.get('amount').setValue(parseFloat(this.paymentData.removeInputSpace(this.paymentForm.value.amount)));\r\n  }\r\n\r\n  // check if it is not  mobile operator\r\n  checkMobileOperator() {\r\n    let isMobile = false;\r\n    if (this.paymentMethods && this.paymentMethods[this.paymentForm.value.typePaymentIndex]\r\n      && this.paymentMethods[this.paymentForm.value.typePaymentIndex].type\r\n      && this.paymentMethods[this.paymentForm.value.typePaymentIndex].type === 'OPERATOR'\r\n      && this.paymentMethods[this.paymentForm.value.typePaymentIndex].name\r\n      && (this.paymentMethods[this.paymentForm.value.typePaymentIndex].name === 'ORANGE MONEY' || this.paymentMethods[this.paymentForm.value.typePaymentIndex].name === 'MTN MOBILE MONEY')) {\r\n      isMobile = true;\r\n    }\r\n    return isMobile;\r\n  }\r\n\r\n  // can show paypal message\r\n  canShowPaypalMessage() {\r\n    return this.paymentData.hasPaypalMessage(this.paypalMessage, this.paymentMethods[this.paymentForm.value.typePaymentIndex]);\r\n  }\r\n\r\n  // can get bank proof\r\n  canGetProof() {\r\n    let canGet = false;\r\n    if (this.paymentMethods && this.paymentMethods[this.paymentForm.value.typePaymentIndex] &&\r\n      this.paymentMethods[this.paymentForm.value.typePaymentIndex].type &&\r\n      this.paymentMethods[this.paymentForm.value.typePaymentIndex].type === 'BANK') {\r\n      canGet = true;\r\n    }\r\n\r\n    return canGet;\r\n  }\r\n\r\n  // can show  paypal button\r\n  canShowPaypalButton() {\r\n    return this.paymentData.hasPaypalButton(this.paypal_initialized, this.paymentMethods && this.paymentMethods[this.paymentForm.value.typePaymentIndex]);\r\n  }\r\n\r\n  // can make payment \r\n  canRecharge() {\r\n    return this.paymentData.canMakeRecharge(this.paymentForm.valid, this.paymentMethods[this.paymentForm.value.typePaymentIndex], this.paymentForm.value.phone, this.errorPhone);\r\n  }\r\n\r\n  // Update checkout type\r\n  updateCheckout(index: number) {\r\n    if (this.typesCaisses && this.typesCaisses.length > 0 && this.typesCaisses[index]) {\r\n      const checkOutId = this.typesCaisses[index].id;\r\n      const currentMethods = [];\r\n      this.allPaymentMethods.forEach(method => {\r\n        if (method.id !== checkOutId && (method.country_id && method.country_id === this.paymentForm.value.country_id || method.type === 'CAISSE')) {\r\n          currentMethods.push(method);\r\n        }\r\n      });\r\n      this.paymentMethods = currentMethods;\r\n    }\r\n  }\r\n\r\n  // check if emial or phone is valid\r\n  checckEmailOrPhone(inputValue: string, index: number) {\r\n    this.removeSpace();\r\n    this.paymentForm.get('type_payment_id').setValue(this.paymentMethods[index].id);\r\n    switch (this.paymentMethods[index].name) {\r\n      case 'ORANGE MONEY':\r\n        this.errorPhone = !this.formUtil.validatePhone(inputValue);\r\n        if (!this.errorPhone) {\r\n          this.paymentForm.get('numero').setValue(this.paymentForm.value.country_prefix +\r\n            '' + this.paymentForm.value.phone);\r\n        }\r\n        break;\r\n\r\n      case 'MTN MOBILE MONEY':\r\n        this.errorPhone = !this.formUtil.validatePhone(inputValue);\r\n        if (!this.errorPhone) {\r\n          this.paymentForm.get('numero').setValue(this.paymentForm.value.country_prefix +\r\n            '' + this.paymentForm.value.phone);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // Get all the type of checkout\r\n  getAllcashers() {\r\n    const param = this.currentTontine.tontine.tontine_id;\r\n    this.walletTontine.getAllCashiers(param).subscribe((reponse: any) => {\r\n      if (reponse && reponse.caisses) {\r\n        this.zone.run(() => {\r\n          this.typesCaisses = [];\r\n          let index = 0;\r\n          reponse.caisses.forEach(caise => {\r\n            this.translate.get(caise.caisse_name).subscribe(trans => {\r\n              this.typesCaisses.push({\r\n                index: index, id: caise.id, name: trans, tontine_id: caise.tontine_id, type: 'CAISSE',\r\n                logo: 'assets/pesuwallet.jpg', currency: this.currentTontine.tontine.monnaie, country_id: 0\r\n              });\r\n            });\r\n            index++;\r\n          });\r\n        });\r\n\r\n        setTimeout(() => {\r\n          this.paymentForm.get('checkoutName').setValue(0);\r\n        }, 200);\r\n        // Get the payment method\r\n        this.getAllMethodPaymentType();\r\n      }\r\n    }, error => {\r\n      this.error.manageError(error);\r\n    });\r\n  }\r\n\r\n  // get all operator payments method\r\n  getAllMethodPaymentType() {\r\n    this.loadingOperator = true;\r\n    this.userService.getAllMethodPaymentType().subscribe((reponse: any) => {\r\n      this.loadingOperator = false;\r\n      this.paymentMethods = [];\r\n\r\n      if (reponse && reponse.typePayment && reponse.typePayment.length > 0) {\r\n        this.paymentMethods = this.paymentData.formatPaymentMethodRecharge(reponse.typePayment,this.currentTontine);\r\n      }\r\n\r\n      const defaultCaisses = [];\r\n      this.typesCaisses.forEach(caisse => {\r\n        defaultCaisses.push(caisse);\r\n      });\r\n\r\n      if (defaultCaisses && defaultCaisses.length > 0) {\r\n        this.paymentMethods = defaultCaisses.concat(this.paymentMethods);\r\n      }\r\n\r\n      if (this.currentTontine && this.currentTontine.tontine && this.currentTontine.tontine.tontine_payment_type_id === 1) {\r\n        this.translate.get('BANK_TEXT').subscribe(trans => {\r\n\r\n          const defaultMethod = [{\r\n            id: 0, country_id: 0, logo: 'assets/wallet-icon.svg',\r\n            currency: this.currentTontine.tontine.monnaie, name: trans, placeholder: '',\r\n            handling_fees: 0,\r\n            type_handling_fees: 'valeur',\r\n            type: 'BANK'\r\n          }]\r\n          this.paymentMethods = defaultMethod.concat(this.paymentMethods);\r\n        });\r\n      }\r\n\r\n      this.allPaymentMethods = this.paymentMethods;\r\n      this.getCountries(false);\r\n    }, error => {\r\n      this.loadingOperator = false;\r\n\r\n      if (this.currentTontine && this.currentTontine.tontine && this.currentTontine.tontine.tontine_payment_type_id === 1) {\r\n\r\n        this.translate.get('BANK_TEXT').subscribe(trans => {\r\n          this.paymentMethods.push({\r\n            id: 0, country_id: 0, logo: 'assets/wallet-icon.svg',\r\n            currency: this.currentTontine.tontine.monnaie, name: trans, placeholder: '',\r\n            handling_fees: 0,\r\n            type_handling_fees: 'valeur',\r\n            type: 'BANK'\r\n          });\r\n        });\r\n      }\r\n\r\n      this.typesCaisses.forEach(caisse => {\r\n        this.paymentMethods.push(caisse);\r\n      });\r\n\r\n      this.allPaymentMethods = this.paymentMethods;\r\n      this.getCountries(false);\r\n      this.error.manageError(error);\r\n    });\r\n  }\r\n\r\n  // Get all countries\r\n  getCountries(refresher: boolean) {\r\n    this.location.getAllCountries(refresher).then((countries: any) => {\r\n      this.states = this.paymentData.formatCountriesData(countries);\r\n      if (this.states && this.states.length > 0) {\r\n        setTimeout(() => {\r\n          this.states.forEach(country => {\r\n            if (country.country_key === this.currentTontine.tontine.country_key) {\r\n              this.updateFormData(country);\r\n            }\r\n          });\r\n        }, 200);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  // Update the country info country prfix\r\n  updateCurrencyCountry(countryId: number) {\r\n    this.zone.run(() => {\r\n      this.paymentMethods = [];\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.states.forEach(state => {\r\n        if (state.country_id === countryId) {\r\n          this.updateFormData(state);\r\n        }\r\n      });\r\n    }, 300);\r\n  }\r\n\r\n  // update the form data\r\n  updateFormData(country: any) {\r\n    if (country) {\r\n      this.paymentForm.get('country_prefix').setValue(country.country_prefixe);\r\n      this.paymentForm.get('currency_name').setValue(country.device_name);\r\n      this.paymentForm.get('handleFeesType').setValue(country.type_handling_fees);\r\n      this.paymentForm.get('handleFees').setValue(country.handling_fees);\r\n      this.paymentForm.get('currencyLabel').setValue(country.currency_label);\r\n      this.zone.run(() => {\r\n        this.paymentForm.get('country_id').setValue(country.country_id);\r\n      });\r\n      this.updatePaymentsMethods(country.country_id);\r\n    }\r\n  }\r\n\r\n  // Get the countries payments methods\r\n  updatePaymentsMethods(countryId: number) {\r\n    // update the payment method\r\n    const paymentsMethods = [];\r\n    this.paymentMethods = [];\r\n    this.allPaymentMethods.forEach(payment => {\r\n      if (payment.country_id === countryId || payment.country_id === 0) {\r\n        paymentsMethods.push(payment);\r\n      }\r\n    });\r\n    this.paymentMethods = paymentsMethods;\r\n    this.updateCheckout(this.paymentForm.value.checkoutName);\r\n    if (this.paymentMethods && this.paymentMethods.length > 0) {\r\n      this.updatePaymentMethod(0);\r\n    }\r\n  }\r\n\r\n  // Update the payment method\r\n  updatePaymentMethod(index) {\r\n    if (this.paymentMethods[index]) {\r\n      this.paymentForm.get('type_payment_id').setValue(this.paymentMethods[index].id);\r\n      this.paymentForm.get('type_payment_name').setValue(this.paymentMethods[index].name);\r\n      this.paymentForm.get('currency_name').setValue(this.paymentMethods[index].currency);\r\n      this.paymentForm.get('handleFeesType').setValue(this.paymentMethods[index].type_handling_fees);\r\n      this.paymentForm.get('handleFees').setValue(this.paymentMethods[index].handling_fees);\r\n      this.zone.run(() => {\r\n        this.paymentForm.get('typePaymentIndex').setValue(index);\r\n      });\r\n    }\r\n    if (this.paymentMethods && this.paymentMethods[index] &&\r\n      this.paymentMethods[index].name === 'PAYPAL') {\r\n      this.paypal_initialized = false;\r\n      this.updatePaypalAmount();\r\n    }\r\n  }\r\n\r\n  // Get the payment proofs\r\n  getProof() {\r\n    this.plugin.getPicture().subscribe((picture: any) => {\r\n      if (picture) {\r\n        setTimeout(() => {\r\n          this.paymentForm.get('proof').setValue(picture);\r\n        }, 200);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Calucalte the payment with handlfees\r\n  getAmountFees(amountShare: any, devise: string) {\r\n    return this.paymentData.getHandleFeesWithDevise(amountShare, devise, this.paymentForm.value.handleFees,this.paymentForm.value.handleFeesType);\r\n  }\r\n\r\n  // check the operator method to call\r\n  selectOperator(data: any) {\r\n    const operator = this.paymentMethods[data.typePaymentIndex].name;\r\n    switch (operator) {\r\n      case 'ORANGE MONEY':\r\n        this.updateParametersOrange();\r\n        break;\r\n\r\n      case 'OZOW':\r\n        this.updateParametersOzow();\r\n        break;\r\n\r\n      case 'MTN MOBILE MONEY':\r\n        this.updateParametersMtn();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // Check the method to call\r\n  showPayment(data: any) {\r\n    const type = this.paymentMethods[data.typePaymentIndex].type;\r\n    switch (type) {\r\n\r\n      case 'BANK':\r\n        this.showConfirmationMessageOffline('bank', data);\r\n        break;\r\n\r\n      case 'CAISSE':\r\n        this.showConfirmationMessageOffline('transfert', data);\r\n        break\r\n\r\n      case 'CASH':\r\n        this.showConfirmationMessageOffline('cash', data);\r\n        break;\r\n\r\n      case 'OPERATOR':\r\n        this.selectOperator(data);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  /******************************** END FORM SERVICE *********************************************/\r\n\r\n\r\n  /******************************** START BANK PAYMENT *********************************************/\r\n  // Make deposit with  traditionnal banking\r\n  rechargeTradionnalBanking(data: any) {\r\n    this.loading = true;\r\n\r\n    this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n      this.ui.presentLoading(value);\r\n    });\r\n\r\n    const param = {\r\n      tontine_id: this.currentTontine.tontine.tontine_id,\r\n      currency_name: data.currency_name,\r\n      montant: data.amount,\r\n      type_caisse_tontine_id: this.typesCaisses[data.checkoutName].id,\r\n      reason: data.reason,\r\n      liste_proof: [\r\n        { montant: data.amount, description: data.reason, receipt: data.proof }\r\n      ]\r\n    };\r\n\r\n    this.walletTontine.makeDepositWithTraditionnalBanking(param)\r\n      .subscribe((reponse: any) => {\r\n        this.loading = false;\r\n        this.ui.dismissLoading();\r\n        if (reponse && reponse.message === 'success') {\r\n          this.translate.get('DEPOSIT_DONE_MSG').subscribe(trans => {\r\n            this.ui.presentToast(trans);\r\n          });\r\n          this.events.publish('wallet-recharge');\r\n          this.router.navigate(['dashboard', 'my-tontines', this.currentTontine.tontine.tontine_id, 'wallet']);\r\n        }\r\n      }, error => {\r\n       \r\n\r\n        if (error && error.error && error.error.message === 'error') {\r\n          if (error.error.user_not_found) {\r\n         \r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.ui.dismissLoading();\r\n                this.rechargeTradionnalBanking(data);\r\n              } else {\r\n                this.exitPayment();\r\n              }\r\n            });\r\n          } else {\r\n            this.loading = false;\r\n            this.ui.dismissLoading();\r\n            this.paymentError.managePaymentOfflineError(error);\r\n          }\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.error.manageError(error);\r\n        }\r\n      });\r\n\r\n  }\r\n  /******************************** END BANK PAYMENT *********************************************/\r\n\r\n\r\n\r\n  /******************************** START CAISSE PAYMENT *********************************************/\r\n\r\n  // transfert the money to another cashier\r\n  transfertFromCaisseToCaisse(data: any) {\r\n    this.loading = true;\r\n    this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n      this.ui.presentLoading(value);\r\n    });\r\n    const param = {\r\n      tontine_id: this.currentTontine.tontine.tontine_id,\r\n      currency_name: data.currency_name,\r\n      amount: data.amount,\r\n      type_caisse_depart_id: this.paymentMethods[this.paymentForm.value.typePaymentIndex].id,\r\n      type_caisse_arrivee_id: this.typesCaisses[data.checkoutName].id,\r\n      offline: data.checkoutType === 'offline' ? 1 : 0,\r\n      online: data.checkoutType === 'online' ? 1 : 0,\r\n      reason: data.reason\r\n    };\r\n\r\n    this.walletTontine.transfertFromCashierToCashier(param)\r\n      .subscribe((reponse: any) => {\r\n        this.ui.dismissLoading();\r\n        this.loading = false;\r\n        if (reponse && reponse.message === 'success') {\r\n          this.translate.get('DEPOSIT_DONE_MSG').subscribe(trans => {\r\n            this.ui.presentToast(trans);\r\n          });\r\n          this.events.publish('wallet-recharge');\r\n          this.router.navigate(['dashboard', 'my-tontines', this.currentTontine.tontine.tontine_id, 'wallet']);\r\n        }\r\n      }, error => {\r\n\r\n       \r\n        if (error && error.error && error.error.message === 'error') {\r\n\r\n          if (error.error.user_not_found) {\r\n         \r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.ui.dismissLoading();\r\n                this.transfertFromCaisseToCaisse(data);\r\n              } else {\r\n                this.exitPayment();\r\n              }\r\n            });\r\n          } else {\r\n            this.loading = false;\r\n            this.ui.dismissLoading();\r\n            this.paymentError.managePaymentOfflineError(error);\r\n          }\r\n\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.error.manageError(error);\r\n        }\r\n      });\r\n\r\n  }\r\n  /******************************** END CAISSE PAYMENT *********************************************/\r\n\r\n\r\n\r\n\r\n  /******************************** START CASH PAYMENT *********************************************/\r\n  // cash paiement\r\n  cashPayment(data: any) {\r\n    const param = {\r\n      tontine_id: this.currentTontine.tontine.tontine_id,\r\n      currency_name: data.currency_name,\r\n      montant: data.amount,\r\n      type_caisse_tontine_id: this.typesCaisses[data.checkoutName].id,\r\n      reason: '',\r\n      liste_proof: [\r\n        { montant: data.amount, description: '', receipt: '' }\r\n      ]\r\n    };\r\n\r\n    this.loading = true;\r\n    this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n      this.ui.presentLoading(value);\r\n    });\r\n\r\n    this.walletTontine.makeDepositWithCash(param).subscribe((reponse: any) => {\r\n      this.loading = false;\r\n      this.ui.dismissLoading();\r\n      if (reponse && reponse.message === 'success') {\r\n        this.translate.get('DEPOSIT_DONE_MSG').subscribe(trans => {\r\n          this.ui.presentToast(trans);\r\n        });\r\n        this.events.publish('wallet-recharge');\r\n        this.router.navigate(['dashboard', 'my-tontines', this.currentTontine.tontine.tontine_id, 'wallet']);\r\n      }\r\n    }, error => {\r\n      \r\n\r\n      if (error && error.error) {\r\n        if (error.error.user_not_found) {\r\n      \r\n          this.error.renewSession().then((data: any) => {\r\n            if (data && data.result === \"OK\") {\r\n              this.ui.dismissLoading();\r\n              this.cashPayment(data);\r\n            } else {\r\n              this.exitPayment();\r\n            }\r\n          });\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.paymentError.managePaymentOfflineError(error);\r\n        }\r\n      } else {\r\n        this.loading = false;\r\n        this.ui.dismissLoading();\r\n        this.error.manageError(error);\r\n      }\r\n    });\r\n  }\r\n  /******************************** END CASH PAYMENT *********************************************/\r\n\r\n\r\n\r\n  // ==================== START MTM PAYMENT =========================\r\n  updateParametersMtn() {\r\n    const amount = this.getAmountFees(this.paymentForm.value.amount, this.currentTontine.tontine.monnaie);\r\n    this.paymentForm.get('montantFees').setValue(amount);\r\n\r\n    if (this.currentTontine.tontine.monnaie !== this.paymentForm.value.currency_name) {\r\n\r\n      this.currency.convert(this.currentTontine.tontine.monnaie, this.paymentForm.value.currency_name,\r\n        this.paymentForm.value.amount).then((montantSansFees: any) => {\r\n          if (montantSansFees) {\r\n            const params = {\r\n              device_depart_name: this.paymentForm.value.currency_name,\r\n              device_arrivee_name: this.currentTontine.tontine.monnaie,\r\n              montant_depart_avec_handling_fees: this.getAmountFees(montantSansFees, this.paymentForm.value.currency_name),\r\n              montant_depart_sans_handling_fees: montantSansFees ? montantSansFees : 0,\r\n              montant_arrivee_avec_handling_fees: this.paymentForm.value.montantFees,\r\n              montant_arrivee_sans_handling_fees: this.paymentForm.value.amount,\r\n              typepaiement_id: this.paymentForm.value.type_payment_id,\r\n              numero: this.paymentForm.value.numero,\r\n              country_id: this.paymentForm.value.country_id,\r\n              tontine_id: this.currentTontine.tontine.tontine_id,\r\n              type_caisse_tontine_id: this.typesCaisses[this.paymentForm.value.checkoutName].id,\r\n              operator: 'MTN'\r\n            };\r\n\r\n            const messageConfirmation = { amount: params.montant_depart_avec_handling_fees, currency: this.paymentForm.value.currency_name, type: 'converted' };\r\n            this.showConfirmationMessageOperator(messageConfirmation, params);\r\n\r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n\r\n        });\r\n    } else {\r\n\r\n      const params = {\r\n        tontine_id: this.currentTontine.tontine.tontine_id,\r\n        currency_name: this.paymentForm.value.currency_name,\r\n        type_caisse_tontine_id: this.typesCaisses[this.paymentForm.value.checkoutName].id,\r\n        typepaiement_id: this.paymentForm.value.type_payment_id,\r\n        country_id: this.paymentForm.value.country_id,\r\n        montant_avec_handling_fees: this.paymentForm.value.montantFees,\r\n        montant_sans_handling_fees: this.paymentForm.value.amount,\r\n        numero: this.paymentForm.value.numero,\r\n        operator: 'MTN'\r\n      };\r\n      const messageConfirmation = { amount: this.paymentForm.value.montantFees, currency: this.currentTontine.tontine.monnaie, type: 'notconverted' };\r\n      this.showConfirmationMessageOperator(messageConfirmation, params);\r\n    }\r\n  }\r\n  // ==================== END MTM PAYMENT =========================\r\n\r\n\r\n  // ==================== START ORANGE PAYMENT ======================\r\n  updateParametersOrange() {\r\n    const amount = this.getAmountFees(this.paymentForm.value.amount, this.currentTontine.tontine.monnaie);\r\n    this.paymentForm.get('montantFees').setValue(amount);\r\n\r\n    if (this.currentTontine.tontine.monnaie !== this.paymentForm.value.currency_name) {\r\n      this.currency.convert(this.currentTontine.tontine.monnaie, this.paymentForm.value.currency_name,\r\n        this.paymentForm.value.amount).then((montantSansFees: any) => {\r\n          if (montantSansFees) {\r\n            const params = {\r\n              device_depart_name: this.paymentForm.value.currency_name,\r\n              device_arrivee_name: this.currentTontine.tontine.monnaie,\r\n              montant_depart_avec_handling_fees: this.getAmountFees(montantSansFees, this.paymentForm.value.currency_name),\r\n              montant_depart_sans_handling_fees: montantSansFees ? montantSansFees : 0,\r\n              montant_arrivee_avec_handling_fees: this.paymentForm.value.montantFees,\r\n              montant_arrivee_sans_handling_fees: this.paymentForm.value.amount,\r\n              typepaiement_id: this.paymentForm.value.type_payment_id,\r\n              numero: this.paymentForm.value.numero,\r\n              country_id: this.paymentForm.value.country_id,\r\n              tontine_id: this.currentTontine.tontine.tontine_id,\r\n              type_caisse_tontine_id: this.typesCaisses[this.paymentForm.value.checkoutName].id,\r\n              operator: 'orange'\r\n            };\r\n\r\n            const messageConfirmation = { amount: params.montant_depart_avec_handling_fees, currency: this.paymentForm.value.currency_name, type: 'converted' };\r\n            this.showConfirmationMessageOperator(messageConfirmation, params);\r\n\r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n\r\n      const params = {\r\n        tontine_id: this.currentTontine.tontine.tontine_id,\r\n        currency_name: this.paymentForm.value.currency_name,\r\n        type_caisse_tontine_id: this.typesCaisses[this.paymentForm.value.checkoutName].id,\r\n        typepaiement_id: this.paymentForm.value.type_payment_id,\r\n        country_id: this.paymentForm.value.country_id,\r\n        montant_avec_handling_fees: this.paymentForm.value.montantFees,\r\n        montant_sans_handling_fees: this.paymentForm.value.amount,\r\n        numero: this.paymentForm.value.numero,\r\n        operator: 'orange'\r\n      };\r\n\r\n\r\n      const messageConfirmation = { amount: this.paymentForm.value.montantFees, currency: this.currentTontine.tontine.monnaie, type: 'notconverted' };\r\n      this.showConfirmationMessageOperator(messageConfirmation, params);\r\n\r\n    }\r\n  }\r\n\r\n  // ==================== END ORANGE PAYMENT ======================\r\n\r\n\r\n  // ==================== START OZOW PAYMENT  ========================\r\n\r\n  updateParametersOzow() {\r\n    const amount = this.getAmountFees(this.paymentForm.value.amount, this.currentTontine.tontine.monnaie);\r\n    this.paymentForm.get('montantFees').setValue(amount);\r\n\r\n    if (this.currentTontine.tontine.monnaie !== this.paymentForm.value.currency_name) {\r\n      this.currency.convert(this.currentTontine.tontine.monnaie, this.paymentForm.value.currency_name,\r\n        this.paymentForm.value.amount).then((montantSansFees: any) => {\r\n          if (montantSansFees) {\r\n            const params = {\r\n              device_depart_name: this.paymentForm.value.currency_name,\r\n              device_arrivee_name: this.currentTontine.tontine.monnaie,\r\n              montant_depart_avec_handling_fees: this.getAmountFees(montantSansFees, this.paymentForm.value.currency_name),\r\n              montant_depart_sans_handling_fees: montantSansFees ? montantSansFees : 0,\r\n              montant_arrivee_avec_handling_fees: this.paymentForm.value.montantFees,\r\n              montant_arrivee_sans_handling_fees: this.paymentForm.value.amount,\r\n              typepaiement_id: this.paymentForm.value.type_payment_id,\r\n              country_id: this.paymentForm.value.country_id,\r\n              tontine_id: this.currentTontine.tontine.tontine_id,\r\n              type_caisse_tontine_id: this.typesCaisses[this.paymentForm.value.checkoutName].id,\r\n              operator: 'ozow'\r\n            };\r\n\r\n            const messageConfirmation = { amount: params.montant_depart_avec_handling_fees, currency: this.paymentForm.value.currency_name, type: 'converted' };\r\n            this.showConfirmationMessageOperator(messageConfirmation, params);\r\n          } else {\r\n            this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n\r\n      const params = {\r\n        tontine_id: this.currentTontine.tontine.tontine_id,\r\n        currency_name: this.paymentForm.value.currency_name,\r\n        type_caisse_tontine_id: this.typesCaisses[this.paymentForm.value.checkoutName].id,\r\n        typepaiement_id: this.paymentForm.value.type_payment_id,\r\n        country_id: this.paymentForm.value.country_id,\r\n        montant_avec_handling_fees: this.paymentForm.value.montantFees,\r\n        montant_sans_handling_fees: this.paymentForm.value.amount,\r\n        operator: 'ozow'\r\n      };\r\n\r\n      const messageConfirmation = { amount: this.paymentForm.value.montantFees, currency: this.currentTontine.tontine.monnaie, type: 'notconverted' };\r\n      this.showConfirmationMessageOperator(messageConfirmation, params);\r\n    }\r\n  }\r\n\r\n  // ==================== END OZOW PAYMENT  ========================================================= /\r\n\r\n  /******************************** START PAYPAL PAYMENT *********************************************/\r\n\r\n  // Update parameters PAYPAL\r\n  updateParametersPaypal(payToken: string) {\r\n    if (this.currentTontine.tontine.monnaie === this.paymentForm.value.currency_name) {\r\n      const params = {\r\n        tontine_id: this.currentTontine.tontine.tontine_id,\r\n        currency_name: this.paymentForm.value.currency_name,\r\n        type_caisse_tontine_id: this.typesCaisses[this.paymentForm.value.checkoutName].id,\r\n        typepaiement_id: this.paymentForm.value.type_payment_id,\r\n        country_id: this.paymentForm.value.country_id,\r\n        montant_avec_handling_fees: this.paymentForm.value.montantFees,\r\n        montant_sans_handling_fees: this.paymentForm.value.amount,\r\n        pay_token: payToken,\r\n        operator: 'paypal'\r\n      };\r\n      this.makeDepositOperatorWithoutConversion(params);\r\n    } else {\r\n\r\n      this.currency.convert(this.currentTontine.tontine.monnaie, this.paymentForm.value.currency_name, this.paymentForm.value.amount).then(montantSansFees => {\r\n        if (montantSansFees) {\r\n          const params = {\r\n            device_depart_name: this.paymentForm.value.currency_name,\r\n            device_arrivee_name: this.currentTontine.tontine.monnaie,\r\n            montant_depart_avec_handling_fees: this.getAmountFees(montantSansFees, this.paymentForm.value.currency_name),\r\n            montant_depart_sans_handling_fees: montantSansFees ? montantSansFees : 0,\r\n            montant_arrivee_avec_handling_fees: this.paymentForm.value.montantFees,\r\n            montant_arrivee_sans_handling_fees: this.paymentForm.value.amount,\r\n            typepaiement_id: this.paymentForm.value.type_payment_id,\r\n            country_id: this.paymentForm.value.country_id,\r\n            tontine_id: this.currentTontine.tontine.tontine_id,\r\n            type_caisse_tontine_id: this.typesCaisses[this.paymentForm.value.checkoutName].id,\r\n            pay_token: payToken,\r\n            operator: 'paypal'\r\n          };\r\n          this.makeDepositOperatorWithConversion(params);\r\n\r\n        } else {\r\n          this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n        }\r\n\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n\r\n  updatePaypalAmount() {\r\n\r\n    if (this.paymentForm.value.amount) {\r\n      if (this.paymentForm.value.type_payment_name === 'PAYPAL') {\r\n        const amount = this.getAmountFees(this.paymentForm.value.amount, this.currentTontine.tontine.monnaie);\r\n        this.paymentForm.get('montantFees').setValue(amount);\r\n        if (this.currentTontine.tontine.monnaie !== this.paymentForm.value.currency_name) {\r\n          this.currency.convert(this.currentTontine.tontine.monnaie, this.paymentForm.value.currency_name, this.paymentForm.value.amount).then(montantSansFees => {\r\n            if (montantSansFees) {\r\n\r\n              const amountFees = this.getAmountFees(montantSansFees, this.paymentForm.value.currency_name);\r\n              this.paymentForm.get('montantFinal').setValue(amountFees);\r\n\r\n              this.translate.get('PAIDMODE_MSG2').subscribe(trans => {\r\n                this.paypalMessage = `${trans} ${this.paymentForm.value.montantFees}\r\n               ${this.currentTontine.tontine.monnaie} =\r\n              ${this.paymentForm.value.montantFinal}\r\n              ${this.paymentForm.value.currency_name}`;\r\n                this.setupPayPay();\r\n              });\r\n\r\n            } else {\r\n              this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(trans => {\r\n                this.paypalMessage = trans;\r\n              });\r\n            }\r\n          });\r\n        } else {\r\n          this.paymentForm.get('montantFinal').setValue(this.paymentForm.value.montantFees);\r\n          this.translate.get('PAIDMODE_MSG2').subscribe(trans => {\r\n            this.paypalMessage = `${trans}  ${this.paymentForm.value.montantFinal}\r\n          ${this.paymentForm.value.currency_name}`;\r\n            this.setupPayPay();\r\n          });\r\n\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  initPayPal() {\r\n\r\n    if (this.paymentForm.value.montantFinal > 0) {\r\n      this.paypalLoading = true;\r\n      this.paypal_initialized = true;\r\n      let paypalbuttoncontainer = this.paypalbuttoncontainer.nativeElement as HTMLDivElement\r\n      let _this = this;\r\n\r\n      paypal.Button.render({\r\n        env: 'production', // sandbox | production\r\n        style: {\r\n          size: 'responsive',\r\n          color: 'gold',\r\n          shape: 'pill',\r\n          label: 'checkout', //label: checkout, buynow, credit, pay, paypal\r\n          tagline: false\r\n        },\r\n\r\n        client: {\r\n          sandbox: 'ARIMcMamksC74CLp7Zavgn62RsKK0XDfjePxjU9gsWmcdzyI3AYz3PwADIktvUgCdhAwWCXPaBzCckOC',\r\n          production: 'AVdCN0ymBsPer15VtLbeNoZ3vkjkhap6vXoxwsWF3B0H4GM_mVQ5GVpJ2h4-G_AlVVIsBYWx4JpVVxLT'\r\n        },\r\n        // Show the buyer a 'Pay Now' button in the checkout flow\r\n        commit: true,\r\n\r\n        payment: function (data, actions) {\r\n          return actions.payment.create({\r\n            payment: {\r\n              transactions: [\r\n                {\r\n                  amount: {\r\n                    total: _this.paymentForm.value.montantFinal,\r\n                    currency: _this.paymentForm.value.currency_name\r\n                  },\r\n                  description: 'Toupesu'\r\n                }\r\n              ]\r\n            }\r\n          });\r\n\r\n        },\r\n        // onAuthorize() is called when the buyer approves the payment\r\n        onAuthorize: function (data, actions, error) {\r\n\r\n          if (error) {\r\n            _this.exitPayment();\r\n          }\r\n\r\n          if (error === 'INSTRUMENT_DECLINED') {\r\n            _this.exitPayment();\r\n          }\r\n\r\n          // Make a call to the REST ui to execute the payment\r\n          return actions.payment.execute().then(function () {\r\n            const params: any = {\r\n              refID: _this.reference,\r\n              amount: _this.paymentForm.value.montantFinal,\r\n              moneyCode: _this.paymentForm.value.currency_name,\r\n              product: 'Toupesu',\r\n              paypalID: data.paymentToken.split('-')[1]\r\n            };\r\n            // Save and check the payment result\r\n            _this.api.post('livepaygateway/paypal/savePayRequest', JSON.stringify(params)).subscribe(\r\n              (ans: any) => {\r\n                if (ans && ans.success) {\r\n                  _this.updateParametersPaypal(data.paymentToken.split('-')[1]);\r\n                }\r\n              }, error => {\r\n                _this.updateParametersPaypal(data.paymentToken.split('-')[1]);\r\n              });\r\n          });\r\n        },\r\n        onCancel: function (data, actions) {\r\n          _this.exitPayment();\r\n        },\r\n        onClick: (data, actions) => {\r\n          _this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n            _this.ui.presentToast(value);\r\n          });\r\n        }\r\n      }, paypalbuttoncontainer);\r\n\r\n      setTimeout(() => {\r\n        this.paypalLoading = false;\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  // Setup the paypal payment \r\n  setupPayPay() {\r\n    if (!this.paypal_initialized) {\r\n      this.initPayPal();\r\n    }\r\n  }\r\n\r\n  /******************************** END PAYPAL PAYMENT *********************************************/\r\n\r\n\r\n  /******************************** START PAYMENT SERVICES *********************************************/\r\n\r\n\r\n  // Show confirmation message operator\r\n  showConfirmationMessageOperator(messageData: any, params: any) {\r\n    this.translate.get(['DEPOSIT_TITLE', 'PAIDMODE_MSG2', 'CONFIRM_PAY_CONTRIBUTION_SUBTEXT2', 'CANCEL_TEXT', 'YES_TEXT']).subscribe(trans => {\r\n\r\n      const translation = [];\r\n      translation.push(trans.PAIDMODE_MSG2);\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT2);\r\n      translation.push(trans.CANCEL_TEXT);\r\n      translation.push(trans.YES_TEXT);\r\n      const messageConfirmation = {\r\n        title: trans.DEPOSIT_TITLE, contribution: messageData.amount,\r\n        device_name: messageData.currency, type: messageData.type\r\n      };\r\n      this.paymentConfirm(messageConfirmation, params, translation);\r\n    });\r\n  }\r\n\r\n\r\n  // Show confirmation message offline method\r\n  showConfirmationMessageOffline(type: any, data: any) {\r\n    const translation = [];\r\n    this.translate.get(['DEPOSIT_TITLE', 'PAIDMODE_MSG2', 'CONFIRM_PAY_CONTRIBUTION_SUBTEXT2', 'CANCEL_TEXT', 'YES_TEXT']).subscribe(trans => {\r\n      const messageConfirmation = {\r\n        title: trans.DEPOSIT_TITLE, contribution: data.amount,\r\n        device_name: data.currency_name, type: type\r\n      };\r\n      translation.push(trans.PAIDMODE_MSG2);\r\n      translation.push(trans.CONFIRM_PAY_CONTRIBUTION_SUBTEXT2);\r\n      translation.push(trans.CANCEL_TEXT);\r\n      translation.push(trans.YES_TEXT);\r\n      this.paymentConfirm(messageConfirmation, data, translation);\r\n    });\r\n  }\r\n\r\n  async paymentConfirm(dataMessage: any, contributionDataParams: any, translation: string[]) {\r\n    const alert = await this.alertController.create({\r\n      header: `${dataMessage.title}`,\r\n      message: `${translation[0]} ${dataMessage.contribution}\r\n    ${dataMessage.device_name} ${translation[1]} `,\r\n      buttons: [\r\n        {\r\n          text: `${translation[2]} `,\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n\r\n          }\r\n        }, {\r\n          text: `${translation[3]}`,\r\n          handler: () => {\r\n            if (dataMessage.type === 'converted') {\r\n              this.makeDepositOperatorWithConversion(contributionDataParams);\r\n            } else if (dataMessage.type === 'notconverted') {\r\n              this.makeDepositOperatorWithoutConversion(contributionDataParams);\r\n            } else if (dataMessage.type === 'transfert') {\r\n              this.transfertFromCaisseToCaisse(contributionDataParams)\r\n            } else if (dataMessage.type === 'bank') {\r\n              this.rechargeTradionnalBanking(contributionDataParams)\r\n            } else if (dataMessage.type === 'cash') {\r\n              this.cashPayment(contributionDataParams);\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n\r\n  // make deposit  with operator and conversion\r\n  makeDepositOperatorWithConversion(data: any) {\r\n    this.loading = true;\r\n    this.showLoadingMessage(data);\r\n    this.walletTontine.makeDepositWithMobileMoneyWithConversion(data)\r\n      .subscribe((reponse: any) => {\r\n        this.loading = false;\r\n        if (reponse && reponse.message === 'success') {\r\n          // Send the reponse per operator\r\n          this.sendResponsePerOperator(reponse, data.operator);\r\n        }\r\n      }, error => {\r\n      \r\n        if (error && error.error && error.error.message === 'error') {\r\n\r\n          if (error.error.user_not_found) {\r\n         \r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.ui.dismissLoading();\r\n                this.makeDepositOperatorWithConversion(data);\r\n              } else {\r\n                this.exitPayment();\r\n              }\r\n            });\r\n          } else {\r\n            this.loading = false;\r\n            this.ui.dismissLoading();\r\n            this.paymentError.managePaymentOnlineError(error);\r\n          }\r\n\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.error.manageError(error);\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  // make deposit  with operator without conversion\r\n  makeDepositOperatorWithoutConversion(data: any) {\r\n    this.loading = true;\r\n    this.showLoadingMessage(data);\r\n    this.walletTontine.makeDepositWithMobileMoneyWithoutConversion(data)\r\n      .subscribe((reponse: any) => {\r\n        this.loading = false;\r\n        if (reponse && reponse.message === 'success') {\r\n          // Send the reponse per operator\r\n          this.sendResponsePerOperator(reponse, data.operator);\r\n\r\n        }\r\n      }, error => {\r\n\r\n       \r\n        if (error && error.error && error.error.message === 'error') {\r\n\r\n          if (error.error.user_not_found) {\r\n   \r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.ui.dismissLoading();\r\n                this.makeDepositOperatorWithoutConversion(data);\r\n              } else {\r\n                this.exitPayment();\r\n              }\r\n            });\r\n          } else {\r\n            this.loading = false;\r\n            this.ui.dismissLoading();\r\n            this.paymentError.managePaymentOnlineError(error);\r\n          }\r\n\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.error.manageError(error);\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  // Send message per operator\r\n  sendResponsePerOperator(data: any, operator: string) {\r\n    this.checkPaymentStatus(data.pay_token, operator);\r\n    const reference = data && data.refID ? data.refID : '';\r\n    this.refernceId = reference;\r\n    this.cancelPaymentResult(reference);\r\n    switch (operator) {\r\n      case 'ozow':\r\n        window.open(data.url, '_blank');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // show the loading message\r\n  showLoadingMessage(data: any) {\r\n    switch (data.operator) {\r\n      case 'orange':\r\n        this.translate.get('ORANGE_PAYMENT_MESSAGE').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'MTN':\r\n        this.translate.get('MTN_PAYMENT_MESSAGE').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'paypal':\r\n        this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'ozow':\r\n        this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // Check the status througth operator\r\n  checkPaymentStatus(payToken: string, operator: string) {\r\n    this.cron = setInterval(() => {\r\n      this.checkPaymentStatusServer(payToken, operator);\r\n    }, 30000);\r\n  }\r\n\r\n\r\n  // Check the payment Status\r\n  checkPaymentStatusServer(payToken: string, operator: string) {\r\n    this.wallet.getStatusPaymentOperator(payToken, operator).subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'OK') {\r\n        this.showPaymentResult();\r\n        this.translate.get('DEPOSIT_DONE_MSG').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n      }\r\n    }, error => {\r\n      if (error && error.error && error.error.message === 'FAIL') {\r\n        this.exitPayment();\r\n        this.translate.get('ERROR_PAY_CONTRIBUTION_MSG').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n      } else {\r\n        this.exitPayment();\r\n        this.translate.get('ERROR_PAY_CONTRIBUTION_MSG').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n        this.error.manageError(error);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  // clear the time out\r\n  clearTimeoutData() {\r\n    if (this.timeOut) {\r\n      clearTimeout(this.timeOut);\r\n      this.timeOut = null;\r\n    }\r\n  }\r\n\r\n  // clear the set interval\r\n  clearSetIntervalData() {\r\n    if (this.cron) {\r\n      clearInterval(this.cron);\r\n    }\r\n    this.cron = null;\r\n    for (let i = 0; i < 1000; i++) {\r\n      clearInterval(i);\r\n    }\r\n  }\r\n\r\n  // Show payment result\r\n  showPaymentResult() {\r\n    this.loading = false;\r\n    this.ui.dismissLoading();\r\n\r\n    this.getAllcashers();\r\n    this.initPaymentForm();\r\n    this.validationMessage();\r\n    this.clearTimeoutData();\r\n    this.clearSetIntervalData();\r\n\r\n    this.navController.setDirection('root');\r\n    this.events.publish('wallet-recharge');\r\n    this.router.navigate(['dashboard', 'my-tontines', this.currentTontine.tontine.tontine_id, 'wallet']);\r\n  }\r\n\r\n  // Cancel the payment\r\n  cancelPaymentResult(refence?: string) {\r\n    this.timeOut = setTimeout(() => {\r\n      this.exitPayment();\r\n      this.translate.get(['TRANSACTION_CANCEL', 'TOPUP_MSG9']).subscribe(trans => {\r\n        this.ui.presentAlert(`${trans.TRANSACTION_CANCEL}`, `${trans.TOPUP_MSG9} ${refence}`);\r\n      });\r\n    }, 300000);\r\n  }\r\n\r\n  // exit the payment directly\r\n  exitPayment() {\r\n    this.loading = false;\r\n    this.ui.dismissLoading();\r\n\r\n    this.getAllcashers();\r\n    this.initPaymentForm();\r\n    this.validationMessage();\r\n    this.clearTimeoutData();\r\n    this.clearSetIntervalData();\r\n  }\r\n\r\n  // Leave the page\r\n  ionicViewDidLeave() {\r\n    if (this.loading) {\r\n      this.exitPayment();\r\n    }\r\n  }\r\n\r\n  // listen to back button\r\n  hardwareBackButton() {\r\n    this.platform.backButton.subscribe(() => {\r\n      const url = this.router.url;\r\n      if (url === '/dashboard/my-tontines/' + this.currentTontine.tontine.tontine_id + '/wallet/top-up') {\r\n        if (this.refernceId) {\r\n          this.cancelPaymentResult(this.refernceId);\r\n        } else {\r\n          this.exitPayment();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /******************************** END PAYMENT SERVICES *********************************************/\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' },\n  { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthPageModule)},\n  { path: 'dashboard', loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardPageModule), canLoad: [AuthGuard] }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYWlkbW9kZS1sb2FuLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title class=\\\"ion-text-center\\\">{{type ==='new' ? ('NEW_PAYMENT' | translate) : ('INITIATE_PAIEMENT' | translate)\\r\\n      }}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"initiate-pay\\\">\\r\\n  <p class=\\\"ion-text-center\\\" *ngIf=\\\"loading\\\">\\r\\n    <ion-spinner name=\\\"circles\\\"></ion-spinner>\\r\\n  </p>\\r\\n  <ion-grid>\\r\\n    <form [formGroup]=\\\"formPayment\\\">\\r\\n      <ion-row *ngIf=\\\"type ==='new'\\\">\\r\\n        <ion-col>\\r\\n          <h4><small>{{ 'INIT_PAY_TEXT_1' | translate }} {{(currentPaymentData.argent_a_bouffer_avant_toute_coupure |\\r\\n              commadumper)}} {{currentPaymentData.device_name}} {{ 'INIT_PAY_TEXT_2' | translate }}.</small></h4>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row  *ngIf=\\\"listCaisse && listCaisse.length > 0\\\">\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">{{'REASON_TEXT' | translate}}</ion-label>\\r\\n            <ion-textarea placeholder=\\\"{{ 'ENTER_TEXT' | translate }}\\\" formControlName=\\\"reason\\\"></ion-textarea>\\r\\n          </ion-item>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row *ngIf=\\\"listCaisse && listCaisse.length > 0\\\">\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">{{'CHECKOUT_SELECT_MSG' | translate}}</ion-label>\\r\\n            <ion-select formControlName=\\\"chechoutList\\\" (ionChange)=\\\"updateChoice(formPayment.value.chechoutList)\\\"\\r\\n              multiple=\\\"true\\\" placeholder=\\\"\\\">\\r\\n              <ion-select-option *ngFor=\\\"let chechoutItem of listCaisse\\\" [value]=\\\"chechoutItem.choice_name\\\">\\r\\n                {{(chechoutItem.type_caisse_tontine_name | translate)}}</ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.chechoutList\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"chechoutList.hasError(validation.type) && (chechoutList.dirty || chechoutList.touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n                {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </form>\\r\\n    <ion-row *ngFor=\\\"let chechoutItem of listCaisse; let i = index\\\">\\r\\n      <ion-col *ngIf=\\\"chechoutItem.choice\\\">\\r\\n        <ion-row class=\\\"ion-align-items-center checkout-list\\\">\\r\\n          <ion-col size=\\\"4\\\">\\r\\n            <h6>\\r\\n              <ion-text color=\\\"primary\\\">{{(chechoutItem.type_caisse_tontine_name | translate)}}\\r\\n                ({{chechoutItem.currency_name}})</ion-text>\\r\\n            </h6>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"8\\\">\\r\\n            <ion-row>\\r\\n              <ion-col *ngIf=\\\"chechoutItem.current_montant_online > 0\\\">\\r\\n                <ion-text color=\\\"primary\\\">{{ 'ONLINE_TEXT' | translate }}: {{chechoutItem.current_montant_online -\\r\\n                  listCaisse[i].montant_online }}</ion-text>\\r\\n                <ion-item>\\r\\n                  <ion-input type=\\\"number\\\"\\r\\n                    (ionChange)=\\\"validateAmount(chechoutItem.current_montant_online, listCaisse[i].montant_online, i, 'online'); updateChoice(formPayment.value.chechoutList)\\\"\\r\\n                    [(ngModel)]=\\\"listCaisse[i].montant_online\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></ion-input>\\r\\n                </ion-item>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row>\\r\\n              <ion-col *ngIf=\\\"chechoutItem.current_montant_offline > 0\\\">\\r\\n                <ion-text color=\\\"primary\\\">{{ 'OFFLINE_TEXT' | translate }}: {{ chechoutItem.current_montant_offline -\\r\\n                  listCaisse[i].montant_offline}}</ion-text>\\r\\n                <ion-item>\\r\\n                  <ion-input type=\\\"number\\\"\\r\\n                    (ionChange)=\\\"validateAmount(chechoutItem.current_montant_offline, listCaisse[i].montant_offline, i, 'offline'); updateChoice(formPayment.value.chechoutList)\\\"\\r\\n                    (ionChange)=\\\"validateAmount()\\\" [(ngModel)]=\\\"listCaisse[i].montant_offline\\\"\\r\\n                    [ngModelOptions]=\\\"{standalone: true}\\\"></ion-input>\\r\\n                </ion-item>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <div class=\\\"validation-errors\\\" *ngIf=\\\"listCaisse[i].online_error\\\">\\r\\n          <div class=\\\"error-message\\\">\\r\\n            <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n            <span>{{(chechoutItem.type_caisse_tontine_name | translate)}} {{ 'ONLINE_TEXT' | translate }}\\r\\n              {{ 'INITIATE_ERROR_MSG' | translate }} {{chechoutItem.current_montant_online}}\\r\\n              {{chechoutItem.currency_name}} </span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"validation-errors\\\" *ngIf=\\\"listCaisse[i].offline_error\\\">\\r\\n          <div class=\\\"error-message\\\">\\r\\n            <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n            <span>{{(chechoutItem.type_caisse_tontine_name | translate)}} {{ 'OFFLINE_TEXT' | translate }}\\r\\n              {{ 'INITIATE_ERROR_MSG' | translate }} {{ chechoutItem.current_montant_offline}}\\r\\n              {{chechoutItem.currency_name}} </span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n    <ion-row *ngIf=\\\"formPayment.valid && currentPaymentData.somme !== totalAmount\\\">\\r\\n      <div class=\\\"validation-errors\\\">\\r\\n        <div class=\\\"error-message\\\">\\r\\n          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n          {{ 'BOUFFE_AMOUNT_ERROR' | translate }} {{currentPaymentData.somme}} {{currentPaymentData.device_name}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </ion-row>\\r\\n\\r\\n    <ion-row *ngIf=\\\"currentPaymentData.somme > 0 && !loading && listCaisse && listCaisse.length > 0\\\">\\r\\n      <ion-col>\\r\\n        <p>\\r\\n          <ion-text class=\\\"ion-float-right\\\" color=\\\"danger\\\"><strong>{{ 'TOTAL_TEXT' | translate }} <sup>*</sup>:\\r\\n              {{currentPaymentData.somme}} {{currentPaymentData.device_name}}</strong></ion-text>\\r\\n        </p>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n    <ion-row *ngIf=\\\"!loading && listCaisse && listCaisse.length > 0\\\">\\r\\n      <ion-col>\\r\\n        <ion-button expand=\\\"full\\\" [disabled]=\\\"hasError() || formPayment.invalid  \\r\\n            || (currentPaymentData.somme !== totalAmount) || totalAmount === 0\\\" color=\\\"warning\\\"\\r\\n          class=\\\"ion-text-uppercase\\\" shape=\\\"round\\\" (click)=\\\"iniatePayment()\\\">\\r\\n          {{ 'SUBMIT_TEXT' | translate }}\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n  \\r\\n  <ion-row *ngIf=\\\"!loading && listCaisse && listCaisse.length === 0\\\">\\r\\n    <ion-col>\\r\\n      <p class=\\\"ion-text-center\\\">\\r\\n          {{ 'RECHARGE_CAISSE_MSG' | translate }}\\r\\n      </p>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"ion-padding ion-text-center\\\">\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-button expand=\\\"full\\\" fill=\\\"outline\\\" color=\\\"warning\\\" class=\\\"ion-text-uppercase\\\" shape=\\\"round\\\"\\r\\n          (click)=\\\"closeContribute()\\\">\\r\\n          {{ 'CANCEL_TEXT' | translate }}\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-footer>\";","export default \"<form [formGroup]=\\\"paymentForm\\\">\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"12\\\">        \\r\\n        <ion-card class=\\\"paidmode\\\">\\r\\n          <ion-card-content class=\\\"ion-text-center\\\">\\r\\n              <ion-row class=\\\"ion-padding-bottom\\\">\\r\\n                <ion-col size=\\\"12\\\">\\r\\n                  <ion-item>\\r\\n                    <ion-label position=\\\"floating\\\">{{ 'AMOUNT_PAY_TEXT' | translate }}</ion-label>\\r\\n                    <ion-input type=\\\"number\\\" formControlName=\\\"amount\\\"></ion-input>\\r\\n                    <span slot=\\\"end\\\" class=\\\"slot-prefix ion-no-margin\\\"> {{ paymentForm.value.currency }} </span>\\r\\n                  </ion-item> \\r\\n                  <div class=\\\"validation-errors\\\">\\r\\n                    <ng-container *ngFor=\\\"let validation of validationMessages.amount\\\">\\r\\n                      <div class=\\\"error-message\\\" *ngIf=\\\"amount.hasError(validation.type) && (amount.dirty || amount.touched)\\\">\\r\\n                        <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                        {{ validation.message }}\\r\\n                      </div>\\r\\n                    </ng-container>\\r\\n                  </div>          \\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"12\\\">\\r\\n                  <ion-item>\\r\\n                    <ion-label position=\\\"floating\\\">{{ 'LEAVE_COMMENT' | translate }}</ion-label>\\r\\n                    <ion-textarea  type=\\\"text\\\"  formControlName=\\\"proofMessage\\\"></ion-textarea>\\r\\n                  </ion-item> \\r\\n                  <div class=\\\"validation-errors\\\">\\r\\n                    <ng-container *ngFor=\\\"let validation of validationMessages.proofMessage\\\">\\r\\n                      <div class=\\\"error-message\\\" *ngIf=\\\"proofMessage.hasError(validation.type) && (proofMessage.dirty || proofMessage.touched)\\\">\\r\\n                        <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                        {{ validation.message }}\\r\\n                      </div>\\r\\n                    </ng-container>\\r\\n                  </div>          \\r\\n                </ion-col>\\r\\n                <ion-col  *ngIf=\\\"paymentForm.value.receipt\\\" size=\\\"12\\\" class=\\\"ion-padding\\\"> \\r\\n                  <ion-thumbnail>\\r\\n                    <img src=\\\"{{paymentForm.value.receipt}}\\\">\\r\\n                  </ion-thumbnail>\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"12\\\" class=\\\"ion-padding\\\">\\r\\n                  <ion-button  color=\\\"primary\\\" size=\\\"medium\\\" class=\\\"ion-text-capitalize\\\" (click)=\\\"getProof()\\\">\\r\\n                    <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n                    {{ 'PROF_PAYMENT' | translate }}\\r\\n                 </ion-button>\\r\\n                </ion-col>\\r\\n              </ion-row>                            \\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n      </ion-col>      \\r\\n    </ion-row>\\r\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\r\\n      <ion-col size=\\\"auto\\\">\\r\\n        <ion-button expand=\\\"full\\\" [disabled]=\\\"paymentForm.invalid || loadingPay\\\"\\r\\n              (click)=\\\"makePayment()\\\"\\r\\n              color=\\\"warning\\\" \\r\\n              class=\\\"ion-text-uppercase\\\"\\r\\n              shape=\\\"round\\\"\\r\\n              [class.ion-hide]=\\\"balance - paymentForm.value.amount === 0\\\"\\r\\n              >\\r\\n         {{ 'SAVE_PARTIAL_PAYMENT' | translate }}\\r\\n        </ion-button>\\r\\n        <ion-button expand=\\\"full\\\" [disabled]=\\\"paymentForm.invalid || loadingPay\\\"\\r\\n              (click)=\\\"makePayment()\\\"\\r\\n              color=\\\"warning\\\" \\r\\n              class=\\\"ion-text-uppercase\\\"\\r\\n              shape=\\\"round\\\"\\r\\n              [class.ion-hide]=\\\"balance - paymentForm.value.amount  !== 0\\\"\\r\\n              >\\r\\n         {{ 'SUBMIT_FOR_APPROVAL' | translate }}\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n      <p class=\\\"ion-text-center\\\" *ngIf=\\\"loadingPay\\\">\\r\\n        <ion-spinner  name=\\\"circles\\\"></ion-spinner> \\r\\n      </p>\\r\\n    </ion-row>  \\r\\n  </ion-grid>\\r\\n  </form> \\r\\n  \";","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-view-proof',\n  templateUrl: './view-proof.component.html',\n  styleUrls: ['./view-proof.component.scss'],\n})\nexport class ViewProofComponent implements OnInit {\n\n  @Input() proof: number;\n\n  constructor(\n    private modatCtrl: ModalController\n  ) { \n\n  }\n\n  ngOnInit() {\n  }\n\n  closeContribute() {\n    this.modatCtrl.dismiss(null, 'cancel');\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\n\nconst APP_PREFIX = 'TOUPESU-V1-';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n\n  constructor() { }\n\n  setItem(key: string, value: any) {\n    localStorage.setItem(`${APP_PREFIX}${key}`, JSON.stringify(value));\n  }\n\n  getItem(key: string) {\n    const data =  localStorage.getItem(`${APP_PREFIX}${key}`);\n    return data  ? JSON.parse(data) : null;\n  }\n\n  removeItem(key: string) {\n    localStorage.removeItem(`${APP_PREFIX}${key}`);\n  }\n\n  // get item secure\n  getItemSecure(key: string): any {\n    const data = localStorage.getItem(`${APP_PREFIX}${key}`);\n    return data && atob(data) ? JSON.parse(atob(data)) : null;\n  }\n\n  // Set item secure\n  setItemSecure(key: string, value: any) {\n    localStorage.setItem(`${APP_PREFIX}${key}`, btoa(JSON.stringify(value)));\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb250cmlidXRpb24uY29tcG9uZW50LnNjc3MifQ== */\";","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}