{"version":3,"sources":["./src/app/dashboard/tontines-events/event-detail/events-tickets/events-tickets.page.ts","./src/app/dashboard/tontines-events/event-detail/events-tickets/events-tickets.module.ts","./src/app/dashboard/tontines-events/event-detail/events-tickets/events-tickets.page.scss","./src/app/dashboard/tontines-events/event-detail/events-tickets/events-tickets.page.html"],"names":[],"mappings":"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","file":"tontines-events-event-detail-events-tickets-events-tickets-module.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { TontinesEventsService } from '../../services/tontines-events.service';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { IonInfiniteScroll } from '@ionic/angular';\r\nimport { EventErrorService } from 'src/app/dashboard/tontines-events/services/event-error.service';\r\nimport { UserService } from 'src/app/dashboard/user/service/user.service';\r\nimport { UiService } from 'src/app/shared/service/ui.service';\r\nimport { EventService } from 'src/app/shared/service/events.service';\r\n\r\n@Component({\r\n  selector: 'app-events-tickets',\r\n  templateUrl: './events-tickets.page.html',\r\n  styleUrls: ['./events-tickets.page.scss'],\r\n})\r\nexport class EventsTicketsPage implements OnInit {\r\n\r\n  currentEvent: any = [];\r\n  LastNotifsEvent: any = [];\r\n  defaultImage = 'assets/images/default-event.jpg';\r\n  notificationForm: FormGroup;\r\n  p: number = 1;\r\n  user: any;\r\n  urlLinkId: any;\r\n  loading: boolean = false;\r\n  errorMessage: boolean = false;\r\n  intervalId: any;\r\n  FileData: any;\r\n  validationMessages: any;\r\n  allData: any;\r\n  nbItems: number;\r\n  @ViewChild(IonInfiniteScroll, { static: false }) infiniteScroll: IonInfiniteScroll;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private tontineEventService: TontinesEventsService,\r\n    private errorService: ErrorService,\r\n    private translate: TranslateService,\r\n    private events: EventService,\r\n    private ui: UiService,\r\n    private eventError: EventErrorService,\r\n    private userService: UserService,\r\n    private event: TontinesEventsService\r\n  ) {\r\n    this.user = this.userService.getUserData();\r\n    this.currentEvent = this.event.getCurrentTontineEventData();\r\n    this.allData = [];\r\n    this.nbItems = 10;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initErrorMessage();\r\n    this.urlLinkId = this.route.snapshot.params.eventID;\r\n    this.getDetailTontinesEvent();\r\n    this.initNotificationForm();\r\n    this.getMessagingEvent(null);\r\n    this.intervalId = setInterval(() => this.getMessagingEvent(null), 120000);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.intervalId) {\r\n      clearInterval(this.intervalId);\r\n    }\r\n  }\r\n\r\n  get ticketSubject() {\r\n    return this.notificationForm.get('subject');\r\n  }\r\n\r\n  get tickectMessage() {\r\n    return this.notificationForm.get('message');\r\n  }\r\n\r\n  get ticketFile() {\r\n    return this.notificationForm.get('attachFiles');\r\n  }\r\n\r\n  // Init message Error\r\n  initErrorMessage() {\r\n    this.translate.get(['M_SUBJECT_REQUIRED', 'M_MESSAGE_REQUIRED']).subscribe(trans => {\r\n      this.validationMessages = {\r\n        subject: [\r\n          { type: 'required', message: trans.M_SUBJECT_REQUIRED }\r\n        ],\r\n        message: [\r\n          { type: 'required', message: trans.M_MESSAGE_REQUIRED }\r\n        ]\r\n      };\r\n    });\r\n  }\r\n\r\n  // Init form\r\n  initNotificationForm() {\r\n    const userLogged = this.userService.getUserData();\r\n    this.notificationForm = this.fb.group({\r\n      subject: ['', Validators.required],\r\n      message: ['', Validators.required],\r\n      event_id: [this.urlLinkId, Validators.required],\r\n      event_status: [''],\r\n      user_id: [userLogged.id, Validators.required],\r\n      attachFiles: ['']\r\n    });\r\n  }\r\n\r\n  getMessagingEvent(event) {\r\n    this.tontineEventService.getMessagingEvent(this.urlLinkId).subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'success') {\r\n        this.allData = reponse.liste;\r\n        if (this.allData.length > this.nbItems) {\r\n          this.LastNotifsEvent = [];\r\n          for (let i = 0; i < this.nbItems; i++) {\r\n            this.LastNotifsEvent.push(this.allData[this.LastNotifsEvent.length]);\r\n          }\r\n        } else {\r\n          this.LastNotifsEvent = this.allData;\r\n        }\r\n      }\r\n      if (event) {\r\n        setTimeout(() => {\r\n          event.target.complete();\r\n        }, 2000);\r\n      }\r\n    }, error => {\r\n      if (error && error.error && error.error.user_not_found) {\r\n        this.errorService.renewSession().then((data: any) => {\r\n            if (data && data.result === \"OK\") {\r\n                this.getMessagingEvent(event);\r\n            }\r\n        });\r\n      } else {\r\n        this.errorService.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Get the tontine event detail\r\n  getDetailTontinesEvent() {\r\n    this.tontineEventService.getTontineDetail(this.urlLinkId).subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'success') {\r\n        this.currentEvent = reponse.liste[0];\r\n      }\r\n    });\r\n  }\r\n\r\n  // Refresh the list\r\n  refreSher(event) {\r\n    this.infiniteScroll.disabled = false;\r\n    this.getMessagingEvent(event);\r\n  }\r\n\r\n  // Infinite scroll data\r\n  infinteScrollData(event) {\r\n    setTimeout(() => {\r\n      for (let i = 0; i < this.nbItems; i++) {\r\n        if (this.LastNotifsEvent.length < this.allData.length) {\r\n          this.LastNotifsEvent.push(this.allData[this.LastNotifsEvent.length]);\r\n\r\n        } else if (this.LastNotifsEvent.length === this.allData.length) {\r\n          event.target.disabled = true;\r\n        }\r\n      }\r\n      event.target.complete();\r\n    }, 500);\r\n\r\n  }\r\n\r\n  sendNotification() {\r\n    this.loading = true;\r\n    this.translate.get('LOADING_TEXT').subscribe(value => {\r\n      this.ui.presentLoading(value);\r\n    });\r\n    this.notificationForm.get('event_status').setValue(this.currentEvent.status);\r\n    this.tontineEventService.sendNotification(this.notificationForm.value).subscribe(\r\n      (reponse: any) => {\r\n        this.loading = false;\r\n        this.ui.dismissLoading();\r\n        if (reponse && reponse.message === 'success') {\r\n          this.initNotificationForm();\r\n          this.getMessagingEvent(null);\r\n          this.events.publish('new-event');\r\n          this.translate.get('TONTINE_EVENT_NOTIF_TEXT1').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n        }\r\n      }, error => {\r\n        \r\n        if (error && error.error && error.error.message === 'error') {\r\n          if (error.error.user_not_found) {\r\n            this.errorService.renewSession().then((data: any) => {\r\n              this.ui.dismissLoading();\r\n              if (data && data.result === \"OK\") {\r\n                  this.sendNotification();\r\n              } else {\r\n                this.loading = false;\r\n              }\r\n            }); \r\n          } else {\r\n            this.loading = false;\r\n            this.ui.dismissLoading();\r\n            this.eventError.manageEventError(error);\r\n          }\r\n        } else {\r\n          this.loading = false;\r\n          this.ui.dismissLoading();\r\n          this.errorService.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EventsTicketsPage } from './events-tickets.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EventsTicketsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [\n    EventsTicketsPage\n  ]\n})\nexport class EventsTicketsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJldmVudHMtdGlja2V0cy5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button color=\\\"primary\\\"></ion-back-button>\\n      </ion-buttons>\\n    <ion-title class=\\\"ion-text-center title-md-right\\\">{{ 'MY_TICKETS_TEXT' | translate }}</ion-title>\\n  </ion-toolbar>\\n  <ion-toolbar>\\n      <ion-card class=\\\"ion-no-margin ticket-form\\\">\\n          <ion-card-content>\\n            <form [formGroup]=\\\"notificationForm\\\">\\n              <ion-grid>\\n                <ion-row>\\n                  <ion-col>\\n                    <ion-item>\\n                      <ion-label position=\\\"floating\\\">{{ 'SUBJECT_TEXT' | translate }}</ion-label>\\n                      <ion-input type=\\\"text\\\" formControlName=\\\"subject\\\" required></ion-input>\\n                    </ion-item>\\n                    <div class=\\\"validation-errors\\\">\\n                      <ng-container *ngFor=\\\"let validation of validationMessages.subject\\\">\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"ticketSubject.value && ticketSubject.hasError(validation.type) && (ticketSubject.dirty || ticketSubject.touched)\\\">\\n                          <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\n                          {{ validation.message }}\\n                        </div>\\n                      </ng-container>\\n                    </div> \\n                  </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-col>\\n                    <ion-item>\\n                      <ion-label position=\\\"floating\\\">{{ 'M_MESSAGE' | translate }}</ion-label>\\n                      <ion-textarea type=\\\"text\\\" formControlName=\\\"message\\\" required></ion-textarea>\\n                    </ion-item>\\n                    <div class=\\\"validation-errors\\\">\\n                      <ng-container *ngFor=\\\"let validation of validationMessages.message\\\">\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"tickectMessage.value && tickectMessage.hasError(validation.type) && (tickectMessage.dirty || tickectMessage.touched)\\\">\\n                          <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\n                          {{ validation.message }}\\n                        </div>\\n                      </ng-container>\\n                    </div> \\n                  </ion-col>\\n                </ion-row>\\n                <ion-row class=\\\"ion-justify-content-end\\\">\\n                  <ion-col size=\\\"4\\\">\\n                    <ion-button expand=\\\"full\\\"  [disabled]=\\\"notificationForm.invalid\\\"  (click)=\\\"sendNotification()\\\"\\n                        color=\\\"primary\\\"\\n                        shape=\\\"round\\\">\\n                      {{ 'SEND_TEXT' | translate }}\\n                    </ion-button>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-grid>     \\n            </form>\\n          </ion-card-content>\\n        </ion-card>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ticket\\\"> \\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refreSher($event)\\\">\\n    <ion-refresher-content\\n      pullingIcon=\\\"reload-outline\\\"\\n      refreshingSpinner=\\\"circles\\\"\\n      refreshingText=\\\"{{ 'M_REFRESHING_TEXT' | translate }}\\\">\\n    </ion-refresher-content>\\n  </ion-refresher>\\n  <ion-grid>\\n    <ion-row class=\\\"notification\\\" *ngFor=\\\"let notif of LastNotifsEvent\\\">\\n      <ion-col>\\n        <ion-card class=\\\"ion-no-margin\\\">\\n          <ion-item lines=\\\"none\\\">\\n              <ion-icon color=\\\"primary\\\" name=\\\"text\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label>{{ (notif.tontine_event_type =='VISITOR'  ? 'YOU_TEXT' : 'TOUPESUTEAM_TEXT') | translate}} - {{ notif.subject }}</ion-label>\\n          </ion-item>\\n        \\n          <ion-card-content>\\n            {{ notif.content }}\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n  <div  *ngIf=\\\"LastNotifsEvent && LastNotifsEvent.length === 0 && !loading\\\">\\n    <p  class=\\\"ion-text-center\\\"> {{ 'M_NO_NOTIFICATIONS' | translate }}</p>\\n  </div>\\n\\n  <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"infinteScrollData($event)\\\">\\n    <ion-infinite-scroll-content\\n      loadingSpinner=\\\"bubbles\\\"\\n      loadingText=\\\"{{ 'M_LOADING_MORE_DATA' | translate }}\\\">\\n    </ion-infinite-scroll-content>\\n  </ion-infinite-scroll>\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}