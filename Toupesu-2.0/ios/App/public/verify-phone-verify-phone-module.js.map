{"version":3,"sources":["./src/app/auth/verify-phone/verify-phone.page.ts","./src/app/auth/verify-phone/verify-phone.page.scss","./src/app/auth/verify-phone/verify-phone.page.html","./src/app/auth/verify-phone/verify-phone.module.ts"],"names":[],"mappings":"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","file":"verify-phone-verify-phone-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavController } from '@ionic/angular';\r\nimport { FormUtilsService } from 'src/app/shared/service/form-utils.service';\r\nimport { UserService } from 'src/app/dashboard/user/service/user.service';\r\nimport { LocalStorageService } from 'src/app/shared/service/local-storage.service';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { UiService } from 'src/app/shared/service/ui.service';\r\nimport { AuthErrorService } from '../service/auth-error.service';\r\nimport { EventService } from 'src/app/shared/service/events.service';\r\n// plugin to read sms cordova-plugin-sms-receive\r\n// declare var SMSReceive: any;\r\n\r\n@Component({\r\n  selector: 'app-verify-phone',\r\n  templateUrl: './verify-phone.page.html',\r\n  styleUrls: ['./verify-phone.page.scss'],\r\n})\r\nexport class VerifyPhonePage implements OnInit {\r\n\r\n  phoneValidationForm: FormGroup;\r\n  loading: boolean;\r\n  loadingForm: boolean;\r\n  credentialError: boolean;\r\n  registerData: any;\r\n  validationMessages: any;\r\n  current: string;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private authservice: AuthService,\r\n    private form: FormUtilsService,\r\n    private translate: TranslateService,\r\n    private authError: AuthErrorService,\r\n    private event: EventService,\r\n    private error: ErrorService,\r\n    private router: Router,\r\n    private navController: NavController,\r\n    private localStorage: LocalStorageService,\r\n    private ui: UiService\r\n  ) {\r\n    this.loading = false;\r\n    this.credentialError = false;\r\n    this.current = '';\r\n    this.registerData = this.userService.getRegistrationData();\r\n\r\n    // start watching the SMS\r\n    // this.getSMS();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getCode();\r\n    this.initUserLogin();\r\n    this.initFormMessage();\r\n  }\r\n\r\n  /*  // stop watching SMS\r\n   stopWatchingSMS() {\r\n      SMSReceive.stopWatch();\r\n   }\r\n\r\n   ionicViewWillLeave() {\r\n    this.stopWatchingSMS();\r\n   }\r\n\r\n   // Retrieve the sms\r\n  getSMS() {\r\n      SMSReceive.startWatch(\r\n        () => {\r\n          document.addEventListener('onSMSArrive', (e: any) => {\r\n            var IncomingSMS = e.data;\r\n            this.processSMS(IncomingSMS);\r\n          });\r\n        },\r\n        () => { this.phoneValidationForm.get('digit_code').setValue(''); }\r\n      );\r\n   } \r\n\r\n   processSMS(data) {\r\n    const message : string= data.body;\r\n    if (message && message.indexOf('Toupesu') != -1) {\r\n      const OTP  = /[0-9]{5}/.exec(message);\r\n      if (OTP) {\r\n        this.phoneValidationForm.get('digit_code').setValue(parseInt(OTP.toString(), 10));\r\n      } else {\r\n        this.phoneValidationForm.get('digit_code').setValue('');\r\n      }\r\n      this.stopWatchingSMS();\r\n    }\r\n  } */\r\n\r\n\r\n  // Getters\r\n  get code() {\r\n    return this.phoneValidationForm.get('digit_code');\r\n  }\r\n\r\n  // Init the form message\r\n  initFormMessage() {\r\n    this.translate.get(['CODE_VALIDATION_MSG', 'DIGIT_MSG_MAX', 'DIGIT_MSG_MIN']).subscribe(value => {\r\n      this.validationMessages = {\r\n        coderef: [\r\n          { type: 'required', message: value.CODE_VALIDATION_MSG },\r\n          { type: 'maxlength', message: value.DIGIT_MSG_MAX },\r\n          { type: 'minlength', message: value.DIGIT_MSG_MIN }\r\n        ]\r\n      };\r\n    });\r\n  }\r\n\r\n  // Init login form\r\n  initUserLogin() {\r\n    const registerData = this.userService.getRegistrationData();\r\n    this.phoneValidationForm = this.fb.group({\r\n      country_id: [registerData.country_id],\r\n      prefix_country_with_plus: [registerData && registerData.prefix_country_with_plus ? registerData.prefix_country_with_plus : ''],\r\n      avez_vous_un_compte_web: [''],\r\n      email: [''],\r\n      password: [''],\r\n      country_key: [registerData.country_key],\r\n      digit_code: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('^[\\\\d]{5}$'),\r\n        Validators.minLength(5),\r\n        Validators.maxLength(5)\r\n      ])),\r\n      phone_prefix: [registerData.phone_prefix],\r\n      phoneid: [this.registerData ? this.registerData.phoneid : '', Validators.compose([\r\n        Validators.required,\r\n        Validators.maxLength(5)\r\n      ])],\r\n      phone_number: new FormControl(registerData.phone_number,\r\n        Validators.compose([Validators.required, Validators.pattern('^[0-9]{6,13}$')]))\r\n    });\r\n  }\r\n\r\n  // Get the code to validate the phone number\r\n  getCode() {\r\n    this.loading = true;\r\n    const registerData = this.userService.getRegistrationData();\r\n    this.authservice.sendUserCode(registerData).subscribe((data: any) => {\r\n      this.loading = false;\r\n      if (data && data.message === 'success') {\r\n        this.current = this.phoneValidationForm.value.digit_code;\r\n\r\n        this.translate.get('RESEND_CODE_MSG').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n        // Write SMS reader and send \r\n        if (data && data.phone_number_match_email) {\r\n          this.phoneValidationForm.get('avez_vous_un_compte_web').setValue(2);\r\n        }\r\n      }\r\n    }, error => {\r\n      this.loading = false;\r\n      if (error && error.error && error.error.message === 'error') {\r\n        this.authError.manageAuthError(error);\r\n        if (error.error.phone_is_invalid) {\r\n          this.router.navigate(['/auth/register-phone']);\r\n        }\r\n      } else {\r\n        this.error.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Go to the next page\r\n  gotoNext() {\r\n    if (this.phoneValidationForm.value.avez_vous_un_compte_web === 2) {\r\n      this.userService.setRegistrationData(this.phoneValidationForm.value);\r\n      this.router.navigate(['/auth/verify-email']);\r\n    } else {\r\n      this.onLogin();\r\n    }\r\n  }\r\n\r\n    // Format phone number\r\n    formatPhoneNumber(phoneNumberString: any, prefix: string) {\r\n      return this.form.formatPhoneNumber(phoneNumberString,prefix);\r\n    }\r\n\r\n  // Save the user device Id\r\n  saveDevice(params: any) {\r\n    this.userService.saveDevice(params);\r\n  }\r\n\r\n  // Log in the user\r\n  auth(phoneValidationForm: any) {\r\n    this.loadingForm = true;\r\n    this.authservice.authentication(phoneValidationForm).subscribe(\r\n      (reponse: any) => {\r\n        this.loadingForm = false;\r\n        if (reponse && reponse.message === 'success') {\r\n          this.userService.setUserToken(reponse.token);\r\n          this.userService.setUserRole(reponse.role);\r\n          this.userService.setUserData(reponse.user);\r\n          this.userService.setUserBadge(reponse.badge_name);\r\n          // Get the current user lang\r\n          this.userService.setCurrentUserSessionLanguage(reponse.user.langue_user ? reponse.user.langue_user : '');\r\n\r\n           // update the user lang\r\n           const lang = reponse.user.langue_user;\r\n           if (lang) {\r\n             this.translate.use(lang.toLocaleLowerCase());\r\n           }\r\n\r\n          this.event.publish('new-token', reponse.token);\r\n          const deviceId = this.userService.getUserDevice();\r\n          if (deviceId) {\r\n            this.saveDevice({ device_phone: deviceId });\r\n          }\r\n          this.navController.setDirection('root');\r\n          if (reponse && reponse.user && (!reponse.user.firstname || !reponse.user.lastname)) {\r\n            this.localStorage.setItem('fisrt-login', 'yes');\r\n            this.router.navigateByUrl('/dashboard/user/profil');\r\n          } else {\r\n            this.localStorage.setItem('fisrt-login', 'yes');\r\n            this.router.navigateByUrl('/dashboard/user/security');\r\n          }\r\n        }\r\n      }, error => {\r\n        this.loadingForm = false;\r\n        this.error.manageError(error);\r\n      });\r\n  }\r\n\r\n  // Login the user\r\n  onLogin() {\r\n    this.loadingForm = true;\r\n    this.authservice.createAccountOrSynchronise(this.phoneValidationForm.value).subscribe(\r\n      (reponse: any) => {\r\n        if (reponse && reponse.message === 'success') {\r\n          this.authservice.removeUserSession();\r\n          this.loadingForm = false;\r\n          const credentials = {\r\n            email_or_phone: this.phoneValidationForm.value.phone_number,\r\n            phone_prefix: this.phoneValidationForm.value.phoneid,\r\n            password: this.phoneValidationForm.value.digit_code\r\n          };\r\n          this.userService.setUserSecret(credentials);\r\n          this.auth(credentials);\r\n        } else {\r\n          this.loadingForm = false;\r\n        }\r\n      }, error => {\r\n        this.loadingForm = false;\r\n        if (error && error.error && error.error.message === 'error') {\r\n          this.authError.manageAuthError(error);\r\n        } else {\r\n          this.error.manageError(error);\r\n        }\r\n      });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ2ZXJpZnktcGhvbmUucGFnZS5zY3NzIn0= */\";","export default \"<ion-header>\\r\\n  <ion-toolbar class=\\\"with-logo\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/auth/register-phone\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n        <ion-img class=\\\"logo\\\" [src]=\\\"'assets/logo-toupesu.svg'\\\"></ion-img>\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding ion-text-center verify-phone\\\">\\r\\n  <p class=\\\"ion-text-center\\\"  *ngIf=\\\"loading\\\">\\r\\n    <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n  </p>\\r\\n  <form [formGroup]=\\\"phoneValidationForm\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"12\\\">\\r\\n          <p>{{'REGISTER_MTEXT2' | translate}} <span class=\\\"usertel\\\">\\r\\n            +{{registerData.phoneid}} {{formatPhoneNumber(registerData.phone_number,registerData.phoneid)}}</span>\\r\\n          </p>        \\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"6\\\" offset=\\\"3\\\">\\r\\n          <ion-item>\\r\\n            <ion-input type=\\\"tel\\\" formControlName=\\\"digit_code\\\" (keyup.enter)=\\\"gotoNext()\\\"></ion-input>\\r\\n          </ion-item> \\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.coderef\\\">\\r\\n              <div class=\\\"error-message\\\" *ngIf=\\\"code.hasError(validation.type) && (code.dirty || code.touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>  \\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"12\\\">\\r\\n          <p>{{'REGISTER_MMSG2' | translate}} <a (click)=\\\"getCode()\\\"><span class=\\\"resend\\\">{{'REGISTER_MMSG3' | translate}}</span></a></p>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-row *ngIf=\\\"phoneValidationForm.value.digit_code &&phoneValidationForm.valid\\\">\\r\\n        <ion-col size=\\\"12\\\" color=\\\"secondary\\\">\\r\\n          <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n          <span>{{'PIN_SAVE_MSG' | translate}} \\r\\n          </span>        \\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </form>\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"ion-padding ion-text-center\\\">\\r\\n    <ion-button expand=\\\"full\\\"  [disabled]=\\\"phoneValidationForm.invalid || loadingForm\\\"\\r\\n    color=\\\"warning\\\" \\r\\n    class=\\\"ion-text-uppercase\\\"\\r\\n    shape=\\\"round\\\" (click)=\\\"gotoNext()\\\">\\r\\n    {{'NEXT_TEXT' | translate}}\\r\\n</ion-button>\\r\\n<p class=\\\"ion-text-center\\\" *ngIf=\\\"loadingForm\\\">\\r\\n  <ion-spinner  name=\\\"circles\\\"></ion-spinner> \\r\\n</p>\\r\\n</ion-footer>\\r\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { VerifyPhonePage } from './verify-phone.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VerifyPhonePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    SharedModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [VerifyPhonePage]\n})\nexport class VerifyPhonePageModule {}\n"],"sourceRoot":"webpack:///"}