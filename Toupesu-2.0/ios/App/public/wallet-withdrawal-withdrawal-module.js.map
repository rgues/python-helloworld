{"version":3,"sources":["./src/app/dashboard/my-tontines/tontine-detail/wallet/add-bank-profil/add-bank-profil.component.html","./src/app/dashboard/my-tontines/tontine-detail/wallet/update-bank-profil/update-bank-profil.component.scss","./src/app/dashboard/my-tontines/tontine-detail/wallet/withdrawal/withdrawal.module.ts","./src/app/dashboard/my-tontines/tontine-detail/wallet/withdrawal/withdrawal.page.html","./src/app/dashboard/my-tontines/tontine-detail/wallet/update-bank-profil/update-bank-profil.component.html","./src/app/dashboard/my-tontines/tontine-detail/wallet/add-bank-profil/add-bank-profil.component.scss","./src/app/dashboard/my-tontines/tontine-detail/wallet/withdrawal/withdrawal.page.ts","./src/app/dashboard/my-tontines/tontine-detail/wallet/add-bank-profil/add-bank-profil.component.ts","./src/app/dashboard/my-tontines/tontine-detail/wallet/update-bank-profil/update-bank-profil.component.ts","./src/app/dashboard/my-tontines/tontine-detail/wallet/withdrawal/withdrawal.page.scss"],"names":[],"mappings":"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","file":"wallet-withdrawal-withdrawal-module.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title class=\\\"ion-text-center\\\">{{ 'ADD_BANK_PROFIL_TEXT' | translate }}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <form [formGroup]=\\\"addBankForm\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\"> {{ 'WITHDRAWAL_TEXT7' | translate }}</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"bank_name\\\" required></ion-input>\\r\\n          </ion-item> \\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"bank.invalid && (bank.dirty || bank.touched)\\\">\\r\\n              <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n              {{ 'BANK_NAME_REQUIRED' | translate }}\\r\\n            </div>\\r\\n          </div>       \\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item >\\r\\n            <ion-label position=\\\"floating\\\">{{ 'BRANCH_NAME' | translate }}</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"branch_name\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"branchName.invalid && (branchName.dirty || branchName.touched)\\\">\\r\\n              <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n              {{ 'BRANCH_NAME_REQUIRED' | translate }}\\r\\n            </div>\\r\\n          </div>  \\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item >\\r\\n            <ion-label position=\\\"floating\\\">{{ 'BRANCH_CODE' | translate }}</ion-label>\\r\\n            <ion-input type=\\\"number\\\" formControlName=\\\"branch_code\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"branchCode.invalid && (branchCode.dirty || branchCode.touched)\\\">\\r\\n              <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n              {{ 'BRANCH_CODE_REQUIRED' | translate }}\\r\\n            </div>\\r\\n          </div>  \\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\"> {{ 'WALLET_ACCOUNT_HOLDER_NAME' | translate }}</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"nom_proprietaire\\\" required></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"proprietaryName.invalid && (proprietaryName.dirty || proprietaryName.touched)\\\">\\r\\n              <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n              {{ 'ACCOUNT_HOLDER_REQUIRED' | translate }}\\r\\n            </div>\\r\\n          </div>        \\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">{{'WALLET_ACCOUNT_NAME' | translate}}</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"account_name\\\" required></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"accountName.invalid && (accountName.dirty || accountName.touched)\\\">\\r\\n              <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n              {{ 'ACCOUNT_NAME_REQUIRED' | translate }}\\r\\n            </div>\\r\\n          </div>        \\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">{{'WALLET_ACCOUNT_NUMBER' | translate}}</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"account_number\\\" required></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"accountNber.invalid && (accountNber.dirty || accountNber.touched)\\\">\\r\\n              <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n              {{ 'ACCOUNT_NUMBER_REQUIRED' | translate }}\\r\\n            </div>\\r\\n          </div>        \\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\"> {{'ADDRESS_TEXT' | translate}}</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"address\\\" required></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"address.invalid && (address.dirty || address.touched)\\\">\\r\\n              <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n              {{ 'ADDRESS_REQUIRED' | translate }}\\r\\n            </div>\\r\\n          </div>        \\r\\n        </ion-col>\\r\\n      </ion-row>      \\r\\n    </ion-grid>\\r\\n  </form>\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"ion-padding ion-text-center\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row>   \\r\\n        <ion-col>\\r\\n            <ion-button expand=\\\"full\\\" \\r\\n                  color=\\\"warning\\\" [disabled]=\\\"addBankForm.invalid || loading\\\"\\r\\n                  class=\\\"ion-text-uppercase\\\"\\r\\n                  shape=\\\"round\\\" (click)=\\\"addAccount()\\\">\\r\\n                  {{'SAVE_TEXT' | translate }}\\r\\n            </ion-button>\\r\\n        </ion-col>   \\r\\n        <ion-col>\\r\\n            <ion-button expand=\\\"full\\\" \\r\\n                  fill=\\\"outline\\\"\\r\\n                  color=\\\"warning\\\" \\r\\n                  class=\\\"ion-text-uppercase\\\"\\r\\n                  shape=\\\"round\\\" (click)=\\\"closeAddBank('cancel')\\\">\\r\\n              {{'CANCEL_TEXT' | translate }}\\r\\n            </ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <p class=\\\"ion-text-center\\\" *ngIf=\\\"loading\\\"> \\r\\n        <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n      </p>\\r\\n    </ion-grid>\\r\\n  </ion-footer>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1cGRhdGUtYmFuay1wcm9maWwuY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { WithdrawalPage } from './withdrawal.page';\r\nimport { AddBankProfilComponent } from '../add-bank-profil/add-bank-profil.component';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { UpdateBankProfilComponent } from '../update-bank-profil/update-bank-profil.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: WithdrawalPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [\r\n    WithdrawalPage,\r\n    AddBankProfilComponent,\r\n    UpdateBankProfilComponent\r\n  ],\r\n  entryComponents: [\r\n    AddBankProfilComponent,\r\n    UpdateBankProfilComponent\r\n  ]\r\n})\r\nexport class WithdrawalPageModule {}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar class=\\\"with-logo2\\\">\\r\\n      <ion-buttons slot=\\\"start\\\">\\r\\n        <ion-back-button color=\\\"primary\\\" [defaultHref]=\\\"'/dashboard/my-tontines/' + currentTontine.tontine.tontine_id + '/wallet'\\\" slot=\\\"text-only\\\"></ion-back-button>\\r\\n      </ion-buttons>\\r\\n    <ion-title class=\\\"ion-text-center title-md-right\\\">\\r\\n      <ion-img class=\\\"logo\\\" [src]=\\\"'assets/logo-toupesu.svg'\\\"></ion-img>\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar class=\\\"ion-text-center subtitle\\\">\\r\\n    <ion-title>{{ 'WALLET_TEXT' | translate }}: <ion-text color=\\\"primary\\\" class=\\\"ion-text-capitalize\\\">{{ 'WITHDRAWAL_TEXT0' | translate }}</ion-text></ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content id=\\\"withdrawal\\\">\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refreSher($event)\\\">\\r\\n    <ion-refresher-content\\r\\n      pullingIcon=\\\"arrow-dropdown\\\"\\r\\n      refreshingSpinner=\\\"circles\\\"\\r\\n      refreshingText=\\\"{{ 'M_REFRESHING_TEXT' | translate }}\\\">\\r\\n    </ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-col class=\\\"ion-no-padding\\\">\\r\\n          <ion-card class=\\\"block-1\\\">\\r\\n            <ion-card-content class=\\\"ion-text-center\\\">\\r\\n              <ion-row>\\r\\n                <ion-col size=\\\"auto\\\" class=\\\"align-self-center\\\">\\r\\n                  <span class=\\\"desc\\\">{{ 'WALLET_TEXT2' | translate }} </span>\\r\\n                </ion-col>\\r\\n                <ion-col class=\\\"col-button\\\">\\r\\n                  <div class=\\\"menu-amount\\\">\\r\\n                    <span *ngFor=\\\"let balance of currentBalance; let i = index\\\">  {{balance.total_balance ? balance.total_balance : 0}}\\r\\n                      {{balance.currency_name ? balance.currency_name : ''}} <span *ngIf=\\\"currentBalance[i+1]\\\"> | </span></span>\\r\\n                  </div>\\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n            </ion-card-content>\\r\\n          </ion-card>\\r\\n        </ion-col>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <form [formGroup]=\\\"withdrawal\\\">\\r\\n          <ion-card>\\r\\n            <ion-card-header>\\r\\n              <ion-card-subtitle>\\r\\n                {{ 'M_WALLET_SELECT_TEXT' | translate }}\\r\\n                <ion-item>\\r\\n                  <ion-label>{{ 'M_PAY_BY' | translate }}</ion-label>\\r\\n                  <ion-select (ionChange)=\\\"updatePayment(withdrawal.value.method_payment_id)\\\"\\r\\n                    formControlName=\\\"method_payment_id\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let operator of paymentMethods; let m=index\\\" [selected]=\\\"m===0\\\" [value]=\\\"operator.id\\\">{{ operator.label }}\\r\\n                    </ion-select-option>\\r\\n                  </ion-select>\\r\\n                </ion-item>\\r\\n              </ion-card-subtitle>\\r\\n              <ion-card-content>\\r\\n                <ion-row>\\r\\n                  <ion-col size=\\\"12\\\">\\r\\n                    <ion-item>\\r\\n                      <ion-label>{{ 'SOURCE_FOUND_TEXT' | translate }}</ion-label>\\r\\n                      <ion-select formControlName=\\\"type_caisse_tontine\\\">\\r\\n                        <ion-select-option *ngFor=\\\"let checkout of typesCaisses\\\" [value]=\\\"checkout.id\\\">{{ checkout.name }}</ion-select-option>          \\r\\n                      </ion-select>\\r\\n                    </ion-item>     \\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n                <div *ngIf=\\\"withdrawal.value.method_payment_id === 0; then bankTransfer else mobilTransfer\\\"></div>\\r\\n                <ng-template #bankTransfer>\\r\\n                  <ion-row>\\r\\n                    <ion-col>\\r\\n                      <ion-text color=\\\"warning\\\">\\r\\n                        {{ 'WITHDRAWAL_TEXT10' | translate }}\\r\\n                      </ion-text>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                  <ion-row>\\r\\n                    <ion-col>\\r\\n                      <ion-item *ngIf=\\\"bankList && bankList.length > 0\\\">\\r\\n                        <ion-label>{{ 'TONTINE_DETAIL_TEXT2' | translate }}</ion-label>\\r\\n                        <ion-select (ionChange)=\\\"checkAmount(withdrawal.value.amount)\\\" formControlName=\\\"device_name\\\">\\r\\n                          <ion-select-option *ngFor=\\\"let currency of currentBalance\\\" [value]=\\\"currency.device_name\\\">\\r\\n                            {{ currency.device_name }}</ion-select-option>\\r\\n                        </ion-select>\\r\\n                      </ion-item>\\r\\n                      <div class=\\\"validation-errors\\\">\\r\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"devise.invalid && (devise.dirty || devise.touched)\\\">\\r\\n                          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n                          {{ 'CURRENCY_REQUIRED' | translate }}\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                  <ion-row>\\r\\n                    <ion-col *ngIf=\\\"bankList && bankList.length > 0\\\">\\r\\n                      <ion-item>\\r\\n                        <ion-label position=\\\"floating\\\">{{'WALLET_AMOUNT_WITHDRAWAL' | translate}} \\r\\n                          <span *ngIf=\\\"withdrawal.value.device_name\\\">({{withdrawal.value.device_name}})</span></ion-label>\\r\\n                        <ion-input (ionChange)=\\\"checkAmount(withdrawal.value.amount)\\\" type=\\\"number\\\"\\r\\n                          formControlName=\\\"amount\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n                      <div class=\\\"validation-errors\\\">\\r\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"amount.invalid && (amount.dirty || amount.touched)\\\">\\r\\n                          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n                          {{'AMOUNT_REQUIRED' | translate }}\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"error-message\\\" *ngIf=\\\"!amounValid\\\">\\r\\n                        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n                        {{amountErrorMessage}}\\r\\n                      </div>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                  <ion-row>\\r\\n                    <ion-col>\\r\\n                      <ion-item *ngIf=\\\"bankList && bankList.length > 0\\\">\\r\\n                        <ion-label>{{ 'WITHDRAWAL_TEXT7' | translate }}</ion-label>\\r\\n                        <ion-select (ionChange)=\\\"getBankdetail(withdrawal.value.tontine_bank_profile_id)\\\"\\r\\n                          formControlName=\\\"tontine_bank_profile_id\\\">\\r\\n                          <ion-select-option *ngFor=\\\"let bank of bankList\\\" [value]=\\\"bank.id\\\">{{ bank.bank_name }}\\r\\n                          </ion-select-option>\\r\\n                        </ion-select>\\r\\n                      </ion-item>\\r\\n                      <div class=\\\"validation-errors\\\"  *ngIf=\\\"bankList && bankList.length > 0\\\">\\r\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"bank.invalid && (bank.dirty || bank.touched)\\\">\\r\\n                          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n                          {{ 'BANK_NAME_REQUIRED' | translate }}\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <ion-text class=\\\"ion-float-right\\\"><a\\r\\n                          (click)=\\\"openAddBank($event)\\\">{{ 'WITHDRAWAL_TEXT9' | translate }}</a></ion-text>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                  <ion-row>\\r\\n                    <ion-col>\\r\\n                      <ion-item *ngIf=\\\"bankList && bankList.length > 0 && withdrawal.value.nom_proprietaire\\\">\\r\\n                        <ion-label position=\\\"floating\\\">{{ 'WALLET_ACCOUNT_HOLDER_NAME' | translate }}</ion-label>\\r\\n                        <ion-input type=\\\"text\\\" formControlName=\\\"nom_proprietaire\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n                      <div class=\\\"validation-errors\\\">\\r\\n                        <div class=\\\"error-message\\\"\\r\\n                          *ngIf=\\\"proprietaryName.invalid && (proprietaryName.dirty || proprietaryName.touched)\\\">\\r\\n                          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n                          {{'ACCOUNT_HOLDER_REQUIRED' | translate }}\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                  <ion-row>\\r\\n                    <ion-col>\\r\\n                      <ion-item *ngIf=\\\"bankList && bankList.length > 0 && withdrawal.value.branch_name\\\">\\r\\n                        <ion-label position=\\\"floating\\\">{{ 'BRANCH_NAME' | translate }}</ion-label>\\r\\n                        <ion-input type=\\\"text\\\" formControlName=\\\"branch_name\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                  <ion-row>\\r\\n                    <ion-col>\\r\\n                      <ion-item *ngIf=\\\"bankList && bankList.length > 0 && withdrawal.value.branch_code\\\">\\r\\n                        <ion-label position=\\\"floating\\\">{{ 'BRANCH_CODE' | translate }}</ion-label>\\r\\n                        <ion-input type=\\\"text\\\" formControlName=\\\"branch_code\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                  <ion-row>\\r\\n                    <ion-col>\\r\\n                      <ion-item *ngIf=\\\"bankList && bankList.length > 0 && withdrawal.value.account_name\\\">\\r\\n                        <ion-label position=\\\"floating\\\">{{'WALLET_ACCOUNT_NAME' | translate}}</ion-label>\\r\\n                        <ion-input type=\\\"text\\\" formControlName=\\\"account_name\\\" required></ion-input>\\r\\n                      </ion-item>\\r\\n                      <div class=\\\"validation-errors\\\">\\r\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"accountName.invalid && (accountName.dirty || accountName.touched)\\\">\\r\\n                          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n                          {{ 'ACCOUNT_NAME_REQUIRED' | translate }}\\r\\n                        </div>\\r\\n                      </div>        \\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                  <ion-row>\\r\\n                    <ion-col>\\r\\n                      <ion-item *ngIf=\\\"bankList && bankList.length > 0 && withdrawal.value.account_number\\\">\\r\\n                        <ion-label position=\\\"floating\\\">{{ 'WALLET_ACCOUNT_NUMBER' | translate }}</ion-label>\\r\\n                        <ion-input type=\\\"text\\\" formControlName=\\\"account_number\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n                      <div class=\\\"validation-errors\\\">\\r\\n                        <div class=\\\"error-message\\\"\\r\\n                          *ngIf=\\\"accountNber.invalid && (accountNber.dirty || accountNber.touched)\\\">\\r\\n                          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n                          {{'ACCOUNT_NUMBER_REQUIRED' | translate }}\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                  <ion-row>\\r\\n                    <ion-col>\\r\\n                      <ion-item *ngIf=\\\"bankList && bankList.length > 0 && withdrawal.value.address\\\">\\r\\n                        <ion-label position=\\\"floating\\\">{{ 'ADDRESS_TEXT' | translate }}</ion-label>\\r\\n                        <ion-input type=\\\"text\\\" formControlName=\\\"address\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n                      <div class=\\\"validation-errors\\\">\\r\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"address.invalid && (address.dirty || address.touched)\\\">\\r\\n                          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n                          {{'ACCOUNT_NUMBER_REQUIRED' | translate }}\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                  <ion-row *ngIf=\\\"bankList && bankList.length > 0\\\">   \\r\\n                    <ion-col size=\\\"6\\\">\\r\\n                        <ion-button \\r\\n                              color=\\\"warning\\\"  size=\\\"small\\\" [disabled]=\\\"!withdrawal.value\\\"\\r\\n                              class=\\\"ion-text-lowercase\\\"\\r\\n                              shape=\\\"round\\\" (click)=\\\"openUpdateBank(withdrawal.value)\\\">\\r\\n                              {{'M_UPDATE' | translate }}\\r\\n                        </ion-button>\\r\\n                    </ion-col>   \\r\\n                    <ion-col size=\\\"6\\\">\\r\\n                        <ion-button   [disabled]=\\\"!withdrawal.value.tontine_bank_profile_id\\\"\\r\\n                              class=\\\"ion-text-lowercase\\\"\\r\\n                              fill=\\\"outline\\\"  size=\\\"small\\\"\\r\\n                              color=\\\"warning\\\" \\r\\n                              shape=\\\"round\\\" (click)=\\\"confirmDeleteAccount(withdrawal.value.tontine_bank_profile_id)\\\">\\r\\n                          {{'TEXT_DELETE' | translate }}\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                </ng-template>\\r\\n                <ng-template #mobilTransfer>\\r\\n                  <ion-row>\\r\\n                    <ion-col>\\r\\n                      <ion-item>\\r\\n                        <ion-label>{{ 'TONTINE_DETAIL_TEXT1' | translate }}</ion-label>\\r\\n                        <ion-select (ionChange)=\\\"updateCountryPrefix(withdrawal.value.country_id)\\\"\\r\\n                          formControlName=\\\"country_id\\\">\\r\\n                          <ion-select-option *ngFor=\\\"let state of states\\\" [value]=\\\"state.country_id\\\">\\r\\n                            {{ state.country_label }}</ion-select-option>\\r\\n                        </ion-select>\\r\\n                      </ion-item>\\r\\n                      <div class=\\\"validation-errors\\\">\\r\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"countryId.invalid && (countryId.dirty || countryId.touched)\\\">\\r\\n                          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n                          <span [innerHTML]=\\\"'REQUIRED_FIELD_TEXT' | translate\\\"></span>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                  <ion-row>\\r\\n                    <ion-col>\\r\\n                      <ion-row class=\\\"ion-justify-content-end\\\">\\r\\n                        <ion-col size=\\\"4\\\">\\r\\n                          <ion-img\\r\\n                            [src]=\\\"paymentMethods&&paymentMethods[currentIndex] ? paymentMethods[currentIndex].logo : ' '\\\"\\r\\n                            class=\\\"logooperator\\\"></ion-img>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                  <ion-row   *ngIf=\\\"!isPayPal()\\\">\\r\\n                    <ion-col size=\\\"4\\\">\\r\\n                      <ion-item>\\r\\n                        <ion-label position=\\\"floating\\\">+</ion-label>\\r\\n                        <ion-input type=\\\"text\\\" placeholder=\\\"{{withdrawal.value.phoneid}}\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n                    </ion-col>\\r\\n                    <ion-col size=\\\"8\\\">\\r\\n                      <ion-item>\\r\\n                        <ion-label position=\\\"floating\\\">{{ 'PHONE_TEXT' | translate }}</ion-label>\\r\\n                        <ion-input type=\\\"tel\\\" (ionChange)=\\\"removeSpace1();checkPhone(withdrawal.value.phoneNumber)\\\" formControlName=\\\"phoneNumber\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n                    </ion-col>\\r\\n                    <ion-col size=\\\"12\\\"  *ngIf=\\\"phone.invalid && (phone.dirty || phone.touched) || errorPhone\\\">\\r\\n                      <div class=\\\"validation-errors\\\" >\\r\\n                          <div class=\\\"error-message\\\">\\r\\n                            <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                           <span  [innerHTML]=\\\"'REGISTER_PHONE_INVALID' | translate\\\"></span>\\r\\n                          </div>\\r\\n                      </div>    \\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                  <ion-row *ngIf=\\\"isOperator()\\\">\\r\\n                    <ion-col size=\\\"12\\\">\\r\\n                      <ion-item>\\r\\n                        <ion-label position=\\\"floating\\\">{{ 'BENEFICIARY_ACCOUNT_NAME_TEXT' | translate }}</ion-label>\\r\\n                        <ion-input type=\\\"text\\\"  formControlName=\\\"nom_beneficiaire\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n                      <div class=\\\"validation-errors\\\">\\r\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"beneficiary.invalid && (beneficiary.dirty || beneficiary.touched)\\\">\\r\\n                          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n                          <span [innerHTML]=\\\"'BENEFICARY_NAME_ERROR_TEXT' | translate: {maxLength: 100}\\\"></span>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                  <ion-row *ngIf=\\\"isPayPal()\\\">\\r\\n                    <ion-col size=\\\"12\\\">\\r\\n                      <ion-item>\\r\\n                        <ion-label position=\\\"floating\\\">{{ 'EMAIL_TEXT' | translate }}</ion-label>\\r\\n                        <ion-input type=\\\"email\\\" (ionChange)=\\\"checkEmail(withdrawal.value.email)\\\" formControlName=\\\"email\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n                      <div class=\\\"validation-errors\\\" *ngIf=\\\"email.invalid && (email.dirty || email.touched) || errorEmail\\\">\\r\\n                        <div class=\\\"error-message\\\" >\\r\\n                          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n                          <span [innerHTML]=\\\"'TONTINE_NEW_TEXT23' | translate\\\"></span>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                  <ion-row>\\r\\n                    <ion-col>\\r\\n                      <ion-item>\\r\\n                        <ion-label position=\\\"floating\\\">{{ 'AMOUNT_TEXT' | translate }}({{withdrawal.value.device_name}})</ion-label>\\r\\n                        <ion-input (ionChange)=\\\"checkAmount(withdrawal.value.amount)\\\" type=\\\"number\\\"\\r\\n                          formControlName=\\\"amount\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n                      <div class=\\\"validation-errors\\\">\\r\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"amount.invalid && (amount.dirty || amount.touched)\\\">\\r\\n                          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n                          <span [innerHTML]=\\\"'AMOUNT_REQUIRED' | translate\\\"></span>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"error-message\\\" style=\\\"color: red;\\\" *ngIf=\\\"!amounValid\\\">\\r\\n                        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n                        {{amountErrorMessage}}\\r\\n                      </div>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                </ng-template>\\r\\n\\r\\n              </ion-card-content>\\r\\n            </ion-card-header>\\r\\n          </ion-card>\\r\\n        </form>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"ion-padding ion-text-center\\\">\\r\\n  <ion-button expand=\\\"full\\\"\\r\\n    [disabled]=\\\"canPay()\\\"\\r\\n    color=\\\"warning\\\" class=\\\"ion-text-uppercase\\\" (click)=\\\"checkNumberAndPin()\\\" shape=\\\"round\\\">\\r\\n    {{ 'WITHDRAWAL_TEXT8' | translate }}\\r\\n  </ion-button>\\r\\n  <ion-spinner *ngIf=\\\"loading\\\" name=\\\"circles\\\"></ion-spinner>\\r\\n</ion-footer>\";","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title class=\\\"ion-text-center\\\">{{ 'ADD_BANK_PROFIL_TEXT' | translate }}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <form [formGroup]=\\\"addBankForm\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\"> {{ 'WITHDRAWAL_TEXT7' | translate }}</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"bank_name\\\" required></ion-input>\\r\\n          </ion-item> \\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"bank.invalid && (bank.dirty || bank.touched)\\\">\\r\\n              <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n              {{ 'BANK_NAME_REQUIRED' | translate }}\\r\\n            </div>\\r\\n          </div>       \\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item >\\r\\n            <ion-label position=\\\"floating\\\">{{ 'BRANCH_NAME' | translate }}</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"branch_name\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"branchName.invalid && (branchName.dirty || branchName.touched)\\\">\\r\\n              <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n              {{ 'BRANCH_NAME_REQUIRED' | translate }}\\r\\n            </div>\\r\\n          </div>  \\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item >\\r\\n            <ion-label position=\\\"floating\\\">{{ 'BRANCH_CODE' | translate }}</ion-label>\\r\\n            <ion-input type=\\\"number\\\" formControlName=\\\"branch_code\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"branchCode.invalid && (branchCode.dirty || branchCode.touched)\\\">\\r\\n              <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n              {{ 'BRANCH_CODE_REQUIRED' | translate }}\\r\\n            </div>\\r\\n          </div>  \\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\"> {{ 'WALLET_ACCOUNT_HOLDER_NAME' | translate }}</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"nom_proprietaire\\\" required></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"proprietaryName.invalid && (proprietaryName.dirty || proprietaryName.touched)\\\">\\r\\n              <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n              {{ 'ACCOUNT_HOLDER_REQUIRED' | translate }}\\r\\n            </div>\\r\\n          </div>        \\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">{{'WALLET_ACCOUNT_NAME' | translate}}</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"account_name\\\" required></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"accountName.invalid && (accountName.dirty || accountName.touched)\\\">\\r\\n              <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n              {{ 'ACCOUNT_NAME_REQUIRED' | translate }}\\r\\n            </div>\\r\\n          </div>        \\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">{{'WALLET_ACCOUNT_NUMBER' | translate}}</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"account_number\\\" required></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"accountNber.invalid && (accountNber.dirty || accountNber.touched)\\\">\\r\\n              <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n              {{ 'ACCOUNT_NUMBER_REQUIRED' | translate }}\\r\\n            </div>\\r\\n          </div>        \\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\"> {{'ADDRESS_TEXT' | translate}}</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"address\\\" required></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"address.invalid && (address.dirty || address.touched)\\\">\\r\\n              <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n              {{ 'ADDRESS_REQUIRED' | translate }}\\r\\n            </div>\\r\\n          </div>        \\r\\n        </ion-col>\\r\\n      </ion-row>      \\r\\n    </ion-grid>\\r\\n  </form>\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"ion-padding ion-text-center\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row>   \\r\\n        <ion-col>\\r\\n            <ion-button expand=\\\"full\\\" \\r\\n                  color=\\\"warning\\\" [disabled]=\\\"addBankForm.invalid || loading\\\"\\r\\n                  class=\\\"ion-text-uppercase\\\"\\r\\n                  shape=\\\"round\\\" (click)=\\\"confirmUpdateAccount()\\\">\\r\\n                  {{'M_UPDATE' | translate }}\\r\\n            </ion-button>\\r\\n        </ion-col>   \\r\\n        <ion-col>\\r\\n            <ion-button expand=\\\"full\\\" \\r\\n                  fill=\\\"outline\\\"\\r\\n                  color=\\\"warning\\\" \\r\\n                  class=\\\"ion-text-uppercase\\\"\\r\\n                  shape=\\\"round\\\" (click)=\\\"closeAddBank('cancel')\\\">\\r\\n              {{'CANCEL_TEXT' | translate }}\\r\\n            </ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <p class=\\\"ion-text-center\\\" *ngIf=\\\"loading\\\"> \\r\\n        <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n      </p>\\r\\n    </ion-grid>\\r\\n  </ion-footer>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZGQtYmFuay1wcm9maWwuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, NgZone, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ModalController, AlertController, NavController } from '@ionic/angular';\r\nimport { AddBankProfilComponent } from '../add-bank-profil/add-bank-profil.component';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { States } from 'src/app/shared/models/countries';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LocationService } from 'src/app/shared/service/location.service';\r\nimport { Router } from '@angular/router';\r\nimport { UpdateBankProfilComponent } from '../update-bank-profil/update-bank-profil.component';\r\nimport { TontineService } from '../../../services/tontine.service';\r\nimport { WalletTontineService } from '../services/wallet-tontine.service';\r\nimport { FormUtilsService } from 'src/app/shared/service/form-utils.service';\r\nimport { Storage } from '@ionic/storage';\r\nimport { PaymentGlobalDataService } from 'src/app/shared/service/payment-global-data.service';\r\nimport { UiService } from 'src/app/shared/service/ui.service';\r\nimport { UserService } from 'src/app/dashboard/user/service/user.service';\r\nimport { WalletTontineErrorService } from '../services/wallet-tontine-error.service';\r\nimport { EventService } from 'src/app/shared/service/events.service';\r\n\r\n@Component({\r\n  selector: 'app-withdrawal',\r\n  templateUrl: './withdrawal.page.html',\r\n  styleUrls: ['./withdrawal.page.scss'],\r\n})\r\nexport class WithdrawalPage implements OnInit {\r\n  currentBalance: any;\r\n  bankList: any[];\r\n  paymentMethods: any[];\r\n  withdrawal: FormGroup;\r\n  loading: boolean;\r\n  currencyList: any;\r\n  amounValid: boolean;\r\n  maxAmount: number;\r\n  amountErrorMessage: string;\r\n  currentIndex: number;\r\n  states: States[] = [];\r\n  errorEmail: boolean;\r\n  currentTontine: any;\r\n  token: string;\r\n  typesCaisses: any[] = [];\r\n  listOfcountries: any;\r\n  defautCountry: any;\r\n  errorPhone: boolean;\r\n\r\n  constructor(\r\n    private walletError: WalletTontineErrorService,\r\n    private storage: Storage,\r\n    private modatCtrl: ModalController,\r\n    private walletTontine: WalletTontineService,\r\n    private paymentData: PaymentGlobalDataService,\r\n    private zone: NgZone,\r\n    private navcontroler: NavController,\r\n    private tontine: TontineService,\r\n    private translate: TranslateService,\r\n    private ui: UiService,\r\n    private event: EventService,\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private error: ErrorService,\r\n    private userService: UserService,\r\n    private formUtil: FormUtilsService,\r\n    private location: LocationService,\r\n    private alertController: AlertController\r\n  ) {\r\n    this.bankList = [];\r\n    this.currentIndex = 0;\r\n    this.maxAmount = 0;\r\n    this.currencyList = [];\r\n    this.listOfcountries = [];\r\n    this.loading = false;\r\n    this.amountErrorMessage = '';\r\n    this.amounValid = true;\r\n    this.paymentMethods = [];\r\n    this.errorEmail = false;\r\n    this.currentTontine = this.tontine.getCurrentTontineData();\r\n    this.token = this.userService.getUserToken();\r\n    this.event.subscribe('new-token', token => {\r\n      this.token = token;\r\n    });\r\n    this.typesCaisses = [];\r\n    this.errorPhone = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n    this.getBankList();\r\n    this.getCurrentBalance();\r\n    this.getCountries(false);\r\n  }\r\n\r\n\r\n  // Form getters\r\n  get phoneId() {\r\n    return this.withdrawal.get('phoneid');\r\n  }\r\n\r\n  get beneficiary() {\r\n    return this.withdrawal.get('nom_beneficiaire');\r\n  }\r\n\r\n\r\n  get countryId() {\r\n    return this.withdrawal.get('country_id');\r\n  }\r\n\r\n  get operatortype() {\r\n    return this.withdrawal.get('method_payment_id');\r\n  }\r\n\r\n  get devise() {\r\n    return this.withdrawal.get('device_name');\r\n  }\r\n\r\n  get amount() {\r\n    return this.withdrawal.get('amount');\r\n  }\r\n\r\n  get bank() {\r\n    return this.withdrawal.get('bank_name');\r\n  }\r\n\r\n  get branchCode() {\r\n    return this.withdrawal.get('branch_code');\r\n  }\r\n\r\n  get branchName() {\r\n    return this.withdrawal.get('branch_name');\r\n  }\r\n\r\n  get proprietaryName() {\r\n    return this.withdrawal.get('nom_proprietaire');\r\n  }\r\n\r\n  get accountNber() {\r\n    return this.withdrawal.get('account_number');\r\n  }\r\n\r\n  get accountName() {\r\n    return this.withdrawal.get('account_name');\r\n  }\r\n\r\n  get address() {\r\n    return this.withdrawal.get('address');\r\n  }\r\n\r\n  get phone() {\r\n    return this.withdrawal.get('phoneNumber');\r\n  }\r\n\r\n  get email() {\r\n    return this.withdrawal.get('email');\r\n  }\r\n\r\n  get checkoutName() {\r\n    return this.withdrawal.get('type_caisse_tontine');\r\n  }\r\n\r\n\r\n\r\n  // Init the form\r\n  initForm() {\r\n    const currentUser = this.userService.getUserData();\r\n    this.withdrawal = this.fb.group({\r\n      token: [this.token],\r\n      tontine_id: [this.currentTontine ? this.currentTontine.tontine.tontine_id : ''],\r\n      method_payment_id: ['', Validators.required],\r\n      device_name: [''],\r\n      nom_beneficiaire: ['', Validators.compose([Validators.maxLength(100)])],\r\n      direct_transfert_to_bank_account: [''],\r\n      tontine_bank_profile_id: [0],\r\n      type_caisse_tontine: ['', Validators.required],\r\n      is_offline_withdraw: [0],\r\n      amount: ['', Validators.compose([Validators.required, Validators.min(1), Validators.pattern('^[0-9]+$')])],\r\n      bank_name: [''],\r\n      account_name: [''],\r\n      nom_proprietaire: [''],\r\n      account_number: [''],\r\n      branch_code: [''],\r\n      branch_name: [''],\r\n      address: [''],\r\n      phone_number: [''],\r\n      email: [currentUser && currentUser.email && this.formUtil.validateEmail(currentUser.email) ? currentUser.email : ''],\r\n      phoneNumber: ['', Validators.compose([Validators.pattern('^[0-9]{6,13}$')])],\r\n      phoneid: [''],\r\n      country_id: ['']\r\n    });\r\n  }\r\n\r\n  // check Email address\r\n  checkEmail(email) {\r\n    this.errorEmail = !this.formUtil.validateEmail(email);\r\n  }\r\n\r\n  // check phone\r\n  checkPhone(phone) {\r\n    this.errorPhone = !this.formUtil.validatePhone(phone);\r\n  }\r\n\r\n  // Remove space\r\n  removeSpace() {\r\n    this.withdrawal.get('amount').setValue(this.paymentData.removeInputSpace(this.withdrawal.value.amount));\r\n  }\r\n\r\n  // Remove space\r\n  removeSpace1() {\r\n    this.withdrawal.get('phoneNumber').setValue(this.paymentData.removeInputSpace(this.withdrawal.value.phoneNumber));\r\n  }\r\n\r\n  // Refresh the list\r\n  refreSher(event) {\r\n    this.getBankList();\r\n    this.getCurrentBalance();\r\n    setTimeout(() => {\r\n      event.target.complete();\r\n    }, 2000);\r\n  }\r\n\r\n\r\n  // Get the list of the bank\r\n  getBankList() {\r\n    const param = {\r\n      tontine_id: this.currentTontine.tontine.tontine_id,\r\n      token: this.token\r\n    }\r\n    if (this.currentTontine.tontine.administrator === 1) {\r\n      this.walletTontine.getAllBankProfile(param).subscribe((reponse: any) => {\r\n        if (reponse && reponse.message === 'success') {\r\n          this.bankList = [];\r\n          reponse.data.forEach(bank => {\r\n            if (bank && bank.active === 1) {\r\n              this.bankList.push(bank);\r\n            }\r\n          });\r\n          if (this.bankList && this.bankList.length > 0) {\r\n            this.getBankdetail(this.bankList[0].id);\r\n          }\r\n        }\r\n      }, error => {\r\n        if (error && error.error && error.error.message === 'error') {\r\n          if (error.error.user_not_found) {\r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === 'OK') {\r\n                this.getBankList();\r\n              }\r\n            });\r\n          } else {\r\n            this.walletError.manageWalletTontineError(error);\r\n          }\r\n        } else {\r\n          this.error.manageError(error);\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  getCurrentBalance() {\r\n    const param = { tontine_id: this.currentTontine.tontine.tontine_id };\r\n    this.walletTontine.getTontineWallet(param).subscribe((reponse: any) => {\r\n      this.loading = false;\r\n      if (reponse && reponse.message === 'success') {\r\n        this.currentBalance = reponse.infos_wallet;\r\n        this.storage.set(`tontine-wallet${param.tontine_id}`, { solde: this.currentBalance, caisse: reponse.detail_caisse });\r\n        this.typesCaisses = [];\r\n        let index = 0;\r\n        reponse.detail_caisse.forEach(caise => {\r\n          if (caise && caise.online_balance && caise.online_balance > 0) {\r\n            this.translate.get(caise.caisse_name).subscribe(trans => {\r\n              this.typesCaisses.push({\r\n                index: index, id: caise.type_caisse_tontine_id, name: trans, tontine_id: caise.tontine_id,\r\n                currency: this.currentTontine.tontine.monnaie, country_id: 0\r\n              });\r\n            });\r\n            index++;\r\n          }\r\n        });\r\n        this.getAllMethodPaymentType();\r\n      }\r\n    }, error => {\r\n\r\n\r\n      if (error && error.error && error.error.message === 'error') {\r\n\r\n        if (error.error.tontine_id_not_exist) {\r\n          this.translate.get('ADD_SHARE_MSG4').subscribe(trans => {\r\n            this.ui.presentToast(trans);\r\n          });\r\n        }\r\n        if (error.error.user_not_found) {\r\n          this.loading = true;\r\n          this.error.renewSession().then((data: any) => {\r\n            if (data && data.result === 'OK') {\r\n              this.getCurrentBalance();\r\n            } else {\r\n              this.loading = false;\r\n              this.storage.get(`tontine-wallet${param.tontine_id}`).then(walletData => {\r\n                this.currentBalance = walletData ? walletData.solde : [];\r\n              });\r\n            }\r\n          });\r\n        } else {\r\n          this.storage.get(`tontine-wallet${param.tontine_id}`).then(walletData => {\r\n            this.currentBalance = walletData ? walletData.solde : [];\r\n          });\r\n        }\r\n\r\n      } else {\r\n        this.storage.get(`tontine-wallet${param.tontine_id}`).then(walletData => {\r\n          this.currentBalance = walletData ? walletData.solde : [];\r\n        });\r\n        this.error.manageError(error);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  // Check the amount\r\n  checkAmount(amount: any) {\r\n    this.removeSpace();\r\n    this.amounValid = true;\r\n    this.loading = false;\r\n    if (amount) {\r\n      this.currentBalance.forEach(wallet => {\r\n        if (wallet && wallet.device_name === this.withdrawal.value.device_name) {\r\n          this.maxAmount = parseFloat(wallet.solde_device);\r\n          parseFloat(amount) <= parseFloat(wallet.solde_device) ? this.amounValid = true : this.amounValid = false;\r\n          this.translate.get('MAX_AMOUNT_MESSAGE').subscribe(trans => {\r\n            this.amountErrorMessage = `${trans} ${this.maxAmount} ${wallet.device_name}`;\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // ccheck if operator\r\n  isOperator() {\r\n    return this.paymentMethods && this.paymentMethods[this.currentIndex] \r\n    && (this.paymentMethods[this.currentIndex].name === 'MTN MOBILE MONEY' || this.paymentMethods[this.currentIndex].name === 'ORANGE MONEY');\r\n  }\r\n\r\n  // check if it paypal\r\n  isPayPal() {\r\n    return this.paymentMethods && this.paymentMethods[this.currentIndex] && this.paymentMethods[this.currentIndex].name === 'PAYPAL';\r\n  }\r\n\r\n  // can make withdrawal\r\n  canPay() {\r\n    return !this.amounValid || (this.withdrawal.value.method_payment_id !== 0\r\n       && !this.withdrawal.value.phoneNumber && this.paymentMethods && this.paymentMethods[this.currentIndex] \r\n      && (this.paymentMethods[this.currentIndex].name === 'ORANGE MONEY' || this.paymentMethods[this.currentIndex].name === 'MTN MOBILE MONEY')) \r\n      || this.loading || this.withdrawal.invalid || (this.errorEmail && this.paymentMethods && this.paymentMethods[this.currentIndex] && this.paymentMethods[this.currentIndex].name === 'PAYPAL') \r\n      || (this.errorPhone && this.paymentMethods && this.paymentMethods[this.currentIndex] \r\n      && (this.paymentMethods[this.currentIndex].name === 'MTN MOBILE MONEY' || this.paymentMethods[this.currentIndex].name === 'ORANGE MONEY' ));\r\n  }\r\n\r\n  // Get the list of countries\r\n  getCountries(refresher: boolean) {\r\n    this.states = [];\r\n    this.location.getAllCountries(refresher).then((countries: any) => {\r\n      countries.forEach(country => {\r\n        if (country && country.active === 1) {\r\n          this.listOfcountries.push(country.country_id);\r\n          if (country.default_country === 'yes') {\r\n            this.defautCountry = country.country_id;\r\n          }\r\n        }\r\n      });\r\n      this.states = this.paymentData.formatCountriesData(countries);\r\n      this.getCurrentCountry(false);\r\n    });\r\n  }\r\n\r\n\r\n  // Set defaulft country parameter\r\n  setDefaultCountry(prefix?: string, phone?: string) {\r\n    // Get the list of country\r\n    let countryExist = false;\r\n    this.listOfcountries.forEach(countryId => {\r\n      if (countryId === this.withdrawal.value.country_id) {\r\n        this.updateCountryPrefix(this.withdrawal.value.country_id);\r\n        countryExist = true;\r\n      }\r\n    });\r\n\r\n    // We set the default country\r\n    if (!countryExist) {\r\n      this.updateCountryPrefix(this.defautCountry);\r\n    }\r\n  }\r\n\r\n\r\n  // Set the default country\r\n  getCurrentCountry(refresher: boolean) {\r\n    const userCountry = this.location.getCurrentUserCountry();\r\n    if (userCountry) {\r\n      if (userCountry.active === 1) {\r\n        this.updateCountryPrefix(userCountry.country_id);\r\n      } else {\r\n        this.setDefaultCountry();\r\n      }\r\n    } else {\r\n      this.location.getCurrentCountryInfo(refresher).then((country: any) => {\r\n        if (country) {\r\n          if (country.settings.active === 1) {\r\n            this.updateCountryPrefix(country.settings.country_id);\r\n          } else {\r\n            this.setDefaultCountry();\r\n          }\r\n        } else {\r\n          this.setDefaultCountry();\r\n        }\r\n      }).catch(error => {\r\n      });\r\n    }\r\n  }\r\n\r\n  // Update the country\r\n  updateCountryPrefix(currentCountry: any) {\r\n    this.states.forEach(state => {\r\n      if (state.country_id === currentCountry) {\r\n        this.withdrawal.get('phoneid').setValue(state.country_prefixe);\r\n        this.withdrawal.get('country_id').setValue(state.country_id);\r\n      }\r\n    });\r\n  }\r\n\r\n  // update the payment device\r\n  updatePayment(paymentId: number) {\r\n    let index = 0;\r\n    this.paymentMethods.forEach(payment => {\r\n      if (payment.id === paymentId && paymentId !== 0) {\r\n        this.currentIndex = index;\r\n        if (payment.name === 'PAYPAL') {\r\n          this.errorPhone = false;\r\n          this.checkEmail(this.withdrawal.value.email);\r\n        } else {\r\n          this.errorEmail = false;\r\n          this.checkPhone(this.withdrawal.value.phoneNumber);\r\n        }\r\n        this.withdrawal.get('device_name').setValue(payment.currency);\r\n      } else if (paymentId === 0) {\r\n        this.currentIndex = index;\r\n        this.errorEmail = false;\r\n        this.errorPhone = false;\r\n      }\r\n      index++;\r\n    });\r\n  }\r\n\r\n  // Get a bank detail informations\r\n  getBankdetail(bankId: number) {\r\n    this.withdrawal.get('tontine_bank_profile_id').setValue(bankId);\r\n    this.bankList.forEach(bank => {\r\n      if (bank.id === bankId) {\r\n        this.withdrawal.get('bank_name').setValue(bank.bank_name);\r\n        this.withdrawal.get('branch_name').setValue(bank.branch_name ? bank.branch_name : '');\r\n        this.withdrawal.get('branch_code').setValue(bank.branch_code ? bank.branch_code : '');\r\n        this.withdrawal.get('address').setValue(bank.address);\r\n        this.withdrawal.get('account_name').setValue(bank.account_name);\r\n        this.withdrawal.get('nom_proprietaire').setValue(bank.name_proprietaire);\r\n        this.withdrawal.get('account_number').setValue(bank.account_number);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  // get all payment method\r\n  getAllMethodPaymentType() {\r\n    this.userService.getAllMethodPaymentType().subscribe((reponse: any) => {\r\n      this.paymentMethods = [];\r\n      const paymentList = this.paymentData.filterPaymentMethodByDevise(reponse.typePayment, this.currentBalance);\r\n      if (paymentList && paymentList.length > 0) {\r\n          this.paymentMethods = this.paymentData.formatWithdrawData(paymentList);\r\n      }\r\n      this.translate.get('BANK_TRANSFER').subscribe(trans => {\r\n        this.paymentMethods.push({\r\n          id: 0, country_id: 0,\r\n          logo: 'assets/wallet-icon.svg', name: trans, label: trans, currency: ''\r\n        });\r\n      });\r\n\r\n      this.zone.run(() => {\r\n        this.paymentMethods = this.paymentMethods;\r\n      });\r\n\r\n      // By default Select the fisrt element\r\n\r\n      setTimeout(() => {\r\n        this.withdrawal.get('method_payment_id').setValue(0);\r\n        this.currentIndex = 0;\r\n      }, 200);\r\n\r\n      this.updatePayment(0);\r\n    }, error => {\r\n      if (error && error.error && error.error.user_not_found) {\r\n        this.error.renewSession().then((data: any) => {\r\n          if (data && data.result === 'OK') {\r\n            this.getAllMethodPaymentType();\r\n          }\r\n        });\r\n      } else {\r\n        this.error.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // check the number \r\n  checkNumberAndPin() {\r\n    const user = this.userService.getUserSecret();\r\n    if (this.withdrawal.value.phoneNumber === user.email_or_phone) {\r\n      this.sendBankRequest();\r\n    } else {\r\n        this.ui.confirmPin(this.sendBankRequest);\r\n    }\r\n  }\r\n\r\n  // Add a new account\r\n  sendBankRequest() {\r\n \r\n     this.loading = true;\r\n    if (this.withdrawal.value.method_payment_id === 0) {\r\n      this.withdrawal.get('direct_transfert_to_bank_account').setValue(1);\r\n    } else {\r\n      this.withdrawal.get('direct_transfert_to_bank_account').setValue(0);\r\n      this.withdrawal.get('phone_number').setValue(this.withdrawal.value.phoneid + this.withdrawal.value.phoneNumber);\r\n    }\r\n    this.walletTontine.newWithdrawalRequest(this.withdrawal.value)\r\n      .subscribe((reponse: any) => {\r\n        this.loading = false;\r\n        if (reponse && reponse.message === 'success') {\r\n          this.translate.get(['BANK_REQUEST_SUBMIT', 'WITHDRAWAL_TEXT0', 'WITHDRAWAL_DEBIT_ORDER']).subscribe(trans => {\r\n            this.ui.presentAlert(trans.WITHDRAWAL_TEXT0, `${trans.BANK_REQUEST_SUBMIT} ${trans.WITHDRAWAL_DEBIT_ORDER} ${this.withdrawal.value.amount} ${this.withdrawal.value.device_name}`);\r\n          });\r\n          this.event.publish('wallet-withdrawal');\r\n          this.getBankList();\r\n          this.getCurrentBalance();\r\n          this.initForm();\r\n          this.getCountries(false);\r\n          this.getCurrentCountry(false);\r\n          this.navcontroler.setDirection('root');\r\n          this.router.navigate(['dashboard', 'tontine', this.currentTontine.tontine.tontine_id, 'wallet']);\r\n        }\r\n      }, error => {\r\n        this.loading = false;\r\n        if (error && error.error && error.error.message === 'error') {\r\n\r\n          if (error.error.user_not_found) {\r\n            this.loading = true;\r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.sendBankRequest();\r\n              } else {\r\n                this.loading = false;\r\n              }\r\n            });\r\n          } else {\r\n            this.walletError.manageWalletTontineError(error);\r\n          }\r\n        } else {\r\n          this.error.manageError(error);\r\n        }\r\n      }); \r\n  }\r\n\r\n  // Open add bank profile Modal\r\n  openAddBank() {\r\n    this.modatCtrl\r\n      .create({\r\n        component: AddBankProfilComponent\r\n      })\r\n      .then(modalEl => {\r\n        modalEl.present();\r\n        modalEl.onDidDismiss().then(() => {\r\n          this.getBankList();\r\n        });\r\n      });\r\n  }\r\n\r\n  // Open update bank profile Modal\r\n  openUpdateBank(param: any) {\r\n    this.modatCtrl\r\n      .create({\r\n        component: UpdateBankProfilComponent,\r\n        componentProps: {\r\n          data: param\r\n        }\r\n      })\r\n      .then(modalEl => {\r\n        modalEl.present();\r\n        modalEl.onDidDismiss().then(() => {\r\n          this.getBankList();\r\n        });\r\n      });\r\n  }\r\n\r\n  // Confirm the delete message\r\n  confirmDeleteAccount(bankId: any) {\r\n    const translations = [];\r\n    this.translate.get(['DELETE_BANK_INFO', 'DELETE_ACCOUNT_CONFIRMATION', 'CANCEL_TEXT', 'YES_TEXT']).subscribe(trans => {\r\n      translations.push(trans.DELETE_BANK_INFO);\r\n      translations.push(trans.DELETE_ACCOUNT_CONFIRMATION);\r\n      translations.push(trans.CANCEL_TEXT);\r\n      translations.push(trans.YES_TEXT);\r\n      this.confirmMessage(translations, bankId);\r\n    });\r\n  }\r\n\r\n  // Delete message\r\n  async confirmMessage(translations: any, bankId: any) {\r\n    const alert = await this.alertController.create({\r\n      header: `${translations[0]}`,\r\n      message: `${translations[1]}`,\r\n      buttons: [\r\n        {\r\n          text: `${translations[2]}`,\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n          }\r\n        }, {\r\n          text: `${translations[3]}`,\r\n          handler: () => {\r\n            this.deleteAccount(bankId);\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // Delete a new account\r\n  deleteAccount(bankId: any) {\r\n    const param = {\r\n      tontine_id: this.currentTontine.tontine.tontine_id,\r\n      tontine_bank_profile_id: bankId,\r\n      token: this.token\r\n    }\r\n    this.loading = true;\r\n    this.walletTontine.deleteTontineBankProfile(param)\r\n      .subscribe((reponse: any) => {\r\n        this.loading = false;\r\n        if (reponse && reponse.message === 'success') {\r\n          this.translate.get('BANK_DELETE_SUCCESS_MESSAGE').subscribe(trans => {\r\n            this.ui.presentToast(trans);\r\n          });\r\n          this.getBankList();\r\n        }\r\n      }, error => {\r\n    \r\n        if (error && error.error && error.error.message === 'error') {\r\n          if (error.error.user_not_found) {\r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.deleteAccount(bankId);\r\n              } else {\r\n                this.loading = false;\r\n              }\r\n            });\r\n          } else {\r\n            this.loading = false;\r\n            this.walletError.manageWalletTontineError(error);\r\n          }\r\n        } else {\r\n          this.loading = false;\r\n          this.error.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { WalletTontineService } from '../services/wallet-tontine.service';\r\nimport { TontineService } from '../../../services/tontine.service';\r\nimport { UserService } from 'src/app/dashboard/user/service/user.service';\r\nimport { EventService } from 'src/app/shared/service/events.service';\r\nimport { UiService } from 'src/app/shared/service/ui.service';\r\nimport { WalletTontineErrorService } from '../services/wallet-tontine-error.service';\r\n\r\n@Component({\r\n  selector: 'app-add-bank-profil',\r\n  templateUrl: './add-bank-profil.component.html',\r\n  styleUrls: ['./add-bank-profil.component.scss'],\r\n})\r\nexport class AddBankProfilComponent implements OnInit {\r\n\r\n  addBankForm: FormGroup;\r\n  loading: boolean;\r\n  token: string;\r\n  currentTontine: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private translate: TranslateService,\r\n    private event: EventService,\r\n    private userService: UserService,\r\n    private tontine: TontineService,\r\n    private error: ErrorService,\r\n    private ui: UiService,\r\n    private walletTontine: WalletTontineService,\r\n    private modatCtrl: ModalController,\r\n    private walletError: WalletTontineErrorService\r\n  ) {\r\n      this.loading = false;\r\n      this.token = this.userService.getUserToken();\r\n      this.event.subscribe('new-token', token => {\r\n        this.token = token;\r\n      });\r\n      this.currentTontine  = this.tontine.getCurrentTontineData();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initBankAccount();\r\n  }\r\n\r\n  get bank() {\r\n    return this.addBankForm.get('bank_name');\r\n  }\r\n\r\n  get branchName() {\r\n    return this.addBankForm.get('branch_name');\r\n  }\r\n\r\n  get branchCode() {\r\n    return this.addBankForm.get('branch_code');\r\n  }\r\n\r\n  get proprietaryName() {\r\n    return this.addBankForm.get('nom_proprietaire');\r\n  }\r\n\r\n  get accountNber() {\r\n    return this.addBankForm.get('account_number');\r\n  }\r\n\r\n  get accountName() {\r\n    return this.addBankForm.get('account_name');\r\n  }\r\n\r\n  get address() {\r\n    return this.addBankForm.get('address');\r\n  }\r\n\r\n  initBankAccount() {\r\n    this.addBankForm = this.fb.group({\r\n      token: [this.token],\r\n      tontine_id: [this.currentTontine.tontine.tontine_id],\r\n      account_number: ['', Validators.required],\r\n      nom_proprietaire: ['', Validators.required],\r\n      bank_name: ['', Validators.required],\r\n      branch_code: [''],\r\n      branch_name: [''],\r\n      account_name: ['', Validators.required],\r\n      address: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  closeAddBank(result: string) {\r\n    this.modatCtrl.dismiss(null, result);\r\n  }\r\n\r\n  // Add a new account\r\n  addAccount() {\r\n    this.loading = true;\r\n    this.walletTontine.saveTontineBankProfile(this.addBankForm.value)\r\n    .subscribe((reponse: any) => {\r\n        console.log(reponse);\r\n        this.loading = false;\r\n        if (reponse && reponse.message === 'success') {\r\n            this.translate.get('TONTINE_BANK_PROFIL_SUCCESS_MESSAGE').subscribe(trans => {\r\n              this.ui.presentToast(trans);\r\n            });\r\n            this.initBankAccount();\r\n            this.closeAddBank('success');\r\n        }\r\n    }, error => {\r\n        this.loading = false;\r\n        if (error && error.error && error.error.message === 'error') {\r\n          if (error.error.user_not_found) {\r\n            this.loading = true;\r\n             this.error.renewSession().then((data: any) => {\r\n                  if (data && data.result === \"OK\") {\r\n                    this.addAccount();\r\n                  } else {\r\n                    this.loading = false;\r\n                    this.closeAddBank('cancel');\r\n                  }\r\n             });\r\n          } else {\r\n              this.closeAddBank('cancel');\r\n              this.walletError.manageWalletTontineError(error);\r\n          }\r\n        } else {\r\n          this.closeAddBank('cancel');\r\n          this.error.manageError(error);\r\n        }\r\n    \r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ModalController, AlertController, NavParams } from '@ionic/angular';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { WalletTontineService } from '../services/wallet-tontine.service';\r\nimport { TontineService } from '../../../services/tontine.service';\r\nimport { UserService } from 'src/app/dashboard/user/service/user.service';\r\nimport { UiService } from 'src/app/shared/service/ui.service';\r\nimport { EventService } from 'src/app/shared/service/events.service';\r\nimport { WalletTontineErrorService } from '../services/wallet-tontine-error.service';\r\n\r\n@Component({\r\n  selector: 'app-update-bank-profil',\r\n  templateUrl: './update-bank-profil.component.html',\r\n  styleUrls: ['./update-bank-profil.component.scss'],\r\n})\r\nexport class UpdateBankProfilComponent implements OnInit {\r\n\r\n  addBankForm: FormGroup;\r\n  loading: boolean;\r\n  data: any;\r\n  currentTontine: any;\r\n  token: string;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private translate: TranslateService,\r\n    private alertController: AlertController,\r\n    private userService: UserService,\r\n    private error: ErrorService,\r\n    private tontine: TontineService,\r\n    private event: EventService,\r\n    private ui: UiService,\r\n    private walletTontine: WalletTontineService,\r\n    private modatCtrl: ModalController,\r\n    private params: NavParams,\r\n    private walletError: WalletTontineErrorService\r\n  ) {\r\n    this.loading = false;\r\n    this.data = this.params.get('data');\r\n    this.currentTontine = this.tontine.getCurrentTontineData();\r\n    this.token = this.userService.getUserToken();\r\n    this.event.subscribe('new-token', token => {\r\n      this.token = token;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initBankAccount();\r\n  }\r\n\r\n  // Form getters\r\n  get bank() {\r\n    return this.addBankForm.get('bank_name');\r\n  }\r\n\r\n  get branchName() {\r\n    return this.addBankForm.get('branch_name');\r\n  }\r\n\r\n  get branchCode() {\r\n    return this.addBankForm.get('branch_code');\r\n  }\r\n\r\n  get accountName() {\r\n    return this.addBankForm.get('account_name');\r\n  }\r\n\r\n  get proprietaryName() {\r\n    return this.addBankForm.get('nom_proprietaire');\r\n  }\r\n\r\n  get accountNber() {\r\n    return this.addBankForm.get('account_number');\r\n  }\r\n\r\n  get address() {\r\n    return this.addBankForm.get('address');\r\n  }\r\n\r\n  // Init form\r\n  initBankAccount() {\r\n    const data = this.data;\r\n    this.addBankForm = this.fb.group({\r\n      token: [this.token],\r\n      tontine_bank_profile_id: [data.tontine_bank_profile_id ? data.tontine_bank_profile_id : '', Validators.required],\r\n      tontine_id: [this.currentTontine.tontine.tontine_id],\r\n      bank_name: [data.bank_name ? data.bank_name : '', Validators.required],\r\n      branch_name: [data.branch_name ? data.branch_name : ''],\r\n      branch_code: [data.branch_code ? data.branch_code : ''],\r\n      account_name: [data.account_name ? data.account_name : '', Validators.required],\r\n      nom_proprietaire: [data.nom_proprietaire ? data.nom_proprietaire : '', Validators.required],\r\n      account_number: [data.account_number ? data.account_number : '', Validators.required],\r\n      address: [data.address ? data.address : '', Validators.required]\r\n    });\r\n  }\r\n\r\n  // close the modal\r\n  closeAddBank(result: string) {\r\n    this.modatCtrl.dismiss(null, result);\r\n  }\r\n\r\n  // confirm update\r\n  confirmUpdateAccount() {\r\n    const translations = [];\r\n    this.translate.get(['UPDATE_BANK_INFO', 'UPDATE_ACCOUNT_CONFIRMATION', 'CANCEL_TEXT', 'YES_TEXT']).subscribe(trans => {\r\n      translations.push(trans.UPDATE_BANK_INFO);\r\n      translations.push(trans.UPDATE_ACCOUNT_CONFIRMATION);\r\n      translations.push(trans.CANCEL_TEXT);\r\n      translations.push(trans.YES_TEXT);\r\n      this.confirnMessage(translations);\r\n    });\r\n  }\r\n\r\n  // confirm th update \r\n  async confirnMessage(translations: any) {\r\n    const alert = await this.alertController.create({\r\n      header: `${translations[0]}`,\r\n      message: `${translations[1]}`,\r\n      buttons: [\r\n        {\r\n          text: `${translations[2]}`,\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n          }\r\n        }, {\r\n          text: `${translations[3]}`,\r\n          handler: () => {\r\n            this.updateAccount();\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // Update a new account\r\n  updateAccount() {\r\n    this.loading = true;\r\n    this.walletTontine.updateTontineBankProfile(this.addBankForm.value)\r\n      .subscribe((reponse: any) => {\r\n        this.loading = false;\r\n        if (reponse && reponse.message === 'success') {\r\n          this.translate.get('BANK_UPDATE_SUCCESS_MESSAGE').subscribe(trans => {\r\n            this.ui.presentToast(trans);\r\n          });\r\n          this.initBankAccount();\r\n          this.closeAddBank('success');\r\n        }\r\n      }, error => {\r\n        this.loading = false;\r\n        if (error && error.error && error.error.message === 'error') {\r\n          if (error.error.user_not_found) {\r\n            this.loading = true;\r\n            this.error.renewSession().then((data: any) => {\r\n              if (data && data.result === \"OK\") {\r\n                this.updateAccount();\r\n              } else {\r\n                this.loading = false;\r\n                this.closeAddBank('cancel');\r\n              }\r\n            });\r\n          } else {\r\n            this.closeAddBank('cancel');\r\n            this.walletError.manageWalletTontineError(error);\r\n          }\r\n        } else {\r\n          this.closeAddBank('cancel');\r\n          this.error.manageError(error);\r\n        }\r\n\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ3aXRoZHJhd2FsLnBhZ2Uuc2NzcyJ9 */\";"],"sourceRoot":"webpack:///"}