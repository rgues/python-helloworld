{"version":3,"sources":["./src/app/dashboard/contact/feedback/feedback.module.ts","./src/app/dashboard/contact/feedback/feedback.page.scss","./src/app/dashboard/contact/feedback/feedback.page.html","./src/app/dashboard/contact/feedback/feedback.page.ts"],"names":[],"mappings":"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","file":"contact-feedback-feedback-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FeedbackPage } from './feedback.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FeedbackPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [FeedbackPage]\n})\nexport class FeedbackPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmZWVkYmFjay5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header>\\n  <ion-toolbar class=\\\"with-logo2\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button color=\\\"primary\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"ion-text-center title-md-right\\\">\\n      <ion-img class=\\\"logo\\\" [src]=\\\"'assets/logo-toupesu.svg'\\\"></ion-img>\\n    </ion-title>\\n  </ion-toolbar>\\n  <ion-toolbar class=\\\"ion-text-center subtitle\\\">\\n    <ion-title>{{ 'MENU_FEEDBACK' | translate }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"user-profil\\\">\\n  <form [formGroup]=\\\"contactForm\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col class=\\\"ion-padding\\\">\\n          <ion-label color=\\\"dark\\\">\\n            <span [innerHTML]=\\\"'CONTACT_MSG1' | translate\\\"></span>\\n            <span [innerHTML]=\\\"'CONTACT_MSG2' | translate\\\"></span>\\n            <span [innerHTML]=\\\"'CONTACT_MSG3' | translate\\\"></span>\\n          </ion-label>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col>\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">{{ 'USERNAME_TEXT' | translate }}</ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"username\\\"></ion-input>\\n          </ion-item>\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validationMessages.username\\\">\\n              <div class=\\\"error-message\\\"\\n                *ngIf=\\\"username.hasError(validation.type) && (username.dirty || username.touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                <span [innerHTML]=\\\"validation.message\\\"></span>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col>\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">{{'EMAIL_TEXT' | translate }}</ion-label>\\n            <ion-input type=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\n          </ion-item>\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validationMessages.email\\\">\\n              <div class=\\\"error-message\\\" *ngIf=\\\"email.hasError(validation.type) && (email.dirty || email.touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                <span [innerHTML]=\\\"validation.message\\\"></span>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-item>\\n            <ion-label>{{ 'TYPE_TEXT' | translate }}</ion-label>\\n            <ion-select formControlName=\\\"typeSurvey\\\">\\n              <ion-select-option [value]=\\\"1\\\">{{ 'COMMENTS_TEXT' | translate }}</ion-select-option>\\n              <ion-select-option [value]=\\\"2\\\">{{ 'BUG_REPORTS_TEXT' | translate }}</ion-select-option>\\n              <ion-select-option [value]=\\\"3\\\">{{ 'CUSTOMER_EXPERIENCE_TEXT' | translate }}</ion-select-option>\\n              <ion-select-option [value]=\\\"4\\\">{{ 'QUESTIONS_TEXT' | translate }}</ion-select-option>\\n              <ion-select-option [value]=\\\"5\\\">{{ 'OTHERS_TEXT' | translate }}</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validationMessages.typeSurvey\\\">\\n              <div class=\\\"error-message\\\"\\n                *ngIf=\\\"typeSurvey.hasError(validation.type) && (typeSurvey.dirty || typeSurvey.touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                <span [innerHTML]=\\\"validation.message\\\"></span>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">{{ 'FEEDBACK_TEXT2' | translate }}</ion-label>\\n            <ion-textarea type=\\\"text\\\" formControlName=\\\"suggestion\\\"></ion-textarea>\\n          </ion-item>\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validationMessages.message\\\">\\n              <div class=\\\"error-message\\\"\\n                *ngIf=\\\"suggestion.hasError(validation.type) && (suggestion.dirty || suggestion.touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                <span [innerHTML]=\\\"validation.message\\\"></span>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n\\n<!--       <ion-row>\\n        <ion-col>\\n          <rating formControlName=\\\"rating\\\" readonly=\\\"false\\\" size=\\\"default\\\"></rating>\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngIf=\\\"ratingMsg\\\">\\n              <div class=\\\"error-message\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                <span [innerHTML]=\\\"'REQUIRED_FIELD_INVALID' | translate\\\"></span>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </ion-col>\\n      </ion-row> -->\\n\\n    </ion-grid>\\n  </form>\\n\\n</ion-content>\\n\\n<ion-footer class=\\\"ion-padding ion-text-center\\\">\\n  <ion-button expand=\\\"full\\\" [disabled]=\\\"loading || contactForm.invalid\\\" (click)=\\\"saveFeedbacks()\\\" color=\\\"warning\\\"\\n    class=\\\"ion-text-uppercase\\\" shape=\\\"round\\\">\\n    {{'SEND_TEXT' | translate}}\\n  </ion-button>\\n  <ion-spinner *ngIf=\\\"loading\\\" name=\\\"circles\\\"></ion-spinner>\\n</ion-footer>\";","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ContactService } from '../service/contact.service';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { UserService } from '../../user/service/user.service';\r\nimport { UiService } from 'src/app/shared/service/ui.service';\r\n\r\n@Component({\r\n  selector: 'app-feedback',\r\n  templateUrl: './feedback.page.html',\r\n  styleUrls: ['./feedback.page.scss'],\r\n})\r\nexport class FeedbackPage implements OnInit {\r\n\r\n  contactForm: FormGroup;\r\n  validationMessages: any;\r\n  loading: boolean;\r\n  states: any[];\r\n  ratingMsg: boolean;\r\n  UserLoggedUsername: any='';\r\n  UserLoggedEmail: any = '';\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private translate: TranslateService,\r\n    private userService: UserService,\r\n    private contact: ContactService,\r\n    private errorService: ErrorService,\r\n    private ui: UiService\r\n  ) {\r\n      this.loading = false;\r\n      this.ratingMsg = false;\r\n      this.states = [];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initContactForm();\r\n    this.validationMessage();\r\n  }\r\n\r\n\r\n  // Form getters \r\n  get username() {\r\n    return this.contactForm.get('username');\r\n  }\r\n\r\n  get suggestion() {\r\n    return this.contactForm.get('suggestion');\r\n  }\r\n\r\n  get email() {\r\n    return this.contactForm.get('email');\r\n  }\r\n\r\n  get rating() {\r\n    return this.contactForm.get('rating');\r\n  }\r\n\r\n  get typeSurvey() {\r\n    return this.contactForm.get('typeSurvey');\r\n  }\r\n\r\n  \r\n  // Validation message\r\n  validationMessage() {\r\n    this.translate.get(['REQUIRED_FIELD_INVALID','REQUIRED_FIELD_TEXT']).subscribe(trans => {\r\n      this.validationMessages = {\r\n        username: [\r\n          { type: 'required', message: trans.REQUIRED_FIELD_TEXT },\r\n          { type: 'invalid', message: trans.REQUIRED_FIELD_INVALID }\r\n        ],\r\n        typeSurvey: [\r\n          { type: 'required', message: trans.REQUIRED_FIELD_TEXT },\r\n          { type: 'invalid', message: trans.REQUIRED_FIELD_INVALID }\r\n        ],\r\n        suggestion: [\r\n          { type: 'required', message: trans.REQUIRED_FIELD_TEXT },\r\n          { type: 'invalid', message: trans.REQUIRED_FIELD_INVALID }\r\n        ],\r\n        rating: [\r\n          { type: 'required', message: trans.REQUIRED_FIELD_TEXT },\r\n          { type: 'invalid', message: trans.REQUIRED_FIELD_INVALID }\r\n        ],\r\n        email: [\r\n          { type: 'required', message: trans.REQUIRED_FIELD_TEXT },\r\n          { type: 'invalid', message: trans.REQUIRED_FIELD_INVALID }\r\n        ]\r\n      };\r\n    });\r\n  }\r\n\r\n  // Init the user form with his data\r\n  initContactForm() {\r\n    if (this.userService.getUserData()) {\r\n      this.UserLoggedEmail = this.userService.getUserData().email;\r\n      this.UserLoggedUsername = this.userService.getUserData().username;\r\n    } else {\r\n      this.UserLoggedEmail = '';\r\n      this.UserLoggedUsername = '';\r\n    }\r\n    this.contactForm = this.fb.group({\r\n      username: [this.UserLoggedUsername],\r\n      suggestion: ['', Validators.compose([Validators.maxLength(1000), Validators.required])],\r\n      email: [this.UserLoggedEmail, Validators.compose([Validators.pattern('^[a-zA-Z0-9._-]+@[a-z0-9._-]{2,}[.][a-z]{2,4}$'), Validators.required])],\r\n      rating: ['4'],\r\n      typeSurvey: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  // Save the feedbacks\r\n  saveFeedbacks() {\r\n    this.loading = true;\r\n    this.ratingMsg = false;\r\n  \r\n    if (this.contactForm.valid && this.contactForm.value.rating) { \r\n      this.ratingMsg = false;\r\n      if (this.contactForm.value.typeSurvey === 1) { this.contactForm.value.typeSurvey = \"Comments\";}\r\n      if (this.contactForm.value.typeSurvey === 2) { this.contactForm.value.typeSurvey = \"Bug Reports\";}\r\n      if (this.contactForm.value.typeSurvey === 3) { this.contactForm.value.typeSurvey = \"Customer Experience\";}\r\n      if (this.contactForm.value.typeSurvey === 4) { this.contactForm.value.typeSurvey = \"Questions\";}\r\n      if (this.contactForm.value.typeSurvey === 5) { this.contactForm.value.typeSurvey = \"Others\";}\r\n  \r\n      this.contact.saveFeedbacks(this.contactForm.value).subscribe(\r\n        (reponse: any) => {\r\n          this.loading = false;\r\n          if (reponse && reponse.message === 'success') {\r\n            this.translate.get('FEEDBACK_MSG1').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n            this.initContactForm();\r\n          }\r\n        }, error => {\r\n          this.loading = false;\r\n          if (error && error.error && error.error.message === 'remplir_les_champs_username_et_note_sur_5') {\r\n            this.translate.get('FEEDBACK_MSG2').subscribe(value => {\r\n              this.ui.presentToast(value);\r\n            });\r\n          } else {\r\n            this.errorService.manageError(error);\r\n          }\r\n          \r\n        });\r\n    }\r\n    \r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}