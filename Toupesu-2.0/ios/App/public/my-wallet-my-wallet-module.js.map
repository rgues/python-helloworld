{"version":3,"sources":["./src/app/dashboard/my-wallet/my-wallet.module.ts","./src/app/dashboard/my-wallet/my-wallet.page.scss","./src/app/dashboard/my-wallet/top-up/top-up.component.ts","./src/app/dashboard/my-wallet/top-up/top-up.component.scss","./src/app/dashboard/my-wallet/my-wallet.page.ts","./src/app/dashboard/my-wallet/top-up/top-up.component.html","./src/app/dashboard/my-wallet/my-wallet.page.html"],"names":[],"mappings":"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","file":"my-wallet-my-wallet-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MyWalletPage } from './my-wallet.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { MyWalletMenuComponent } from './my-wallet-menu/my-wallet-menu.component';\nimport { TopUpComponent } from './top-up/top-up.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MyWalletPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedModule\n  ],\n  declarations: [\n    MyWalletPage,\n    MyWalletMenuComponent,\n    TopUpComponent\n  ],\n  entryComponents: [\n    MyWalletMenuComponent\n  ]\n})\nexport class MyWalletPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJteS13YWxsZXQucGFnZS5zY3NzIn0= */\";","import { Component, OnInit, Input, ViewChild, ElementRef, NgZone } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController, Platform } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TontineService } from 'src/app/dashboard/my-tontines/services/tontine.service';\r\nimport { ContributionService } from 'src/app/dashboard/my-tontines/services/contribution.service';\r\nimport { WalletService } from 'src/app/dashboard/my-wallet/service/wallet.service';\r\nimport { ApiService } from 'src/app/shared/service/api.service';\r\nimport { CurrencyService } from 'src/app/shared/service/currency.service';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { LocationService } from 'src/app/shared/service/location.service';\r\nimport { FormUtilsService } from 'src/app/shared/service/form-utils.service';\r\nimport { WalletErrorService } from 'src/app/dashboard/my-wallet/service/wallet-error.service';\r\nimport { Storage } from '@ionic/storage';\r\nimport { PaymentGlobalDataService } from 'src/app/shared/service/payment-global-data.service';\r\nimport { UserService } from '../../user/service/user.service';\r\nimport { UiService } from 'src/app/shared/service/ui.service';\r\ndeclare var paypal: any;\r\n\r\ninterface PaymentMethod {\r\n  id: number;\r\n  logo: string;\r\n  currency: string;\r\n  country_id: number;\r\n  name: string;\r\n  placeholder ?: string;\r\n  handling_fees?: number;\r\n  type_handling_fees?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-top-up',\r\n  templateUrl: './top-up.component.html',\r\n  styleUrls: ['./top-up.component.scss'],\r\n})\r\nexport class TopUpComponent implements OnInit {\r\n\r\n  paymentMethods: PaymentMethod[];\r\n  paypalMessage: string;\r\n  userPayMethodForm: FormGroup;\r\n  currentCountryId: number;\r\n  states: any;\r\n  loadingOperator: boolean;\r\n  tontineData: any;\r\n  contributionData: any;\r\n  errorPhone: boolean;\r\n  loading: boolean;\r\n  defaultState: any;\r\n  cron: any;\r\n  timeOut: any;\r\n  contributionDataParams: any;\r\n  pin: string;\r\n  spinner: any;\r\n  browser: any;\r\n  allPaymentMethods: any;\r\n  isMTNpayment: boolean;\r\n  paymentLink: string;\r\n  currentBalance: any;\r\n  paypalLoading: boolean;\r\n  refresher: boolean;\r\n  operatorId: number;\r\n  paymentForm: FormGroup;\r\n  reference: string;\r\n  defautCountry: any;\r\n  listOfcountries: any;\r\n  currentUser: any;\r\n  validationMessages: any;\r\n  paypal_initialized: boolean;\r\n  loadingBalance: boolean;\r\n  walletData: any;\r\n  refernceId: string;\r\n\r\n  static montant: number;\r\n  @Input() amountPay: number;\r\n  @ViewChild('paypalbuttoncontainer', { static: false }) paypalbuttoncontainer: ElementRef;\r\n\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    public zone: NgZone,\r\n    private ui: UiService,\r\n    private api : ApiService,\r\n    private paymentData: PaymentGlobalDataService,\r\n    private storage: Storage,\r\n    private currency: CurrencyService,\r\n    private contribution: ContributionService,\r\n    private platform: Platform,\r\n    private alertController: AlertController,\r\n    private wallet: WalletService,\r\n    private tontine: TontineService,\r\n    private errorService: ErrorService,\r\n    private location: LocationService,\r\n    private translate: TranslateService,\r\n    private error: ErrorService,\r\n    private formUtil: FormUtilsService,\r\n    private walletError: WalletErrorService,\r\n    private router: Router\r\n  ) {\r\n    this.currentUser = this.userService.getUserData();\r\n    this.cron = null;\r\n    this.timeOut = null;\r\n    this.loadingOperator = false;\r\n    this.refresher = false;\r\n    this.loading = false;\r\n    this.errorPhone = false;\r\n    this.states = [];\r\n    this.paymentMethods = [];\r\n    this.listOfcountries = [];\r\n    this.defautCountry = null;\r\n    this.paypalMessage = '';\r\n    this.reference = this.formUtil.getRandomId();\r\n    this.tontineData = this.tontine.getCurrentTontineData();\r\n    this.allPaymentMethods = [];\r\n    this.contributionData = this.contribution.getContributionData();\r\n    this.isMTNpayment = false;\r\n    this.paymentLink = '';\r\n    this.currentBalance = [];\r\n    this.paypalLoading = false;\r\n    this.loadingBalance = false;\r\n    this.paypal_initialized = false;\r\n    TopUpComponent.montant = 0;\r\n    this.refernceId = '';\r\n    this.hardwareBackButton();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initFormMessage();\r\n    this.initPaymentForm();\r\n    this.getAllMethodPaymentType();\r\n    this.getCurrentBalance();\r\n  }\r\n\r\n  /******************************** START FORM  SERVICES *********************************************/\r\n\r\n  // Form getters\r\n  get phone() {\r\n    return this.userPayMethodForm.get('phone');\r\n  }\r\n\r\n  get amountError() {\r\n    return this.userPayMethodForm.get('montantSansFees');\r\n  }\r\n\r\n  get country() {\r\n    return this.userPayMethodForm.get('country_id');\r\n  }\r\n\r\n  get device_name() {\r\n    return this.userPayMethodForm.get('device_name');\r\n  }\r\n\r\n  get payementtype() {\r\n    return this.userPayMethodForm.get('typePaymentIndex');\r\n  }\r\n\r\n\r\n  // Init form message\r\n  initFormMessage() {\r\n    this.translate.get(['REGISTER_PHONE_REQUIRED', 'AMOUNT_REQUIRED', 'PAID_MODE_REQUIRED', 'M_COUNTRY_REQUIRED'])\r\n      .subscribe(value => {\r\n        this.validationMessages = {\r\n          payementtype: [\r\n            { type: 'required', message: value.PAID_MODE_REQUIRED }\r\n          ],\r\n          phone: [\r\n            { type: 'required', message: value.REGISTER_PHONE_REQUIRED },\r\n          ],\r\n          amount: [\r\n            { type: 'required', message: value.AMOUNT_REQUIRED }\r\n          ],\r\n          country_id: [\r\n            { type: 'required', message: value.M_COUNTRY_REQUIRED }\r\n          ]\r\n        };\r\n      });\r\n  }\r\n\r\n  // Init form \r\n  initPaymentForm() {\r\n    const currentPayment = this.paymentData.getDefaultPaymentMethod();\r\n    this.userPayMethodForm = this.fb.group({\r\n      country_id: ['', Validators.required],\r\n      country_prefix: [''],\r\n      countryId: [''],\r\n      handleFees: [''],\r\n      handleFeesType: [''],\r\n      device_depart: [''],\r\n      device_arrivee: [''],\r\n      montant_device_depart: [''],\r\n      montant_device_arrivee: [''],\r\n      device_name: [''], // payment method country\r\n      currency: ['', Validators.required], // country currency\r\n      currencyLabel: [''],\r\n      pay_token: [''],\r\n      url: [''],\r\n      montant: [''],\r\n      montantSansFees: ['', Validators.compose([Validators.required, Validators.min(1), Validators.pattern('^[0-9]+$')])],\r\n      montantTotal: [''],\r\n      type_payment_id: [currentPayment ? currentPayment.typepaiement_id : ''],\r\n      type_payment_name: [currentPayment ? currentPayment.name : ''],\r\n      typePaymentIndex: [0, Validators.required],\r\n      phone: [currentPayment && this.formUtil.validatePhone(currentPayment.numero_compte) ? currentPayment.numero_compte : ''],\r\n      numero: [''],\r\n      operator: ['']\r\n    });\r\n  }\r\n\r\n\r\n  // Remove space\r\n  removeSpace() {\r\n    this.userPayMethodForm.get('montantSansFees').setValue(this.paymentData.removeInputSpace(this.userPayMethodForm.value.montantSansFees));\r\n  }\r\n\r\n  // Remove space\r\n  removeSpace1() {\r\n    this.userPayMethodForm.get('phone').setValue(this.paymentData.removeInputSpace(this.userPayMethodForm.value.phone));\r\n  }\r\n\r\n  // Refresh the list\r\n  refreSher(event) {\r\n    this.refresher = true;\r\n    this.getAllMethodPaymentType();\r\n    this.getCurrentBalance();\r\n    setTimeout(() => {\r\n      event.target.complete();\r\n    }, 2000);\r\n  }\r\n\r\n  // check if it is not  mobile operator\r\n  checkMobileOperator() {\r\n    return this.paymentData.isMobileOperator(this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex]);\r\n  }\r\n\r\n  // can show paypal message\r\n  canShowPaypalMessage() {\r\n    return this.userPayMethodForm.value.montantSansFees && this.paymentData.hasPaypalMessage(this.paypalMessage,this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex]);\r\n  }\r\n\r\n\r\n  // can show  paypal button\r\n  canShowPaypalButton() {\r\n    return this.paymentData.hasPaypalButton(this.paypal_initialized,this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex]);\r\n  }\r\n\r\n  // can make payment \r\n  canPay() {\r\n    return this.paymentData.canShowPayment(this.userPayMethodForm.valid,this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex],this.userPayMethodForm.value.phone,this.errorPhone);\r\n  }\r\n\r\n  // check if emial or phone is valid\r\n  checckEmailOrPhone(inputValue: string, index: number) {\r\n    this.removeSpace1();\r\n    this.userPayMethodForm.get('type_payment_id').setValue(this.paymentMethods[index].id);\r\n    switch (this.paymentMethods[index].name) {\r\n      case 'ORANGE MONEY':\r\n        this.errorPhone = !this.formUtil.validatePhone(inputValue);\r\n        if (!this.errorPhone) {\r\n          this.userPayMethodForm.get('numero').setValue(this.userPayMethodForm.value.country_prefix +\r\n            '' + this.userPayMethodForm.value.phone);\r\n        }\r\n        break;\r\n\r\n      case 'MTN MOBILE MONEY':\r\n        this.errorPhone = !this.formUtil.validatePhone(inputValue);\r\n        if (!this.errorPhone) {\r\n          this.userPayMethodForm.get('numero').setValue(this.userPayMethodForm.value.country_prefix +\r\n            '' + this.userPayMethodForm.value.phone);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // get the current balamce of the user\r\n  getCurrentBalance() {\r\n    this.loadingBalance = true;\r\n    this.contribution.getUserWallet().subscribe((reponse: any) => {\r\n      this.loadingBalance = false;\r\n      if (reponse && reponse.message === 'success') {\r\n        this.storage.set('current-balance', reponse.PorteMonnaieUser);\r\n        this.currentBalance = reponse.PorteMonnaieUser;\r\n      }\r\n    }, error => {\r\n      this.loadingBalance = false;\r\n      if (error && error.error && error.error.user_not_found) {\r\n        this.loadingBalance = true;\r\n        this.error.renewSession().then((data: any) => {\r\n          if (data && data.result === 'OK') {\r\n            this.getCurrentBalance();\r\n          } else {\r\n            this.loadingBalance = false;\r\n            this.storage.get('current-balance').then(data => {\r\n              this.currentBalance = data ? data : [];\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        this.storage.get('current-balance').then(data => {\r\n          this.currentBalance = data ? data : [];\r\n        });\r\n        this.error.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // get all payment method\r\n  getAllMethodPaymentType() {\r\n    this.loadingOperator = true;\r\n    this.userService.getAllMethodPaymentType().subscribe((reponse: any) => {\r\n      this.paymentMethods = [];\r\n      this.loadingOperator = false;\r\n      if (reponse && reponse.typePayment && reponse.typePayment.length > 0) {\r\n        this.paymentMethods = this.paymentData.formatPaymentMethodResponseContribution(reponse.typePayment);\r\n      }\r\n      this.allPaymentMethods = this.paymentMethods;\r\n\r\n      // Get list of countries\r\n      this.getCountries(false);\r\n\r\n    }, error => {\r\n      this.loadingOperator = false;\r\n      this.errorService.manageError(error);\r\n    });\r\n  }\r\n\r\n  // Set defaulft country parameter\r\n  setDefaultCountry() {\r\n    // Get the list of country\r\n    let countryExist = false;\r\n    this.listOfcountries.forEach(countryId => {\r\n      if (countryId === this.userPayMethodForm.value.country_id) {\r\n        this.updateCurrencyCountry(this.userPayMethodForm.value.country_id);\r\n        countryExist = true;\r\n      }\r\n    });\r\n\r\n    // We set the default coutry\r\n    if (!countryExist) {\r\n      this.userPayMethodForm.get('country_id').setValue(this.defautCountry);\r\n      this.updateCurrencyCountry(this.defautCountry);\r\n    }\r\n  }\r\n\r\n  // Update the country info country prfix\r\n  updateCurrencyCountry(countryId: any) {\r\n    this.zone.run(() => {\r\n      this.paymentMethods = [];\r\n    });\r\n    setTimeout(() => {\r\n      this.states.forEach(state => {\r\n        if (parseInt(state.country_id, 10) === parseInt(countryId, 10)) {\r\n          this.updateFormData(state);\r\n        }\r\n      });\r\n    }, 200);\r\n\r\n  }\r\n\r\n  // Set the default country\r\n  getCurrentCountry(refresher: boolean) {\r\n    const userCountry = this.location.getCurrentUserCountry();\r\n    if (userCountry) {\r\n      if (userCountry.active === 1) {\r\n        setTimeout(() => {\r\n          this.updateFormData(userCountry);\r\n        }, 200);\r\n      } else {\r\n        this.setDefaultCountry();\r\n      }\r\n    } else {\r\n      this.location.getCurrentCountryInfo(refresher).then((country: any) => {\r\n        if (country) {\r\n          this.defaultState = country.settings;\r\n          if (this.defaultState.active === 1) {\r\n            setTimeout(() => {\r\n              this.updateFormData(this.defaultState);\r\n            }, 200);\r\n          } else {\r\n            this.setDefaultCountry();\r\n          }\r\n        } else {\r\n          this.setDefaultCountry();\r\n        }\r\n      }).catch(error => {\r\n      });\r\n    }\r\n  }\r\n\r\n  // Get all countries\r\n  getCountries(refresher: boolean) {\r\n    this.location.getAllCountries(refresher).then((countries: any) => {\r\n      countries.forEach(country => {\r\n        if (country.active === 1) {\r\n          this.listOfcountries.push(country.country_id);\r\n          if (country.default_country === 'yes') {\r\n            this.defautCountry = country.country_id;\r\n          }\r\n        }\r\n      });\r\n      this.states = this.paymentData.formatCountriesData(countries);\r\n    \r\n      // Get the the current country\r\n      this.getCurrentCountry(false);\r\n\r\n    });\r\n  }\r\n\r\n  // update the form data with country data\r\n  updateFormData(country: any) {\r\n    if (country) {\r\n      this.userPayMethodForm.get('country_id').setValue(country.country_id);\r\n      this.userPayMethodForm.get('country_prefix').setValue(country.country_prefixe);\r\n      this.userPayMethodForm.get('currency').setValue(country.device_name);\r\n      this.userPayMethodForm.get('device_arrivee').setValue(country.device_name);\r\n      this.userPayMethodForm.get('handleFees').setValue(country.handling_fees);\r\n      this.userPayMethodForm.get('handleFeesType').setValue(country.type_handling_fees);\r\n      this.userPayMethodForm.get('currencyLabel').setValue(country.currency_label);\r\n      this.updatePaymentsMethods(country.country_id);\r\n    }\r\n  }\r\n\r\n\r\n  updatePaymentsMethods(countryId: number) {\r\n    // update the payment method\r\n    const paymentsMethods = [];\r\n    this.paymentMethods = [];\r\n    this.allPaymentMethods.forEach(payment => {\r\n      if (payment.country_id === countryId) {\r\n        paymentsMethods.push(payment);\r\n      }\r\n    });\r\n    this.paymentMethods = paymentsMethods;\r\n    if (this.paymentMethods && this.paymentMethods.length > 0) {\r\n      this.updatePaymentMethod(0);\r\n    }\r\n  }\r\n  \r\n  // Update the form data with payment method data\r\n  updatePaymentMethod(index) {\r\n    if (this.paymentMethods && this.paymentMethods[index]) {\r\n      this.userPayMethodForm.get('type_payment_id').setValue(this.paymentMethods[index].id);\r\n      this.userPayMethodForm.get('type_payment_name').setValue(this.paymentMethods[index].name);\r\n      this.userPayMethodForm.get('device_depart').setValue(this.paymentMethods[index].currency);\r\n      this.userPayMethodForm.get('device_name').setValue(this.paymentMethods[index].currency);\r\n      this.userPayMethodForm.get('handleFees').setValue(this.paymentMethods[index].handling_fees);\r\n      this.userPayMethodForm.get('handleFeesType').setValue(this.paymentMethods[index].type_handling_fees);\r\n      this.zone.run(() => {\r\n        this.userPayMethodForm.get('typePaymentIndex').setValue(index);\r\n      });\r\n    }\r\n    if (this.paymentMethods && this.paymentMethods[index] && this.paymentMethods[index].name === 'PAYPAL') {\r\n      this.paypal_initialized = false;\r\n    }\r\n    this.updateAmount();\r\n  }\r\n\r\n  // Calucalte the payment with handlfees\r\n  updateAmount() {\r\n    this.removeSpace();\r\n    let amount = 0;\r\n    amount = parseFloat(this.userPayMethodForm.value.montantSansFees) > 0 ? parseFloat(this.userPayMethodForm.value.montantSansFees) : 0;\r\n    if (parseFloat(this.userPayMethodForm.value.handleFees) > 0) {\r\n      const handlefees = parseFloat(this.userPayMethodForm.value.handleFees) > 0 ? parseFloat(this.userPayMethodForm.value.handleFees) : 1;\r\n      if (this.userPayMethodForm.value.handleFeesType === 'pourcentage') {\r\n        amount = amount * (1 + (handlefees / 100));\r\n      } else {\r\n        amount = amount + handlefees;\r\n      }\r\n    }\r\n\r\n    if (this.userPayMethodForm.value.currency === 'XAF' || this.userPayMethodForm.value.currency === 'XOF' || this.userPayMethodForm.value.currency === 'ZAR') {\r\n      amount = Math.ceil(amount);\r\n    } else {\r\n      amount = parseFloat(Number(amount).toFixed(2));\r\n    }\r\n\r\n    this.userPayMethodForm.get('montantTotal').setValue(amount);\r\n    this.userPayMethodForm.get('montant_device_arrivee').setValue(this.userPayMethodForm.value.montantSansFees);\r\n\r\n    this.updatePayPalAmount();\r\n    \r\n  }\r\n\r\n\r\n  // step 1 :  Show payment confirmation dialog with handle fees\r\n  showPayment(data: any) {\r\n\r\n    switch (this.paymentMethods[data.typePaymentIndex].name) {\r\n\r\n      case 'ORANGE MONEY':\r\n        this.updateParametersOrange();\r\n        break;\r\n\r\n      case 'MTN MOBILE MONEY':\r\n        this.updateParametersMtn();\r\n        break;\r\n\r\n      case 'OZOW':\r\n        this.updateParametersOzow();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n\r\n    }\r\n  }\r\n\r\n  /******************************** END FORM  SERVICES *********************************************/\r\n\r\n  /******************************** START ORANGE PAYMENT *********************************************/\r\n  updateParametersOrange() {\r\n\r\n    if (this.userPayMethodForm.value.currency === this.userPayMethodForm.value.device_name) {\r\n      this.userPayMethodForm.get('montant').setValue(this.userPayMethodForm.value.montantTotal);\r\n      this.userPayMethodForm.get('device_name').setValue(this.userPayMethodForm.value.currency);\r\n      this.userPayMethodForm.get('numero').setValue(this.userPayMethodForm.value.country_prefix + this.userPayMethodForm.value.phone);\r\n      this.userPayMethodForm.get('operator').setValue('orange');\r\n      this.userPayMethodForm.get('montant_device_depart').setValue(this.userPayMethodForm.value.montantSansFees); // not use now\r\n      const messageConfirmation = { amount: this.userPayMethodForm.value.montantTotal, currency: this.userPayMethodForm.value.currency };\r\n      this.confirmWalletMessage(messageConfirmation, this.userPayMethodForm.value);\r\n\r\n    } else {\r\n\r\n      this.translate.get('TOPUP_MSG1').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n  }\r\n\r\n  /******************************** END ORANGE PAYMENT *********************************************/\r\n\r\n\r\n\r\n  /******************************** START MTN PAYMENT *********************************************/\r\n\r\n  updateParametersMtn() {\r\n\r\n    if (this.userPayMethodForm.value.currency === this.userPayMethodForm.value.device_name) {\r\n\r\n      this.userPayMethodForm.get('montant').setValue(this.userPayMethodForm.value.montantTotal);\r\n      this.userPayMethodForm.get('device_name').setValue(this.userPayMethodForm.value.currency);\r\n      this.userPayMethodForm.get('numero').setValue(this.userPayMethodForm.value.country_prefix + this.userPayMethodForm.value.phone);\r\n      this.userPayMethodForm.get('operator').setValue('MTN');\r\n      this.userPayMethodForm.get('montant_device_depart').setValue(this.userPayMethodForm.value.montantSansFees); // not use now\r\n      const messageConfirmation = { amount: this.userPayMethodForm.value.montantTotal, currency: this.userPayMethodForm.value.currency };\r\n      this.confirmWalletMessage(messageConfirmation, this.userPayMethodForm.value);\r\n\r\n    } else {\r\n      this.translate.get('TOPUP_MSG1').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  /******************************** END MTN PAYMENT *********************************************/\r\n\r\n\r\n\r\n  /******************************** START OZOW PAYMENT *********************************************/\r\n\r\n  updateParametersOzow() {\r\n    if (this.userPayMethodForm.value.currency === this.userPayMethodForm.value.device_name) {\r\n\r\n      this.userPayMethodForm.get('montant').setValue(this.userPayMethodForm.value.montantTotal);\r\n      this.userPayMethodForm.get('device_name').setValue(this.userPayMethodForm.value.currency);\r\n      this.userPayMethodForm.get('operator').setValue('ozow');\r\n      this.userPayMethodForm.get('numero').setValue(this.userPayMethodForm.value.country_prefix + this.currentUser.phone);\r\n      this.userPayMethodForm.get('montant_device_depart').setValue(this.userPayMethodForm.value.montantSansFees); // not use now\r\n      const messageConfirmation = { amount: this.userPayMethodForm.value.montantTotal, currency: this.userPayMethodForm.value.currency };\r\n      this.confirmWalletMessage(messageConfirmation, this.userPayMethodForm.value);\r\n\r\n    } else {\r\n      this.translate.get('TOPUP_MSG1').subscribe(value => {\r\n        this.ui.presentToast(value);\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  /******************************** END OZOW PAYMENT *********************************************/\r\n\r\n\r\n\r\n\r\n\r\n  /******************************** START PAYPAL PAYMENT *********************************************/\r\n\r\n  // Update the paypal Amount\r\n  updatePayPalAmount() {\r\n    if (this.userPayMethodForm.value.montantTotal > 0) {\r\n    if (this.paymentMethods && this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex] && this.paymentMethods[this.userPayMethodForm.value.typePaymentIndex].name === 'PAYPAL') {\r\n      if (this.userPayMethodForm.value.currency !== this.userPayMethodForm.value.device_name) {\r\n        this.currency.convert(this.userPayMethodForm.value.currency, this.userPayMethodForm.value.device_name, this.userPayMethodForm.value.montantTotal).then(montantAvecFees => {\r\n\r\n          if (montantAvecFees) {\r\n\r\n          this.userPayMethodForm.get('montant').setValue(montantAvecFees ? montantAvecFees : 0);\r\n\r\n          this.translate.get('PAIDMODE_MSG2').subscribe(value => {\r\n            this.paypalMessage = `${value}  ${this.userPayMethodForm.value.montantTotal} ${this.userPayMethodForm.value.currency} =\r\n                ${this.userPayMethodForm.value.montant} ${this.userPayMethodForm.value.device_name}`;\r\n\r\n            // set paypal amount to pay\r\n            TopUpComponent.montant = this.userPayMethodForm.value.montant;\r\n            this.setupPayPalPay();\r\n          });\r\n\r\n        } else {\r\n          this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n              this.paypalMessage = value;\r\n          });\r\n        }\r\n\r\n        });\r\n      } else {\r\n\r\n        this.userPayMethodForm.get('montant').setValue(this.userPayMethodForm.value.montantTotal);\r\n\r\n        this.translate.get('PAIDMODE_MSG2').subscribe(value => {\r\n          this.paypalMessage = `${value}  ${this.userPayMethodForm.value.montant} ${this.userPayMethodForm.value.currency}`;\r\n          // set paypal amount to pay\r\n          TopUpComponent.montant = this.userPayMethodForm.value.montant;\r\n          this.setupPayPalPay();\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n  }\r\n\r\n\r\n  // Update parameters PAYPAL\r\n  updateParametersPaypal(payToken: string) {\r\n    this.userPayMethodForm.get('pay_token').setValue(payToken);\r\n    this.userPayMethodForm.get('operator').setValue('paypal');\r\n    this.userPayMethodForm.get('device_depart').setValue(this.userPayMethodForm.value.device_name);\r\n\r\n    if (this.userPayMethodForm.value.currency !== this.userPayMethodForm.value.device_name) {\r\n\r\n      this.currency.convert(this.userPayMethodForm.value.currency, this.userPayMethodForm.value.device_name, this.userPayMethodForm.value.montantSansFees)\r\n        .then(montantSansFees => {\r\n          if (montantSansFees) {\r\n          this.userPayMethodForm.get('montant_device_depart').setValue(montantSansFees ? montantSansFees : 0);\r\n          this.recharcheWithConversionOperator(this.userPayMethodForm.value);\r\n        } else {\r\n          this.translate.get('CURRENCY_CONVERT_ERROR').subscribe(value => {\r\n            this.ui.presentToast(value);\r\n          });\r\n        }\r\n        });\r\n\r\n    } else {\r\n\r\n      this.userPayMethodForm.get('montant_device_depart').setValue(this.userPayMethodForm.value.montantSansFees);\r\n      this.recharcheWithConversionOperator(this.userPayMethodForm.value);\r\n    }\r\n  }\r\n\r\n  setupPayPalPay() {\r\n    if (!this.paypal_initialized) {\r\n      this.initPayPal();\r\n    }\r\n  }\r\n\r\n  initPayPal() {\r\n    if (TopUpComponent.montant > 0 && this.paypalbuttoncontainer) {\r\n      this.paypalLoading = true;\r\n      this.paypal_initialized = true;\r\n      let paypalbuttoncontainer = this.paypalbuttoncontainer.nativeElement as HTMLDivElement\r\n      let _this = this;\r\n\r\n      if (paypal) {\r\n        paypal.Button.render({\r\n          env: 'production', // sandbox | production\r\n          style: {\r\n            size: 'responsive',\r\n            color: 'gold',\r\n            shape: 'pill',\r\n            label: 'checkout', //label: checkout, buynow, credit, pay, paypal\r\n            tagline: false\r\n          },\r\n\r\n          client: {\r\n            sandbox: 'ARIMcMamksC74CLp7Zavgn62RsKK0XDfjePxjU9gsWmcdzyI3AYz3PwADIktvUgCdhAwWCXPaBzCckOC',\r\n            production: 'AVdCN0ymBsPer15VtLbeNoZ3vkjkhap6vXoxwsWF3B0H4GM_mVQ5GVpJ2h4-G_AlVVIsBYWx4JpVVxLT'\r\n          },\r\n          // Show the buyer a 'Pay Now' button in the checkout flow\r\n          commit: true,\r\n\r\n          payment: function (data, actions) {\r\n            return actions.payment.create({\r\n              payment: {\r\n                transactions: [\r\n                  {\r\n                    amount: {\r\n                      total: TopUpComponent.montant,\r\n                      currency: _this.userPayMethodForm.value.device_name\r\n                    },\r\n                    description: 'Toupesu'\r\n                  }\r\n                ]\r\n              }\r\n            });\r\n\r\n          },\r\n          // onAuthorize() is called when the buyer approves the payment\r\n          onAuthorize: function (data, actions, error) {\r\n\r\n            if (error) {\r\n              _this.exitPayment();\r\n            }\r\n\r\n            if (error === 'INSTRUMENT_DECLINED') {\r\n              _this.exitPayment();\r\n            }\r\n\r\n            // Make a call to the REST api to execute the payment\r\n            return actions.payment.execute().then(function () {\r\n              const params: any = {\r\n                refID: _this.reference,\r\n                amount: TopUpComponent.montant,\r\n                moneyCode: _this.userPayMethodForm.value.device_name,\r\n                product: 'Toupesu',\r\n                paypalID: data.paymentToken.split('-')[1]\r\n              };\r\n\r\n              _this.api.post('livepaygateway/paypal/savePayRequest', JSON.stringify(params)).subscribe(\r\n                (ans: any) => {\r\n                  if (ans && ans.success) {\r\n                    _this.updateParametersPaypal(data.paymentToken.split('-')[1]);\r\n                  }\r\n                }, error => {\r\n                  _this.updateParametersPaypal(data.paymentToken.split('-')[1]);\r\n                });\r\n            });\r\n          },\r\n          onCancel: function (data, actions) {\r\n            _this.exitPayment();\r\n          },\r\n          onClick: (data, actions) => {\r\n            _this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n              _this.ui.presentToast(value);\r\n            });\r\n          }\r\n        }, paypalbuttoncontainer);\r\n      }\r\n\r\n      setTimeout(() => {\r\n        this.paypalLoading = false;\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n\r\n  /******************************** END PAYPAL PAYMENT *********************************************/\r\n\r\n\r\n\r\n  /******************************** PAYMENT SERVICES *********************************************/\r\n\r\n  // comfrim wallet Message\r\n  confirmWalletMessage(params: any, walletParam: any) {\r\n    this.translate.get(['PAIDMODE_MSG2', 'TOPUP_CONFRIM_MSG1', 'CANCEL_TEXT', 'YES_TEXT']).subscribe(value => {\r\n      const messageText = `${value.PAIDMODE_MSG2}  ${params.amount} ${params.currency}`;\r\n      const translation = [];\r\n      translation.push(value.CANCEL_TEXT);\r\n      translation.push(value.YES_TEXT);\r\n      const meesageData = {\r\n        message: messageText,\r\n        title: value.TOPUP_CONFRIM_MSG1\r\n      };\r\n      this.confirmWalletRecharge(meesageData, walletParam, translation);\r\n\r\n    });\r\n  }\r\n\r\n  // Confirm the wallet recharge\r\n  async confirmWalletRecharge(dataMessage: any, walletParam: any, translation: string[]) {\r\n\r\n    const alert = await this.alertController.create({\r\n      header: `${dataMessage.title}`,\r\n      message: `${dataMessage.message}`,\r\n      buttons: [\r\n        {\r\n          text: `${translation[0]}`,\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n\r\n          }\r\n        }, {\r\n          text: `${translation[1]}`,\r\n          handler: () => {\r\n            this.rechargeWithoutConversionOperator(walletParam);\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  // save the orange/mtn/ozow payment\r\n  rechargeWithoutConversionOperator(rechargeData: any) {\r\n    this.loading = true;\r\n    this.showLoadingMessage(rechargeData);\r\n    this.userPayMethodForm.get('numero').setValue(rechargeData.country_prefix + this.currentUser.phone);\r\n    this.wallet.rechargeWallet(rechargeData).subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'success') {\r\n        this.sendResponsePerOperator(reponse, rechargeData.operator);\r\n      }\r\n    }, error => {\r\n      this.loading = false;\r\n\r\n      if (error && error.error && error.error.message === 'error') {\r\n        if (error && error.error && error.error.user_not_found) {\r\n          this.loading = true;\r\n          this.error.renewSession().then((data: any) => {\r\n            if (data && data.result === 'OK') {\r\n              this.ui.dismissLoading();\r\n              this.rechargeWithoutConversionOperator(rechargeData);\r\n            } else {\r\n              this.exitPayment();\r\n            }\r\n          });\r\n        } else {\r\n          this.ui.dismissLoading();\r\n          this.walletError.manageWalletError(error);\r\n        }\r\n\r\n      } else {\r\n        this.ui.dismissLoading();\r\n        this.errorService.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // save the paypal payment\r\n  recharcheWithConversionOperator(rechargeData: any) {\r\n    this.loading = true;\r\n    this.showLoadingMessage(rechargeData);\r\n\r\n    this.wallet.rechargeWalletWithConversion(rechargeData).subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'success') {\r\n        this.sendResponsePerOperator(reponse, rechargeData.operator);\r\n      }\r\n    }, error => {\r\n      this.loading = false;\r\n      if (error && error.error && error.error.message === 'error') {\r\n        if (error && error.error && error.error.user_not_found) {\r\n          this.loading = true;\r\n          this.error.renewSession().then((data: any) => {\r\n            if (data && data.result === 'OK') {\r\n              this.ui.dismissLoading();\r\n              this.recharcheWithConversionOperator(rechargeData);\r\n            } else {\r\n              this.exitPayment();\r\n            }\r\n          });\r\n        } else {\r\n          this.ui.dismissLoading();\r\n          this.walletError.manageWalletError(error);\r\n        }\r\n\r\n      } else {\r\n        this.ui.dismissLoading();\r\n        this.errorService.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // show the loading message\r\n  showLoadingMessage(data: any) {\r\n    switch (data.operator) {\r\n      case 'orange':\r\n        this.translate.get('ORANGE_PAYMENT_MESSAGE').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'MTN':\r\n        this.translate.get('MTN_PAYMENT_MESSAGE').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'paypal':\r\n        this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      case 'ozow':\r\n        this.translate.get('TOPUP_TEXT1').subscribe(value => {\r\n          this.ui.presentLoading(value);\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // Send message per operator\r\n  sendResponsePerOperator(data: any, operator: string) {\r\n    this.checkPaymentStatusOperator(data.pay_token, operator);\r\n    const reference = data && data.refID ? data.refID : '';\r\n    this.refernceId = reference;\r\n    this.paymentLink = data.url;\r\n    this.cancelPaymentResult(reference);\r\n    switch (operator) {\r\n      case 'ozow':\r\n        window.open(data.url, '_blank');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // step 2 :  Check the status via Ozow\r\n  checkPaymentStatusOperator(payToken: string, operator: string) {\r\n    this.cron = setInterval(() => {\r\n      this.checkPaymentStatusOperatorServer(payToken, operator);\r\n    }, 20000);\r\n  }\r\n\r\n  // SHOW THE SUCCES MESSAGE\r\n  showSuccesMessage() {\r\n    this.translate.get('TOPUP_MSG7').subscribe(value => {\r\n      this.ui.presentToast(value);\r\n    });\r\n  }\r\n\r\n  // clear the time out\r\n  clearTimeoutData() {\r\n    if (this.timeOut) {\r\n      clearTimeout(this.timeOut);\r\n      this.timeOut = null;\r\n    }\r\n  }\r\n\r\n  // clear the set interval\r\n  clearSetIntervalData() {\r\n    if (this.cron) {\r\n      clearInterval(this.cron);\r\n    }\r\n    this.cron = null;\r\n    for (let i = 0; i < 1000; i++) {\r\n      clearInterval(i);\r\n    }\r\n  }\r\n\r\n  // Check the payment Status\r\n  checkPaymentStatusOperatorServer(payToken: string, operator: string) {\r\n    this.wallet.getStatusPaymentOperator(payToken, operator).subscribe((reponse: any) => {\r\n      if (reponse && reponse.message === 'OK') {\r\n        this.showPaymentResult();\r\n        this.showSuccesMessage();\r\n      }\r\n    }, error => {\r\n\r\n      if (error && error.error && error.error.message === 'FAIL') {\r\n        this.exitPayment();\r\n        this.translate.get('TOPUP_MSG8').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n      } else {\r\n        this.exitPayment();\r\n        this.translate.get('TOPUP_MSG8').subscribe(value => {\r\n          this.ui.presentToast(value);\r\n        });\r\n        this.errorService.manageError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Show payment confirmation dialog\r\n  showPaymentResult() {\r\n    this.loading = false;\r\n    this.refresher = false;\r\n    this.getCurrentBalance();\r\n    this.initFormMessage();\r\n    this.initPaymentForm();\r\n    this.getAllMethodPaymentType();\r\n    this.clearSetIntervalData();\r\n    // clear the timeout\r\n    this.clearTimeoutData();\r\n\r\n    this.router.navigate(['dashboard/my-wallet/history']);\r\n    this.ui.dismissLoading();\r\n  }\r\n\r\n  // Cancel the payment after 2 min\r\n  cancelPaymentResult(refence?: string) {\r\n    this.timeOut = setTimeout(() => {\r\n      this.exitPayment();\r\n      this.translate.get(['TRANSACTION_CANCEL', 'TOPUP_MSG9']).subscribe(trans => {\r\n        this.ui.presentAlert(`${trans.TRANSACTION_CANCEL}`, `${trans.TOPUP_MSG9} ${refence}`);\r\n      });\r\n    }, 300000);\r\n  }\r\n\r\n  // exit the payment directly\r\n  exitPayment() {\r\n    this.loading = false;\r\n    this.refresher = false;\r\n    this.initFormMessage();\r\n    this.initPaymentForm();\r\n    this.getAllMethodPaymentType();\r\n    this.getCurrentBalance();\r\n    this.clearTimeoutData();\r\n    this.clearSetIntervalData();\r\n    this.ui.dismissLoading();\r\n  }\r\n\r\n  ionicViewDidLeave() {\r\n    if (this.loading) {\r\n      this.exitPayment();\r\n    }\r\n  }\r\n\r\n\r\n  // listen to back button\r\n  hardwareBackButton() {\r\n    this.platform.backButton.subscribe(() => {\r\n      const url = this.router.url;\r\n      if (url === '/dashboard/my-wallet') {\r\n        if (this.refernceId) {\r\n          this.cancelPaymentResult(this.refernceId);\r\n        } else {\r\n          this.exitPayment();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /******************************** PAYMENT SERVICES *********************************************/\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0b3AtdXAuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { PopoverController } from '@ionic/angular';\r\nimport { MyWalletMenuComponent } from './my-wallet-menu/my-wallet-menu.component';\r\n\r\n@Component({\r\n  selector: 'app-my-wallet',\r\n  templateUrl: './my-wallet.page.html',\r\n  styleUrls: ['./my-wallet.page.scss'],\r\n})\r\nexport class MyWalletPage implements OnInit {\r\n\r\n  constructor(\r\n    private popoverController: PopoverController\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  async openContextMenu(ev: any) {\r\n    const popover = await this.popoverController.create({\r\n      component: MyWalletMenuComponent,\r\n      event: ev\r\n    });\r\n    return await popover.present();\r\n  }\r\n\r\n}\r\n","export default \"<div  *ngIf=\\\"allPaymentMethods && allPaymentMethods.length === 0 && !loadingOperator && !refresher\\\">\\r\\n  <p  class=\\\"ion-padding ion-text-center\\\"> {{ 'PAYMENTS_METOHDS_REFRESH' | translate }}</p>\\r\\n</div>\\r\\n<ion-refresher class=\\\"ion-padding\\\" slot=\\\"fixed\\\" (ionRefresh)=\\\"refreSher($event)\\\">\\r\\n  <ion-refresher-content\\r\\n    pullingIcon=\\\"reload-outline\\\"\\r\\n    refreshingSpinner=\\\"circles\\\"\\r\\n    refreshingText=\\\"{{ 'M_REFRESHING_TEXT' | translate }}\\\">\\r\\n  </ion-refresher-content>\\r\\n</ion-refresher>\\r\\n<form [formGroup]=\\\"userPayMethodForm\\\">\\r\\n<ion-grid>\\r\\n\\r\\n  <ion-row  *ngIf=\\\"loadingOperator && !refresher\\\">\\r\\n    <ion-col>\\r\\n      <p class=\\\"ion-text-center ion-padding\\\">\\r\\n        <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n      </p>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  <ion-row id=\\\"withdrawal\\\" *ngIf=\\\"!loadingBalance\\\">\\r\\n    <ion-col>\\r\\n      <ion-col class=\\\"ion-no-padding\\\">\\r\\n        <ion-card class=\\\"block-1\\\">\\r\\n          <ion-card-content class=\\\"ion-text-center\\\">\\r\\n            <ion-row>\\r\\n              <ion-col size=\\\"auto\\\" class=\\\"align-self-center\\\">\\r\\n                <span class=\\\"desc\\\">{{ 'WALLET_TEXT2' | translate }} </span>\\r\\n              </ion-col>\\r\\n              <ion-col class=\\\"col-button\\\">\\r\\n                <div class=\\\"menu-amount\\\" *ngIf=\\\"currentBalance && currentBalance.length > 0 && !loadingBalance\\\">\\r\\n                  <span *ngFor=\\\"let balance of currentBalance; let i = index\\\"> {{(balance.solde_device | commadumper)}}\\r\\n                    {{balance.device_name}} <span *ngIf=\\\"currentBalance[i+1]\\\"> | </span></span>\\r\\n                </div>\\r\\n                <div class=\\\"menu-amount\\\" *ngIf=\\\"currentBalance && currentBalance.length === 0 && !loadingBalance\\\">\\r\\n                  <span>0</span>\\r\\n                </div>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n      </ion-col>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n\\r\\n  <ion-row *ngIf=\\\"!loadingBalance\\\">\\r\\n    <ion-col class=\\\"ion-padding\\\">\\r\\n      <ion-text color=\\\"dark\\\">\\r\\n        {{ 'WITHDRAWAL_RECHARGE_TEXT' | translate }}\\r\\n      </ion-text>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n\\r\\n  <ion-row>\\r\\n    <ion-col size=\\\"12\\\">\\r\\n      <ion-card class=\\\"paidmode\\\">\\r\\n        <ion-card-content class=\\\"ion-text-center\\\">    \\r\\n          <ion-row>\\r\\n            <ion-col size=\\\"12\\\">\\r\\n              <ion-item>\\r\\n                <ion-label>{{'COUNTRY_TEXT' | translate}}</ion-label>\\r\\n                <ion-select (ionChange)=\\\"updateCurrencyCountry(userPayMethodForm.value.country_id)\\\" name=\\\"country_id\\\" formControlName=\\\"country_id\\\">\\r\\n                  <ion-select-option [value]=\\\"country.country_id\\\" *ngFor=\\\"let country of states\\\">{{ country.country_label }}</ion-select-option>          \\r\\n                </ion-select>\\r\\n              </ion-item>   \\r\\n              <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.country_id\\\">\\r\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"country.hasError(validation.type) && (country.dirty || country.touched)\\\">\\r\\n                    <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                    {{ validation.message }}\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>     \\r\\n            </ion-col>\\r\\n          </ion-row>       \\r\\n            <ion-row class=\\\"ion-justify-content-end\\\" *ngIf=\\\"userPayMethodForm.value.country_id && paymentMethods && paymentMethods.length > 0\\\">\\r\\n              <ion-col size=\\\"4\\\">\\r\\n                <ion-img [src]=\\\"paymentMethods && paymentMethods[userPayMethodForm.value.typePaymentIndex] ? paymentMethods[userPayMethodForm.value.typePaymentIndex].logo : ' '\\\" class=\\\"logooperator\\\"></ion-img>\\r\\n              </ion-col>\\r\\n            </ion-row>  \\r\\n            <ion-row *ngIf=\\\"userPayMethodForm.value.country_id && paymentMethods && paymentMethods.length > 0\\\">\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label>{{ 'USER_PROFILE_TEXT4' | translate }}</ion-label>\\r\\n                  <ion-select (ionChange)=\\\"updatePaymentMethod(userPayMethodForm.value.typePaymentIndex)\\\" name=\\\"typePaymentIndex\\\" formControlName=\\\"typePaymentIndex\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let operator of paymentMethods; let operatorId = index\\\"\\r\\n                     [value]=\\\"operatorId\\\">{{ operator.name }}</ion-select-option>           \\r\\n                  </ion-select>\\r\\n                </ion-item>   \\r\\n                <div class=\\\"validation-errors\\\">\\r\\n                  <ng-container *ngFor=\\\"let validation of validationMessages.payementtype\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"payementtype.hasError(validation.type) && (payementtype.dirty || payementtype.touched)\\\">\\r\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                      {{ validation.message }}\\r\\n                    </div>\\r\\n                  </ng-container>\\r\\n                </div>   \\r\\n              </ion-col>\\r\\n            </ion-row> \\r\\n            <ion-row  *ngIf=\\\"checkMobileOperator()\\\">\\r\\n              <ion-col size=\\\"4\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">+</ion-label>\\r\\n                  <ion-input placeholder=\\\"{{userPayMethodForm.value.country_prefix}}\\\" type=\\\"tel\\\"></ion-input>\\r\\n                </ion-item>        \\r\\n              </ion-col>\\r\\n              <ion-col size=\\\"8\\\">\\r\\n                <ion-item >\\r\\n                  <ion-label position=\\\"floating\\\">{{ 'REGISTER_MPHONE' | translate }}</ion-label>\\r\\n                  <ion-input (ionChange)=\\\"checckEmailOrPhone(userPayMethodForm.value.phone,userPayMethodForm.value.typePaymentIndex)\\\" type=\\\"tel\\\" formControlName=\\\"phone\\\"></ion-input>\\r\\n                </ion-item> \\r\\n              </ion-col>\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <div class=\\\"validation-errors\\\"  *ngIf=\\\"errorPhone\\\">\\r\\n                    <div class=\\\"error-message\\\">\\r\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                     <span [innerHTML]=\\\"'USER_DETAIL_TEXT11' | translate\\\"></span>\\r\\n                    </div>\\r\\n                </div>         \\r\\n              </ion-col>\\r\\n            </ion-row> \\r\\n            <ion-row class=\\\"ion-padding-bottom\\\">\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\" >{{ 'AMOUNT_TEXT' | translate }}</ion-label>\\r\\n                  <ion-input  (ionChange)=\\\"updateAmount()\\\" type=\\\"number\\\" formControlName=\\\"montantSansFees\\\"></ion-input>\\r\\n                  <span slot=\\\"end\\\" class=\\\"slot-prefix ion-no-margin\\\"> {{ userPayMethodForm.value.currency }} </span>\\r\\n                </ion-item> \\r\\n                <div class=\\\"validation-errors\\\">\\r\\n                  <ng-container *ngFor=\\\"let validation of validationMessages.amount\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"amountError.hasError(validation.type) && (amountError.dirty || amountError.touched)\\\">\\r\\n                      <ion-icon name=\\\"information-circle-outline\\\" ></ion-icon>\\r\\n                      {{ validation.message }}\\r\\n                    </div>\\r\\n                  </ng-container>\\r\\n                </div>          \\r\\n              </ion-col>\\r\\n            </ion-row>  \\r\\n            <ion-row *ngIf=\\\"canShowPaypalMessage()\\\">\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <div class=\\\"padding\\\">\\r\\n                    <p style=\\\"color: red\\\">{{paypalMessage}}</p>\\r\\n                </div>\\r\\n              </ion-col>\\r\\n            </ion-row>                          \\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>      \\r\\n  </ion-row>\\r\\n  <ion-row>\\r\\n  \\t<svg height=\\\"0\\\" width=\\\"0\\\" viewBox=\\\"0 0 27.7 28.93\\\">\\r\\n      <defs>\\r\\n        <clipPath id=\\\"pay-btn-shape2\\\" >\\r\\n          <path d=\\\"M2.57,17.21A11.18,11.18,0,0,1,9.17,5.77h.06l.17-.22.11-.23c-1-.73-1.56-1.42-1.39-2,.42-1.32,5-1.17,10.22.33S27.43,7.47,27,8.81c-.16.48-.86.76-1.88.86h0v.1a5,5,0,0,0,.08.66,3.77,3.77,0,0,0,.1.46l.07.23c2,4,1.7,8.37-1.73,12.53a12.23,12.23,0,0,1-18.42-.1A11.55,11.55,0,0,1,2.57,17.21Z\\\" />            \\r\\n        </clipPath>        \\r\\n      </defs>\\r\\n    </svg>\\r\\n    <ion-col size=\\\"12\\\" class=\\\"ion-text-center wrap-pay-btn\\\" *ngIf=\\\"canPay()\\\" (click)=\\\"showPayment(userPayMethodForm.value)\\\">\\r\\n      <svg id=\\\"pay-btn2\\\" preserveAspectRatio=\\\"xMidYMid slice\\\" viewBox=\\\"0 0 27.7 28.93\\\">\\r\\n        <path  class=\\\"arc-part\\\" d=\\\"M5.91,6.89a12.25,12.25,0,0,0-4.14,9.27,11.14,11.14,0,0,0,.16,1.7,12.82,12.82,0,0,0,.42,1.66c.08.27.19.54.29.8A8.24,8.24,0,0,0,3,21.1a14.85,14.85,0,0,0,.82,1.5,12.25,12.25,0,0,0,3.5,3.62,13.49,13.49,0,0,0,8,2.21,15.81,15.81,0,0,0,1.7-.17,13.74,13.74,0,0,0,1.69-.37,12.79,12.79,0,0,0,5.65-3.5,11.63,11.63,0,0,0,1.88-2.83,12.11,12.11,0,0,0,1.06-3.27,11,11,0,0,0-.94-6.84A10.42,10.42,0,0,1,27.23,13a10.65,10.65,0,0,1,.63,1.71,11.3,11.3,0,0,1,.22,3.64,12.78,12.78,0,0,1-.94,3.56,12.11,12.11,0,0,1-1.88,3.17,12.84,12.84,0,0,1-1.31,1.33,13.32,13.32,0,0,1-1.49,1.12,14,14,0,0,1-3.37,1.59,13,13,0,0,1-1.82.43,17.17,17.17,0,0,1-1.88.21,14.31,14.31,0,0,1-3.77-.27,14.55,14.55,0,0,1-5.12-2.19,11.53,11.53,0,0,1-1.41-1.17A13.92,13.92,0,0,1,.92,18a10.3,10.3,0,0,1-.08-1.88A12.36,12.36,0,0,1,3.31,9.34,10.42,10.42,0,0,1,5.91,6.89ZM7.27,3.35a1.52,1.52,0,0,1-.08-.78,1.82,1.82,0,0,1,.32-.76A2.29,2.29,0,0,1,9,1,6.31,6.31,0,0,1,9.78.89h2.36a25.76,25.76,0,0,1,6.19,1,23.94,23.94,0,0,1,5.74,2.5,20.58,20.58,0,0,1,2.56,1.83,3.84,3.84,0,0,1,1,1.27,1.29,1.29,0,0,1,.08.84,1.24,1.24,0,0,1-.47.64,1.21,1.21,0,0,0,.29-.67,1,1,0,0,0-.21-.65,3.64,3.64,0,0,0-1.07-.94c-.86-.53-1.75-1-2.66-1.47A34.29,34.29,0,0,0,18,3.06,38.16,38.16,0,0,0,12,1.84c-.5-.06-1-.11-1.52-.15l-.73-.13a6.42,6.42,0,0,0-.73,0A1.88,1.88,0,0,0,7.77,2,1.57,1.57,0,0,0,7.27,3.35Z\\\" />\\r\\n        <g class=\\\"pay-btn-border\\\">\\r\\n          <rect x=\\\"1.35\\\" y=\\\"0.56\\\" width=\\\"25.09\\\" height=\\\"26.44\\\" class=\\\"inner-pot\\\" />\\r\\n        </g>\\r\\n        <path class=\\\"pot-entry\\\" d=\\\"M22,6.27c-1.13-.38-2.45-.85-3.86-1.22-1-.28-2.17-.57-3.11-.75-2.64-.47-4.52-.57-4.62-.09-.09.19.19.57.75.85A24.19,24.19,0,0,0,17.46,7.4a22.19,22.19,0,0,0,7.07,1.13c.38-.09.66-.19.66-.28C25.32,7.9,24.05,7.15,22,6.27Z\\\" />\\r\\n        <text class=\\\"pay-text\\\"><tspan style=\\\"letter-spacing: -0.05859375em\\\">P</tspan><tspan x=\\\"4.94\\\" y=\\\"0\\\" style=\\\"letter-spacing: -0.087890625em\\\">A</tspan><tspan x=\\\"10.56\\\" y=\\\"0\\\">Y</tspan></text>\\r\\n      </svg>        \\r\\n      <div class=\\\"glow-wrap\\\">\\r\\n        <i class=\\\"glow\\\"></i>\\r\\n      </div>          \\r\\n    </ion-col>\\r\\n  </ion-row> \\r\\n  <ion-row  *ngIf=\\\"paypalLoading\\\">\\r\\n    <ion-col>\\r\\n      <p class=\\\"ion-text-center ion-padding\\\">\\r\\n        <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n      </p>\\r\\n    </ion-col>\\r\\n  </ion-row> \\r\\n  <ion-row *ngIf=\\\"canShowPaypalButton()\\\">\\r\\n    <ion-col class=\\\"ion-padding\\\" size=\\\"12\\\">\\r\\n      <div #paypalbuttoncontainer id=\\\"paypal-button-container\\\"></div> \\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-grid>\\r\\n</form> \\r\\n\";","export default \"<ion-header>\\r\\n  <ion-toolbar class=\\\"with-logo2\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button color=\\\"primary\\\" defaultHref=\\\"/dashboard\\\" slot=\\\"text-only\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title class=\\\"ion-text-center\\\">\\r\\n        <ion-img class=\\\"logo\\\" [src]=\\\"'assets/logo-toupesu.svg'\\\"></ion-img>\\r\\n    </ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button (click)=\\\"openContextMenu($event)\\\">\\r\\n        <ion-icon name=\\\"ellipsis-vertical\\\" color=\\\"primary\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons> \\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar class=\\\"ion-text-center subtitle\\\">\\r\\n    <ion-title>{{ 'WALLET_TEXT1' | translate }}: <ion-text color=\\\"primary\\\" class=\\\"ion-text-capitalize\\\">{{ 'TONTINE_LIST_TEXT10' | translate }}</ion-text></ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"wallet\\\">\\r\\n\\r\\n  <app-top-up></app-top-up>\\r\\n</ion-content>\\r\\n\";"],"sourceRoot":"webpack:///"}