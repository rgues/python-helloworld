{"version":3,"sources":["./src/app/dashboard/my-tontines/tontine-detail/wallet/history/history.page.ts","./src/app/dashboard/my-tontines/tontine-detail/wallet/history/history.page.html","./src/app/dashboard/my-tontines/tontine-detail/wallet/history/history.module.ts","./src/app/dashboard/my-tontines/tontine-detail/wallet/history/history.page.scss"],"names":[],"mappings":"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","file":"wallet-history-history-module.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { PopoverController, IonInfiniteScroll } from '@ionic/angular';\r\nimport { ErrorService } from 'src/app/shared/service/error.service';\r\nimport { MyWalletMenuComponent } from 'src/app/dashboard/my-wallet/my-wallet-menu/my-wallet-menu.component';\r\nimport { WalletTontineService } from '../services/wallet-tontine.service';\r\nimport { TontineService } from '../../../services/tontine.service';\r\nimport { ConstantService } from 'src/app/shared/service/constant.service';\r\nimport { UserService } from 'src/app/dashboard/user/service/user.service';\r\nimport { StorageData } from 'src/app/shared/service/storage.service';\r\nimport { UtilService } from 'src/app/shared/service/util.service';\r\n\r\n@Component({\r\n  selector: 'app-history',\r\n  templateUrl: './history.page.html',\r\n  styleUrls: ['./history.page.scss'],\r\n})\r\nexport class HistoryPage implements OnInit {\r\n\r\n  activelistTransactions: any;\r\n  currentTontine: any;\r\n  // Pagination data\r\n  nbItems: number;\r\n  user: any;\r\n  loading: boolean;\r\n  transactionFlux: string;\r\n  transactionType: string;\r\n  allData: any;\r\n  backService: any;\r\n  currentDate: Date;\r\n  filterData: any;\r\n  filterDataType: any;\r\n  filterIndex: number;\r\n  @ViewChild(IonInfiniteScroll, { static: false }) infiniteScroll: IonInfiniteScroll;\r\n\r\n  constructor(\r\n    private error: ErrorService,\r\n    private util: UtilService,\r\n    private tontine: TontineService,\r\n    private userService: UserService,\r\n    private storage: StorageData,\r\n    private walletTontine: WalletTontineService,\r\n    private constant: ConstantService,\r\n    public popoverController: PopoverController\r\n  ) {\r\n    this.activelistTransactions = [];\r\n    this.nbItems = 10;\r\n    this.user = this.userService.getUserData();\r\n    this.loading = false;\r\n    this.transactionFlux = '';\r\n    this.transactionType = '';\r\n    this.allData = [];\r\n    this.backService = null;\r\n    this.currentDate = new Date();\r\n    this.filterData = [];\r\n    this.filterDataType = [];\r\n    this.filterIndex = -1;\r\n    this.currentTontine = this.tontine.getCurrentTontineData();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getDataFormStorage(null);\r\n  }\r\n\r\n  // filter by tontine\r\n  filterTransType(index) {\r\n    this.infiniteScroll.disabled = false;\r\n    if (this.filterDataType[index] && index !== -1) {\r\n      const transactions = [];\r\n      this.filterData.forEach(tontine => {\r\n        if (tontine.motif === this.filterDataType[index].type) {\r\n          transactions.push(tontine);\r\n        }\r\n      });\r\n      this.allData = transactions;\r\n    } else {\r\n      this.allData = this.filterData;\r\n    }\r\n\r\n    if (this.allData.length > this.nbItems) {\r\n      this.activelistTransactions = [];\r\n      for (let i = 0; i < this.nbItems; i++) {\r\n        this.activelistTransactions.push(this.allData[this.activelistTransactions.length]);\r\n      }\r\n    } else {\r\n      this.activelistTransactions = this.allData;\r\n    }\r\n  }\r\n\r\n  // Get the transaction type\r\n  getTransactionFlux(type: string) {\r\n    return this.constant.getTransactionType(type);\r\n  }\r\n\r\n  // Get the reason of transaction\r\n  getTransactionType(reason: string) {\r\n    return this.constant.getTransactionReason(reason);\r\n\r\n  }\r\n\r\n  // Get the list user tontines\r\n  getTransactions(event) {\r\n    const param = {\r\n      tontine_id: this.currentTontine.tontine.tontine_id\r\n    };\r\n\r\n    this.walletTontine.getWalletTransaction(param)\r\n      .subscribe((reponse: any) => {\r\n       \r\n        if (reponse && reponse.transactions && reponse.transactions.length > 0) {\r\n          this.allData = this.util.oderByUpdatedAt(reponse.transactions);\r\n          this.filterData = this.allData;\r\n          // Save to local storage\r\n          this.setToStorage(this.allData);\r\n          if (this.allData.length > this.nbItems) {\r\n            this.activelistTransactions = [];\r\n            for (let i = 0; i < this.nbItems; i++) {\r\n              this.activelistTransactions.push(this.allData[this.activelistTransactions.length]);\r\n            }\r\n          } else {\r\n            this.activelistTransactions = this.allData;\r\n          }\r\n        }\r\n        this.loading = false;\r\n        if (event) {\r\n          setTimeout(() => {\r\n            event.target.complete();\r\n          }, 2000);\r\n        }\r\n      }, error => {\r\n        this.loading = false;\r\n        if (event) {\r\n          event.target.complete();\r\n        }\r\n        if (error && error.error && error.error.user_not_found) {\r\n          this.loading = true;\r\n          this.error.renewSession().then((data: any) => {\r\n            if (data && data.result === 'OK') {\r\n              this.getTransactions(event);\r\n            } else {\r\n              this.loading = false;\r\n            }\r\n          });\r\n        } else {\r\n          this.error.manageError(error);\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  // set to local Stoirage\r\n  setToStorage(data: any) {\r\n    this.storage.set('app-wallet-tontines-trans',data);\r\n  }\r\n\r\n  getFromStorage(): Promise<any> {\r\n    return this.storage.get('app-wallet-tontines-trans');\r\n  }\r\n\r\n  // Refresh the list\r\n  refreSher(event) {\r\n    this.infiniteScroll.disabled = false;\r\n    this.getTransactions(event);\r\n  }\r\n\r\n  // Get the data from session\r\n  getDataFormStorage(event) {\r\n    this.getFromStorage().then(data => {\r\n      if (data && data.length > 0) {\r\n        this.allData = data;\r\n        if (this.allData.length > this.nbItems) {\r\n          this.activelistTransactions = [];\r\n          for (let i = 0; i < this.nbItems; i++) {\r\n            this.activelistTransactions.push(this.allData[this.activelistTransactions.length]);\r\n          }\r\n        } else {\r\n          this.activelistTransactions = this.allData;\r\n        }\r\n        this.getTransactions(event);\r\n  \r\n      } else {\r\n        this.loading = true;\r\n        this.getTransactions(event);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  // Launch the backgroud service\r\n  ionicViewDidEnter() {\r\n    this.backgroundService();\r\n  }\r\n\r\n  // Backgroung service\r\n  backgroundService() {\r\n    this.backService = setInterval(() => {\r\n      this.getTransactions(null);\r\n    }, 300000 + (Math.ceil(Math.random() * 10) + 1) * 1000);\r\n  }\r\n\r\n  // Launch the backgroud service\r\n  ionicViewWillLeave() {\r\n    clearInterval(this.backService);\r\n  }\r\n\r\n  // Infinite scroll data\r\n  infinteScrollData(event) {\r\n    setTimeout(() => {\r\n      for (let i = 0; i < this.nbItems; i++) {\r\n        if (this.activelistTransactions.length < this.allData.length) {\r\n          this.activelistTransactions.push(this.allData[this.activelistTransactions.length]);\r\n\r\n        } else if (this.activelistTransactions.length === this.allData.length) {\r\n          event.target.disabled = true;\r\n        }\r\n      }\r\n      event.target.complete();\r\n    }, 500);\r\n  }\r\n\r\n  async openContextMenu(ev: any) {\r\n    const popover = await this.popoverController.create({\r\n      component: MyWalletMenuComponent,\r\n      event: ev\r\n    });\r\n    return await popover.present();\r\n  }\r\n\r\n}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar class=\\\"with-logo2\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button color=\\\"primary\\\" [defaultHref]=\\\"'/dashboard/my-tontines/' + currentTontine.tontine.tontine_id + '/wallet'\\\" slot=\\\"text-only\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title class=\\\"ion-text-center title-md-right\\\">\\r\\n        <ion-img class=\\\"logo\\\" [src]=\\\"'assets/logo-toupesu.svg'\\\"></ion-img>\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar class=\\\"ion-text-center subtitle ion-padding\\\">\\r\\n    <ion-title>{{ 'MENU_MY_WALLET' | translate }}: <ion-text color=\\\"primary\\\" class=\\\"ion-text-capitalize\\\">{{ 'HISTORY_PAGE_TITLE' | translate }}</ion-text></ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refreSher($event)\\\">\\r\\n    <ion-refresher-content\\r\\n      pullingIcon=\\\"arrow-dropdown\\\"\\r\\n      refreshingSpinner=\\\"circles\\\"\\r\\n      refreshingText=\\\"{{ 'M_REFRESHING_TEXT' | translate }}\\\">\\r\\n    </ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n\\r\\n  <p class=\\\"ion-text-center\\\"  *ngIf=\\\"loading\\\">\\r\\n    <ion-spinner  name=\\\"circles\\\"></ion-spinner>\\r\\n  </p>\\r\\n\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <span *ngIf=\\\"!loading\\\">{{'TOTAL_TRANS_TEXT' | translate }}: {{activelistTransactions && activelistTransactions.length > 0 ? allData.length : activelistTransactions.length }}</span>\\r\\n        <ion-list>\\r\\n          <ion-item  *ngFor=\\\"let transaction of activelistTransactions\\\">                          \\r\\n            <ion-label>\\r\\n              <ion-text color=\\\"primary\\\"><h2><small>{{'TONTINE_USERS_TEXT5' | translate }}: </small><b>{{transaction.firstname ? transaction.firstname  : ''}} {{transaction.lastname ? transaction.lastname  : ''}}</b>\\r\\n                <span> \\r\\n                  <ion-icon [color]=\\\"transaction.status === 'entrant' ? 'success' :  'danger'\\\" [name]=\\\"transaction.status === 'entrant' ? 'arrow-back' :  'arrow-forward'\\\" ></ion-icon>\\r\\n                 </span>\\r\\n              </h2></ion-text>\\r\\n              <p><small>Ref.:</small>  {{transaction.reference_transaction ? transaction.reference_transaction : ''}}</p>              \\r\\n              <p><small>{{'DATE_TEXT' | translate }}: </small> {{transaction.updated_at ? transaction.updated_at : ''}} </p>                \\r\\n              <p>\\r\\n                <ion-text color=\\\"dark\\\">\\r\\n                  <span class=\\\"ion-float-left\\\"><small>{{'TYPE_TEXT' | translate }}: </small>{{transaction.status ? getTransactionFlux(transaction.status) : ''}}</span> \\r\\n                  <span class=\\\"ion-float-right\\\"><small>{{ 'REASON_TEXT' | translate}}: </small>{{transaction.status_transaction ? getTransactionType(transaction.status_transaction) : ''}}</span>\\r\\n                </ion-text>\\r\\n              </p>              \\r\\n              <h2><ion-text color=\\\"warning\\\"><small>{{'AMOUNT_TEXT' | translate}}: </small><b>{{transaction.amount ? transaction.amount : ''}} {{transaction.currency_name ? transaction.currency_name : ''}}</b></ion-text></h2>\\r\\n            </ion-label>\\r\\n          </ion-item>\\r\\n        </ion-list>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n  <div  *ngIf=\\\"activelistTransactions && activelistTransactions.length === 0 && !loading\\\">\\r\\n    <p  class=\\\"ion-text-center\\\"> {{ 'HISTORY_TEXT3' | translate }}</p>\\r\\n  </div>\\r\\n\\r\\n  <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"infinteScrollData($event)\\\">\\r\\n    <ion-infinite-scroll-content\\r\\n      loadingSpinner=\\\"bubbles\\\"\\r\\n      loadingText=\\\"{{ 'M_LOADING_MORE_DATA' | translate }}\\\">\\r\\n    </ion-infinite-scroll-content>\\r\\n  </ion-infinite-scroll>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { HistoryPage } from './history.page';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HistoryPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    SharedModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [\r\n    HistoryPage\r\n  ]\r\n})\r\nexport class HistoryPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJoaXN0b3J5LnBhZ2Uuc2NzcyJ9 */\";"],"sourceRoot":"webpack:///"}